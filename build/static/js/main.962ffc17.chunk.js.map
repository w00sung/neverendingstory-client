{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","hoc/valid.js","components/views/LandingPage/LandingPage_banners.tsx","components/views/LandingPage/LandingPage_buttons.tsx","components/svg/icon.js","components/views/LandingPage/LandingPage_gameLists.tsx","_actions/controlPage_actions.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.tsx","components/views/RegisterPage/RegisterPage.tsx","components/views/Profile/Profile.tsx","components/views/Comment/SingleReply.js","components/views/Comment/SingleComment.js","components/views/Comment/Comment.js","components/views/GameDetailPage/GameDetailPage.js","components/views/GameUploadPage/GameUploadPage.js","components/views/GameUploadPage/GameBuildUpPage.js","components/views/GamePlayPage/GameCharacterBlock.js","components/functions/useKey.js","components/views/Modal/InputModalForm.js","_actions/gamePlay_actions.js","components/views/Modal/InputModal.js","components/functions/useMouse.js","components/views/GamePlayPage/TextAnimation.js","components/views/Scene/SceneTeleport/FirstSceneTeleport.js","components/views/Scene/SceneTeleport/PrevSceneTeleport.js","components/views/Scene/SceneEndingPage/SceneEndingPage.js","components/views/GamePlayPage/TextBlock.js","components/views/GamePlayPage/Dislike.js","components/views/GamePlayPage/HistoryMap.js","components/views/GamePlayPage/LoadingPage.js","_actions/sync_actions.js","utils/useFullscreenStatus.js","components/views/GamePlayPage/TreeMap.js","components/views/GamePlayPage/GamePlayPage.js","components/views/Scene/SceneMakePage/SideBar/BackgroundImg.js","components/views/Scene/SceneMakePage/SideBar/BackgroundSideBar.js","_actions/characterSelected_actions.js","components/views/Scene/SceneMakePage/SideBar/CharacterImg.js","components/views/Scene/SceneMakePage/SideBar/CharacterSideBar.js","components/views/Scene/SceneMakePage/SideBar/BgmFile.js","components/views/Scene/SceneMakePage/SideBar/BgmSideBar.js","components/views/Scene/SceneMakePage/SideBar/SoundFile.js","components/views/Scene/SceneMakePage/SideBar/SoundSideBar.js","components/views/Scene/SceneMakePage/Tab/SceneMakeModalTab.js","components/views/Dropzone/MyDropzone.js","components/views/Scene/SceneMakePage/Tab/CharacterTab.js","components/views/Scene/SceneMakePage/Tab/BackgroundTab.js","components/views/Scene/SceneMakePage/Tab/BgmTab.js","components/views/Scene/SceneMakePage/Tab/SoundTab.js","components/views/Scene/SceneMakePage/SceneMakeModal.js","components/views/Scene/SceneMakePage/UploadModal.js","components/functions/handleEventListener.js","components/functions/CharacterModal/Character.js","components/views/GamePlayPage/CharacterBlock.js","components/functions/CharacterModal/CharacterInfoDisplay/CharacterInfoDisplay.js","components/functions/CharacterModal/CharacterModal.js","components/views/Scene/SceneMakePage/SceneBox/SceneBox.js","components/views/Scene/SceneMakePage/SceneMakePage.js","components/views/Scene/SceneMakePage/SceneMakePage2.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.tsx","components/views/Footer/Footer.tsx","components/App.js","serviceWorker.js","_reducers/controlPage_reducer.js","_reducers/gamePlay_reducer.js","_reducers/characterSelected_reducer.js","_reducers/characterDisplayed_reducer.js","_reducers/movingTarget_reducer.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/sync_reducer.js","index.js","config/key.js","components/views/Modal/TitleModalForm.js","config/prod.js"],"names":["registerUser","dataToSubmit","type","payload","axios","post","then","response","data","auth","get","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","replace","push","Validate","location","useLocation","undefined","Banner_main1","className","TitleModalForm","require","NewGameButton","useState","visible","setVisible","formRef","setFormRef","uploadGameFrame","title","description","a","console","log","Axios","gameResponse","success","alert","firstScene","gameId","game","_id","prevSceneId","sceneDepth","isFirst","sceneResponse","message","setTimeout","pathname","sceneId","saveFormRef","useCallback","node","onClick","ref","onCancel","onCreate","validateFields","err","values","resetFields","svg","arrow_1","close_1","close_2","SVG","src","color","width","height","viewBox","fill","xmlns","d","BAR","SCENE_ICON","id","x","y","GameList","games","length","gameList","map","index","thumbnailPath","first_scene","thumbnail","key","to","alt","sceneCnt","category","limit","Math","round","bars","i","style","filter","onMouseEnter","target","bar","arrow","document","getElementById","pos","Error","display","String","transform","opacity","mouseOnEvent","onMouseLeave","mouseOffEvent","container","ContainerToLeft","ContainerToRight","navbarControl","navbarOn","ListContainer","recent_games","popular_games","LandingPage","setGames","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","setSubmitting","loginUser","loginSuccess","window","setItem","removeItem","catch","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","Item","prefix","placeholder","value","onChange","onBlur","checked","disabled","RegisterPage","nickname","confirmPassword","oneOf","flag","usedEmail","image","errmsg","labelAlign","labelCol","span","wrapperCol","label","hasFeedback","validateStatus","Profile","userId","match","params","currUserData","userData","isUser","makingGameList","contributedSceneList","contributedGameList","setUser","error","displayMakingGame","href","displayContributedGame","displayContributedScene","memo","comment","updateToggle_comment","user_id","isEdit","setIsEdit","editComment","setEditComment","like","setLike","update","setUpdate","updateToggle","like_variable","commentId","result","writer","event","currentTarget","e","preventDefault","content","reference","useRef","commentContent","setCommentContent","Replys","setReplys","writeReply","setWriteReply","showComment","setShowComment","comment_variable","responseTo","toString","onClick_displayReply","current","mapReply","reply","marginLeft","variables","comments","setComments","fetching","setFetching","totalComment","setTotalComment","contentNumber","setContentNumber","fetchNextData","slice","handleScroll","scrollHeight","documentElement","scrollTop","clientHeight","addEventListener","removeEventListener","mapComment","GameDetailPage","variable","gameDetail","setGameDetail","setSceneId","isMaking","setIsMaking","view","setView","thumbsUp","setThumbsUp","setThumbsUpClicked","totalSceneCnt","setTotalSceneCnt","ContributerCnt","setContributerCnt","contributerList","setContributerList","playFirstScene","teleportSceneId","topRank","contributerCnt","objectId","thumbsup","isClicked","topContributer","contributer","userSceneCnt","creator","TextArea","Input","Title","Typography","PrivateOptions","CategoryOptions","GameUploadPage","GameTitle","setGameTitle","setDescription","isPrivate","setIsPrivate","setCategory","ratio","setRatio","filePath","setFilePath","onRatioChange","floatRatio","game_variables","privacy","character","background","bgm","sound","maxWidth","margin","textAlign","marginBottom","level","justifyContent","onDrop","files","formData","FormData","append","header","url","multiple","maxSize","getRootProps","getInputProps","border","alignItems","fontSize","item","cat_idx","text","name","size","GameBuildUpPage","GameCharacterBlock","characterblocks","characterList","charSchema","left","posX","top","posY","useKey","cb","callbackRef","handle","code","shiftKey","ModalForm","Form","create","form","remainTime","getFieldDecorator","okText","onOk","layout","rules","input","focus","gameLoadingPage","loadingType","gamePause","isPause","decTimer","scene_id","scene_depth","game_id","scene_next_list","theme","useHistory","emptyNum","sync","setRemainTime","decreaseTimer","setDecreaseTimer","validated","setValidated","createFlag","cancelHandler","socket","emit","clearTimeout","dino","setDino","off","on","tick","setInterval","clearInterval","res","exp","useMouse","TextAnimation","cut_script","setIsTyping","setFlag","useWindupString","pace","onFinished","skip","handleEnter","FirstSceneTeleport","setScene","isWarningVisible","setIsWarningVisible","Fragment","maskClosable","closable","centered","footer","PrevSceneTeleport","SceneEndingPage","TextBlock","cut_name","isTyping","TextBlockChoice","isEnding","isLastMotion","choices","choice","textDecoration","script","class","DislikePopup","trigger","setTrigger","setTitle","Description","MapToLeft","getElementsByClassName","getComputedStyle","getPropertyValue","new_position","parseInt","split","MapToRight","sceneInfo","targetScene","HistoryMapPopup","userhistory","SceneInfo","setSceneInfo","isModalVisible","setIsModalVisible","sceneinfo","HistoryMap_scenes","scene","GoScene","sceneIndex","close","click","GoToScene","LOADING_TYPE","LoadingPage","gameplay","animation","loadEmptyNum","sceneTmp","getBrowserFullscreenElementProp","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","sceneMap","link","pivot","position","drag","TreeMapPopup","Position","setPosition","mouseDown","pageX","pageY","mouseUp","mouseMove","callBack","hasBeenCalled","setHasBeenCalled","useConstructor","depth","cnt_limit","cnt","TreeMap_nodes","nodeWidth","pow","SceneDepth","bgm_audio","Audio","volume","sound_audio","ProductScreen","isFullscreen","setIsFullscreen","errorMessage","userHistory","innerWidth","windowWidth","setwindowWidth","innerHeight","windowHeight","setwindowHeight","setI","Scene","Dislike","setDislike","History","setHistory","HistoryMap","setHistoryMap","TreeMap","setTreeMap","lastMotion","setLastMotion","setIsClicked","maximizableElement","elRef","React","useLayoutEffect","onfullscreenchange","requestFullscreen","useFullscreenStatus","handleChoice","newNextList","nextList","newScene","setVolume","muted","setMuted","tempVolume","volumeControl","isFirstCut","setIsFirstCut","playMusic","cutList","music","pause","play","variable_thumbsup","variable_view","room","sceneIdList","inner","newScreenSize","padding","minWidth","minHeight","minSize","max","step","exitFullscreen","icon","faCompress","faExpand","BackgroundImg","imgUrl","setBackgroundImg","renderBackground","setMakeModalState","selectCharacter","popCharacter","request","oldArray","info","splice","setCharacterList","CharacterList","CharacterImg","img","Image","image_array","setName","renderCharacter","BgmFile","setBgmFile","renderBgm","SoundFile","setSoundFile","renderSound","SceneMakeModalTab","setTag","tag","MyDropzone","accept","blobURL","FileAddOutlined","CharacterTab","blobGame","setBlobGame","charPageNum","setCharFileQueue","setCharBlobList","characterCards","setCharacterCards","isUpdate","setIsUpdate","indexNum","onNameChange","num","onDescriptionChange","curURL","URL","createObjectURL","Number","array","cards","path","LeftCircleTwoTone","twoToneColor","RightCircleTwoTone","BackgroundTab","setFileQueue","setTypeQueue","setBackBlobList","backBlobList","backgroundCards","setBackgroundCards","blobCards","setBlobCards","element","BgmTab","setBgmBlobList","bgmBlobList","setBgmBlobNames","bgmBlobNames","bgmCards","setBgmCards","SoundTab","setSoundBlobList","soundBlobList","setSoundBlobNames","soundBlobNames","soundCards","setSoundCards","config","SceneMakeModal","setReload","setGame","fileQueue","typeQueue","charFileQueue","charBlobList","_","cloneDeep","revokeBlobList","forEach","revokeObjectURL","uploadFlag","uploadCharFiles","j","fileNum","Array","from","uploadCharDB","SERVER","DBForm","reload","uploadFiles","uploadDB","originalname","UploadModal","setUploadModalState","onSubmit_saveScene","defaultTitle","defaultDescription","setBlobURL","thumbFile","setThumbFile","upload","uploadThumb","uploadGame","cancelText","_eventHandlers","addEvent","handler","capture","removeAllEvents","handlers","eventHandlers","GameCharacterList","element_X","element_Y","clicked","moving","setMoving","sizing","setSizing","imgWidth","setImgWidth","background_element","page","background_width","offsetWidth","background_height","offsetHeight","prev_posX","prev_posY","next_posX","next_posY","image_width","prev_size","next_size","stopPropagation","onMouseUp","onMouseDown","updateCharacter","faTimesCircle","onMouseOver","onMouseOut","onRemove_character","onClick_putCharacter","characterSchema","reverse","pushCharacter","characterDetailImages","onClick_selectCharacter","currentCharacter","isAdded","setIsAdded","characterSelected","CutList","CutNumber","displayCut","setCutNumber","Hover","EmptyCutList","setHover","saveCut","onClick_GotoCut","display_SceneBox","Cut","display_EmptyBox","EmptyCut","SceneMakePage","back","setNewScreenSize","makeModalState","uploadModalState","SidBar_script","setSidBar_script","STORAGE","Script","setScript","Name","isFirstScene","setIsFirstScene","setCutList","setEmptyCutList","setIsEnding","validation","tmpFirstCut","lastCut","characterSidebarElement","backgroundSidebarElement","bgmSidebarElement","soundSidebarElement","makeVisible","makeInvisible","onSubmit_nextCut","warning","oldNumber","isTmp","submitCut","submitCutList","confirm","loading","msg","sideBar","setSideBar","paused","PlayCircleOutlined","PauseCircleOutlined","delete","checkedChildren","unCheckedChildren","Modal","Boolean","scriptElement","nameElement","onClick_script","activeElement","reload_Sidebar","overflow","onRemovech_aracter","StopOutlined","mode","status","controlpage","zIndex","placement","onClose","Footer","io","SOCKET","transports","onpopstate","App","fallback","exact","component","Auth","LoginPage","Valid","GamePlayPage","SceneMakePage2","hostname","initialState","movingTarget","rootReducer","combineReducers","action","register","loginSucces","characterDisplayed","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","navigator","serviceWorker","ready","registration","unregister","module","exports","c","CLIENT"],"mappings":"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","file":"static/js/main.962ffc17.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\r\n        .then(response => response.data);\r\n    \r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\n\r\nexport const LOAD_EMPTY_NUM = 'load_empty_num';\r\nexport const SAVE_PREV_SCENE = 'SAVE_PREV_SCENE';\r\n\r\nexport const LOADINGPAGE_GAMEPLAY = \"gameLoading_gamePlay\"\r\nexport const PAUSE_GAMEPLAY = \"pause_gamePlay\"\r\n\r\nexport const NAVBAR_CONTROL = \"navbar_control\";\r\n\r\nexport const SELECT_CHARACTER = \"select_character\";\r\nexport const DETACH_CHARACTER = \"detach_character\";\r\nexport const POP_CHARACTER = \"pop_character\";\r\nexport const PUSH_CHARACTER = \"push_character\";\r\nexport const UPDATE_CHARACTER = \"update_character\";\r\nexport const SET_CHARACTER_LIST = \"set_character_list\";\r\n\r\n\r\nexport const SELECT_MOVINGTARGET = \"select_movingtarget\";\r\nexport const DETACH_MOVINGTARGET = \"detach_movingtarget\"; \r\nexport const SELECT_DISPLAYED = \"select_displayed\";\r\n","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n// ip address ( please be careful... )\r\n// export const LOCAL_HOST = \"15.164.48.192\";\r\nexport const LOCAL_HOST = \"localhost\";\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.replace('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.replace('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nexport default function (SpecificComponent, adminRoute = null) {\r\n    function Validate(props) {\r\n        const location = useLocation();\r\n        useEffect(() => {\r\n            if (location.state === undefined) {\r\n                props.history.replace('/');\r\n            }\r\n        }, [])\r\n        if(location.state) {\r\n            return (\r\n                <SpecificComponent {...props}/>\r\n            )\r\n        }\r\n        else {\r\n            return <div>잘못된 접근입니다ㅋㅋ</div>\r\n        }\r\n    }\r\n    return Validate\r\n}\r\n\r\n\r\n","import React from \"react\"\r\nimport \"./LandingPage_banners.css\"\r\n\r\nexport function Banner_main1() {\r\n  return (<div className=\"banner-container banner-main1\">\r\n    <div className=\"banner-main1-slogan1\">NEVER ENDING</div>\r\n    <div className=\"banner-main1-slogan2\">함께 만드는 무한한 이야기</div>\r\n  </div>);\r\n}","import React, { useState, useCallback } from \"react\";\r\nimport \"./LandingPage_buttons.css\"\r\nimport \"antd/dist/antd.css\";\r\nimport Axios from \"axios\"\r\nimport { message } from \"antd\";\r\n\r\nconst {TitleModalForm}: any = require(\"../Modal/TitleModalForm\")\r\ninterface newGameButtonProps{\r\n    replace : Function;\r\n}\r\n\r\ninterface responseTypes{\r\n    data: {\r\n        game: {\r\n            _id:string;\r\n        }\r\n        sceneId: string;\r\n        success: boolean;\r\n    };\r\n}\r\n\r\nexport function NewGameButton({replace}:newGameButtonProps) {\r\n\r\n    const [visible, setVisible] = useState<any>(false);\r\n    const [formRef, setFormRef] = useState<any>(null);\r\n    // const [formRef, setFormRef] = useState<null | {validateFileds:any}></null>;\r\n\r\n\r\n\r\n    const uploadGameFrame = async (title : String, description:any) => {\r\n        // tmp scene create\r\n        console.log(\"Asdfasdf\")\r\n        const gameResponse : responseTypes = await Axios.post(\"/api/game/uploadgameframe\", {title, description});\r\n\r\n        if (!gameResponse.data.success) {\r\n            alert(\"game Frame제작 실패\");\r\n            return;\r\n        }\r\n\r\n        const firstScene = {\r\n            gameId: gameResponse.data.game._id,\r\n            prevSceneId: null,\r\n            sceneDepth: 0,\r\n            isFirst: 1,\r\n            title: \"\",\r\n        };\r\n\r\n        const sceneResponse : responseTypes = await Axios.post(\"/api/scene/create\", firstScene);\r\n        if (!sceneResponse.data.success) {\r\n            alert(\"scene Frame제작 실패\");\r\n            return;\r\n        }\r\n\r\n        message.success(\r\n            \"첫 Scene을 생성해주세요. 오른쪽의 버튼을 활용해 이미지들을 추가할 수 있습니다.\"\r\n        );\r\n        \r\n        setTimeout(() => {\r\n            replace({\r\n                pathname: `/scene/make`,\r\n                state: {\r\n                    gameId: gameResponse.data.game._id,\r\n                    sceneId: sceneResponse.data.sceneId,\r\n                },\r\n            });\r\n        }, 1000);\r\n    };\r\n    \r\n    const handleCreate = () => {\r\n        formRef?.validateFields((err: Error, values: {title : String, description : any}) => {\r\n            if (err) {\r\n                return;\r\n            }\r\n\r\n            // console.log(\"Received values of form: \", values.title);\r\n            uploadGameFrame(values.title, values.description);\r\n            formRef?.resetFields();\r\n            setVisible(false);\r\n        });\r\n\r\n    }\r\n\r\n    const saveFormRef = useCallback(node => {\r\n        if (node !== null) {\r\n            setFormRef(node);\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <button className=\"button-newgame\" onClick ={uploadGameFrame}>\r\n                NEW 게임 만들기\r\n            </button> */}\r\n            <button className=\"button-newgame\" onClick={() => setVisible(true)}>\r\n                NEW 게임 만들기\r\n            </button>\r\n        \r\n            <TitleModalForm \r\n                ref={saveFormRef}\r\n                visible={visible}\r\n                onCancel={() => setVisible(false)}\r\n                onCreate={() => handleCreate()}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nconst svg = {\r\n  arrow_1:\r\n    \"M-1.73589e-06 5.2875L16.6883 22.5L-2.31124e-07 39.7125L5.13765 45L27 22.5L5.13765 -2.24574e-07L-1.73589e-06 5.2875Z\",\r\n  close_1:\r\n    \"M11 0C4.917 0 0 4.917 0 11C0 17.083 4.917 22 11 22C17.083 22 22 17.083 22 11C22 4.917 17.083 0 11 0ZM16.5 14.949L14.949 16.5L11 12.551L7.051 16.5L5.5 14.949L9.449 11L5.5 7.051L7.051 5.5L11 9.449L14.949 5.5L16.5 7.051L12.551 11L16.5 14.949Z\",\r\n  close_2:\r\n    \"M10 0.600006C4.47 0.600006 0 5.07001 0 10.6C0 16.13 4.47 20.6 10 20.6C15.53 20.6 20 16.13 20 10.6C20 5.07001 15.53 0.600006 10 0.600006ZM15 14.19L13.59 15.6L10 12.01L6.41 15.6L5 14.19L8.59 10.6L5 7.01001L6.41 5.60001L10 9.19001L13.59 5.60001L15 7.01001L11.41 10.6L15 14.19Z\",\r\n};\r\n\r\nexport function SVG(props) {\r\n  const { src, color, width, height } = props;\r\n  return (\r\n    <svg\r\n      width={width ? width : \"auto\"}\r\n      height={height ? height : \"auto\"}\r\n      viewBox=\"0 0 27 45\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d={svg[src]} fill={color} />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function BAR(props) {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"3\"\r\n      viewBox=\"0 0 15 3\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <rect width=\"15\" height=\"3\" fill=\"white\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function SCENE_ICON(props) {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"15\"\r\n      id=\"fi_93839\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 348.462 348.462\"\r\n    >\r\n      <g>\r\n        <path  fill={\"white\"}\r\n          d=\"M330.725,112.541H83.178l238.875-64.006c0.038-0.01,0.074-0.025,0.111-0.036c0.035-0.009,0.07-0.013,0.105-0.023\r\n\t\tc4.001-1.072,6.375-5.185,5.304-9.186l-9.038-33.731c-0.515-1.921-1.772-3.559-3.495-4.554c-1.723-0.995-3.771-1.264-5.691-0.749\r\n\t\tL15.798,78.913c-4.001,1.072-6.375,5.185-5.304,9.185l8.824,32.931v219.932c0,4.142,3.358,7.5,7.5,7.5h303.907\r\n\t\tc4.142,0,7.5-3.358,7.5-7.5V120.041C338.225,115.898,334.867,112.541,330.725,112.541z M323.225,147.305h-31.319l19.764-19.764\r\n\t\th11.555V147.305z M34.318,147.305v-19.764h33.354l-19.764,19.764H34.318z M88.885,127.541h33.858l-19.616,19.616\r\n\t\tc-0.048,0.048-0.088,0.099-0.134,0.148H69.121L88.885,127.541z M143.956,127.541h35.859l-19.764,19.764h-35.859L143.956,127.541z\r\n\t\t M201.028,127.541h34.359l-19.764,19.764h-34.359L201.028,127.541z M256.305,127.835c0.095-0.095,0.178-0.196,0.266-0.294h33.886\r\n\t\tl-19.764,19.764h-33.858L256.305,127.835z M93.614,73.591c0.111,0.072,0.218,0.149,0.334,0.216l24.038,13.878l-33.67,9.022\r\n\t\tL59.917,82.62L93.614,73.591z M147.748,59.086l24.399,14.087l-33.67,9.022l-24.4-14.087L147.748,59.086z M201.91,44.573\r\n\t\tl24.399,14.087l-33.671,9.022l-24.399-14.087L201.91,44.573z M256.069,30.061l24.399,14.087l-33.698,9.029\r\n\t\tc-0.115-0.075-0.225-0.154-0.345-0.223L222.4,39.083L256.069,30.061z M311.143,35.929l-10.185,2.729l-24.399-14.087l29.428-7.885\r\n\t\tL311.143,35.929z M39.427,88.111l24.399,14.087l-31.745,8.506L26.924,91.46L39.427,88.111z M34.318,333.462V162.305h288.907\r\n\t\tv171.157H34.318z\"\r\n        ></path>\r\n        <path fill={\"white\"}\r\n          d=\"M290.354,207.162c4.142,0,7.5-3.358,7.5-7.5c0-4.142-3.358-7.5-7.5-7.5H63.825c-4.142,0-7.5,3.358-7.5,7.5\r\n\t\tc0,4.142,3.358,7.5,7.5,7.5h56.421v53.321H63.825c-4.142,0-7.5,3.358-7.5,7.5c0,4.142,3.358,7.5,7.5,7.5h226.528\r\n\t\tc4.142,0,7.5-3.358,7.5-7.5c0-4.142-3.358-7.5-7.5-7.5H239.54v-53.321H290.354z M224.54,260.483h-89.293v-53.321h89.293V260.483z\"\r\n        ></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { SVG, BAR,SCENE_ICON } from \"../../svg/icon\";\r\nimport \"./LandingPage_gameLists.css\"\r\nimport { LOCAL_HOST } from \"../../Config\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst config = require('../../../config/key')\r\ninterface Data {\r\n    category: string;\r\n    id: string;\r\n    length: 0,\r\n    pos: number;\r\n    limit: number;\r\n}\r\n\r\ninterface Game {\r\n    title: string;\r\n    _id: string;\r\n    thumbnail: string;\r\n    category: string;\r\n    first_scene: string;\r\n    sceneCnt:number;\r\n}\r\n\r\ninterface ContainerProps {\r\n    data: Data;\r\n    games: Game[];\r\n}\r\n\r\nfunction ContainerToRight(target: Data) {\r\n    if (target.pos < target.limit - 1) {\r\n        //* bar\r\n        var bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(50%)\";\r\n        }\r\n\r\n        //* change location\r\n        target.pos += 1;\r\n\r\n        //* container\r\n        var container = document.getElementById(target.id + \"_gameList\");\r\n        if (container === null) {\r\n            throw Error(\"can not find target container\")\r\n        } else {\r\n            container.style.transform = `translate(${-1336 * target.pos}px, 0px)`;\r\n        }\r\n        //* bar\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(100%)\";\r\n        }\r\n        //* arrows\r\n        if (target.pos == target.limit - 1) {\r\n            var arrow = document.getElementById(\r\n                target.id + \"_right_arrow\"\r\n            );\r\n            if (arrow === null) {\r\n                throw Error(\"can not find target arrow\")\r\n            } else {\r\n                arrow.style.display = \"none\";\r\n            }\r\n        }\r\n        arrow = document.getElementById(target.id + \"_left_arrow\");\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction ContainerToLeft(target: Data) {\r\n    if (target.pos > 0) {\r\n        //* bar\r\n        var bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(50%)\";\r\n        }\r\n\r\n        //* change location\r\n        target.pos -= 1;\r\n\r\n        //* container\r\n        var container = document.getElementById(target.id + \"_gameList\");\r\n        if (container === null) {\r\n            throw Error(\"can not find target container\")\r\n        } else {\r\n            container.style.transform = `translate(${-1336 * target.pos}px, 0px)`;\r\n        }\r\n        //* bar\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(100%)\";\r\n        }\r\n        //* arrows\r\n        if (target.pos == 0) {\r\n            var arrow = document.getElementById(\r\n                target.id + \"_left_arrow\"\r\n            );\r\n            if (arrow === null) {\r\n                throw Error(\"can not find target arrow\")\r\n            } else {\r\n                arrow.style.display = \"none\";\r\n            }\r\n        }\r\n        arrow = document.getElementById(target.id + \"_right_arrow\");\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction mouseOnEvent(target: Data) {\r\n    //* arrow right\r\n    let arrow = document.getElementById(\r\n        target.id + \"_right_arrow\"\r\n    );\r\n    if (target.pos < target.limit - 1) {\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n    //* arrow left\r\n    arrow = document.getElementById(\r\n        target.id + \"_left_arrow\"\r\n    );\r\n    if (target.pos > 0) {\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n    //* bar\r\n    let bar\r\n    for (let i = 0; i < target.limit; i++) {\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(i)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.transform = \"opacity(1)\";\r\n            bar.style.opacity = \"1\";\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction mouseOffEvent(target: Data) {\r\n    //* arrow right\r\n    let arrow = document.getElementById(\r\n        target.id + \"_right_arrow\"\r\n    );\r\n    if (arrow === null) {\r\n        throw Error(\"can not find target arrow\")\r\n    } else {\r\n        arrow.style.display = \"none\";\r\n    }\r\n    //* arrow left\r\n    arrow = document.getElementById(\r\n        target.id + \"_left_arrow\"\r\n    );\r\n    if (target.pos > 0) {\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"none\";\r\n            \r\n        }\r\n    }\r\n    //* bar\r\n    let bar\r\n    for (let i = 0; i < target.limit; i++) {\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(i)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.transform = \"opacity(0)\";\r\n            bar.style.opacity = \"0\";\r\n        }\r\n    }\r\n}\r\n\r\nexport function GameList(props: ContainerProps) {\r\n    const { data, games } = props;\r\n    //* game list\r\n    data.length = 0;\r\n    const gameList = games.map((game: Game, index: number) => {\r\n        if (game.first_scene) {\r\n            data.length += 1;\r\n            let thumbnailPath;\r\n            \r\n            if(process.env.NODE_ENV === \"production\")\r\n                thumbnailPath = game.thumbnail\r\n            else\r\n                thumbnailPath = `${config.STORAGE}/${game.thumbnail}`\r\n            return (\r\n                <div className=\"gamelist-game\" key={index}>\r\n                    <Link to={`/game/${game._id}`}>\r\n                        <img\r\n                            className=\"game-image\"\r\n                            src={thumbnailPath}\r\n                            alt={game.title}\r\n                        />\r\n                        <div className=\"game-title\">{game.title}</div>\r\n                    </Link>\r\n                    <div className=\"game-sceneNum\">{game.sceneCnt}</div>\r\n                    <div className=\"game-sceneIcon\"><SCENE_ICON/></div>\r\n                    <div className=\"game-category\">{game.category}</div>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    });\r\n\r\n    data.limit = Math.round(data.length / 4)\r\n\r\n    //* bars\r\n    const bars = [];\r\n    for (let i = data.limit - 1; i > 0; i--) {\r\n        bars.push(\r\n            <div id={`${data.id}_bar${i}`} className=\"bar\" key={`${i}`}>\r\n                <BAR />\r\n            </div>\r\n        )\r\n    }\r\n    bars.push(<div\r\n        id={`${data.id}_bar0`}\r\n        className=\"bar\"\r\n        style={{ filter: \"brightness(100%)\" }}\r\n        key={0}\r\n    >\r\n        <BAR />\r\n    </div>)\r\n\r\n    //* return component\r\n    return (\r\n        <div className=\"box-container game-box\">\r\n            <div className=\"box-title\">{data.category}</div>\r\n            <div className=\"box-positionBar\">\r\n                {bars}\r\n            </div>\r\n            <div className=\"box-gameList\"\r\n                onMouseEnter={() => { mouseOnEvent(data) }}\r\n                onMouseLeave={() => { mouseOffEvent(data) }}\r\n            >\r\n                <div\r\n                    id={`${data.id}_gameList`}\r\n                    className=\"gamelist-container\"\r\n                    style={{ width: data.length * 335 + \"px\" }}\r\n                >\r\n                    {gameList}\r\n                </div>\r\n                <div\r\n                    id={`${data.id}_left_arrow`}\r\n                    className=\"gamelist-left-arrow\"\r\n                    onClick={() => {\r\n                        ContainerToLeft(data);\r\n                    }}\r\n                >\r\n                    <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\r\n                </div>\r\n                <div\r\n                    id={`${data.id}_right_arrow`}\r\n                    className=\"gamelist-right-arrow\"\r\n                    onClick={() => {\r\n                        ContainerToRight(data);\r\n                    }}\r\n                >\r\n                    <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { NAVBAR_CONTROL } from \"./types\";\r\n\r\nexport function navbarControl(navbarOn) {\r\n  return {\r\n    type: NAVBAR_CONTROL,\r\n    payload: navbarOn,\r\n  };\r\n}\r\n","import React, { useEffect, useState} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport \"./LandingPage.css\";\r\nimport { Banner_main1 } from \"./LandingPage_banners\";\r\nimport { NewGameButton } from \"./LandingPage_buttons\";\r\nimport { GameList } from \"./LandingPage_gameLists\";\r\nimport { navbarControl } from \"../../../_actions/controlPage_actions\"\r\n\r\nconst ListContainer = {\r\n  recent_games: {\r\n    category: \"최근 플레이한 게임\",\r\n    id: \"recent\",\r\n    length: 0,\r\n    pos: 0,\r\n    limit: 0,\r\n  },\r\n  popular_games: {\r\n    category: \"인기 게임\",\r\n    id: \"popular\",\r\n    length: 0,\r\n    pos: 0,\r\n    limit: 0,\r\n  },\r\n};\r\n\r\nfunction LandingPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //* navigation bar control\r\n    dispatch(navbarControl(true));\r\n    \r\n    Axios.get(\"/api/game/getgames\").then((response) => {\r\n      if (response.data.success) {\r\n        setGames(response.data.games);\r\n      } else {\r\n        alert(\"game load에 실패했습니다.\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mainPage_container\">\r\n      <div className=\"box-container\">\r\n        <Banner_main1 />\r\n        <NewGameButton replace={props.history.replace} />\r\n      </div>\r\n      <GameList data={ListContainer.recent_games} games={games} />\r\n      <GameList data={ListContainer.popular_games} games={games} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./LoginPage.css\";\r\n\r\ninterface LoginPageProps {\r\n  history: {\r\n    replace: Function;\r\n  }\r\n}\r\n\r\ninterface LoginUser {\r\n  payload: {\r\n    loginSuccess: boolean;\r\n    userId?: string | undefined;\r\n    message?: string;\r\n  }\r\n  type: string;\r\n}\r\n\r\nfunction LoginPage(props: LoginPageProps) {\r\n  const dispatch:any = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe);\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\")\r\n    ? localStorage.getItem(\"rememberMe\")!\r\n    : undefined;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"이메일 주소를 입력해 주세요.\")\r\n          .required(\"이메일 주소를 입력해 주세요.\"),\r\n        password: Yup.string()\r\n          .min(6, \"비밀번호는 최소 6글자 이상이어야 합니다.\")\r\n          .required(\"비밀번호를 입력해 주세요.\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then((response: LoginUser) => {\r\n              if (response.payload.loginSuccess) {\r\n                if (rememberMe === true && values.email) {\r\n                  window.localStorage.setItem(\"rememberMe\", values.email);\r\n                } else {\r\n                  localStorage.removeItem(\"rememberMe\");\r\n                }\r\n                props.history.replace(\"/\");\r\n              } else {\r\n                setFormErrorMessage(\"아이디와 비밀번호를 확인해 주세요.\");\r\n              }\r\n            })\r\n            .catch((err: boolean) => {\r\n              setFormErrorMessage(\"아이디와 비밀번호를 확인해 주세요.\");\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\");\r\n              }, 3000);\r\n            });\r\n\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"loginPage-container\">\r\n            <div className=\"loginDiv-container\">\r\n              <div className=\"login-Title\">로그인</div>\r\n              <div className=\"login-newUser\">신규 사용자이신가요? <Link className=\"login-register\" to=\"/register\">계정만들기</Link></div>\r\n              <form onSubmit={handleSubmit} style={{ width: \"600px\" }}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    id=\"email\"\r\n                    prefix={\r\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                    }\r\n                    placeholder=\"이메일 주소\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.email}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required>\r\n                  <Input\r\n                    id=\"password\"\r\n                    prefix={\r\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                    }\r\n                    placeholder=\"비밀번호\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.password && touched.password\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.password}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                {formErrorMessage && (\r\n                  <label>\r\n                    <p className=\"login-error\">\r\n                      {formErrorMessage}\r\n                    </p>\r\n                  </label>\r\n                )}\r\n\r\n                <Form.Item>\r\n                  <Checkbox\r\n                    className=\"rememberMe\"\r\n                    onChange={handleRememberMe}\r\n                    checked={rememberMe}\r\n                    style={{ color: \"white\" }}\r\n                  >\r\n                    아이디 기억하기\r\n                  </Checkbox>\r\n                  {/* <a\r\n                    className=\"login-form-forgot\"\r\n                    href=\"/reset_user\"\r\n                    style={{ float: \"right\" }}\r\n                  >\r\n                    forgot password\r\n                  </a> */}\r\n                  <div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"login-button\"\r\n                      disabled={isSubmitting}\r\n                      onSubmit={() => handleSubmit()}\r\n                    >\r\n                      로그인\r\n                    </button>\r\n                  </div>\r\n\r\n                </Form.Item>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import * as React from \"react\";\r\nimport * as Yup from 'yup';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport { Form, Input } from 'antd';\r\nimport \"./RegisterPage.css\"\r\nimport Axios from \"axios\"\r\n\r\ninterface RegisterPageProps {\r\n  history: {\r\n    push: Function;\r\n  }\r\n}\r\n\r\ninterface RegisterUser {\r\n  payload: {\r\n    success: boolean;\r\n    err: {\r\n      errmsg: string;\r\n    }\r\n  }\r\n}\r\n\r\ninterface FormType {\r\n  email: string;\r\n  nickname: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n}\r\n\r\nfunction checkEmail(email: string | null | undefined) {\r\n  console.log(email)\r\n  Axios.post(\"api/users/email-check\", { email: email }).then((response) => {\r\n    console.log(response.data.usedEmail)\r\n    if (response.data.usedEmail) {\r\n      console.log(\"hi\")\r\n      return false\r\n    }\r\n  })\r\n  console.log(\"hello\")\r\n  return true\r\n}\r\n\r\nfunction RegisterPage(props: RegisterPageProps) {\r\n  const dispatch: any = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        nickname: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        nickname: Yup.string()\r\n          .required('필수 정보입니다.'),\r\n        email: Yup.string()\r\n          .email('이메일 형식이 아닙니다.')\r\n          .required('필수 정보입니다.'),\r\n          // .test(\"checkEmail\", \"이미 사용중인 이메일입니다.\", value => checkEmail(value)),\r\n        password: Yup.string()\r\n          .min(6, '패스워드는 최소 6글자 이상이어야합니다.')\r\n          .required('필수 정보입니다.'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), undefined], '패스워드가 틀립니다.')\r\n          .required('패스워드를 다시 입력해주세요.')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(async() => {\r\n          let flag\r\n          await Axios.post(\"api/users/email-check\", { email: values.email }).then((response) => {\r\n            flag = response.data.usedEmail\r\n          })\r\n\r\n          if(flag){\r\n            alert(\"이미 사용 중인 아이디 입니다.\")\r\n            return\r\n          }\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            nickname: values.nickname,\r\n            image: `https://icon-library.com/images/default-user-icon/default-user-icon-8.jpg`\r\n          }\r\n\r\n          await dispatch(registerUser(dataToSubmit)).then((response: RegisterUser) => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"registerPage-container\">\r\n            <div className=\"registerDiv-container\">\r\n              <div className=\"register-Title\">회원가입</div>\r\n              <div className=\"register-oldUser\">기존 사용자이신가요? <Link className=\"register-login\" to=\"/login\">로그인하기</Link></div>\r\n\r\n              <Form onSubmit={handleSubmit} labelAlign=\"left\"\r\n                labelCol={{ span: 5 }} wrapperCol={{ span: 19 }}>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 닉네임</label>}>\r\n                  <Input\r\n                    id=\"nickname\"\r\n                    placeholder=\"닉네임을 입력하세요\"\r\n                    type=\"text\"\r\n                    value={values.nickname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.nickname && touched.nickname ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.nickname && touched.nickname && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.nickname}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 이메일</label>}\r\n                  hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                  <Input\r\n                    id=\"email\"\r\n                    placeholder=\"이메일을 입력하세요.\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.email}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 비밀번호</label>}\r\n                  hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                  <Input\r\n                    id=\"password\"\r\n                    placeholder=\"비밀번호를 입력하세요\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.password}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 비밀번호 재확인</label>} hasFeedback>\r\n                  <Input\r\n                    id=\"confirmPassword\"\r\n                    placeholder=\"비밀번호를 재입력하세요\"\r\n                    type=\"password\"\r\n                    value={values.confirmPassword}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.confirmPassword && touched.confirmPassword && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.confirmPassword}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"register-button\"\r\n                      disabled={isSubmitting}\r\n                      onSubmit={() => handleSubmit()}\r\n                    >\r\n                      회원가입\r\n                    </button>\r\n                  </div>\r\n                </Form.Item>\r\n\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import { message } from 'antd';\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport {LOCAL_HOST} from \"../../Config\";\r\n\r\nimport './Profile.css';\r\n\r\ninterface Game {\r\n  gameId: string;\r\n  sceneId: string;\r\n}\r\n\r\ninterface SceneInfo {\r\n  sceneId: string;\r\n  depth: number;\r\n}\r\n\r\ninterface ContributedScene {\r\n  sceneCnt: number;\r\n  gameId: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  sceneList: SceneInfo[];\r\n}\r\n\r\ninterface ContributedGame {\r\n  gameId: string;\r\n  title: string;\r\n  thumbnail: string;\r\n}\r\n\r\ninterface UserData {\r\n  makingGameList: Game[];\r\n  image: string;\r\n  email: string;\r\n  nickname: string;\r\n  _id: string;\r\n  contributedSceneList: ContributedScene[];\r\n  contributedGameList: ContributedGame[];\r\n}\r\n\r\ninterface State_user {\r\n  user: {\r\n    userData: UserData;\r\n  }\r\n}\r\n\r\nfunction Profile(props: any) {\r\n  const userId: string = props.match.params.userId;\r\n  const currUserData: UserData = useSelector((state: State_user) => state.user.userData);\r\n  let isUser: boolean = false;\r\n\r\n  const [user, setUser] = useState<UserData>({\r\n    makingGameList: [],\r\n    image: \"\",\r\n    email: \"\",\r\n    nickname: \"\",\r\n    _id: \"\",\r\n    contributedSceneList: [],\r\n    contributedGameList: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    Axios.post(\"/api/users/profile\", {userId: userId}).then((response) => {\r\n      if (response.data.success) {\r\n        setUser(response.data.user);\r\n      } else {\r\n          message.error(\"사용자 정보를 불러오는데 실패했습니다.\");\r\n      }\r\n    })\r\n  },[])\r\n  \r\n  if(currUserData?._id === userId){\r\n    isUser = true;\r\n  }\r\n\r\n  console.log(user)\r\n\r\n  const displayContributedScene = () => {\r\n    const contributedSceneList: ContributedScene[] = user.contributedSceneList;\r\n    if(contributedSceneList){\r\n      return contributedSceneList.map((\r\n        game: ContributedScene, index: number\r\n      ) => {\r\n        return (\r\n          <div key={index}>\r\n            <a href={`/game/${game.gameId}`}>\r\n              <img\r\n                src={`http://${LOCAL_HOST}:5000/${game.thumbnail}`}\r\n                alt={game.title}\r\n              />\r\n              <div>{game.title}</div>\r\n              <div>{game.sceneCnt}</div>\r\n            </a>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const displayContributedGame = () => {\r\n    const contributedGameList: ContributedGame[] = user.contributedGameList;\r\n    if(contributedGameList){\r\n      return contributedGameList.map((\r\n        game: ContributedGame, index: number\r\n      ) => {\r\n        return (\r\n          <div key={index}>\r\n            <a href={`/game/${game.gameId}`}>\r\n              <img\r\n                src={`http://${LOCAL_HOST}:5000/${game.thumbnail}`}\r\n                alt={game.title}\r\n              />\r\n              <div>{game.title}</div>\r\n            </a>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const displayMakingGame = (currUserData: UserData) => {\r\n    const makingGameList: Game[] = currUserData.makingGameList;\r\n    if (makingGameList){\r\n      return makingGameList.map((game: Game, index: number) => {\r\n        return (\r\n          <div key={index}>\r\n            <div>\r\n              {game.gameId}\r\n            </div>\r\n            <Link to={\r\n              {\r\n                pathname: `/scene/make`,\r\n                state: {\r\n                  gameId: game.gameId,\r\n                  sceneId: game.sceneId\r\n                }\r\n              }\r\n            } key = {index}>\r\n              게임 만들러가기..\r\n            </Link>\r\n          </div>\r\n        )\r\n      })\r\n    } else{\r\n      return <div>만드는 중인 게임이 없습니다..</div>\r\n    }\r\n  }\r\n\r\n  if (currUserData){\r\n    return (\r\n      <div className=\"profile\">\r\n        <img src={currUserData.image} alt=\"\" />\r\n        <div>{currUserData.email}</div>\r\n        <div>{currUserData.nickname}</div>\r\n        <div>\r\n          displayMAkingGame\r\n          {displayMakingGame(currUserData)}\r\n        </div>\r\n        <div>\r\n          displayContributedGame\r\n          {displayContributedGame()}\r\n        </div>\r\n        <div>\r\n          displayContributedScene\r\n          {displayContributedScene()}\r\n        </div>\r\n        {isUser ? \r\n        <div>isuser</div>\r\n        :\r\n        <div>isnt user</div>\r\n        }\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        loading...\r\n      </div>)\r\n  }\r\n}\r\n\r\nexport default Profile\r\n","import axios from 'axios';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport { Input, message } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport './SingleReply.css';\r\n\r\nfunction SingleReply({comment, updateToggle_comment, gameId}) {\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  const user_id = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData._id;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editComment, setEditComment] = useState(\"\");\r\n  const [like, setLike] = useState(0);\r\n  const [update, setUpdate] = useState(true);\r\n\r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        setLike(response.data.result.length);\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onClick_removeComment = () => {\r\n    setIsEdit(false);\r\n    axios.post('/api/comment/remove-comment', {commentId: comment._id}).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 삭제되었습니다.');\r\n        updateToggle_comment();\r\n      } else {\r\n        message.error('댓글 삭제에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClick_toggleEdit = () => {\r\n    setIsEdit((state) => !state);\r\n    setEditComment(comment.content);\r\n  }\r\n\r\n  const onChange_editcomment = (event) => {\r\n    setEditComment(event.currentTarget.value);\r\n  }\r\n\r\n  const onClick_editComment = (e) => {\r\n    e.preventDefault();\r\n    axios.post('/api/comment/edit-comment', \r\n      {commentId: comment._id, comment: editComment}\r\n    ).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 수정되었습니다.');\r\n        updateToggle();\r\n      } else {\r\n        message.error('댓글 수정에 실패했습니다.');\r\n      }\r\n    })\r\n    setIsEdit((state) => !state);\r\n  }\r\n\r\n  const onClick_like = () => {\r\n    if(isAuth === false){\r\n      return\r\n    }\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/setlike', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        console.log(response.data.result)\r\n        updateToggle();\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"container_box\" id={comment._id}>\r\n      <div className=\"comment_container\">\r\n        <img src={comment.writer.image} alt=\"img\" className=\"SingleReply__img\"/>\r\n        <div className=\"comment_contents\">\r\n          <div className=\"SingleReply__nickname\">{comment.writer.nickname}</div>\r\n          {isAuth &isEdit ? \r\n          <div className=\"edit_container\">\r\n          <Input className=\"comment_input\" onChange={onChange_editcomment} value={editComment} />\r\n          <button className=\"edit_btn\" onClick={onClick_editComment}>수정</button>\r\n          </div>\r\n          :\r\n          <div className=\"content\">{comment.content}</div>\r\n          }\r\n          <div className=\"SingleReply__comment_info\">\r\n          <div onClick={onClick_like} className=\"comment_like\">좋아요 : {like}</div>\r\n            { comment.writer._id === user_id&&\r\n            <>\r\n            <div onClick={onClick_toggleEdit} className=\"comment_option\">{isEdit ? \"수정 취소\" : \"댓글 수정\"}</div>\r\n            <div onClick={onClick_removeComment} className=\"comment_option\">댓글 삭제</div>\r\n            </>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(SingleReply)","import { Input, message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { memo, useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport SingleReply from './SingleReply';\r\nimport './SingleComment.css';\r\n\r\n//Todo : 댓글이 밀린다,,,!\r\n\r\nfunction SingleComment({gameId, comment, updateToggle_comment}) {\r\n  const user = useSelector((state) => state.user);\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  const user_id = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData._id;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const reference = useRef();\r\n\r\n  const [update, setUpdate] = useState(true);\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n  const [Replys, setReplys] = useState([]);\r\n  const [writeReply, setWriteReply] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editComment, setEditComment] = useState(\"\");\r\n  const [showComment, setShowComment] = useState(false);\r\n  const [like, setLike] = useState(0);\r\n\r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    const comment_variable = {\r\n      gameId: gameId,\r\n      responseTo: comment._id.toString()\r\n    }\r\n    axios.post('/api/comment/get-reply', comment_variable).then(response => {\r\n      if (response.data.success) {\r\n        setReplys(response.data.result);\r\n      } else {\r\n        message.error('대댓글을 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        setLike(response.data.result.length);\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onClick_writeReply = () => {\r\n    setWriteReply((state) => !state);\r\n  }\r\n\r\n  const onClick_displayReply = () => {\r\n    if (reference.current.style.display === 'block') {\r\n      reference.current.style.display = 'none';\r\n      setShowComment(false);\r\n    } else {\r\n      reference.current.style.display = 'block'\r\n      setShowComment(true);\r\n    }\r\n  }\r\n  \r\n  const onChange_comment = (event) => {\r\n    setCommentContent(event.currentTarget.value);\r\n  }\r\n\r\n  const onSubmit_response = (event) => {\r\n    event.preventDefault();\r\n    if(commentContent === \"\"){\r\n      return;\r\n    }\r\n    const variables = {\r\n      content: commentContent,\r\n      writer: user.userData._id,\r\n      gameId: gameId,\r\n      responseTo: comment._id.toString()\r\n    };\r\n\r\n    axios.post('/api/comment/save-comment', variables).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글 감사합니다!');\r\n        updateToggle();\r\n        setCommentContent(\"\");\r\n        if (reference.current.style.display !== 'block') {\r\n          reference.current.style.display = 'block'\r\n          setShowComment(true);\r\n        } \r\n      } else {\r\n        message.error('댓글 저장에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClick_removeComment = () => {\r\n    setIsEdit(false);\r\n    axios.post('/api/comment/remove-comment', {commentId: comment._id}).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 삭제되었습니다.');\r\n        updateToggle_comment();\r\n      } else {\r\n        message.error('댓글 삭제에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClick_toggleEdit = () => {\r\n    setIsEdit((state) => !state);\r\n    setEditComment(comment.content);\r\n  }\r\n\r\n  const onChange_editcomment = (event) => {\r\n    setEditComment(event.currentTarget.value);\r\n  }\r\n\r\n  const onClick_editComment = (e) => {\r\n    e.preventDefault();\r\n    axios.post('/api/comment/edit-comment', \r\n      {commentId: comment._id, comment: editComment}\r\n    ).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 수정되었습니다.');\r\n        updateToggle_comment();\r\n      } else {\r\n        message.error('댓글 수정에 실패했습니다.');\r\n      }\r\n    })\r\n    setIsEdit((state) => !state);\r\n  }\r\n\r\n  const onClick_like = () => {\r\n    if(isAuth === false){\r\n      return\r\n    }\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/setlike', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        updateToggle();\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }\r\n\r\n  const mapReply = Replys.map((reply, index) => {\r\n    return (\r\n      <div key={index} style={{marginLeft:'10px'}}>\r\n        {reply &&\r\n          <SingleReply\r\n            updateToggle_comment={updateToggle}\r\n            gameId={gameId} \r\n            comment={reply}/>\r\n        }\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"container_box\" id={comment._id}>\r\n      <div className=\"comment_container\">\r\n        <img src={comment.writer.image} alt=\"img\" className=\"img\"/>\r\n        <div className=\"comment_contents\">\r\n          <div className=\"nickname\">{comment.writer.nickname}</div>\r\n          {isEdit ? \r\n          <div className=\"edit_container\">\r\n          <Input className=\"comment_input\" onChange={onChange_editcomment} value={editComment} />\r\n          <button className=\"edit_btn\" onClick={onClick_editComment}>수정</button>\r\n          </div>\r\n          :\r\n          <div className=\"content\">{comment.content}</div>\r\n          }\r\n          <div className=\"comment_info\">\r\n            <div onClick={onClick_like} className=\"comment_like\">좋아요 : {like}</div>\r\n            { Replys.length ? \r\n            <>\r\n            { showComment ?\r\n            <div onClick={onClick_displayReply} className=\"comment_displayReplyToggle\">댓글 닫기</div>\r\n            :\r\n            <div onClick={onClick_displayReply} className=\"comment_displayReplyToggle\">댓글 {Replys.length}개 보기</div>\r\n            }\r\n            </>\r\n            :\r\n            <div></div>\r\n            }\r\n            <div onClick={onClick_writeReply} className=\"comment_option\">{writeReply? \"작성 취소\" :\"댓글 작성\"}</div>\r\n            { comment.writer._id === user_id&&\r\n            <>\r\n            <div onClick={onClick_toggleEdit} className=\"comment_option\">{isEdit ? \"수정 취소\" : \"댓글 수정\"}</div>\r\n            <div onClick={onClick_removeComment} className=\"comment_option\">댓글 삭제</div>\r\n            </>\r\n            }\r\n          </div>\r\n          {(isAuth & writeReply) ?\r\n          <form className=\"form\">\r\n            <textarea\r\n              className=\"textarea\"\r\n              onChange={onChange_comment}\r\n              value={commentContent}\r\n              placeholder=\"코멘트를 작성해 주세요.\"\r\n              />\r\n            <button className=\"comment_btn\" onClick={onSubmit_response}>댓글 작성</button>\r\n          </form> \r\n          :\r\n          <div></div>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div ref={reference} className=\"reply_container\">\r\n        {mapReply}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(SingleComment)","import { message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { memo, useEffect, useState } from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport './Comment.css';\r\nimport SingleComment from './SingleComment';\r\n\r\nfunction Comment({gameId}) {\r\n  const user = useSelector((state) => state.user);\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  \r\n  const [update, setUpdate] = useState(true);\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const FETCHNIG_CNT = 8;\r\n  const [fetching, setFetching] = useState(false);\r\n  const [totalComment, setTotalComment] = useState([]);\r\n  const [contentNumber, setContentNumber] = useState(FETCHNIG_CNT);\r\n\r\n  const fetchNextData = async () => {\r\n    setFetching(true);\r\n    \r\n    setComments(totalComment.slice(0,contentNumber+FETCHNIG_CNT));\r\n    setContentNumber((state) => state+FETCHNIG_CNT);\r\n\r\n    setFetching(false);\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n    // console.log(\"scrollHeight\", scrollHeight,\"scrollTop\" ,scrollTop,\"clientHeight\",clientHeight)\r\n    if (scrollTop + clientHeight*(3/2) >= scrollHeight && fetching === false) {\r\n      fetchNextData();\r\n    }\r\n   };\r\n\r\n   useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  });\r\n \r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.post('/api/comment/get-comment', {gameId: gameId}).then(response => {\r\n      if (response.data.success) {\r\n        setTotalComment(response.data.result);\r\n        setComments(response.data.result.slice(0,contentNumber));\r\n      } else {\r\n        message.error('댓글을 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onChange_comment = (event) => {\r\n    setCommentContent(event.currentTarget.value);\r\n  }\r\n\r\n  const onSubmit_comment = (event) => {\r\n    event.preventDefault();\r\n    if(commentContent === \"\"){\r\n      return;\r\n    }\r\n\r\n    const variables = {\r\n      content: commentContent,\r\n      writer: user.userData._id,\r\n      gameId: gameId,\r\n      responseTo : \"\"\r\n    };\r\n\r\n    axios.post('/api/comment/save-comment', variables).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글 감사합니다!');\r\n        updateToggle();\r\n        setCommentContent(\"\");\r\n      } else {\r\n        message.error('댓글 저장에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const mapComment = comments.map((comment, index) => {\r\n    return (\r\n      <div key={index}>\r\n        {comment &&\r\n          <SingleComment \r\n            updateToggle_comment={updateToggle}\r\n            gameId={gameId} \r\n            comment={comment}/>\r\n        }\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      {isAuth &&\r\n      <form className=\"form\">\r\n        <textarea\r\n          className=\"textarea\"\r\n          onChange={onChange_comment}\r\n          value={commentContent}\r\n          placeholder=\"코멘트를 작성해 주세요.\"\r\n        />\r\n        <button className=\"comment_btn\" onClick={onSubmit_comment}>댓글 작성</button>\r\n      </form>\r\n      }\r\n      <br />\r\n      <div>댓글 {totalComment.length}개</div>\r\n      <hr/>\r\n      {mapComment}\r\n      <br />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Comment)","import { Button, message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./GameDetailPage.css\";\r\nimport { LOCAL_HOST } from \"../../Config\"\r\nimport Comment from '../Comment/Comment.js';\r\nimport { socket } from \"../../App\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst config = require('../../../config/key')\r\n\r\nfunction GameDetailPage(props) {\r\n    const gameId = props.match.params.gameId;\r\n    const variable = { gameId: gameId };\r\n\r\n    const [gameDetail, setGameDetail] = useState([]);\r\n    const [sceneId, setSceneId] = useState([]);\r\n    const [isMaking, setIsMaking] = useState(false);\r\n    const [update, setUpdate] = useState(false);\r\n    const [view, setView] = useState(0);\r\n    const [thumbsUp, setThumbsUp] = useState(0);\r\n    const [thumbsUpClicked, setThumbsUpClicked] = useState(false);\r\n    const [totalSceneCnt, setTotalSceneCnt] = useState(0);\r\n    const [ContributerCnt, setContributerCnt] = useState(0);\r\n    const [contributerList, setContributerList] = useState([]);\r\n\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const playFirstScene = async (isFirst) => {\r\n        console.log(sceneId)\r\n        try {     \r\n            const response = isFirst && await Axios.get(\"/api/users/playing-list/clear\");\r\n            props.history.replace({\r\n                pathname: (!isFirst && isMaking) ? `/scene/make` : `/gameplay`,\r\n                state: {\r\n                    sceneId: isFirst ? response.data.teleportSceneId : sceneId,\r\n                    gameId: gameId,\r\n                }\r\n            })\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.post(\"/api/game/getgamedetail\", variable).then((response) => {\r\n            if (response.data.success) {\r\n                setGameDetail(response.data.gameDetail);\r\n            } else {\r\n                message.error(\"게임 정보를 로딩하는데 실패했습니다.\");\r\n            }\r\n        });\r\n        Axios.post(\"/api/game/rank\", variable).then((response) => {\r\n            if (response.data.success) {\r\n                setContributerList(response.data.topRank);\r\n                setContributerCnt(response.data.contributerCnt);\r\n                setTotalSceneCnt(response.data.totalSceneCnt);\r\n            } else {\r\n                message.error(\"게임 정보를 로딩하는데 실패했습니다.\");\r\n            }\r\n        });\r\n        Axios.get(`/api/game/gamestart/${gameId}`).then((response) => {\r\n            if (response.data.success) {\r\n                setSceneId(response.data.sceneId);\r\n                setIsMaking(response.data.isMaking);\r\n            } else {\r\n                message.error(\"로그인 해주세요.\");\r\n            }\r\n        });\r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(user && user.userData){\r\n            const variable = {\r\n                userId: user.userData._id,\r\n                objectId: gameId\r\n            }\r\n            Axios.post(\"/api/view/\", variable).then((response) =>{\r\n                if (response.data.success){\r\n                    setView(response.data.view);\r\n                }\r\n            })\r\n        }\r\n    },[user])\r\n\r\n    useEffect(() => {\r\n        if(user && user.userData){\r\n            const variable = {\r\n                objectId: gameId,\r\n                userId: user.userData._id,\r\n            }\r\n            Axios.post(\"/api/thumbsup/count\", variable).then((response) =>{\r\n                if (response.data.success){\r\n                    setThumbsUp(response.data.thumbsup);\r\n                    setThumbsUpClicked(response.data.isClicked);\r\n                }\r\n            })\r\n        }\r\n    },[update,user])\r\n\r\n    function onClick_thumbsUp () {\r\n        if(user && user.userData){\r\n            // setUpdate((state) => state+1);\r\n            const variable = {\r\n                userId: user.userData._id,\r\n                objectId: gameId\r\n            }\r\n            Axios.post(\"/api/thumbsup/\", variable).then((response) =>{\r\n                if (response.data.success){\r\n                    setThumbsUp(response.data.thumbsup);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const topContributer = contributerList.map((contributer, index) => {\r\n        return (\r\n            <div key={contributer.userId}>\r\n                <div>{index+1}위</div>\r\n                <img src={contributer.image} alt=\"\"/>\r\n                <div>{contributer.nickname}</div>\r\n                <div>{contributer.email}</div>\r\n                <div>만든 신 개수{contributer.userSceneCnt}</div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"detailPage__container\">\r\n\r\n            {/* 이미지 불러오는게 늦음 디버깅 필요 */}\r\n            {gameDetail.thumbnail &&\r\n                <img\r\n                    style={{ width: \"30%\", height: \"30%\" }}\r\n                    src={\r\n                        process.env.NODE_ENV === 'production' ?\r\n                            gameDetail.thumbnail\r\n                            :\r\n                            `${config.SERVER}/${gameDetail.thumbnail}`}\r\n                    alt=\"thumbnail\"\r\n                />}\r\n            <div>제목: {gameDetail.title}</div>\r\n            <div>카테고리 : {gameDetail.category}</div>\r\n            <div>크리에이터: {gameDetail?.creator?.nickname}</div>\r\n            <div>조회수: {view}</div>\r\n            <div onClick={onClick_thumbsUp}>좋아요: {thumbsUp}</div>\r\n            <div>상세 설명: {gameDetail.description}</div>\r\n            <div>기여한 사람수: {ContributerCnt}</div>\r\n            <div>씬 총 개수: {totalSceneCnt}</div>\r\n            <div>{topContributer}</div>\r\n            <br />\r\n\r\n            {/* 게임 시작하기 or 이어 만들기 */}\r\n            <Button onClick={() => playFirstScene(true)}>\r\n                처음부터 하기\r\n            </Button>\r\n            <Button onClick={() => playFirstScene(false)}>\r\n                게임 이어하기\r\n            </Button>\r\n            <Comment gameId={gameId} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameDetailPage;\r\n","import React, { useState } from \"react\";\r\nimport { Typography, Button, Form, message, Input, Icon } from \"antd\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./GameUploadPage.css\";\r\nimport {LOCAL_HOST} from\"../../Config\"\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst PrivateOptions = [\r\n    { value: 0, label: \"Private\" },\r\n    { value: 1, label: \"Public\" },\r\n];\r\n\r\nconst CategoryOptions = [\r\n    { value: 0, label: \"살아남기\" },\r\n    { value: 1, label: \"로맨스\" },\r\n    { value: 2, label: \"스토리\" },\r\n    { value: 3, label: \"추리\" },\r\n    { value: 4, label: \"병맛\" },\r\n];\r\n\r\nconst RatioOptions = [\r\n    { value: `${9/16}`, label: \"16:9\"}, \r\n    { value: `${16/9}`, label: \"9:16(스마트폰)\"}, \r\n]\r\n\r\nfunction GameUploadPage(props) {\r\n    const user = useSelector((state) => state.user);\r\n    const [GameTitle, setGameTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [isPrivate, setIsPrivate] = useState(0);\r\n    const [category, setCategory] = useState(\"살아남기\");\r\n    const [ratio, setRatio] = useState(true);\r\n\r\n    const [filePath, setFilePath] = useState(\"\");\r\n    // const [duration, setDuration] = useState(\"\")\r\n    // const [thumbnailPath, setThumbnailPath] = useState(\"\")\r\n\r\n    const onTitleChange = (event) => {\r\n        setGameTitle(event.currentTarget.value);\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescription(event.currentTarget.value);\r\n    };\r\n\r\n    const onPrivateChange = (event) => {\r\n        setIsPrivate(event.currentTarget.value);\r\n    };\r\n\r\n    const onCartegoryChange = (event) => {\r\n        let cat_idx = event.currentTarget.value;\r\n        setCategory(event.currentTarget[cat_idx].text);\r\n    };\r\n\r\n    const onRatioChange = (event) => {\r\n        setRatio(state => !state);\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        if (!files[0]) {\r\n            alert(\"손상된 파일입니다.\");\r\n            return;\r\n        }\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { \"content-type\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n        };\r\n        formData.append(\"file\", files[0]);\r\n\r\n        Axios.post(\"/api/game/uploadfiles\", formData, config).then(\r\n            (response) => {\r\n                if (response.data.success) {\r\n                    setFilePath(response.data.url);\r\n                } else {\r\n                    alert(\"업로드 실패\");\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (GameTitle === \"\" || description === \"\" || filePath === \"\") {\r\n            alert(\"모든 정보를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        let floatRatio;\r\n        if (ratio) {\r\n            floatRatio = 9/16;\r\n        } else {\r\n            floatRatio = 16/9;\r\n        }\r\n        const game_variables = {\r\n            creator: user.userData._id,\r\n            title: GameTitle,\r\n            description: description,\r\n            thumbnail: filePath,\r\n            privacy: isPrivate,\r\n            category: category,\r\n            ratio: floatRatio,\r\n            writer: [user.userData._id],\r\n            character: [],\r\n            background: [],\r\n            bgm: [],\r\n            sound: [],\r\n        };\r\n        \r\n        Axios.post(\"/api/game/uploadgame\", game_variables).then((response) => {\r\n            if (response.data.success) {\r\n                message.success(\r\n                    \"첫 Scene을 생성해주세요. 오른쪽의 +버튼을 활용해 이미지들을 추가할 수 있습니다.\"\r\n                );\r\n                setTimeout(() => {\r\n                    props.history.replace(\r\n                        `/game/upload/${response.data.game._id}`\r\n                    );\r\n                }, 1000);\r\n            } else {\r\n                alert(\"game제작 실패\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n            <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n                <Title level={2}>Upload Game</Title>\r\n            </div>\r\n            <Form onSubmit={onSubmit}>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"300px\",\r\n                                    height: \"240px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    {/* thunb nail */}\r\n                    {filePath && (\r\n                        <div>\r\n                            <img\r\n                                className=\"thumbnail__img\"\r\n                                src={`http://${LOCAL_HOST}:5000/${filePath}`}\r\n                                alt=\"thumbnail\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <label>Title</label>\r\n                <Input onChange={onTitleChange} value={GameTitle} />\r\n                <br />\r\n                <br />\r\n                <label>Description</label>\r\n                <TextArea onChange={onDescriptionChange} value={description} />\r\n                <br />\r\n                <br />\r\n                <select onChange={onPrivateChange}>\r\n                    {PrivateOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <select onChange={onCartegoryChange}>\r\n                    {CategoryOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <label><input type=\"radio\" name=\"ratio\" checked={ratio} onChange={onRatioChange}/>컴퓨터</label>\r\n                <br />\r\n                <label><input type=\"radio\" name=\"ratio\" checked={!ratio} onChange={onRatioChange}/>스마트폰</label>\r\n                    \r\n                {/* <select onChange={onRatioChange}>\r\n                    {RatioOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select> */}\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Next Step\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameUploadPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row, Typography, Button, Form, Icon, message } from \"antd\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Axios from \"axios\";\r\nimport \"./GameBuildUpPage\";\r\nimport { LOCAL_HOST } from \"../../Config\"\r\n\r\nconst { Title } = Typography;\r\n\r\nconst config = require('../../../config/key')\r\n\r\nconst extension = {\r\n    image: [\".jpg\", \".png\", \".jpeg\", \".gif\"],\r\n    music: [\".mp3\", \".wav\", \".wmv\", \".wma\", \".flac\"],\r\n};\r\n\r\nfunction GameBuildUpPage(props) {\r\n    const [filePath, setFilePath] = useState(\"\");\r\n    const [fileState, setFileState] = useState(\"\");\r\n    const [cur_game, setGame] = useState([]);\r\n    const [characterCards, setCharacterCards] = useState([]);\r\n    const [backgroundCards, setBackgroundCards] = useState([]);\r\n    const [bgmCards, setBgmCards] = useState([]);\r\n    const [soundCards, setSoundCards] = useState([]);\r\n    const gameId = props.match.params.gameId;\r\n\r\n    const game_form = {\r\n        gameId: gameId,\r\n    };\r\n\r\n    useEffect(() => {\r\n        Axios.post(\"/api/game/getgamedetail\", game_form).then((response) => {\r\n            if (response.data.success) {\r\n                setGame(response.data.gameDetail);\r\n            } else {\r\n                message.error(\"game load에 실패했습니다.\");\r\n            }\r\n        });\r\n    }, [filePath]);\r\n\r\n    useEffect(() => {\r\n        //character\r\n        if (cur_game.character) {\r\n            const tempCharacterCards = cur_game.character.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"50px\", height: \"50px\" }}\r\n                                src={`${cur_game.character[index].image}`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setCharacterCards(tempCharacterCards);\r\n        }\r\n        //background\r\n        if (cur_game.background) {\r\n            const backgroundCards = cur_game.background.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"50px\", height: \"50px\" }}\r\n                                src={`${cur_game.background[index].image}`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setBackgroundCards(backgroundCards);\r\n        }\r\n        //bgm\r\n        if (cur_game.bgm) {\r\n            const bgmCards = cur_game.bgm.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"20px\", height: \"20px\" }}\r\n                                src={`${config.STORAGE}/music_icon.jpg`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                            {cur_game.bgm[index].name}\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setBgmCards(bgmCards);\r\n        }\r\n        //sound\r\n        if (cur_game.sound) {\r\n            const soundCards = cur_game.sound.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"20px\", height: \"20px\" }}\r\n                                src={`${config.STORAGE}/music_icon.jpg`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                            {cur_game.sound[index].name}\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setSoundCards(soundCards);\r\n        }\r\n    }, [cur_game]);\r\n\r\n    const onDrop = (files) => {\r\n        //check is_file ok\r\n        for (let i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n\r\n            let dotIdx = files[i].name.lastIndexOf(\".\");\r\n            if (dotIdx === -1) {\r\n                message.error(files[i].name + \"은 확장자가 없는 파일입니다.\");\r\n                return;\r\n            }\r\n\r\n            let cur_extension = files[i].name.substr(dotIdx, 10000);\r\n            if (\r\n                //image check\r\n                (fileState === 1 || fileState === 2) &&\r\n                extension.image.indexOf(cur_extension) == -1\r\n            ) {\r\n                message.error(\r\n                    files[i].name + \"은 지원하지 않는 이미지 확장자 파일입니다.\"\r\n                );\r\n                return;\r\n            }\r\n\r\n            if (\r\n                //sound check\r\n                (fileState === 3 || fileState === 4) &&\r\n                extension.music.indexOf(cur_extension) == -1\r\n            ) {\r\n                message.error(\r\n                    files[i].name + \"은 지원하지 않는 음원 확장자 파일입니다.\"\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            let formData = new FormData();\r\n            const header = {\r\n                header: { \"content-type\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n            };\r\n            formData.append(\"file\", files[i]);\r\n            let file_name = files[i].name;\r\n            console.log(\"asdfasdfasdfasfd\")\r\n            Axios.post(\"/api/game/uploadfile\", formData, header).then(\r\n                (response) => {\r\n                    if (response.data.success) {\r\n                        setFilePath(response.data.url);\r\n\r\n                        switch (fileState) {\r\n                            case 1:\r\n                                const characterForm = {\r\n                                    gameId: gameId,\r\n                                    character: {\r\n                                        name: file_name,\r\n                                        image: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putCharacterImg\",\r\n                                    characterForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"캐릭터 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            case 2: //background\r\n                                const backgroundForm = {\r\n                                    gameId: gameId,\r\n                                    background: {\r\n                                        name: file_name,\r\n                                        image: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putBackgroundImg\",\r\n                                    backgroundForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"배경 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            case 3:\r\n                                const bgmForm = {\r\n                                    gameId: gameId,\r\n                                    bgm: {\r\n                                        name: file_name,\r\n                                        music: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\"/api/game/putBgm\", bgmForm).then(\r\n                                    (response) => {\r\n                                        if (response.data.success) {\r\n                                            setFilePath(response.data.url);\r\n                                        } else {\r\n                                            message.error(\"배경음 업데이트 실패\");\r\n                                        }\r\n                                    }\r\n                                );\r\n                                return;\r\n\r\n                            case 4:\r\n                                const soundForm = {\r\n                                    gameId: gameId,\r\n                                    sound: {\r\n                                        name: file_name,\r\n                                        music: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putSound\",\r\n                                    soundForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"효과음 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            default:\r\n                                message.error(\"정의되지 않은 업로드 버튼입니다.\");\r\n                                return;\r\n                        }\r\n                    } else {\r\n                        message.error(\"업로드 실패\");\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.history.push(`/scene/make/`);\r\n    };\r\n\r\n    const onCharacter = () => {\r\n        setFileState(1);\r\n    };\r\n    const onBackground = () => {\r\n        setFileState(2);\r\n    };\r\n    const onBgm = () => {\r\n        setFileState(3);\r\n    };\r\n    const onSound = () => {\r\n        setFileState(4);\r\n    };\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 캐릭터를 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"flex-start\" }}\r\n                    onClick={onCharacter}\r\n                >\r\n                    {/* Set click handler */}\r\n                    {/* <button onClick={onBackground}> </button> */}\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{characterCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 배경을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    // style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    style={{ display: \"flex\", justifyContent: \"flex-start\" }}\r\n                    onClick={onBackground}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{backgroundCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 음악을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    onClick={onBgm}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{bgmCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 효과음을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    onClick={onSound}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{soundCards}</Row>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Go to Last Step!!\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameBuildUpPage;\r\n","import \"./GameCharacterBlock.css\";\r\nimport React from \"react\";\r\nconst GameCharacterBlock = (props) => {\r\n  const { characterList } = props;\r\n  \r\n  const characterblocks = characterList.map((charSchema, index) => {\r\n    return (\r\n      <div key={index}>\r\n        <div \r\n          className=\"CharacterBlock\"\r\n          style={{ left: `${charSchema.posX}%`}}\r\n        >\r\n          <div \r\n            className=\"character__container\"\r\n            style={{height: `${charSchema.size}%`,\r\n                    top: `${charSchema.posY}%`}}\r\n          >\r\n              <img\r\n                className=\"characterImg\"\r\n                src={charSchema.image}\r\n                alt=\"img\"\r\n              />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  return <div className=\"CharacterBlocks\" >{characterblocks}</div>;\r\n};\r\n\r\nexport default GameCharacterBlock;","import { useEffect, useRef } from \"react\";\r\n\r\nfunction useKey(key, cb) {\r\n    const callbackRef = useRef(cb);\r\n\r\n    useEffect(() => {\r\n        callbackRef.current = cb;\r\n    });\r\n\r\n    useEffect(() => {\r\n        function handle(event) {\r\n            if (event.code === key && !event.shiftKey) {\r\n                callbackRef.current(event);\r\n            }\r\n        }\r\n        document.addEventListener(\"keypress\", handle);\r\n        return () => document.removeEventListener(\"keypress\", handle);\r\n    }, [key]);\r\n}\r\n\r\nexport default useKey;","import React, { memo } from \"react\";\r\nimport { Modal, Form, Input } from \"antd\";\r\nimport useKey from \"../../functions/useKey\";\r\n\r\nconst ModalFormComponent = ({ visible, onCancel, onCreate, form, remainTime }) => {\r\n  const { getFieldDecorator } = form;\r\n\r\n  function handleEnter() {\r\n    onCreate();\r\n  }\r\n\r\n  useKey(\"Enter\", handleEnter);\r\n\r\n  if (visible) {\r\n    return (\r\n      <Modal\r\n        visible={true}\r\n        title={`선택지 내용을 입력하세요 (${remainTime})`}\r\n        okText=\"Submit\"\r\n        onCancel={onCancel}\r\n        onOk={onCreate}\r\n      >\r\n        <Form layout=\"vertical\">\r\n          <Form.Item label=\"Title\">\r\n            {getFieldDecorator(\"title\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"제목을 입력해주세요!\",\r\n                },\r\n              ],\r\n            })(<Input ref={(input) => input && input.focus()} />)}\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst ModalForm = Form.create({ name: \"modal_form\" })(ModalFormComponent);\r\n\r\nexport default memo(ModalForm);\r\n","import { LOADINGPAGE_GAMEPLAY, PAUSE_GAMEPLAY } from \"./types\";\r\n\r\nexport function gameLoadingPage(loadingType) {\r\n  return {\r\n    type: LOADINGPAGE_GAMEPLAY,\r\n    payload: loadingType,\r\n  };\r\n}\r\n\r\nexport function gamePause(isPause) {\r\n  return {\r\n    type: PAUSE_GAMEPLAY,\r\n    payload: isPause,\r\n  };\r\n}\r\n","import React, { useState, useEffect, useCallback, useRef, memo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Button } from \"antd\";\r\nimport ModalForm from \"./InputModalForm\";\r\nimport { useHistory } from \"react-router\";\r\nimport { socket } from \"../../App\";\r\nimport axios from \"axios\";\r\nimport { gamePause } from \"../../../_actions/gamePlay_actions\";\r\nimport { SecurityScanTwoTone } from \"@ant-design/icons\";\r\n\r\nconst InputModal = ({ scene_id, scene_depth, game_id, scene_next_list, theme }) => {\r\n  const dispatch = useDispatch()\r\n  let history = useHistory();\r\n  const user = useSelector((state) => state.user);\r\n  const emptyNum = useSelector((state) => state.sync.emptyNum);\r\n  const user_id = user.userData._id.toString();\r\n  const [visible, setVisible] = useState(false);\r\n  const [formRef, setFormRef] = useState(null);\r\n  const [remainTime, setRemainTime] = useState(0);\r\n  const [decreaseTimer, setDecreaseTimer] = useState(null);\r\n  const [validated, setValidated] = useState(1)\r\n\r\n  const createFlag = useRef(false)\r\n\r\n  const tick = 30;\r\n\r\n\r\n  const handleCreate = () => {\r\n    formRef.validateFields(async (err, values) => {\r\n      clearTimeout(decreaseTimer);\r\n      console.log(\"deleted -- \", decreaseTimer)\r\n      if (createFlag.current || err || !visible) {\r\n        return;\r\n      }\r\n\r\n      createFlag.current = true;\r\n      const data = {\r\n        gameId: game_id,\r\n        prevSceneId: scene_id,\r\n        isFirst: 0,\r\n        sceneDepth: scene_depth + 1,\r\n        title: values.title,\r\n      };\r\n      const res = await axios.post(\"/api/scene/create\", data);\r\n      //! socket 보내서 서버에서 scene Cache x exp 업데이트\r\n\r\n      socket.emit(\"created_choice\", { sceneId: scene_id, userId: user_id, exp: res.data.exp })\r\n      // tmp scene create\r\n\r\n      formRef.resetFields();\r\n      setVisible(false);\r\n\r\n      //! 껍데기 넣을 때, 서버에서 exp 같이 넣기 (별개로 or 같이 해도됨 시간 동기화가 되는 좋은 방법이 있다면)\r\n      history.replace({\r\n        pathname: `/scene/make`,\r\n        state: {\r\n          gameId: game_id,\r\n          sceneId: res.data.sceneId\r\n        }\r\n      });\r\n\r\n    });\r\n  };\r\n\r\n  const saveFormRef = useCallback((node) => {\r\n    if (node !== null) {\r\n      setFormRef(node);\r\n    }\r\n  }, []);\r\n  let decTimer;\r\n\r\n  const onClickHandler = () => {\r\n    dispatch(gamePause(true));\r\n    clearTimeout(decreaseTimer);\r\n    console.log(\"deleted -- \", decreaseTimer)\r\n    let tick = 30;\r\n    setRemainTime(tick);\r\n    decTimer = setInterval(() => {\r\n      console.log(\"timer is not deleted~~~~~~~~~~~\");\r\n      tick--;\r\n      if (tick === 0) {\r\n        console.log(\"tick이 0이라서 실행합니다.\")\r\n        clearInterval(decTimer);\r\n        cancelHandler();\r\n        return;\r\n      }\r\n      setRemainTime(tick);\r\n    }, 970);\r\n    console.log(\"made -- \", decTimer)\r\n    setDecreaseTimer(decTimer);\r\n\r\n    socket.emit(\"empty_num_decrease\", { scene_id, user_id });\r\n    setVisible(true);\r\n  }\r\n\r\n  const cancelHandler = () => {\r\n    socket.emit(\"empty_num_increase\", { scene_id, user_id });\r\n    clearTimeout(decreaseTimer);\r\n    console.log(\"deleted -- \", decreaseTimer)\r\n    setVisible(false);\r\n    dispatch(gamePause(false));\r\n  }\r\n\r\n  const createHandler = () => {\r\n    return handleCreate();\r\n  }\r\n\r\n  const [dino, setDino] = useState(0);\r\n\r\n  useEffect(() => {\r\n    socket.off(\"validated\");\r\n    socket.on(\"validated\", (data) => {\r\n      setValidated(validated * -1)\r\n    })\r\n\r\n    socket.off(\"decrease_failed\");\r\n    socket.on(\"decrease_failed\", () => {\r\n      setVisible(false);\r\n      setDino(0);\r\n      setDino(1);\r\n    })\r\n\r\n    socket.emit(\"validate_empty_num\", { scene_id })\r\n  }, [scene_id])\r\n\r\n  useEffect(() => {\r\n    if (dino) {\r\n      clearTimeout(decreaseTimer);\r\n      console.log(\"failed.. deleted -- \", decreaseTimer)\r\n      console.log(\"visible false\");\r\n    }\r\n  }, [dino]);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        (scene_next_list?.length < 4) &&\r\n        <>\r\n          <div\r\n            className={`text_line_choice ${theme}`}\r\n            onClick={emptyNum > 0 ? onClickHandler : null}\r\n          >\r\n            선택지 추가 (+{emptyNum})\r\n            </div>\r\n        </>\r\n      }\r\n      <ModalForm\r\n        ref={saveFormRef}\r\n        visible={visible}\r\n        onCancel={cancelHandler}\r\n        onCreate={createHandler}\r\n        remainTime={remainTime}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(InputModal);\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nfunction useMouse(key, cb) {\r\n    const callbackRef = useRef(cb);\r\n\r\n    useEffect(() => {\r\n        callbackRef.current = cb;\r\n    });\r\n\r\n    useEffect(() => {\r\n        function handle(event) {\r\n            callbackRef.current(event);\r\n        }\r\n        document.addEventListener(key, handle);\r\n        return () => document.removeEventListener(key, handle);\r\n    }, []);\r\n}\r\nexport default useMouse;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useKey from \"../../functions/useKey\";\r\nimport { useWindupString } from \"windups\";\r\nimport useMouse from \"../../functions/useMouse\";\r\n\r\n// voice.volume = 0.8\r\nfunction TextAnimation({ cut_script, setIsTyping }) {\r\n    const [flag, setFlag] = useState(false);\r\n    let i = 0;\r\n    const [text, { skip }] = useWindupString(\r\n        cut_script,\r\n        {\r\n            pace: () => 150,\r\n            onFinished: () => {\r\n                setFlag(true)\r\n            },\r\n            // onChar: () => {\r\n            //     if (!(cut_script[i] === ' ' || cut_script[i] === '.')) {\r\n            //         voice.load()\r\n            //         voice.play()\r\n            //     }\r\n            //     i++;\r\n            // }\r\n        }\r\n    );\r\n\r\n    useKey(\"Enter\", handleEnter);\r\n    useKey(\"Space\", handleEnter);\r\n    useMouse(\"mouseup\", handleEnter);\r\n    function handleEnter(event) {\r\n        skip()\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log(\"SETISTYPING!!!\")\r\n            setIsTyping(false)\r\n        }\r\n    }, [flag])\r\n\r\n    if (cut_script)\r\n        return <div>{text}</div>\r\n    else\r\n        return <div></div>\r\n}\r\n\r\n\r\nexport default TextAnimation;","\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { Button, Modal } from \"antd\";\r\n\r\nimport \"../SceneEndingPage/SceneEndingPage.css\";\r\n\r\n\r\n\r\nconst FirstSceneTeleport = ({ gameId, setScene }) => {\r\n    const history = useHistory();\r\n    const user = useSelector((state) => state.user);\r\n    const [isWarningVisible, setIsWarningVisible] = useState(false)\r\n\r\n    const playingListClear = () => {\r\n\r\n        if (user) {\r\n            //! auth를 통해서 쿠키에서 유저정보 갖고올 수 있다.\r\n            Axios.get(\"/api/users/playing-list/clear\").\r\n                then(response => {\r\n                    if (response.data.success) {\r\n                        setIsWarningVisible(false)\r\n                        setScene({})\r\n                        history.push({\r\n                            pathname: `/gameplay`,\r\n                            state: {\r\n                                sceneId: response.data.teleportSceneId,\r\n                                gameId: gameId,\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        setIsWarningVisible(false)\r\n\r\n                        alert(\"오류가 발생했습니다.\")\r\n                    }\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n    const cancelModal = () => {\r\n        setIsWarningVisible(false)\r\n    }\r\n    const openModal = () => {\r\n        setIsWarningVisible(true)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                onClick={openModal}\r\n                className=\"ending_button\"\r\n            >처음으로 돌아가기\r\n            </Button>\r\n            <Modal\r\n                title=\"⚠ 주의 ⚠\"\r\n                visible={isWarningVisible}\r\n                maskClosable={false}\r\n                closable={false}\r\n                centered = {true}\r\n                footer={\r\n                    <React.Fragment>\r\n                        <Button key = \"ok\" type= \"primary\" onClick={playingListClear}>\r\n                            확인\r\n                        </Button>\r\n                        <Button key = \"cancel\" onClick={cancelModal}>\r\n                            취소\r\n                        </Button>\r\n                    </React.Fragment>\r\n                }\r\n            >\r\n\r\n                <p>첫 화면으로 돌아갑니다.</p>\r\n                <p>이어하기로 돌아올 수 없습니다.</p>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default FirstSceneTeleport;\r\n","\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { Button } from \"antd\";\r\n\r\n\r\nconst PrevSceneTeleport = ({ gameId,setScene }) => {\r\n    const history = useHistory();\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const playingListPop = () => {\r\n\r\n        if (user) {\r\n            //! auth를 통해서 쿠키에서 유저정보 갖고올 수 있다.\r\n            Axios.get(\"/api/users/playing-list/pop\").\r\n                then(response => {\r\n                    if (response.data.success) {\r\n                        setScene({})\r\n                        history.push({\r\n                            pathname: `/gameplay`,\r\n                            state: {\r\n                                sceneId: response.data.teleportSceneId,\r\n                                gameId: gameId,\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        alert(\"오류가 발생했습니다.\")\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            alert(\"로그인 시 지원되는 기능입니다.\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Button\r\n                onClick={playingListPop}\r\n                className=\"ending_button\"\r\n        >이전으로 돌아가기\r\n        </Button>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PrevSceneTeleport;\r\n","import \"./SceneEndingPage.css\";\r\nimport React, { useState } from \"react\";\r\nimport FirstSceneTeleport from \"../SceneTeleport/FirstSceneTeleport\";\r\nimport PrevSceneTeleport from \"../SceneTeleport/PrevSceneTeleport\";\r\n\r\n\r\nconst SceneEndingPage = ({ gameId, setScene }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"ending_box\">\r\n            <div>\r\n                    The End\r\n            </div>\r\n            <div className=\"ending_button_container\">\r\n                {/* <p>n개의 엔딩 중 1개를 발견하셨습니다. </p> */}\r\n                {/* <p>이 씬으로 온 당신은 1 n</p> */}\r\n\r\n                {/* <p>걸어왔던 길</p> -- 히스토리 맵 그 이상의.. 대사가 곁들여지고 멋진..*/}\r\n                <React.Fragment>\r\n\r\n                    <FirstSceneTeleport \r\n                        key={0}\r\n                        gameId={gameId}\r\n                        setScene = {setScene}\r\n                    />\r\n                    <PrevSceneTeleport \r\n                        key={1}\r\n                        gameId={gameId}\r\n                        setScene={setScene}\r\n                    />\r\n                </React.Fragment>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SceneEndingPage;\r\n","import \"./TextBlock.css\";\r\nimport React, { useReducer } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\nimport InputModal from \"../Modal/InputModal\";\r\nimport TextAnimation from './TextAnimation'\r\nimport SceneEndingPage from \"../Scene/SceneEndingPage/SceneEndingPage\";\r\n\r\n// 일단 4 나중에 어떻게 할지 다시 결정..\r\nconst CHOICE_NUM = 4;\r\n\r\nexport const TextBlock = (props) => {\r\n    let { cut_name, cut_script, setIsTyping, isTyping, theme } = props;\r\n\r\n    theme = 'atorney';\r\n\r\n    return <>\r\n        {\r\n            cut_script ?\r\n                <div className={`text_window ${theme}`} >\r\n                    <div className={`text_container ${theme}`} >\r\n                        <div className={`name_block ${theme}`} >\r\n                            {cut_name}\r\n                        </div>\r\n                        <div className={`text_block ${theme}`} >\r\n                            <div className={`text_line ${theme}`} > {\r\n                                isTyping ? < TextAnimation\r\n                                    cut_script={cut_script}\r\n                                    setIsTyping={setIsTyping}\r\n                                /> : cut_script\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className={`text_line ${theme}`} > {\r\n                    isTyping ? < TextAnimation\r\n                        cut_script={cut_script}\r\n                        setIsTyping={setIsTyping}\r\n                    /> : cut_script\r\n                }\r\n                </div>\r\n        }\r\n    </>\r\n};\r\n\r\n// 선택지 display\r\nexport const TextBlockChoice = (props) => {\r\n\r\n    // 뭔가 한다..\r\n\r\n    let {\r\n        game_id,\r\n        cut_name,\r\n        cut_script,\r\n        scene_next_list,\r\n        scene_id,\r\n        scene_depth,\r\n        setIsTyping,\r\n        isTyping,\r\n        isEnding,\r\n        isLastMotion,\r\n        theme,\r\n        setScene\r\n    } = props;\r\n\r\n    theme = 'atorney';\r\n\r\n    const choices = scene_next_list.map((choice, index) => {\r\n        console.log(\"---------choices-------\")\r\n        return (\r\n            <Link to={\r\n                {\r\n                    pathname: `/gameplay`,\r\n                    key: index,\r\n                    state: {\r\n                        gameId: game_id,\r\n                        sceneId: choice.sceneId\r\n                    }\r\n                }\r\n            } key={index}\r\n                style={{ textDecoration: 'none' }}\r\n                className={`text_line_choice ${theme}`}\r\n                onClick={() => setScene({})}\r\n            >\r\n                { choice.script}\r\n            </Link>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={`text_window ${theme}`} >\r\n            <TextBlock\r\n                cut_name={cut_name}\r\n                cut_script={cut_script}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n                theme={theme}\r\n            />\r\n            { isLastMotion &&\r\n                <div class={`choice_box ${isEnding} ${theme}`}>\r\n                    {isEnding === true ?\r\n                        <SceneEndingPage gameId={game_id} setScene={setScene} /> :\r\n                        <>\r\n                            {choices}\r\n                            {scene_next_list.length < CHOICE_NUM ?\r\n                                (\r\n                                    <InputModal scene_id={scene_id}\r\n                                        scene_depth={scene_depth}\r\n                                        game_id={game_id}\r\n                                        scene_next_list={scene_next_list}\r\n                                        theme={theme}\r\n                                    />\r\n                                ) :\r\n                                (<div > </div>)\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import { message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Dislike.css\";\r\n\r\nfunction DislikePopup(props) {\r\n  const { gameId, sceneId, trigger, setTrigger } = props;\r\n\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [Title,setTitle] = useState(\"\");\r\n  const [Description,setDescription] = useState(\"\");\r\n\r\n  const onTitleChange = (event) => {\r\n    setTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const onDescriptionChange = (event) => {\r\n    setDescription(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const variable = {\r\n      title : Title,\r\n      description : Description,\r\n      user : user.userData._id,\r\n      sceneId : sceneId,\r\n      gameId : gameId,\r\n    }\r\n    Axios.post(\"/api/complaint/save\", variable).then((response) => {\r\n      if(!response.data.success) {\r\n        message.error(\"신고하는데 문제가 발생했습니다.\")\r\n      } else {\r\n        message.success(\"감사합니다. 신고가 접수되었습니다.\")\r\n        setTrigger(state => !state)\r\n      }\r\n    })\r\n  }\r\n\r\n  return trigger ? (\r\n    <div className=\"dislike_popup\">\r\n      <div className=\"dislike_inner\">\r\n        <button className=\"close_btn\" onClick={() => setTrigger(state => !state)}>\r\n          close\r\n        </button>\r\n        <label>Title</label>\r\n        <input onChange={onTitleChange} value={Title} />\r\n        <label>Description</label>\r\n        <textarea onChange={onDescriptionChange} value={Description} />\r\n        <button className=\"btn\" onClick={onSubmit}>\r\n          신고하기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default DislikePopup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./HistoryMap.css\";\r\nimport { message, Button, Modal } from \"antd\";\r\nimport { SVG } from \"../../svg/icon\";\r\n\r\nfunction MapToLeft() {\r\n  var map = document.getElementsByClassName(\"HistoryMap_inner\")[0];\r\n  var computedStyle = window.getComputedStyle(map);\r\n  var transform = computedStyle.getPropertyValue(\"transform\");\r\n  var new_position =\r\n    transform !== \"none\" ? parseInt(transform.split(\",\")[4]) : 0;\r\n\r\n  map.style.transform = `translate(${new_position + 250}px, 0px)`;\r\n}\r\n\r\nfunction MapToRight() {\r\n  var map = document.getElementsByClassName(\"HistoryMap_inner\")[0];\r\n  var computedStyle = window.getComputedStyle(map);\r\n  var transform = computedStyle.getPropertyValue(\"transform\");\r\n  var new_position =\r\n    transform !== \"none\" ? parseInt(transform.split(\",\")[4]) : 0;\r\n\r\n  map.style.transform = `translate(${new_position - 250}px, 0px)`;\r\n}\r\n\r\nfunction GoToScene(props) {\r\n  const { userhistory, gameId, sceneId, GoScene,setScene } = props;\r\n  const data = { data: { sceneIndex: GoScene - 1 } };\r\n  Axios.post(\"/api/game/refreshHistory\", data).then((response) => {\r\n    if (!response.data.success) {\r\n      message.error(\"Scene 변경 요청 실패\");\r\n    } else {\r\n      const close = document.getElementsByClassName(\"close_btn\");\r\n      for (let i = close.length - 1; i >= 0; i--) {\r\n        close[i].click();\r\n      }\r\n      // console.log(setScene)\r\n      setScene({});\r\n      userhistory.replace({\r\n        pathname: `/gameplay`,\r\n        state: {\r\n          sceneId: sceneId[targetScene - 1],\r\n          gameId: gameId,\r\n        },\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nlet sceneInfo = [];\r\nlet targetScene = 1;\r\n\r\nfunction HistoryMapPopup(props) {\r\n  const { userhistory, setTrigger, setScene } = props;\r\n  const { gameId, sceneId } = props.history;\r\n  const [SceneInfo, setSceneInfo] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = (target) => {\r\n    targetScene = target;\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    GoToScene({ userhistory, gameId, sceneId, targetScene });\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.trigger) {\r\n      Axios.get(\"api/game/simple-scene-info\").then((response) => {\r\n        sceneInfo = response.data.sceneinfo;\r\n        setSceneInfo(sceneInfo);\r\n      });\r\n      return () => {\r\n        setSceneInfo([]);\r\n      };\r\n    }\r\n  }, [props.trigger]);\r\n\r\n  function close_button() {\r\n    setTrigger(false);\r\n  }\r\n\r\n  const HistoryMap_scenes = SceneInfo.map((scene, index) => {\r\n    return (\r\n      <div\r\n        className=\"HistoryMap_scene\"\r\n        key={index + 1}\r\n        onClick={() => showModal(index + 1)}\r\n      >\r\n        <div className=\"HistoryMap_scene_num\"> #{index + 1}</div>\r\n        <img className=\"HistoryMap_scene_img\" src={scene.background} />\r\n        <div className=\"HistoryMap_scene_name\">{scene.name}:</div>\r\n        <div className=\"HistoryMap_scene_text\">\"{scene.script}\"</div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return props.trigger ? (\r\n    <div className=\"HistoryMap_popup\">\r\n      {/* <button className=\"close_btn\" onClick={() => close_button()}>\r\n        닫기\r\n      </button> */}\r\n      <div className=\"close_btn\" onClick={() => close_button()}>\r\n        <SVG\r\n          className=\"close_btn\"\r\n          src=\"close_2\"\r\n          width=\"45\"\r\n          height=\"50\"\r\n          color=\"#F5F5F5\"\r\n        ></SVG>\r\n      </div>\r\n\r\n      <div className=\"toleft_btn\" onClick={MapToLeft}>\r\n        <SVG\r\n          className=\"toleft_btn\"\r\n          src=\"arrow_1\"\r\n          width=\"45\"\r\n          height=\"50\"\r\n          color=\"#F5F5F5\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"toright_btn\" onClick={MapToRight}>\r\n        <SVG\r\n          className=\"toright_btn\"\r\n          src=\"arrow_1\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          color=\"#F5F5F5\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"HistoryMap_inner\"\r\n        style={{ width: sceneInfo.length * 15 + \"%\" }}\r\n      >\r\n        {HistoryMap_scenes}\r\n      </div>\r\n\r\n      <Modal\r\n        title=\"경고\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <p>\r\n          {targetScene} 번째 씬으로 돌아갑니다. 돌아가려는 씬까지의 기록은\r\n          삭제됩니다.\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default HistoryMapPopup;\r\n","import React, { useState } from \"react\";\r\nimport \"./LoadingPage.css\";\r\nimport { useSelector } from \"react-redux\";\r\nconst LOADING_TYPE = {\r\n  NONE: 0,\r\n  BASIC: 1,\r\n  SLIDELEFT: 2,\r\n  SLIDERIGHT: 3,\r\n  SLIDEUP: 4,\r\n  SLIDEDOWN: 5,\r\n  BLACKIN: 6,\r\n};\r\n\r\nconst LoadingPage = () => {\r\n  const loadingType = useSelector((state) => state.gameplay.loadingType);\r\n  switch (loadingType) {\r\n    case LOADING_TYPE.NONE:\r\n      return null;\r\n    case LOADING_TYPE.BASIC:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1.5s ease-out 0s 1 basic\" }}\r\n          className=\"loading_page\"\r\n        >\r\n          <div className=\"loading_icon\">loading.....</div>\r\n        </div>\r\n      );\r\n    case LOADING_TYPE.SLIDELEFT:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideLeft\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDERIGHT:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideRight\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDEUP:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideUp\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDEDOWN:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideDown\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.BLACKIN:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 blackIn\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default LoadingPage;\r\n","import axios from 'axios';\r\nimport {\r\n    LOAD_EMPTY_NUM,\r\n    SAVE_PREV_SCENE\r\n} from './types';\r\n\r\nexport function loadEmptyNum(dataToSubmit){\r\n    const request = dataToSubmit.emptyNum !== undefined ? dataToSubmit.emptyNum : axios.get(`/api/game/getSceneInfo/${dataToSubmit.sceneId}`)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                const scene = response.data.scene;\r\n                return scene.sceneTmp.emptyNum;\r\n            }\r\n        });\r\n\r\n    return {\r\n        type: LOAD_EMPTY_NUM,\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function savePrevScene(dataToSubmit){\r\n    const request = dataToSubmit.prevSceneId;\r\n\r\n    return {\r\n        type: SAVE_PREV_SCENE,\r\n        payload: request\r\n    };\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function useFullscreenStatus(elRef) {\r\n  const [isFullscreen, setIsFullscreen] = React.useState(\r\n    document[getBrowserFullscreenElementProp()] != null\r\n  );\r\n\r\n  const setFullscreen = () => {\r\n    if (elRef.current == null) return;\r\n\r\n    elRef.current\r\n      .requestFullscreen()\r\n      .then(() => {\r\n        setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n      })\r\n      .catch(() => {\r\n        setIsFullscreen(false);\r\n      });\r\n  };\r\n\r\n  React.useLayoutEffect(() => {\r\n    document.onfullscreenchange = () =>\r\n      setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n\r\n    return () => (document.onfullscreenchange = undefined);\r\n  });\r\n\r\n  return [isFullscreen, setFullscreen];\r\n}\r\n\r\nfunction getBrowserFullscreenElementProp() {\r\n  if (typeof document.fullscreenElement !== \"undefined\") {\r\n    return \"fullscreenElement\";\r\n  } else if (typeof document.mozFullScreenElement !== \"undefined\") {\r\n    return \"mozFullScreenElement\";\r\n  } else if (typeof document.msFullscreenElement !== \"undefined\") {\r\n    return \"msFullscreenElement\";\r\n  } else if (typeof document.webkitFullscreenElement !== \"undefined\") {\r\n    return \"webkitFullscreenElement\";\r\n  } else {\r\n    throw new Error(\"fullscreenElement is not supported by this browser\");\r\n  }\r\n}\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./TreeMap.css\";\r\nimport { message } from \"antd\";\r\n\r\nfunction GoToScene(props) {\r\n  const { userhistory, gameId, sceneId, GoScene } = props;\r\n  const data = { data: { sceneIndex: GoScene - 1 } };\r\n  Axios.post(\"/api/game/refreshHistory\", data).then((response) => {\r\n    if (!response.data.success) {\r\n      message.error(\"Scene 변경 요청 실패\");\r\n    } else {\r\n      userhistory.push(`/gameplay/${gameId}/${sceneId[GoScene - 1]}`);\r\n      const close = document.getElementsByClassName(\"close_btn\");\r\n      for (let i = close.length - 1; i >= 0; i--) {\r\n        close[i].click();\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction GetSceneInfo(props) {\r\n  const { index, scene, setSceneInfo } = props;\r\n  Axios.get(`/api/game/getSceneInfo/${scene}`).then((response) => {\r\n    if (!response.data.success) {\r\n      alert(\"Scene 정보 없음...\");\r\n    } else {\r\n      const cutList = response.data.scene.cutList;\r\n      const lastcut = cutList[cutList.length - 1];\r\n      setSceneInfo({\r\n        sceneindex: index,\r\n        background: lastcut.background,\r\n        name: lastcut.name,\r\n        script: lastcut.script,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction useConstructor(callBack = () => {}) {\r\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\r\n  if (hasBeenCalled) return;\r\n  callBack();\r\n  setHasBeenCalled(true);\r\n}\r\n\r\n//* 나중에 스키마로 만들어야함\r\nconst SceneDepth = 4;\r\nconst sceneMap = [\r\n  { sceneId: 1, link: null },\r\n  { sceneId: 2, link: null },\r\n  { sceneId: 3, link: null },\r\n  { sceneId: 4, link: null },\r\n  { sceneId: null, link: null },\r\n  { sceneId: null, link: null },\r\n  { sceneId: 7, link: null },\r\n  { sceneId: 8, link: null },\r\n  { sceneId: 9, link: null },\r\n  { sceneId: 10, link: null },\r\n  { sceneId: 11, link: null },\r\n  { sceneId: 12, link: null },\r\n  { sceneId: 13, link: null },\r\n  { sceneId: 14, link: null },\r\n  { sceneId: 15, link: null },\r\n  { sceneId: 16, link: null },\r\n  { sceneId: 17, link: null },\r\n  { sceneId: 18, link: null },\r\n  { sceneId: 19, link: null },\r\n  { sceneId: 20, link: null },\r\n  { sceneId: 21, link: null },\r\n  { sceneId: 22, link: null },\r\n];\r\n\r\nconst nodeWidth = 10;\r\nconst nodeHeight = 5;\r\n\r\nlet pivot = [0, 0];\r\nlet position = [50, 0];\r\nlet drag = false;\r\n\r\nfunction TreeMapPopup(props) {\r\n  const { trigger, userhistory, setTrigger} = props;\r\n  const { gameId, sceneId } = props.history;\r\n\r\n  const [Position, setPosition] = useState();\r\n  \r\n  useConstructor(() => {\r\n    setPosition(position);\r\n    // console.log(\"constructor\");\r\n    // console.log(userhistory);\r\n  });\r\n\r\n  useEffect(() => {\r\n    var container = document.getElementsByClassName(\"TreeMap_popup\");\r\n    if (trigger) {\r\n      container[0].addEventListener(\"mousedown\", mouseDown);\r\n      container[0].addEventListener(\"mouseup\", mouseUp);\r\n      container[0].addEventListener(\"mousemove\", mouseMove);\r\n    } else {\r\n      if (container[0]) {\r\n        container[0].removeEventListener(\"mousedown\", mouseDown);\r\n        container[0].removeEventListener(\"mouseup\", mouseUp);\r\n        container[0].removeEventListener(\"mousemove\", mouseMove);\r\n      }\r\n    }\r\n  }, [trigger]);\r\n\r\n  function close_button() {\r\n    setTrigger(false);\r\n  }\r\n\r\n  function mouseDown(e) {\r\n    pivot = [e.pageX, e.pageY];\r\n    drag = true;\r\n    e.preventDefault();\r\n  }\r\n\r\n  function mouseUp(e) {\r\n    drag = false;\r\n    e.preventDefault();\r\n  }\r\n\r\n  function mouseMove(e) {\r\n    if (drag) {\r\n      if (pivot[0] !== e.pageX || pivot[1] !== e.pageY) {\r\n        position = [\r\n          position[0] - (pivot[0] - e.pageX),\r\n          position[1] - (pivot[1] - e.pageY),\r\n        ];\r\n        setPosition(position);\r\n        pivot = [e.pageX, e.pageY];\r\n      }\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  let depth = 1;\r\n  let cnt_limit = 1;\r\n  let cnt = 0;\r\n  const TreeMap_nodes = sceneMap.map((scene, index) => {\r\n    if (cnt === cnt_limit) {\r\n      depth += 1;\r\n      cnt = 0;\r\n      cnt_limit = cnt_limit * 4;\r\n    }\r\n    cnt += 1;\r\n\r\n    // console.log(index, depth);\r\n\r\n    return (\r\n      <div\r\n        className=\"TreeMap_nodeContainer\"\r\n        style={{\r\n          width: (1 / SceneDepth) * 100 + \"%\",\r\n          height: (1 / cnt_limit) * 100 + \"%\",\r\n          left: ((depth - 1) / SceneDepth) * 100 + \"%\",\r\n          top: ((cnt - 1) / cnt_limit) * 100 + \"%\",\r\n        }}\r\n      >\r\n        {/* {index} */}\r\n        <div\r\n          className=\"TreeMap_node\"\r\n          style={{ width: 1 +\"rem\", height: 1+\"rem\" }}\r\n\r\n        />\r\n        {depth !== SceneDepth ? (\r\n          <Fragment>\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"12.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"37.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"62.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"87.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"50%\", top: \"50%\" }}\r\n            />\r\n            <hr className=\"TreeMap_nodeLine_vertical\" />\r\n          </Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return trigger ? (\r\n    <div className=\"TreeMap_popup\">\r\n      <button className=\"close_btn\" onClick={() => close_button()}>\r\n        close\r\n      </button>\r\n      <div\r\n        className=\"TreeMap_inner\"\r\n        style={{\r\n          width: nodeWidth * SceneDepth + \"%\",\r\n          height: nodeHeight * Math.pow(4, SceneDepth - 1) + \"%\",\r\n          left: Position[0],\r\n          top: Position[1],\r\n        }}\r\n      >\r\n        {TreeMap_nodes}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default TreeMapPopup;\r\n","import \"./GamePlayPage.css\";\r\nimport 'react-rangeslider/lib/index.css'\r\nimport \"./GamePlaySlider.css\";\r\nimport GameCharacterBlock from \"./GameCharacterBlock\";\r\nimport { TextBlock, TextBlockChoice } from \"./TextBlock.js\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport DislikePopup from \"./Dislike\";\r\nimport HistoryMapPopup from \"./HistoryMap\";\r\nimport LoadingPage from \"./LoadingPage\";\r\nimport { message } from \"antd\";\r\nimport { socket } from \"../../App\"\r\nimport { loadEmptyNum, savePrevScene } from \"../../../_actions/sync_actions\"\r\nimport useKey from \"../../functions/useKey\";\r\nimport { gameLoadingPage } from \"../../../_actions/gamePlay_actions\";\r\nimport { navbarControl } from \"../../../_actions/controlPage_actions\";\r\nimport useFullscreenStatus from \"../../../utils/useFullscreenStatus\";\r\nimport { useLocation } from \"react-router\";\r\nimport TreeMapPopup from \"./TreeMap\";\r\nimport { gamePause } from \"../../../_actions/gamePlay_actions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport Slider from 'react-rangeslider'\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport {\r\n  faCheckSquare,\r\n  faCompress,\r\n  faExpand,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst bgm_audio = new Audio();\r\nbgm_audio.volume = 0.5\r\nconst sound_audio = new Audio();\r\nsound_audio.volume = 0.5\r\n\r\nfunction useConstructor(callBack = () => { }) {\r\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\r\n  if (hasBeenCalled) return;\r\n  callBack();\r\n  setHasBeenCalled(true);\r\n}\r\n\r\n//! playscreen\r\nconst ProductScreen = (props) => {\r\n  const location = useLocation();\r\n  \r\n  const { gameId, sceneId } = location.state;\r\n  \r\n  const userHistory = props.history;\r\n  \r\n  const dispatch = useDispatch();\r\n  \r\n  const user = useSelector((state) => state.user);\r\n  const isPause = useSelector((state) => state.gameplay.isPause);\r\n\r\n  const ratio = 1080 / 1920;\r\n\r\n  const [windowWidth, setwindowWidth] = useState(window.innerWidth);\r\n  const [windowHeight, setwindowHeight] = useState(window.innerHeight);\r\n  const [i, setI] = useState(0);\r\n  const [Scene, setScene] = useState({});\r\n  const [Dislike, setDislike] = useState(false);\r\n  const [History, setHistory] = useState({});\r\n  const [HistoryMap, setHistoryMap] = useState(false);\r\n  const [TreeMap, setTreeMap] = useState(false);\r\n  const [lastMotion, setLastMotion] = useState(false)\r\n  const [view, setView] = useState(0);\r\n  const [thumbsUp, setThumbsUp] = useState(0);\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  const prevSceneId = useSelector(state => state.sync.prevSceneId);\r\n\r\n  const maximizableElement = useRef(null);\r\n\r\n  const handleExitFullscreen = () => document.exitFullscreen();\r\n\r\n  let isFullscreen, setIsFullscreen;\r\n  let errorMessage;\r\n\r\n  try {\r\n    [isFullscreen, setIsFullscreen] = useFullscreenStatus(maximizableElement);\r\n  } catch (e) {\r\n    errorMessage = \"Fullscreen not supported\";\r\n    isFullscreen = false;\r\n    setIsFullscreen = undefined;\r\n  }\r\n\r\n  useKey(\"Enter\", handleEnter);\r\n  useKey(\"Space\", handleEnter);\r\n  useKey(\"Digit1\", handleChoice);\r\n  useKey(\"Digit2\", handleChoice);\r\n  useKey(\"Digit3\", handleChoice);\r\n  useKey(\"Digit4\", handleChoice);\r\n\r\n\r\n  useEffect(() => {\r\n    socket.off(\"accept_final_change\");\r\n    socket.on(\"accept_final_change\", data => {\r\n      const { sceneId, title } = data;\r\n\r\n      let newNextList = Scene.nextList ? [...Scene.nextList] : [];\r\n      newNextList.push({ sceneId, script: title });\r\n      const newScene = { ...Scene, nextList: newNextList };\r\n      setScene(newScene);\r\n    })\r\n  }, [Scene])\r\n\r\n  const [volume, setVolume] = useState(0.5)\r\n  const [muted, setMuted] = useState(false)\r\n  const tempVolume = useRef(0.5)\r\n\r\n  const mute = () => {\r\n    if (muted) {\r\n      setMuted(false)\r\n      volumeControl(tempVolume.current)\r\n    } else {\r\n      tempVolume.current = volume\r\n      setMuted(true)\r\n      volumeControl(0)\r\n    }\r\n  }\r\n\r\n  const volumeControl = (volume) => {\r\n    setVolume(volume)\r\n    volume === 0 ? setMuted(true) : setMuted(false)\r\n    bgm_audio.volume = volume\r\n    sound_audio.volume = volume\r\n  }\r\n\r\n  const [isFirstCut, setIsFirstCut] = useState(true);\r\n  function playMusic(i) {\r\n    if (isFirstCut) setIsFirstCut(false);\r\n    if (Scene?.cutList[i]?.bgm.music) {\r\n      //이전 곡과 같은 bgm이 아니라면\r\n      if (\r\n        !(i > 0 && Scene.cutList[i - 1].bgm.music == Scene.cutList[i].bgm.music)\r\n      ) {\r\n        bgm_audio.pause();\r\n        bgm_audio.src = Scene.cutList[i].bgm.music;\r\n        bgm_audio.play();\r\n      }\r\n    }\r\n    if (Scene?.cutList[i]?.sound.music) {\r\n      sound_audio.pause();\r\n\r\n      sound_audio.src = Scene.cutList[i].sound.music;\r\n      sound_audio.play();\r\n    }\r\n  }\r\n\r\n  const [isTyping, setIsTyping] = useState(true);\r\n\r\n\r\n  console.log(\"isTyping!!!\", isTyping)\r\n  function handleEnter(event) {\r\n    //! 타이핑 끝 & 미니맵 X\r\n    if (!isTyping && !isPause) {\r\n      if (i < Scene.cutList.length - 1) {\r\n        playMusic(i + 1);\r\n        setI(i + 1);\r\n        setIsTyping(true);\r\n      }\r\n      else if (i == Scene.cutList.length - 1) {\r\n        //! 엔딩자리\r\n        setLastMotion(true)\r\n        // setIsTyping(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleChoice(event) {\r\n    if (i === Scene.cutList.length - 1 && !isPause) {\r\n      if (Scene.nextList[parseInt(event.key) - 1]) {\r\n        userHistory.replace({\r\n          pathname: `/gameplay`,\r\n          state: {\r\n            sceneId: Scene.nextList[parseInt(event.key) - 1].sceneId,\r\n            gameId: gameId,\r\n          }\r\n        })\r\n      } else {\r\n        if (parseInt(event.key) - 1 === Scene.nextList.length) {\r\n          dispatch(gamePause(true));\r\n          event.preventDefault();\r\n          let choice = document.getElementById(\"choice\");\r\n          if (choice) {\r\n            choice.click();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function onClick_thumbsUp () {\r\n    if(user && user.userData){\r\n        // setUpdate((state) => state+1);\r\n        const variable = {\r\n            userId: user.userData._id,\r\n            objectId: sceneId\r\n        }\r\n        Axios.post(\"/api/thumbsup/\", variable).then((response) =>{\r\n            if (response.data.success){\r\n                setIsClicked(response.data.isClicked);\r\n                setThumbsUp(response.data.thumbsup);\r\n            }\r\n        })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(user && user.userData){\r\n      const variable_thumbsup = {\r\n        objectId: sceneId,\r\n        userId: user.userData._id,\r\n      }\r\n      Axios.post(\"/api/thumbsup/count\", variable_thumbsup).then((response) =>{\r\n        if (response.data.success){\r\n            setIsClicked(response.data.isClicked);\r\n            setThumbsUp(response.data.thumbsup);\r\n        }\r\n      })\r\n      const variable_view = {\r\n          userId: user.userData._id,\r\n          objectId: sceneId\r\n      }\r\n      Axios.post(\"/api/view/\", variable_view).then((response) =>{\r\n          if (response.data.success){\r\n              setView(response.data.view);\r\n          }\r\n      })\r\n    }\r\n  },[sceneId,user])\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"leave room\", { room: prevSceneId });\r\n    socket.emit(\"room\", { room: sceneId });\r\n    // socket.emit(\"exp_val\", {room: sceneId});\r\n    dispatch(savePrevScene({ prevSceneId: sceneId }));\r\n    socket.off(\"empty_num_changed\") //! 매번 열린다.\r\n    socket.on(\"empty_num_changed\", data => {\r\n      dispatch(loadEmptyNum({\r\n        sceneId,\r\n        emptyNum: data.emptyNum\r\n      }));\r\n    })\r\n    socket.emit(\"validate_empty_num\", { scene_id: sceneId })\r\n\r\n  }, [sceneId])\r\n\r\n  //* navigation bar control\r\n  useEffect(() => {\r\n    dispatch(navbarControl(false));\r\n  }, []);\r\n\r\n  //* game pause control\r\n  useEffect(() => {\r\n    if (HistoryMap || Dislike || TreeMap) {\r\n      dispatch(gamePause(true));\r\n    } else {\r\n      dispatch(gamePause(false));\r\n    }\r\n  }, [HistoryMap, Dislike, TreeMap]);\r\n\r\n  useEffect(() => {\r\n    setLastMotion(false)\r\n    console.log(gameId, sceneId);\r\n    Axios.get(`/api/game/getnextscene/${gameId}/${sceneId}`).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          const history = {\r\n            gameId: gameId,\r\n            sceneId: response.data.sceneIdList,\r\n          };\r\n          setIsTyping(true)\r\n          setHistory(history);\r\n          setI(0);\r\n          bgm_audio.pause();\r\n          sound_audio.pause();\r\n          setIsFirstCut(true);\r\n          setScene(response.data.scene);\r\n          dispatch(gamePause(false));\r\n          dispatch(gameLoadingPage(0));\r\n          dispatch(gameLoadingPage(6));\r\n        } else {\r\n          message.error(\"Scene 정보가 없습니다.\");\r\n          props.history.replace(`/game/${gameId}`);\r\n        }\r\n      }\r\n    );\r\n  }, [sceneId]);\r\n\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setwindowWidth(window.innerWidth);\r\n      setwindowHeight(window.innerHeight);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n  }, [window.innerWidth, window.inner]);\r\n\r\n  const padding = isFullscreen ? 0.0 : 0.1;\r\n  const minSize = 300;\r\n\r\n  let newScreenSize;\r\n  if (windowWidth * ratio > windowHeight) {\r\n    newScreenSize = {\r\n      width: `${(windowHeight * (1 - 2 * padding)) / ratio}px`,\r\n      height: `${windowHeight * (1 - 2 * padding)}px`,\r\n      minWidth: `${minSize / ratio}px`,\r\n      minHeight: `${minSize}px`,\r\n    };\r\n  } else {\r\n    newScreenSize = {\r\n      width: `${windowWidth * (1 - 2 * padding)}px`,\r\n      height: `${windowWidth * (1 - 2 * padding) * ratio}px`,\r\n      minWidth: `${minSize}px`,\r\n      minHeight: `${minSize * ratio}px`,\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(loadEmptyNum({\r\n      sceneId,\r\n    }));\r\n\r\n    return () => {\r\n      bgm_audio.pause();\r\n      sound_audio.pause();\r\n    };\r\n  }, []);\r\n\r\n\r\n  if (Scene?.cutList) {\r\n    if (i == 0 && isFirstCut) playMusic(0);\r\n    return (\r\n      <div\r\n        className={`${isFullscreen\r\n          ? \"gamePlay__container_fullscreen\"\r\n          : \"gamePlay__container\"\r\n          }`}\r\n        ref={maximizableElement}\r\n      >\r\n        <div\r\n          className={`${isFullscreen\r\n            ? \"gamePlay__mainContainer_fullscreen\"\r\n            : \"gamePlay__mainContainer\"\r\n            }`}\r\n        >\r\n          <div\r\n            className={`${isFullscreen\r\n              ? \"backgroundImg_container_fullscreen\"\r\n              : \"backgroundImg_container\"\r\n              }`}\r\n            style={newScreenSize}\r\n            onClick={(event) => handleEnter(event)}\r\n          >\r\n            <LoadingPage />\r\n            {(Scene.cutList[i] && Scene.cutList[i].background) ?\r\n              <img\r\n                className=\"backgroundImg\"\r\n                src={Scene.cutList[i].background}\r\n                alt=\"Network Error\"\r\n              />\r\n              : (\r\n                <div></div>\r\n              )}\r\n            <GameCharacterBlock\r\n              characterList={Scene.cutList[i].characterList}\r\n            />\r\n\r\n\r\n            {i === Scene.cutList.length - 1 ? (\r\n              <TextBlockChoice\r\n                game_id={gameId}\r\n                cut_name={Scene.cutList[i].name}\r\n                cut_script={Scene.cutList[i].script}\r\n                scene_depth={Scene.depth}\r\n                scene_id={Scene._id}\r\n                scene_next_list={Scene.nextList}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n                isEnding={Scene.isEnding}\r\n                isLastMotion={lastMotion}\r\n                theme={Scene.theme}\r\n                setScene={setScene}\r\n              />\r\n            ) :\r\n              <TextBlock\r\n                cut_name={Scene.cutList[i].name}\r\n                cut_script={Scene.cutList[i].script}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n                theme={Scene.theme}\r\n              />\r\n            }\r\n\r\n            <HistoryMapPopup\r\n              userhistory={userHistory}\r\n              history={History}\r\n              trigger={HistoryMap}\r\n              setTrigger={setHistoryMap}\r\n              setScene={setScene}\r\n            />\r\n            <TreeMapPopup\r\n              userhistory={userHistory}\r\n              history={History}\r\n              trigger={TreeMap}\r\n              setTrigger={setTreeMap}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"gamePlay__btn_container\">\r\n          <div\r\n            className=\"gamePlay__btn\"\r\n            onClick={mute}\r\n          >\r\n            {muted ? <VolumeOffIcon /> : <VolumeUpIcon />}\r\n          </div>\r\n          <div\r\n            style={{ width: \"80px\" }} //slider width\r\n          >\r\n            <Slider\r\n              min={0}\r\n              max={1}\r\n              step={0.02}\r\n              value={volume}\r\n              onChange={event => {\r\n                volumeControl(event)\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            {i === Scene.cutList.length - 1 &&\r\n            <>\r\n              <button\r\n                className={isClicked ? \"gamePlay__btnClicked\" : \"gamePlay__btn\"}\r\n                onClick={onClick_thumbsUp}\r\n              >\r\n                좋아요: {thumbsUp}\r\n              </button>\r\n              <button\r\n                className=\"gamePlay__btn\"\r\n              >\r\n                조회수: {view}\r\n              </button>\r\n            </>\r\n            }\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => setHistoryMap((state) => !state)}\r\n            >\r\n              미니맵\r\n            </button>\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => {\r\n                setTreeMap((state) => !state);\r\n              }}\r\n            >\r\n              트리맵\r\n            </button>\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => setDislike((state) => !state)}\r\n            >\r\n              신고\r\n            </button>\r\n          </div>\r\n          {errorMessage ? (\r\n            <button\r\n              onClick={() =>\r\n                alert(\r\n                  \"Fullscreen is unsupported by this browser, please try another browser.\"\r\n                )\r\n              }\r\n              className=\"gamePlay__btn\"\r\n            >\r\n              {errorMessage}\r\n            </button>\r\n          ) : isFullscreen ? (\r\n            <button onClick={handleExitFullscreen} className=\"gamePlay__btn\">\r\n              <FontAwesomeIcon icon={faCompress} />\r\n            </button>\r\n          ) : (\r\n            <button onClick={setIsFullscreen} className=\"gamePlay__btn\">\r\n              <FontAwesomeIcon icon={faExpand} />\r\n            </button>\r\n          )}\r\n        </div>\r\n        <DislikePopup\r\n          sceneId={sceneId}\r\n          gameId={gameId}\r\n          trigger={Dislike}\r\n          setTrigger={setDislike}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    // dispatch(gameLoadingPage(0));\r\n    // dispatch(gameLoadingPage(1));\r\n\r\n    return (\r\n      <div className=\"loader_container\">\r\n        <div class=\"loader\">Loading...</div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default ProductScreen;\r\n","import React from 'react'\r\n\r\nfunction BackgroundImg({imgUrl, setBackgroundImg}) {\r\n\r\n  const onClick_img = () => {\r\n    setBackgroundImg(imgUrl);\r\n  }\r\n\r\n  return (\r\n    <div onClick={onClick_img}>\r\n      <img src={`${imgUrl}`} alt=\"img\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BackgroundImg\r\n","import { Button } from 'antd';\r\nimport React, { memo } from 'react'\r\nimport './BackgroundSideBar.css'\r\nimport BackgroundImg from './BackgroundImg'\r\nimport './BackgroundSideBar.css'\r\n\r\nfunction BackgroundSideBar({ gameDetail, setBackgroundImg, setMakeModalState }) {\r\n\r\n  const renderBackground = gameDetail.background.map((background, index) => {\r\n    return <div className=\"background\" key={`${index}`}>\r\n      <BackgroundImg imgUrl={background.image} setBackgroundImg={setBackgroundImg} />\r\n    </div>\r\n  })\r\n\r\n  return (\r\n    <div className=\"sidebar__container\">\r\n      <div>{renderBackground}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(BackgroundSideBar)\r\n","import { message } from \"antd\";\r\nimport {\r\n  SELECT_CHARACTER,\r\n  DETACH_CHARACTER,\r\n  PUSH_CHARACTER,\r\n  POP_CHARACTER,\r\n  UPDATE_CHARACTER,\r\n  SET_CHARACTER_LIST\r\n} from \"./types\";\r\n\r\n\r\nexport function selectCharacter(character) {\r\n  return {\r\n    type: SELECT_CHARACTER,\r\n    payload: character,\r\n  };\r\n}\r\n\r\n\r\nexport function detachCharacter() {\r\n  return {\r\n    type: DETACH_CHARACTER,\r\n  };\r\n}\r\n\r\n\r\nexport function popCharacter(dataToSubmit) {\r\n  const { oldArray, index } = dataToSubmit;\r\n  let request;\r\n  for (let i = 0; i < oldArray.length; i++) {\r\n    if (oldArray[i].index === index) {\r\n      message.info(\"삭제되었습니다.\");\r\n      oldArray.splice(i, 1)\r\n      request = [...oldArray]\r\n      break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: POP_CHARACTER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\n\r\nexport function pushCharacter(dataToSubmit) {\r\n  const { oldArray, characterSchema } = dataToSubmit;\r\n  let request;\r\n\r\n  for (let i = 0; i < oldArray?.length; i++) {\r\n    if (oldArray[i].index === characterSchema.index) {\r\n      oldArray.splice(i, 1)\r\n      request = [...oldArray]\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (!request && oldArray?.length >= 3) {\r\n    message.info(\"인물은 최대 세명까지 추가 가능합니다.\");\r\n    request = oldArray;\r\n  }\r\n\r\n  request = request ? request : [...(oldArray ? oldArray : []), characterSchema]\r\n\r\n  return {\r\n    type: PUSH_CHARACTER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function updateCharacter(dataToSubmit) {\r\n  const { oldArray, data, index } = dataToSubmit;\r\n  const request = [\r\n    ...oldArray.slice(0, index),\r\n    {\r\n      ...oldArray[index],\r\n      ...data\r\n    },\r\n    ...oldArray.slice(index + 1, 4)\r\n  ]\r\n\r\n  return {\r\n    type: UPDATE_CHARACTER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function setCharacterList(dataToSubmit) {\r\n  const { CharacterList } = dataToSubmit;\r\n  const request = CharacterList\r\n\r\n  return {\r\n    type: SET_CHARACTER_LIST,\r\n    payload: request,\r\n  };\r\n}","import React from 'react'\r\nimport { message } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { selectCharacter } from '../../../../../_actions/characterSelected_actions';\r\n\r\nfunction CharacterImg({ character, index }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick_selectCharacter = () => {\r\n    dispatch(selectCharacter({ ...character, index: index }));\r\n  }\r\n\r\n  const img = new Image();\r\n  img.src = character.image_array[0];\r\n  return (\r\n    <div className=\"characterSidebar_box\" onClick={onClick_selectCharacter}>\r\n      <img\r\n        src={character.image_array[0]}\r\n        alt=\"img\"\r\n        className={img.width > img.height ?\r\n          \"characterSidebar_Image_width\" : \"characterSidebar_Image_height\"}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterImg\r\n","import { Button } from 'antd';\r\nimport React, { memo, useEffect } from 'react'\r\nimport './CharacterSideBar'\r\n\r\nimport CharacterImg from './CharacterImg'\r\nimport './CharacterSideBar.css'\r\n\r\n\r\nfunction CharacterSideBar({ gameDetail, setName }) {\r\n\r\n  const renderCharacter = gameDetail.character.map((character, index) => {\r\n    return <div className=\"character\" key={`${index}`}>\r\n      <CharacterImg\r\n        character={character}\r\n        index={index}\r\n        setName={setName} />\r\n    </div>\r\n  })\r\n\r\n  return (\r\n    <div className=\"characterSidebar__container\">\r\n      {renderCharacter}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CharacterSideBar)\r\n","import React from \"react\";\r\nimport { LOCAL_HOST } from \"../../../../Config\"\r\n\r\nfunction BgmFile({ bgm_audio, bgm, setBgmFile }) {\r\n    const onClick_music = () => {\r\n        setBgmFile(bgm);\r\n        bgm_audio.src = bgm.music;\r\n        bgm_audio.play();\r\n    };\r\n\r\n    return (\r\n        <div onClick={onClick_music}>\r\n            <img src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`} alt=\"img\" />\r\n            {bgm.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BgmFile;\r\n","import { Button } from 'antd';\r\nimport React, { memo } from \"react\";\r\nimport \"./BgmSideBar.css\";\r\n\r\nimport BgmFile from \"./BgmFile\";\r\n\r\nfunction BgmSideBar({ gameDetail, bgm_audio, setBgmFile, setMakeModalState }) {\r\n\r\n    const renderBgm = gameDetail.bgm.map((bgm, index) => {\r\n        return (\r\n            <div className=\"bgm\" key={`${index}`}>\r\n                <BgmFile\r\n                    bgm_audio={bgm_audio}\r\n                    bgm={bgm}\r\n                    setBgmFile={setBgmFile}\r\n                />\r\n                {/* <img src={`${bgm.image}`} alt=\"img\"/> */}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"sidebar__container\">\r\n            <div>{renderBgm}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(BgmSideBar);\r\n","import React from \"react\";\r\nimport { LOCAL_HOST } from \"../../../../Config\"\r\n\r\nfunction SoundFile({ sound_audio, sound, setSoundFile }) {\r\n    const onClick_music = () => {\r\n        setSoundFile(sound);\r\n        sound_audio.src = sound.music;\r\n        sound_audio.play();\r\n    };\r\n\r\n    return (\r\n        <div onClick={onClick_music}>\r\n            <img src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`} alt=\"img\" />\r\n            {sound.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundFile;\r\n","import { Button } from 'antd';\r\nimport React, { memo } from \"react\";\r\nimport \"./SoundSideBar.css\";\r\n\r\nimport SoundFile from \"./SoundFile\";\r\n\r\nfunction SoundSideBar({ gameDetail, sound_audio, setSoundFile, setMakeModalState }) {\r\n\r\n    const renderSound = gameDetail.sound.map((sound, index) => {\r\n        return (\r\n            <div className=\"sound\" key={`${index}`}>\r\n                <SoundFile\r\n                    sound_audio={sound_audio}\r\n                    sound={sound}\r\n                    setSoundFile={setSoundFile}\r\n                />\r\n                {/* <img src={`${sound.image}`} alt=\"img\"/> */}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"sidebar__container\">\r\n            <div>{renderSound}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(SoundSideBar);\r\n","import React from \"react\";\r\nimport \"../SceneMakeModal.css\";\r\n\r\nconst SceneMakeModalTab = ({ setTag, tag }) => {\r\n  return (\r\n    <div className=\"tabs\">\r\n      <div\r\n        className={`${tag === 1 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(1)}>\r\n        Character\r\n          </div>\r\n      <div\r\n        className={`${tag === 2 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(2)}>\r\n        Background\r\n          </div>\r\n      <div\r\n        className={`${tag === 3 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(3)}>\r\n        Bgm\r\n          </div>\r\n      <div\r\n        className={`${tag === 4 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(4)}>\r\n        Sound\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\nexport default SceneMakeModalTab;\r\n","import React from \"react\";\r\nimport { FileAddOutlined } from '@ant-design/icons';\r\nimport Dropzone from \"react-dropzone\";\r\nimport \"./MyDropzone.css\";\r\n\r\n\r\nfunction MyDropzone({ onDrop, multiple, maxSize, accept, blobURL }) {\r\n    return <Dropzone\r\n        onDrop={onDrop}\r\n        multiple={multiple}\r\n        maxSize={maxSize} // 10MB + 1\r\n\r\n        // accept=\"image/*,audio/*,video/*\"\r\n        accept={accept}\r\n    >\r\n\r\n        {({ getRootProps, getInputProps }) => (\r\n            <div className=\"dropzone\" {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                {blobURL ? (\r\n                    <div className = \"thumbnail__container\">\r\n                        <img\r\n                            className=\"thumbnail__img\"\r\n                            src={blobURL}\r\n                            alt=\"thumbnail\"\r\n                        />\r\n\r\n                    </div>\r\n                    )\r\n                :\r\n                <>\r\n                        <div><p className=\"thumbnail__msg\"><b>Click or Drop</b></p>  </div>\r\n                    <FileAddOutlined className=\"dropzone-icon\" />\r\n                </>\r\n                }\r\n            </div>\r\n        )}\r\n    </Dropzone>\r\n\r\n}\r\n\r\nexport default MyDropzone;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { message, Form, Input } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport { LeftCircleTwoTone, RightCircleTwoTone } from '@ant-design/icons';\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./CharacterTab.css\";\r\nimport useMouse from \"../../../../functions/useMouse\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction CharacterTab({ blobGame, setBlobGame, charPageNum, setCharFileQueue, setCharBlobList }) {\r\n    const [characterCards, setCharacterCards] = useState([]);\r\n    const [isUpdate, setIsUpdate] = useState(0);\r\n    const indexNum = useRef(0);\r\n\r\n    const onNameChange = (event) => {\r\n        setBlobGame(game => {\r\n            game.character[charPageNum.current].name = event.currentTarget.value\r\n            return game\r\n        })\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setBlobGame(game => {\r\n            game.character[charPageNum.current].description = event.currentTarget.value\r\n            return game\r\n        })\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            let curURL = URL.createObjectURL(files[i])\r\n            setCharBlobList(oldArray => [...oldArray, curURL])\r\n\r\n            //new Character\r\n            if (indexNum.current === \"-1\") {\r\n                setBlobGame(game => {\r\n                    game.character = [...game.character, {\r\n                        name: \"\",\r\n                        description: \"\",\r\n                        image_array: [curURL],\r\n                    }]\r\n                    return game\r\n                })\r\n                indexNum.current = blobGame.character.length - 1\r\n            }\r\n            else {\r\n                setBlobGame(game => {\r\n                    game.character[indexNum.current].image_array = [...game.character[indexNum.current].image_array, curURL]\r\n                    return game\r\n                })\r\n            }\r\n        }\r\n        setCharFileQueue(oldArray => [...oldArray, { index: Number(indexNum.current), array: files }])\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (blobGame.character && charPageNum.current < blobGame.character.length) {\r\n            const cards = blobGame.character[charPageNum.current].image_array.map((image, index) => {\r\n                return (\r\n                    <div\r\n                        id={charPageNum.current}\r\n                        className=\"largeBox\" key={index}\r\n                    >\r\n                        <img className=\"smallBox\"\r\n                            src={image}\r\n                            alt=\"img\"\r\n                        />\r\n\r\n                        {index === 0 &&\r\n                            <Form><label>이름</label>\r\n                                <Input onChange={onNameChange} value={blobGame.character[charPageNum.current].name} />\r\n\r\n                                <label>상세설정</label>\r\n                                <TextArea onChange={onDescriptionChange} value={blobGame.character[charPageNum.current].description} />\r\n\r\n                                {/* <label>(혈액형/좋아하는 것 등 이모지넣을 수 있는 공간?)</label> */}\r\n                            </Form>\r\n                        }\r\n\r\n                        {(index === blobGame.character[charPageNum.current].image_array.length - 1) &&\r\n                            <MyDropzone\r\n                                onDrop={onDrop}\r\n                                multiple={true}\r\n                                maxSize={10485761} // 10MB + 1\r\n                                accept=\"image/*\"\r\n                            />}\r\n                    </div>\r\n                )\r\n            })\r\n            setCharacterCards(cards)\r\n        } else {\r\n            setCharacterCards(\"\")\r\n        }\r\n\r\n    }, [isUpdate, blobGame]);\r\n\r\n    useMouse(\"mousedown\", handleMouse)\r\n    function handleMouse(event) {\r\n        for (var i = 0; i < event.path.length; i++) {\r\n            if (event.path[i].id) {\r\n                indexNum.current = event.path[i].id\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"character-container\">\r\n                {characterCards !== 0 && <div>{characterCards}</div>}\r\n            </div>\r\n            {\r\n                blobGame.character && charPageNum.current === blobGame.character.length &&\r\n                <div id={-1}>\r\n                    <MyDropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={10485761} // 10MB + 1\r\n                        accept=\"image/*\"\r\n                    />\r\n                </div>\r\n            }\r\n            {\r\n                charPageNum.current !== 0 && <LeftCircleTwoTone\r\n                    style={{ fontSize: \"3rem\" }}\r\n                    onClick={() => {\r\n                        charPageNum.current--\r\n                        setIsUpdate(num => num + 1)\r\n                    }}\r\n                    twoToneColor=\"#52c41a\" />\r\n            }\r\n            {\r\n                blobGame.character && charPageNum.current !== blobGame.character.length &&\r\n                <RightCircleTwoTone\r\n                    style={{ fontSize: \"3rem\" }}\r\n                    onClick={() => {\r\n                        charPageNum.current++\r\n                        setIsUpdate(num => num + 1)\r\n                    }}\r\n                    twoToneColor=\"#52c41a\" />\r\n            }\r\n            {blobGame.character && <div> {charPageNum.current}/{blobGame.character.length}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CharacterTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./BackgroundTab.css\";\r\n\r\nfunction BackgroundTab({ game, setFileQueue, setTypeQueue, setBackBlobList, backBlobList }) {\r\n    const [backgroundCards, setBackgroundCards] = useState([]);\r\n    const [blobCards, setBlobCards] = useState([]);\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 1])\r\n            setBackBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (game.background)\r\n            setBackgroundCards(game.background.map((element, index) => {\r\n                return <div className=\"largeBox1\" key={index}>\r\n                    <img className=\"smallBox12\"\r\n                        // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\r\n                        src={element.image}\r\n                        alt=\"img\"\r\n                    />\r\n                </div>\r\n            }))\r\n    }, [game]);\r\n\r\n    useEffect(() => {\r\n        if (backBlobList)\r\n            setBlobCards(backBlobList.map((element, index) => {\r\n                return <div className=\"largeBox1\" key={index}>\r\n                    <img className=\"smallBox12\"\r\n                        // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\r\n                        src={element}\r\n                        alt=\"img\"\r\n                    />\r\n                </div>\r\n            }))\r\n    }, [backBlobList]);\r\n\r\n    return (\r\n        <div>\r\n            <MyDropzone\r\n                onDrop={onDrop}\r\n                multiple={true}\r\n                maxSize={10485761} // 10MB + 1\r\n                accept=\"image/*\"\r\n            >\r\n            </MyDropzone>\r\n            <div className=\"background-container\">\r\n                {backgroundCards !== 0 && <div>{backgroundCards}</div>}\r\n                {blobCards !== 0 && <div>{blobCards}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackgroundTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./MusicTab.css\";\r\nimport { LOCAL_HOST } from \"../../../../Config\";\r\nfunction BgmTab({ game, setFileQueue, setTypeQueue, setBgmBlobList, bgmBlobList, setBgmBlobNames, bgmBlobNames }) {\r\n    const [bgmCards, setBgmCards] = useState([]);\r\n    const [blobCards, setBlobCards] = useState([]);\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 음원 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 2])\r\n            setBgmBlobNames(oldArray => [...oldArray, files[i]])\r\n            setBgmBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (game.bgm)\r\n            setBgmCards(game.bgm.map((element, index) => {\r\n                return <div className=\"largeBox13\" key={index}>\r\n                    {(index + 1) % 2 ?\r\n                        <div>\r\n                            <img className=\"smallBox13\"\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {element.name}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <img className=\"smallBox23\"\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {element.name}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }))\r\n    }, [game]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (bgmBlobList)\r\n            setBlobCards(bgmBlobList.map((element, index) => {\r\n                return <div className=\"largeBox13\" key={index}>\r\n                    {(index + 1) % 2 ?\r\n                        <div>\r\n                            <img className=\"smallBox13\"\r\n                                // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {bgmBlobNames[index].name}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <img className=\"smallBox23\"\r\n                                // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {bgmBlobNames[index].name}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }))\r\n    }, [bgmBlobList]);\r\n\r\n    return (\r\n        <div>\r\n            <MyDropzone\r\n                onDrop={onDrop}\r\n                multiple={true}\r\n                maxSize={10485761} // 10MB + 1\r\n                accept=\"audio/*\"\r\n            >\r\n            </MyDropzone>\r\n            <div className=\"music-container\">\r\n                {bgmCards !== 0 && <div>{bgmCards}</div>}\r\n                {blobCards !== 0 && <div>{blobCards}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BgmTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./MusicTab.css\";\r\nimport { LOCAL_HOST } from \"../../../../Config\";\r\n\r\nfunction SoundTab({ game, setFileQueue, setTypeQueue, setSoundBlobList, soundBlobList, setSoundBlobNames, soundBlobNames }) {\r\n    const [soundCards, setSoundCards] = useState([]);\r\n    const [blobCards, setBlobCards] = useState([]);\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 음원 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 3])\r\n            setSoundBlobNames(oldArray => [...oldArray, files[i]])\r\n            setSoundBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (game.sound)\r\n            setSoundCards(game.sound.map((element, index) => {\r\n                return <div className=\"largeBox13\" key={index}>\r\n                    {(index + 1) % 2 ?\r\n                        <div>\r\n                            <img className=\"smallBox13\"\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {element.name}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <img className=\"smallBox23\"\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {element.name}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }))\r\n    }, [game]);\r\n\r\n    useEffect(() => {\r\n        if (soundBlobList)\r\n            setBlobCards(soundBlobList.map((element, index) => {\r\n                return <div className=\"largeBox13\" key={index}>\r\n                    {(index + 1) % 2 ?\r\n                        <div>\r\n                            <img className=\"smallBox13\"\r\n                                // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {soundBlobNames[index].name}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <img className=\"smallBox23\"\r\n                                // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {soundBlobNames[index].name}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }))\r\n    }, [soundBlobList]);\r\n\r\n    return (\r\n        <div>\r\n            <MyDropzone\r\n                onDrop={onDrop}\r\n                multiple={true}\r\n                maxSize={10485761} // 10MB + 1\r\n                accept=\"audio/*\"\r\n            >\r\n            </MyDropzone>\r\n            <div className=\"music-container\">\r\n                {soundCards !== 0 && <div>{soundCards}</div>}\r\n                {blobCards !== 0 && <div>{blobCards}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundTab;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Modal, message } from \"antd\";\r\nimport Axios from \"axios\";\r\n\r\nimport SceneMakeModalTab from \"./Tab/SceneMakeModalTab\";\r\nimport CharacterTab from \"./Tab/CharacterTab\"\r\nimport BackgroundTab from \"./Tab/BackgroundTab\"\r\nimport BgmTab from \"./Tab/BgmTab\"\r\nimport SoundTab from \"./Tab/SoundTab\"\r\nimport { LOCAL_HOST } from \"../../../Config\";\r\nimport _ from \"lodash\";\r\n\r\nconst config = require('../../../../config/key');\r\n\r\nconst SceneMakeModal = ({ gameId, visible, setTag, tag, setReload }) => {\r\n  const [game, setGame] = useState([]);\r\n  const [fileQueue, setFileQueue] = useState([]);\r\n  const [typeQueue, setTypeQueue] = useState([]);\r\n\r\n  const [backBlobList, setBackBlobList] = useState([]);\r\n  const [bgmBlobList, setBgmBlobList] = useState([]);\r\n  const [bgmBlobNames, setBgmBlobNames] = useState([]);\r\n  const [soundBlobList, setSoundBlobList] = useState([]);\r\n  const [soundBlobNames, setSoundBlobNames] = useState([]);\r\n\r\n  const [blobGame, setBlobGame] = useState([]);\r\n  const charPageNum = useRef(0);\r\n  const [charFileQueue, setCharFileQueue] = useState([]);\r\n  const [charBlobList, setCharBlobList] = useState([]);\r\n\r\n\r\n  const variable = { gameId: gameId }\r\n  useEffect(() => {\r\n    Axios.post('/api/game/getgamedetail', variable)\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          setGame(response.data.gameDetail);\r\n          setBlobGame(_.cloneDeep(response.data.gameDetail));\r\n        } else {\r\n          alert('게임 정보를 로딩하는데 실패했습니다.')\r\n        }\r\n      })\r\n  }, [])\r\n\r\n  const revokeBlobList = () => {\r\n    charBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    backBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    bgmBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    soundBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n  }\r\n\r\n\r\n  const cancelUpload = () => {\r\n    revokeBlobList();\r\n    setTag(0)\r\n  }\r\n\r\n  let uploadFlag = false;\r\n  const upload = () => {\r\n    if (!uploadFlag) {\r\n      uploadFlag = true;\r\n      revokeBlobList();\r\n\r\n      uploadCharFiles()\r\n      if (fileQueue.length)\r\n        uploadFiles()\r\n    }\r\n  };\r\n\r\n  const uploadCharFiles = () => {\r\n    if (charFileQueue.length) {\r\n      let fileNum = Array.from({ length: blobGame.character.length }, () => 0);\r\n      let formData = new FormData();\r\n      for (var i = 0; i < blobGame.character.length; i++) {\r\n        //파일 합치기        \r\n        for (var j = 0; j < charFileQueue.length; j++) {\r\n          if (charFileQueue[j].index === i) {\r\n            fileNum[i] += charFileQueue[j].array.length\r\n            charFileQueue[j].array.forEach(function (value) {\r\n              formData.append('files', value);\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const config = {\r\n        header: { \"encrpyt\": \"multipart/form-data\" },\r\n      };\r\n\r\n\r\n      Axios.post(\"/api/game/uploadfile\", formData, config).then(\r\n        (response) => {\r\n          if (response.data.success) {\r\n            uploadCharDB(fileNum, response.data.files);\r\n          } else {\r\n            alert(\"캐릭터 DB 업로드 실패\");\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      uploadCharDB(null, null);\r\n    }\r\n  }\r\n\r\n  const uploadCharDB = (fileNum, files) => {\r\n    let cnt = 0\r\n    for (var i = 0; i < blobGame.character.length; i++) {\r\n      if (!game.character[i])\r\n        game.character.push({\r\n          name: \"\",\r\n          description: \"\",\r\n          image_array: [],\r\n        })\r\n      game.character[i].name = blobGame.character[i].name;\r\n      game.character[i].description = blobGame.character[i].description;\r\n\r\n      if (fileNum) {\r\n        for (var j = cnt; j < cnt + fileNum[i]; j++) {\r\n          console.log(`${config.SERVER}/${files[j].path}`);\r\n          game.character[i].image_array.push( process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[j].path}` : files[j].location)\r\n        }\r\n        cnt += fileNum[i]\r\n      }\r\n    }\r\n    const DBForm = {\r\n      gameId: gameId,\r\n      character: game.character\r\n    };\r\n    console.log(game.character)\r\n    Axios.post(\r\n      \"/api/game/putCharDB\",\r\n      DBForm\r\n    ).then((response) => {\r\n      if (response.data.success) {\r\n        // character파일만 올리는 경우\r\n        if (!fileQueue.length) {\r\n          setReload(reload => reload + 1)\r\n          setTag(0)\r\n        }\r\n        // console.log(\"SceneMakeModal::CharDB 업데이트 성공\")\r\n      } else {\r\n        message.error(\"DB 업데이트 실패\");\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  const uploadFiles = () => {\r\n    //upload file queue\r\n    let formData = new FormData();\r\n    fileQueue.forEach(value => {\r\n      formData.append('files', value);\r\n    })\r\n    const header = {\r\n      header: { \"encrpyt\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n    };\r\n\r\n    Axios.post(\"/api/game/uploadfile\", formData, header).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          uploadDB(response.data.files);\r\n        } else {\r\n          alert(\"업로드 실패\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  const uploadDB = (files) => {\r\n    const DBForm = { gameId: gameId, background: [], bgm: [], sound: [] };\r\n    for (var i = 0; i < files.length; i++) {\r\n      switch (typeQueue[i]) {\r\n        case 1: //background\r\n          DBForm.background.push({\r\n            name: files[i].originalname,\r\n            image: ( process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        case 2:\r\n          DBForm.bgm.push({\r\n            name: files[i].originalname,\r\n            music: ( process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        case 3:\r\n          DBForm.sound.push({\r\n            name: files[i].originalname,\r\n            music: ( process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        default:\r\n          message.error(\"정의되지 않은 업로드 버튼입니다.\");\r\n          break;\r\n      }\r\n    }\r\n    Axios.post(\r\n      \"/api/game/putDB\",\r\n      DBForm\r\n    ).then((response) => {\r\n      if (response.data.success) {\r\n        setReload(reload => reload + 1)\r\n        setTag(0)\r\n      } else {\r\n        message.error(\"DB 업데이트 실패\");\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <Modal className=\"scenemake_modal\"\r\n      visible={visible}\r\n      okText=\"Upload\"\r\n      onCancel={cancelUpload}\r\n      onOk={upload}\r\n      width={1000}\r\n      style={{ top: 20 }}\r\n    >\r\n      <SceneMakeModalTab setTag={setTag} tag={tag} />\r\n      {tag === 1 &&\r\n        <CharacterTab\r\n          blobGame={blobGame}\r\n          setBlobGame={setBlobGame}\r\n          charPageNum={charPageNum}\r\n          setCharFileQueue={setCharFileQueue}\r\n          setCharBlobList={setCharBlobList}\r\n        />\r\n      }\r\n      {tag === 2 &&\r\n        <BackgroundTab\r\n          game={game}\r\n          setFileQueue={setFileQueue}\r\n          setTypeQueue={setTypeQueue}\r\n          setBackBlobList={setBackBlobList}\r\n          backBlobList={backBlobList}\r\n        />\r\n      }\r\n      {tag === 3 &&\r\n        <BgmTab\r\n          game={game}\r\n          setFileQueue={setFileQueue}\r\n          setTypeQueue={setTypeQueue}\r\n          setBgmBlobList={setBgmBlobList}\r\n          bgmBlobList={bgmBlobList}\r\n          setBgmBlobNames={setBgmBlobNames}\r\n          bgmBlobNames={bgmBlobNames}\r\n        />\r\n      }\r\n      {tag === 4 &&\r\n        <SoundTab\r\n          game={game}\r\n          setFileQueue={setFileQueue}\r\n          setTypeQueue={setTypeQueue}\r\n          setSoundBlobList={setSoundBlobList}\r\n          soundBlobList={soundBlobList}\r\n          setSoundBlobNames={setSoundBlobNames}\r\n          soundBlobNames={soundBlobNames}\r\n        />\r\n      }\r\n    </Modal>\r\n  )\r\n}\r\nexport default SceneMakeModal\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Form, message, Input } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MyDropzone from \"../../Dropzone/MyDropzone\";\r\nimport \"./UploadModal.css\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst PrivateOptions = [\r\n    { value: 0, label: \"Private\" },\r\n    { value: 1, label: \"Public\" },\r\n];\r\n\r\nconst CategoryOptions = [\r\n    { value: 0, label: \"살아남기\" },\r\n    { value: 1, label: \"로맨스\" },\r\n    { value: 2, label: \"스토리\" },\r\n    { value: 3, label: \"추리\" },\r\n    { value: 4, label: \"병맛\" },\r\n];\r\n\r\nconst UploadModal = ({ gameId, visible, setUploadModalState, onSubmit_saveScene, defaultTitle, defaultDescription }) => {\r\n    const user = useSelector((state) => state.user);\r\n    const [GameTitle, setGameTitle] = useState({defaultTitle});\r\n    const [description, setDescription] = useState({defaultDescription});\r\n    const [isPrivate, setIsPrivate] = useState(0);\r\n    const [category, setCategory] = useState(CategoryOptions[0].label);\r\n\r\n    const [blobURL, setBlobURL] = useState(\"\");\r\n    const [thumbFile, setThumbFile] = useState([]);\r\n\r\n    //! 렌더링의 타이밍으로 부득이하게..\r\n    useEffect(() => {\r\n        setGameTitle(defaultTitle)\r\n        setDescription(defaultDescription)\r\n    }, [defaultTitle, defaultDescription])\r\n\r\n\r\n    const onTitleChange = (event) => {\r\n        setGameTitle(event.currentTarget.value);\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescription(event.currentTarget.value);\r\n    };\r\n\r\n    const onPrivateChange = (event) => {\r\n        setIsPrivate(event.currentTarget.value);\r\n    };\r\n\r\n    const onCartegoryChange = (event) => {\r\n        let cat_idx = event.currentTarget.value;\r\n        setCategory(event.currentTarget[cat_idx].text);\r\n    };\r\n\r\n    const onDrop = (files) => {\r\n        if (!files[0]) {\r\n            message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n            return;\r\n        }\r\n        URL.revokeObjectURL(blobURL)\r\n\r\n        setBlobURL(URL.createObjectURL(files[0]))\r\n        setThumbFile(files)\r\n    };\r\n\r\n    const cancel = () => {\r\n        if (blobURL)\r\n            URL.revokeObjectURL(blobURL)\r\n        setUploadModalState(false)\r\n    }\r\n\r\n    const upload = (event) => {\r\n        event.preventDefault();\r\n        if (GameTitle === \"\" || description === \"\" || blobURL === \"\") {\r\n            message.error(\"모든 정보를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        uploadThumb();\r\n        setUploadModalState(false);\r\n        onSubmit_saveScene()\r\n    }\r\n\r\n    const uploadThumb = () => {\r\n        //revoke blobURL\r\n        URL.revokeObjectURL(blobURL)\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { \"encrpyt\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n        };\r\n\r\n        thumbFile.forEach(value => {\r\n            formData.append('files', value);\r\n        })\r\n\r\n        Axios.post(\"/api/game/uploadfile\", formData, config).then(\r\n            (response) => {\r\n                if (response.data.success) {\r\n                    uploadGame( process.env.NODE_ENV === 'development' ? response.data.files[0].path : response.data.files[0].location );\r\n                } else {\r\n                    message.error(\"업로드 실패\");\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const uploadGame = (filePath) => {\r\n        const game_variables = {\r\n            gameId: gameId,\r\n            creator: user.userData._id,\r\n            title: GameTitle,\r\n            description: description,\r\n            thumbnail: filePath,\r\n            privacy: isPrivate,\r\n            category: category,\r\n            writer: [user.userData._id],\r\n        };\r\n\r\n        Axios.post(\"/api/game/uploadgameInfo\", game_variables).then((response) => {\r\n            if (response.data.success) {\r\n\r\n            } else {\r\n                message.error(\"game제작 실패\");\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"scenemake_modal\"\r\n            visible={visible}\r\n            okText=\"업로드\"\r\n            cancelText = \"취소\"\r\n            onCancel={cancel}\r\n            onOk={upload}\r\n            width={1000}\r\n            centered = {true}\r\n            closable ={false}\r\n        >\r\n            <div>\r\n                <label>Upload Game</label>\r\n                <Form onSubmit={upload}>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <MyDropzone\r\n                            onDrop={onDrop}\r\n                            multiple={false}\r\n                            maxSize={10485761} // 10MB + 1\r\n                            accept=\"image/*\"\r\n                            blobURL = {blobURL}\r\n                        >\r\n                        </MyDropzone>\r\n\r\n\r\n                    </div>\r\n                    <div className =\"scenemake_modal_description\">\r\n                        <label>제목</label>\r\n                        <Input onChange={onTitleChange} value={GameTitle}/>\r\n\r\n                        <label>게임 설명</label>\r\n                        <TextArea onChange={onDescriptionChange} value={description} />\r\n\r\n                        <select onChange={onPrivateChange}>\r\n                            {PrivateOptions.map((item, index) => (\r\n                                <option key={index} value={item.value}>\r\n                                    {item.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n                        <select onChange={onCartegoryChange}>\r\n                            {CategoryOptions.map((item, index) => (\r\n                                <option key={index} value={item.value}>\r\n                                    {item.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n                    </div>\r\n\r\n                </Form>\r\n            </div>\r\n        </Modal>\r\n\r\n    )\r\n}\r\nexport default UploadModal;\r\n","var _eventHandlers = {}; // somewhere global\r\n\r\nexport const addEvent = (node, event, handler, capture) => {\r\n    if (!(node in _eventHandlers)) {\r\n        // _eventHandlers stores references to nodes\r\n        _eventHandlers[node] = {};\r\n    }\r\n    if (!(event in _eventHandlers[node])) {\r\n        // each entry contains another entry for each event type\r\n        _eventHandlers[node][event] = [];\r\n    }\r\n    // capture reference\r\n    _eventHandlers[node][event].push([handler, capture]);\r\n    node.addEventListener(event, handler, capture);\r\n}\r\n\r\nexport const removeAllEvents = (node, event) => {\r\n    if (node in _eventHandlers) {\r\n        var handlers = _eventHandlers[node];\r\n        if (event in handlers) {\r\n            var eventHandlers = handlers[event];\r\n            for (var i = eventHandlers.length; i--;) {\r\n                var handler = eventHandlers[i];\r\n                node.removeEventListener(event, handler[0], handler[1]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React, { useRef, memo, useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport './Character.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { popCharacter, selectCharacter, updateCharacter } from '../../../_actions/characterSelected_actions';\r\nimport { addEvent, removeAllEvents } from '../handleEventListener';\r\nimport { faTimes, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Character(props) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n  const { charSchema, GameCharacterList, index } = props;\r\n\r\n  const element_X = useRef();\r\n  const element_Y = useRef();\r\n\r\n  const [clicked, setClicked] = useState(true);\r\n  const [moving, setMoving] = useState(true);\r\n  const [sizing, setSizing] = useState(false);\r\n  const [imgWidth, setImgWidth] = useState(0);\r\n\r\n  const background_element = document.getElementById(\"backgroundImg_container\");\r\n  let pivot = [0,0];\r\n  let drag = false;\r\n\r\n  function mouseMove(e) {\r\n    const page = [e.pageX, e.pageY];\r\n    if (drag && clicked && moving) {\r\n      if (pivot[0] - e.pageX > 3 || pivot[1] - e.pageY > 3 || pivot[0] - e.pageX < -3 || pivot[1] - e.pageY < -3) {\r\n        const background_width = background_element.offsetWidth;\r\n        const background_height = background_element.offsetHeight;\r\n        const prev_posX = Number(element_X.current.style.left.replace(/%/g, ''));\r\n        const prev_posY = Number(element_Y.current.style.top.replace(/%/g, '').replace(/px/g, ''));\r\n        const next_posX = prev_posX + 100 * (e.pageX - pivot[0]) / background_width;\r\n        const next_posY = prev_posY + 100 * (e.pageY - pivot[1]) / background_height;\r\n        element_X.current.style.left = String(next_posX) + '%';\r\n        element_Y.current.style.top = String(next_posY) + '%';\r\n        pivot = page;\r\n      }\r\n    } else if (drag && clicked && sizing) {\r\n      if (pivot[0] - e.pageX > 7 || pivot[0] - e.pageX < -7) {\r\n        const image_width = document.getElementById(`${index}`).offsetWidth;\r\n        const prev_size = Number(element_Y.current.style.height.replace(/%/g, ''));\r\n        let next_size = 0;\r\n        if (pivot[0] - page[0] < 0) {\r\n          next_size = prev_size * (image_width - 1 * (pivot[0] - page[0])) / image_width;\r\n        } else {\r\n          next_size = prev_size * (image_width - 1 * (pivot[0] - page[0])) / image_width;\r\n        }\r\n        if (next_size > 20) {\r\n          element_Y.current.style.height = String(next_size) + '%';\r\n        }\r\n        pivot = page;\r\n      }\r\n    }\r\n    setImgWidth(document.getElementById(`${index}`).offsetWidth);\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n  }\r\n\r\n  useEffect(() => {\r\n    addEvent(background_element, \"mousemove\", mouseMove, false);\r\n    addEvent(background_element, \"mouseup\", onMouseUp, false);\r\n    setImgWidth(document.getElementById(`${index}`).offsetWidth);\r\n    return () => {\r\n      removeAllEvents(background_element, \"mousemove\");\r\n      removeAllEvents(background_element, \"mouseup\");\r\n    }\r\n  }, [])\r\n\r\n  const onMouseDown = (e) => {\r\n    addEvent(background_element, \"mousemove\", mouseMove, false);\r\n    addEvent(background_element, \"mouseup\", onMouseUp, false);\r\n    pivot = [e.pageX, e.pageY];\r\n    drag = true;\r\n  }\r\n\r\n  const onMouseUp = (e) => {\r\n    removeAllEvents(background_element, \"mousemove\");\r\n    removeAllEvents(background_element, \"mouseup\");\r\n    dispatch(updateCharacter({\r\n      oldArray:CharacterList, \r\n      data: {\r\n        posX: Number(element_X.current.style.left.replace(/%/g, '')),\r\n        posY: Number(element_Y.current.style.top.replace(/%/g, '').replace(/px/g, '')),\r\n        size: Number(element_Y.current.style.height.replace(/%/g, ''))\r\n      },\r\n      index\r\n    }))\r\n\r\n    pivot = [e.pageX, e.pageY];\r\n    drag = false;\r\n    setSizing(false);\r\n    setMoving(true);\r\n    dispatch(selectCharacter({ ...GameCharacterList[charSchema.index], index: charSchema.index }));\r\n  }\r\n\r\n  const onMouseOver = (e) => {\r\n    setMoving(false);\r\n    setSizing(true);\r\n  }\r\n\r\n  const onMouseOut = (e) => {\r\n    setMoving(true);\r\n    setSizing(false);\r\n  }\r\n\r\n  const onClick = () => {\r\n    dispatch(popCharacter({oldArray:CharacterList, index}));\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={element_X}\r\n      key={index}\r\n      className=\"CharacterBlock\"\r\n      style={{ left: `${charSchema.posX}%` }}\r\n    >\r\n      <div\r\n        ref={element_Y}\r\n        className=\"character__container\"\r\n        style={{\r\n          height: `${charSchema.size}%`,\r\n          top: `${charSchema.posY}%`\r\n        }}\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={faTimesCircle}\r\n          className=\"btn_character_delete\"\r\n          style={{left: `${imgWidth-17}px` }}\r\n          onClick={onClick}\r\n        />\r\n        <img\r\n          onMouseDown={onMouseDown}\r\n          className={`${clicked ? \"characterImg_clicked\" : \"characterImg\"}`}\r\n          id={`${index}`}\r\n          src={charSchema.image}\r\n          alt=\"img\"\r\n        />\r\n        <div\r\n          className={`${sizing ? \"btn_sizing_clicked\" : \"btn_sizing\"}`}\r\n          onMouseOver={onMouseOver}\r\n          onMouseOut={onMouseOut}\r\n          onMouseDown={onMouseDown}\r\n          style={{ left: `${imgWidth - 3}px` }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Character)\r\n","import React, { memo, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport Character from \"../../functions/CharacterModal/Character\";\r\n\r\nimport \"./CharacterBlock.css\";\r\nconst CharacterBlock = (props) => {\r\n  const { onRemove_character, GameCharacterList } = props;\r\n\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n  const characterblocks = CharacterList?.map((charSchema, index) => {\r\n    return (\r\n      <div key={index}>\r\n        <Character\r\n          GameCharacterList={GameCharacterList}\r\n          onRemove_character={onRemove_character}\r\n          index={index}\r\n          charSchema={charSchema}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    CharacterList?.length > 0 &&\r\n    <div className=\"CharacterBlocks\" id=\"CharacterBlocks\">\r\n      {characterblocks}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default memo(CharacterBlock);\r\n","import { message } from 'antd';\r\nimport React, { memo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { pushCharacter, selectCharacter } from '../../../../_actions/characterSelected_actions';\r\nimport './CharacterInfoDisplay.css';\r\n\r\nfunction CharacterInfoDisplay({ setName, character, GameCharacterList }) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n\r\n  const onClick_putCharacter = (index, url) => {\r\n    const characterSchema = {\r\n      index: character.index,\r\n      image: url,\r\n      posX: 30,\r\n      posY: 15,\r\n      reverse: 0,\r\n      size: 90,\r\n    }\r\n    dispatch(pushCharacter({oldArray: CharacterList, characterSchema}))\r\n    setName(character.name)\r\n  }\r\n\r\n  const onClick_selectCharacter = (index) => {\r\n    setName(GameCharacterList[index].name)\r\n    dispatch(selectCharacter({ ...GameCharacterList[index], index: index }));\r\n  }\r\n\r\n  const CharacterListImages = CharacterList?.map((character, index) => {\r\n    const img = new Image();\r\n    img.src = character.image;\r\n    return (\r\n      <div key={index}>\r\n        <div\r\n          className=\"characterList_Info\"\r\n          onClick={() => { onClick_selectCharacter(character.index) }}\r\n        >\r\n          <img\r\n            src={character.image}\r\n            alt=\"\"\r\n            className={img.height > img.width ?\r\n              \"characterList_image_height\" : \"characterList_image_width\"}\r\n          />\r\n          {/* <div className=\"characterList_Text\">\r\n        x: {character.posX} y: {character.posY} size: {character.size}\r\n      </div> */}\r\n        </div>\r\n        <div>{character.name}이름 삭제</div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const characterDetailImages = character.image_array.map((url, index) => {\r\n    const img = new Image();\r\n    img.src = url;\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"image_array__box\"\r\n        onClick={() => { onClick_putCharacter(index, url) }}\r\n      >\r\n        <img\r\n          src={url}\r\n          alt=\"\"\r\n          className={img.height > img.width ?\r\n            \"image_array_image_height\" : \"image_array_image_width\"}\r\n        />\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"image_array__container\">\r\n      {/* <div className=\"characterList__container\">\r\n        {CharacterListImages}\r\n      </div> */}\r\n      {characterDetailImages}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CharacterInfoDisplay)\r\n","import { message } from 'antd';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detachCharacter, selectCharacter } from '../../../_actions/characterSelected_actions';\r\nimport Character from './Character';\r\nimport CharacterInfoDisplay from './CharacterInfoDisplay/CharacterInfoDisplay';\r\nimport './CharacterModal.css';\r\n\r\nfunction CharacterModal({GameCharacterList, setName }) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n  // const onClick_detachCharacter = () => {\r\n  //   dispatch(detachCharacter());\r\n  // }\r\n\r\n  const currentCharacter = useSelector((state) => state.character);\r\n\r\n  const onClick_removeCharacter = () => {\r\n    let index = currentCharacter.characterSelected.index;\r\n    dispatch({oldArray:CharacterList, index})\r\n    setName(\"\")\r\n  }\r\n\r\n  const [isAdded, setIsAdded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let flag = 0;\r\n    for (let i = 0; i < CharacterList?.length; i++) {\r\n      if (CharacterList[i].index === currentCharacter.characterSelected.index) {\r\n        flag = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (flag === 1) {\r\n      setIsAdded(true);\r\n    } else {\r\n      setIsAdded(false);\r\n    }\r\n\r\n  }, [currentCharacter, CharacterList])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"modal_Character\">\r\n        {/* <div onClick={onClick_detachCharacter}>캐릭터 선택 해제</div> */}\r\n        <CharacterInfoDisplay\r\n          setName={setName}\r\n          GameCharacterList={GameCharacterList}\r\n          character={currentCharacter.characterSelected}\r\n        />\r\n        {isAdded && <div onClick={onClick_removeCharacter}>삭제</div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CharacterModal)\r\n","import { Switch } from 'antd';\r\nimport React, { memo } from 'react';\r\nimport '../SceneMakePage2.css';\r\nimport './SceneBox.css';\r\n\r\nfunction SceneBox(props) {\r\n    const { CutList, CutNumber, displayCut, setCutNumber,\r\n        Hover, setHover, EmptyCutList, saveCut } = props;\r\n\r\n    const onClick_GotoCut = (index) => {\r\n        if (CutNumber > 29) {\r\n            displayCut(index);\r\n            setCutNumber(index);\r\n            return;\r\n        }\r\n        if (CutNumber !== index) {\r\n            saveCut();\r\n            displayCut(index);\r\n            setCutNumber(index);\r\n        }\r\n    };\r\n\r\n    const display_SceneBox = CutList.map((Cut, index) => {\r\n        if (CutNumber === index) {\r\n            return (\r\n                (<div className=\"scene__CurrentSceneBox\" key={`${index}`}></div>)\r\n            );\r\n        } else {\r\n            if (Hover) {\r\n                return (\r\n                    <div\r\n                        className=\"scene__SceneBox_color\"\r\n                        key={`${index}`}\r\n                        onMouseOver={() => onClick_GotoCut(index)}\r\n                    ></div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div\r\n                        className=\"scene__SceneBox_color\"\r\n                        key={`${index}`}\r\n                        onClick={() => onClick_GotoCut(index)}\r\n                    ></div>\r\n                )\r\n            }\r\n        }\r\n    });\r\n\r\n    const display_EmptyBox = EmptyCutList.map((EmptyCut, index) => {\r\n        if (CutNumber - CutList.length === index) {\r\n            return (\r\n                <div className=\"scene__CurrentSceneBox\" key={`${index}`}></div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"scene__EmptySceneBox\" key={`${index}`}></div>\r\n            );\r\n        }\r\n    });\r\n    return (\r\n        <div className=\"box sceneBox\">\r\n            {display_SceneBox}\r\n            {display_EmptyBox}\r\n            {/* <Switch\r\n                checked={Hover}\r\n                checkedChildren={CutNumber}\r\n                unCheckedChildren={CutNumber}\r\n                onChange={() => { setHover((state) => !state) }}\r\n                size=\"small\"\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(SceneBox)\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BackgroundSideBar from \"./SideBar/BackgroundSideBar\";\r\nimport CharacterSideBar from \"./SideBar/CharacterSideBar\";\r\nimport BgmSideBar from \"./SideBar/BgmSideBar\";\r\nimport SoundSideBar from \"./SideBar/SoundSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { message, Button, Switch, Modal } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useLocation } from \"react-router\";\r\nimport SceneMakeModal from './SceneMakeModal';\r\nimport UploadModal from './UploadModal';\r\nimport useKey from \"../../../functions/useKey\";\r\nimport CharacterBlock from \"../../GamePlayPage/CharacterBlock\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LoadingPage from \"../../GamePlayPage/LoadingPage\";\r\nimport { gameLoadingPage } from \"../../../../_actions/gamePlay_actions\";\r\nimport { navbarControl } from \"../../../../_actions/controlPage_actions\";\r\nimport CharacterModal from \"../../../functions/CharacterModal/CharacterModal\";\r\nimport SceneBox from \"./SceneBox/SceneBox\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { socket } from \"../../../App\";\r\nimport { PlayCircleOutlined, PauseCircleOutlined, StopOutlined } from '@ant-design/icons';\r\nimport { detachCharacter } from \"../../../../_actions/characterSelected_actions\";\r\nimport \"./SceneMakePage.css\";\r\n\r\nconst config = require(\"../../../../config/key\")\r\nlet bgm_audio = new Audio();\r\nlet sound_audio = new Audio();\r\nconst SceneMakePage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { gameId, sceneId } = location.state\r\n\r\n    // const {gameId,sceneId} = location.state ;\r\n    if (location.state === undefined) {\r\n        window.history.back();\r\n        // return <div></div>;\r\n    }\r\n\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const padding = 0.1;\r\n    const minSize = 300;\r\n    const ratio = 1080 / 1920;\r\n\r\n    const [windowWidth, setwindowWidth] = useState(window.innerWidth);\r\n    const [windowHeight, setwindowHeight] = useState(window.innerHeight);\r\n    const [newScreenSize, setNewScreenSize] = useState({});\r\n\r\n    //modal\r\n    const [makeModalState, setMakeModalState] = useState(0);\r\n    const [reload, setReload] = useState(1);\r\n    const [uploadModalState, setUploadModalState] = useState(false);\r\n\r\n    const [SidBar_script, setSidBar_script] = useState(true);\r\n\r\n    const [CharacterList, setCharacterList] = useState([]);\r\n    const [BackgroundImg, setBackgroundImg] = useState(`${config.STORAGE}/defaultBackground.png`);\r\n    const [Script, setScript] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [BgmFile, setBgmFile] = useState({\r\n        name: \"\",\r\n        music: \"\",\r\n    });\r\n    const [SoundFile, setSoundFile] = useState({\r\n        name: \"\",\r\n        music: \"\",\r\n    });\r\n\r\n    const [isFirstScene, setIsFirstScene] = useState(false)\r\n\r\n    const [CutNumber, setCutNumber] = useState(0);\r\n    const [Hover, setHover] = useState(false);\r\n\r\n    const [CutList, setCutList] = useState([]);\r\n    const [EmptyCutList, setEmptyCutList] = useState(\r\n        Array.from({ length: 30 }, () => 0)\r\n    );\r\n\r\n    const [isEnding, setIsEnding] = useState(false)\r\n    let scene;\r\n    useEffect(() => {\r\n        dispatch(navbarControl(false));\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (user.userData) {\r\n            socket.emit(\"leave room\", { room: user.userData._id?.toString() });\r\n            socket.emit(\"room\", { room: user.userData._id?.toString() });\r\n        }\r\n        socket.off(\"timeout_making\")\r\n        socket.on(\"timeout_making\", data => {\r\n            // console.log(\"GO HOME\")\r\n            props.history.replace(\"/\")\r\n        })\r\n\r\n    }, [user])\r\n\r\n    //! scene save할 때 필요한 정보 갖고오기\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await axios.get(`/api/game/getSceneInfo/${sceneId}`)\r\n            const validation = await axios.post(`/api/game/scene/validate`, { sceneId, gameId, isMaking: true })\r\n            // console.log(res.data)\r\n            if (res.data.success && validation.data.success) { scene = res.data.scene; }\r\n            else {\r\n                // console.log(\"get scene ERROR\");\r\n                props.history.replace(\"/\");\r\n                return;\r\n            }\r\n            // 임시저장한 녀석\r\n            if (scene.cutList.length) {\r\n\r\n                if (scene.isFirst) {\r\n                    setIsFirstScene(true)\r\n                }\r\n\r\n                // 임시저장된 녀석 불러오기\r\n                setCutList(scene.cutList);\r\n                const tmpFirstCut = scene.cutList[0]\r\n                setCharacterList(tmpFirstCut.characterList)\r\n                setBackgroundImg(tmpFirstCut.background)\r\n                setName(tmpFirstCut.name);\r\n                setScript(tmpFirstCut.script);\r\n                setCutNumber(scene.cutList.length - 1);\r\n\r\n                dispatch(gameLoadingPage(0));\r\n                dispatch(gameLoadingPage(1));\r\n            }\r\n            // 껍데기\r\n            else {\r\n                if (!scene.isFirst) {\r\n                    const variable = { sceneId: scene.prevSceneId };\r\n                    Axios.post(\"/api/scene/scenedetail\", variable)\r\n                        .then((response) => {\r\n                            //! 이전 씬의 마지막 컷 설정 유지\r\n                            if (response.data.success) {\r\n                                const lastCut = response.data.lastCut;\r\n                                setCharacterList(lastCut.characterList);\r\n                                setBackgroundImg(lastCut.background);\r\n                                setName(lastCut.name);\r\n                                dispatch(gameLoadingPage(0));\r\n                                dispatch(gameLoadingPage(1));\r\n                            } else {\r\n                                message.error(\"이전 Scene의 정보를 불러오는데 실패했습니다.\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    setIsFirstScene(true)\r\n                }\r\n            }\r\n        })();\r\n    }, [])\r\n\r\n    const onScriptChange = (event) => {\r\n        setScript(event.currentTarget.value);\r\n    };\r\n\r\n    const onNameChange = (event) => {\r\n        setName(event.currentTarget.value);\r\n    };\r\n    const characterSidebarElement = useRef();\r\n    const backgroundSidebarElement = useRef();\r\n    const bgmSidebarElement = useRef();\r\n    const soundSidebarElement = useRef();\r\n\r\n    const makeVisible = (element) => {\r\n        makeInvisible()\r\n        element.current.style.display = 'block'\r\n    }\r\n\r\n    const makeInvisible = () => {\r\n        characterSidebarElement.current.style.display = 'none'\r\n        backgroundSidebarElement.current.style.display = 'none'\r\n        bgmSidebarElement.current.style.display = 'none'\r\n        soundSidebarElement.current.style.display = 'none'\r\n    }\r\n\r\n    const onClick_character = () => {\r\n        if (characterSidebarElement.current.style.display === 'none') {\r\n            makeVisible(characterSidebarElement);\r\n        } else {\r\n            makeInvisible();\r\n        }\r\n    };\r\n\r\n    const onClick_background = () => {\r\n        if (backgroundSidebarElement.current.style.display === 'none') {\r\n            makeVisible(backgroundSidebarElement);\r\n        } else {\r\n            makeInvisible();\r\n        }\r\n    };\r\n\r\n\r\n    const onClick_bgm = () => {\r\n        if (bgmSidebarElement.current.style.display === 'none') {\r\n            makeVisible(bgmSidebarElement);\r\n        } else {\r\n            makeInvisible();\r\n        }\r\n    };\r\n\r\n    const onClick_sound = () => {\r\n        if (soundSidebarElement.current.style.display === 'none') {\r\n            makeVisible(soundSidebarElement);\r\n        } else {\r\n            makeInvisible();\r\n        }\r\n    };\r\n\r\n    const onClick_script = () => {\r\n        if (SidBar_script) {\r\n            setSidBar_script(false);\r\n        } else {\r\n            setSidBar_script(true);\r\n        }\r\n    };\r\n\r\n    const onClick_bgm_player = () => {\r\n        if (bgm_audio.paused) bgm_audio.play();\r\n        else bgm_audio.pause();\r\n        setReload(reload => reload + 1)\r\n    };\r\n\r\n    const onClick_sound_player = () => {\r\n        if (sound_audio.paused) sound_audio.play();\r\n        else sound_audio.pause();\r\n        setReload(reload => reload + 1)\r\n    };\r\n\r\n    function handleEnter(event) {\r\n        onSubmit_nextCut(event);\r\n    }\r\n\r\n    useKey(\"Enter\", handleEnter);\r\n\r\n    const saveCut = () => {\r\n        const Cut = {\r\n            characterList: CharacterList,\r\n            background: BackgroundImg,\r\n            script: Script,\r\n            name: Name,\r\n            bgm: BgmFile,\r\n            sound: SoundFile,\r\n        };\r\n        setBgmFile({\r\n            name: \"\",\r\n            music: \"\",\r\n        });\r\n        setSoundFile({\r\n            name: \"\",\r\n            music: \"\",\r\n        });\r\n\r\n        setCutList((oldArray) => [\r\n            ...oldArray.slice(0, CutNumber),\r\n            Cut,\r\n            ...oldArray.slice(CutNumber + 1, 31),\r\n        ]);\r\n        if (CutList.length === CutNumber) {\r\n            setEmptyCutList((oldArray) => [\r\n                ...oldArray.slice(0, EmptyCutList.length - 1),\r\n            ]);\r\n        }\r\n    };\r\n\r\n    const displayCut = (index) => {\r\n        setCharacterList(CutList[index].characterList);\r\n        setBackgroundImg(CutList[index].background);\r\n        setScript(CutList[index].script);\r\n        setName(CutList[index].name);\r\n        setBgmFile(CutList[index].bgm);\r\n        setSoundFile(CutList[index].sound);\r\n        if (CutList[index].bgm.music) {\r\n            bgm_audio.src = CutList[index].bgm.music;\r\n            bgm_audio.play();\r\n        } else {\r\n            bgm_audio.pause();\r\n        }\r\n        if (CutList[index].sound.music) {\r\n            sound_audio.src = CutList[index].sound.music;\r\n            sound_audio.play();\r\n        } else {\r\n            sound_audio.pause();\r\n        }\r\n    };\r\n\r\n    const onRemove_character = (index) => {\r\n        setCharacterList((oldArray) => [\r\n            ...oldArray.slice(0, index),\r\n            ...oldArray.slice(index + 1, 4),\r\n        ]);\r\n    };\r\n\r\n    const onSubmit_nextCut = (event) => {\r\n        event.preventDefault();\r\n        if (CutNumber > 29) {\r\n            message.error(\"더이상 Cut을 생성할 수 없습니다.\");\r\n            return;\r\n        } else if (CutNumber === 24) {\r\n            message.warning(\"생성 가능한 Cut이 5개 남았습니다.\");\r\n        }\r\n\r\n        saveCut();\r\n\r\n        if (CutNumber < CutList.length - 1) {\r\n            displayCut(CutNumber + 1);\r\n        } else {\r\n            setScript(\"\");\r\n        }\r\n        setCutNumber((oldNumber) => oldNumber + 1);\r\n    };\r\n\r\n    const onRemove_cut = () => {\r\n        if (CutList.length - 1 <= CutNumber) {\r\n            message.info('마지막 컷 입니다.');\r\n            return;\r\n        }\r\n        message.success(`${CutNumber + 1}번째 컷이 삭제되었습니다.`);\r\n        setCutList((oldArray) => [\r\n            ...oldArray.slice(0, CutNumber),\r\n            ...oldArray.slice(CutNumber + 1, 31),\r\n        ]);\r\n        setEmptyCutList((oldArray) => [\r\n            0, ...oldArray\r\n        ]);\r\n        displayCut(CutNumber + 1);\r\n    }\r\n\r\n    const onSubmit_first = () => {\r\n        setUploadModalState(true)\r\n    }\r\n\r\n    const onSubmit_saveScene = async (event, isTmp = 0) => {\r\n        if (CutList.length < 1) {\r\n            message.error(\"최소 2개의 컷을 생성해주세요.\");\r\n            return;\r\n        }\r\n        const submitCut = {\r\n            characterList: CharacterList,\r\n            background: BackgroundImg,\r\n            script: Script,\r\n            name: Name,\r\n            bgm: BgmFile,\r\n            sound: SoundFile,\r\n        };\r\n\r\n        const submitCutList = [\r\n            ...CutList.slice(0, CutNumber),\r\n            submitCut,\r\n            ...CutList.slice(CutNumber + 1, 31),\r\n        ];\r\n\r\n        if (window.confirm(\"게임 제작을 완료하시겠습니까?\")) {\r\n            const variable = {\r\n                gameId: gameId,\r\n                sceneId: sceneId,\r\n                cutList: submitCutList,\r\n                isTmp,\r\n                isEnding\r\n            };\r\n\r\n            const response = await Axios.post(`/api/scene/save`, variable)\r\n\r\n            if (response.data.success) {\r\n                dispatch(detachCharacter());\r\n                message\r\n                    .loading(\"게임 업로드 중..\", 1.0)\r\n                    .then(() => {\r\n                        if (!isTmp) {\r\n                            message.success(\"게임 제작이 완료되었습니다.\", 1.0)\r\n                        }\r\n                        else {\r\n                            message.success(\"업로드 성공.\")\r\n                        }\r\n                    }\r\n                    ).then(() => {\r\n                        if (!isTmp && isFirstScene) {\r\n                            history.replace(\r\n                                `/game/${gameId}`\r\n                            );\r\n\r\n                        } else if (!isTmp) {\r\n                            socket.emit(\"final_submit\", {\r\n                                prevSceneId: response.data.scene.prevSceneId,\r\n                                sceneId: response.data.scene._id,\r\n                                title: response.data.scene.title,\r\n                                userId: user.userData._id.toString(),\r\n                            })\r\n                            history.replace({\r\n                                pathname: `/gameplay`,\r\n                                state: {\r\n                                    sceneId: response.data.scene._id,\r\n                                    gameId: gameId,\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n            } else if (response.data.msg === 'expired') {\r\n                message.error(\"제작 유효기간이 만료되었습니다..\", 1.0);\r\n                props.history.replace({\r\n                    pathname: `/gameplay`,\r\n                    state: {\r\n                        sceneId: response.data.prevSceneId,\r\n                        gameId: gameId,\r\n                    }\r\n                })\r\n                return;\r\n            }\r\n            else {\r\n                message.error(\"DB에 문제가 있습니다.\");\r\n            }\r\n\r\n        } else {\r\n            message.error(\"제출 취소\");\r\n        }\r\n    };\r\n\r\n    const onTmpSave = (event) => {\r\n        onSubmit_saveScene(event, 1);\r\n    }\r\n\r\n\r\n    const showWarning = () => {\r\n\r\n        if (!isEnding) {\r\n            Modal.warning({\r\n                title: <b>주의!</b>,\r\n                content: (\r\n                    <div>\r\n                        <br></br>\r\n                        <h3>ENDING 체크 시, 이 게임의 엔딩으로 업로드 됩니다.</h3>\r\n                        <h3>따라서 이 씬에 연결되는 씬을 더이상 생성할 수 없습니다.</h3>\r\n                    </div>\r\n                ),\r\n                centered: true,\r\n                width: 650,\r\n                onOk() { },\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    const [gameDetail, setGameDetail] = useState([]);\r\n    const [sideBar, setSideBar] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/game/getgamedetail', { gameId: gameId })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setGameDetail(response.data.gameDetail)\r\n                } else {\r\n                    alert('게임 정보를 로딩하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }, [reload, gameId])\r\n\r\n\r\n    useEffect(() => {\r\n        if (gameDetail.character) {\r\n            const reload_Sidebar = (< div className=\"scenemake__toggleBar\">\r\n                <div ref={characterSidebarElement}>\r\n                    <CharacterSideBar\r\n                        gameDetail={gameDetail}\r\n                        setMakeModalState={setMakeModalState}\r\n                        setCharacterList={setCharacterList}\r\n                        setName={setName}\r\n                    />\r\n                </div>\r\n                <div ref={backgroundSidebarElement} style={{ display: 'none' }}>\r\n                    <BackgroundSideBar\r\n                        gameDetail={gameDetail}\r\n                        setBackgroundImg={setBackgroundImg}\r\n                        setMakeModalState={setMakeModalState}\r\n                    />\r\n                </div>\r\n                <div ref={bgmSidebarElement} style={{ display: 'none' }}>\r\n                    <BgmSideBar\r\n                        gameDetail={gameDetail}\r\n                        bgm_audio={bgm_audio}\r\n                        setBgmFile={setBgmFile}\r\n                        setMakeModalState={setMakeModalState}\r\n                    />\r\n                </div>\r\n                <div ref={soundSidebarElement} style={{ display: 'none' }}>\r\n                    <SoundSideBar\r\n                        gameDetail={gameDetail}\r\n                        sound_audio={sound_audio}\r\n                        setSoundFile={setSoundFile}\r\n                        setMakeModalState={setMakeModalState}\r\n                    />\r\n                </div>\r\n            </div>)\r\n            setSideBar(reload_Sidebar)\r\n        }\r\n    }, [gameDetail, CharacterList, reload])\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setwindowWidth(window.innerWidth);\r\n            setwindowHeight(window.innerHeight);\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n        if (windowWidth * ratio > windowHeight) {\r\n            setNewScreenSize({\r\n                width: `${windowHeight * (1 - 2 * padding) / ratio}px`,\r\n                height: `${windowHeight * (1 - 2 * padding)}px`,\r\n                minWidth: `${minSize / ratio}px`,\r\n                minHeight: `${minSize}px`\r\n            })\r\n        } else {\r\n            setNewScreenSize({\r\n                width: `${windowWidth * (1 - 2 * padding)}px`,\r\n                height: `${windowWidth * (1 - 2 * padding) * ratio}px`,\r\n                minWidth: `${minSize}px`,\r\n                minHeight: `${minSize * ratio}px`\r\n            })\r\n        }\r\n    }, [window.innerWidth, window.innerHeight]);\r\n\r\n    const onDeleteScene = () => {\r\n        Axios.delete('/api/scene', {\r\n            data: {\r\n                gameId: gameId,\r\n                sceneId: sceneId,\r\n                isFirst: isFirstScene,\r\n                userId: user.userData._id\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    //! 다 삭제되면 emptyNum 올려주기\r\n                    console.log(isFirstScene)\r\n                    if (isFirstScene == false) {\r\n                        socket.emit(\"empty_num_increase\",\r\n                            {\r\n                                scene_id: response.data.prevSceneId,\r\n                                user_id: user.userData._id\r\n                            })\r\n                        //! 돌아가야할 곳 : game detail 로 가자\r\n                        props.history.push(`/game/${gameId}`)\r\n                    }\r\n                    else {\r\n                        //! 들어가야할 곳 : 홈화면\r\n                        props.history.push(`/`)\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"scene__container\">\r\n            {/* <LoadingPage />   */}\r\n            <div>\r\n                <div\r\n                    className=\"backgroundImg_container\"\r\n                    id=\"backgroundImg_container\"\r\n                    style={newScreenSize}\r\n                >\r\n                    <img\r\n                        className=\"backgroundImg\"\r\n                        src={`${BackgroundImg}`}\r\n                        alt=\"img\"\r\n                    />\r\n                    <CharacterBlock\r\n                        GameCharacterList={gameDetail.character}\r\n                        CharacterList={CharacterList}\r\n                        setCharacterList={setCharacterList}\r\n                        onRemove_character={onRemove_character}\r\n                    />\r\n                    {SidBar_script && (\r\n                        <div className=\"sceneMake__text_container\">\r\n                            <input onChange={onNameChange} value={Name} className=\"sceneMake__name_block\" />\r\n                            <hr className=\"sceneMake__text_line\"></hr>\r\n                            <textarea\r\n                                onChange={onScriptChange}\r\n                                value={Script}\r\n                                className=\"sceneMake__text_block\"\r\n                                ref={(input) => input && input.focus()}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <CharacterModal\r\n                setName={setName}\r\n                setCharacterList={setCharacterList}\r\n                CharacterList={CharacterList}\r\n                GameCharacterList={gameDetail.character}\r\n            />\r\n            <SceneBox\r\n                CutList={CutList}\r\n                CutNumber={CutNumber}\r\n                displayCut={displayCut}\r\n                setCutNumber={setCutNumber}\r\n                Hover={Hover}\r\n                setHover={setHover}\r\n                EmptyCutList={EmptyCutList}\r\n                saveCut={saveCut}\r\n            />\r\n            <div className=\"sceneMake__sound_container\">\r\n                {BgmFile.name ? (\r\n                    <div\r\n                        className=\"scene__SoundBox_container\"\r\n                        onClick={onClick_bgm_player}\r\n                    >\r\n                        {\r\n                            BgmFile.name && bgm_audio.paused &&\r\n                            <PlayCircleOutlined\r\n                                style={{ fontSize: \"20px\" }} />\r\n                        }\r\n                        {\r\n                            BgmFile.name && !bgm_audio.paused &&\r\n                            <PauseCircleOutlined\r\n                                style={{ fontSize: \"20px\" }} />\r\n                        }\r\n                        {BgmFile.name}\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        [icon]\r\n                        BGM\r\n                    </div>\r\n                )}\r\n                {SoundFile.name ? (\r\n                    <div\r\n                        className=\"scene__SoundBox_container\"\r\n                        onClick={onClick_sound_player}\r\n                    >\r\n                        {\r\n                            BgmFile.name && sound_audio.paused &&\r\n                            <PlayCircleOutlined\r\n                                style={{ fontSize: \"20px\" }} />\r\n                        }\r\n                        {\r\n                            BgmFile.name && !sound_audio.paused &&\r\n                            <PauseCircleOutlined\r\n                                style={{ fontSize: \"20px\" }} />\r\n                        }\r\n                        {SoundFile.name}\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        [icon]\r\n                        Sound\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"sceneMake__btn_container\">\r\n                <div type=\"primary\"\r\n                    style={{ fontSize: \"15px\" }}\r\n                    onClick={onDeleteScene}>\r\n                    작성 취소\r\n                </div>\r\n                <div type=\"primary\"\r\n                    style={{ fontSize: \"15px\" }}\r\n                    onClick={onTmpSave}>\r\n                    임시저장\r\n                </div>\r\n                <div type=\"primary\"\r\n                    style={{ fontSize: \"15px\" }}\r\n                    onClick={onRemove_cut}>\r\n                    컷 삭제\r\n                </div>\r\n                {CutNumber < 29 && (\r\n                    <div type=\"primary\"\r\n                        style={{ fontSize: \"15px\" }}\r\n                        onClick={onSubmit_nextCut}>\r\n                        다음 컷\r\n                    </div>\r\n                )}\r\n                {isFirstScene ?\r\n\r\n                    <Button type=\"primary\"\r\n                        style={{ fontSize: \"15px\" }}\r\n                        onClick={onSubmit_first}>\r\n                        업로드\r\n                        </Button>\r\n                    :\r\n                    <>\r\n                        <Button type=\"primary\"\r\n                            style={{ fontSize: \"15px\" }}\r\n                            onClick={onSubmit_saveScene}>\r\n                            업로드\r\n                            </Button>\r\n                        <Switch\r\n                            //! 못생겨서 미안합니다...\r\n                            checkedChildren={\"ENDING\"}\r\n                            unCheckedChildren={\"CONTINUE\"}\r\n                            onChange={() => { setIsEnding((state) => !state) }}\r\n                            onClick={showWarning}\r\n                        />\r\n                    </>\r\n                }\r\n\r\n                <UploadModal\r\n                    gameId={gameId}\r\n                    visible={uploadModalState}\r\n                    setUploadModalState={setUploadModalState}\r\n                    onSubmit_saveScene={onSubmit_saveScene}\r\n                />\r\n\r\n            </div>\r\n            <div className=\"scenemake__sideBar_container\">\r\n                {sideBar !== 0 && sideBar}\r\n\r\n                <div className=\"scenemake__toggleButton_container\">\r\n                    <div\r\n                        className=\"scenemake__btn_sidebar\"\r\n                        onClick={onClick_character}\r\n                    >char</div>\r\n                    <div\r\n                        className=\"scenemake__btn_sidebar\"\r\n                        onClick={onClick_background}\r\n                    >back</div>\r\n                    <div\r\n                        className=\"scenemake__btn_sidebar\"\r\n                        onClick={onClick_script}\r\n                    >script</div>\r\n                    <div className=\"scenemake__btn_sidebar\" onClick={onClick_bgm}>\r\n                        bgm\r\n                    </div>\r\n                    <div className=\"scenemake__btn_sidebar\" onClick={onClick_sound}>\r\n                        sound\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                makeModalState !== 0 && <SceneMakeModal\r\n                    gameId={gameId}\r\n                    visible={Boolean(makeModalState)}\r\n                    setTag={setMakeModalState}\r\n                    tag={makeModalState}\r\n                    setReload={setReload}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SceneMakePage;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BackgroundSideBar from \"./SideBar/BackgroundSideBar\";\r\nimport CharacterSideBar from \"./SideBar/CharacterSideBar\";\r\nimport BgmSideBar from \"./SideBar/BgmSideBar\";\r\nimport SoundSideBar from \"./SideBar/SoundSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useLocation } from \"react-router\";\r\nimport SceneMakeModal from './SceneMakeModal';\r\nimport UploadModal from './UploadModal';\r\nimport useKey from \"../../../functions/useKey\";\r\nimport CharacterBlock from \"../../GamePlayPage/CharacterBlock\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LoadingPage from \"../../GamePlayPage/LoadingPage\";\r\nimport { gameLoadingPage } from \"../../../../_actions/gamePlay_actions\";\r\nimport { navbarControl } from \"../../../../_actions/controlPage_actions\";\r\nimport CharacterModal from \"../../../functions/CharacterModal/CharacterModal\";\r\nimport SceneBox from \"./SceneBox/SceneBox\";\r\nimport axios from \"axios\";\r\nimport { SVG } from \"../../../svg/icon\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { socket } from \"../../../App\";\r\nimport { PlayCircleOutlined, PauseCircleOutlined, StopOutlined } from '@ant-design/icons';\r\nimport { detachCharacter, popCharacter, setCharacterList } from \"../../../../_actions/characterSelected_actions\";\r\nimport \"./SceneMakePage2.css\";\r\nimport { TextBlock } from \"../../GamePlayPage/TextBlock\";\r\nimport { MS_PER_HR } from \"../../../App\"\r\nimport moment from \"moment\";\r\n\r\n\r\nlet bgm_audio = new Audio();\r\nlet sound_audio = new Audio();\r\nconst SceneMakePage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { gameId, sceneId } = location.state\r\n    let exp;\r\n    // const {gameId,sceneId} = location.state ;\r\n    if (location.state === undefined) {\r\n        window.history.back();\r\n        // return <div></div>;\r\n    }\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const CharacterList = useSelector((state) => state.character.CharacterList);\r\n\r\n    const padding = 0.1;\r\n    const minSize = 300;\r\n    const ratio = 1080 / 1920;\r\n\r\n    const [windowWidth, setwindowWidth] = useState(window.innerWidth);\r\n    const [windowHeight, setwindowHeight] = useState(window.innerHeight);\r\n    const [newScreenSize, setNewScreenSize] = useState({});\r\n\r\n    //modal\r\n    const [makeModalState, setMakeModalState] = useState(0);\r\n    const [reload, setReload] = useState(1);\r\n    const [uploadModalState, setUploadModalState] = useState(false);\r\n\r\n    const [SidBar_script, setSidBar_script] = useState(true);\r\n\r\n    const [BackgroundImg, setBackgroundImg] = useState(\"http://localhost:5000/uploads/defaultBackground.png\");\r\n    const [Script, setScript] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [BgmFile, setBgmFile] = useState({\r\n        name: \"\",\r\n        music: \"\",\r\n    });\r\n    const [SoundFile, setSoundFile] = useState({\r\n        name: \"\",\r\n        music: \"\",\r\n    });\r\n\r\n    const [isFirstScene, setIsFirstScene] = useState(false)\r\n\r\n    const [CutNumber, setCutNumber] = useState(0);\r\n    const [Hover, setHover] = useState(false);\r\n\r\n    const [CutList, setCutList] = useState([]);\r\n    const [EmptyCutList, setEmptyCutList] = useState(\r\n        Array.from({ length: 30 }, () => 0)\r\n    );\r\n\r\n    let scene;\r\n    useEffect(() => {\r\n        dispatch(navbarControl(false));\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (user.userData) {\r\n            socket.emit(\"leave room\", { room: user.userData._id.toString() });\r\n            socket.emit(\"room\", { room: user.userData._id.toString() });\r\n        }\r\n        socket.off(\"timeout_making\")\r\n        socket.on(\"timeout_making\", data => {\r\n            // console.log(\"GO HOME\")\r\n            props.history.replace(\"/\")\r\n        })\r\n\r\n    }, [user])\r\n\r\n    //! scene save할 때 필요한 정보 갖고오기\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await axios.get(`/api/game/getSceneInfo/${sceneId}`)\r\n            // console.log(res.data)\r\n            if (res.data.success) { scene = res.data.scene; }\r\n            else {\r\n                // console.log(\"get scene ERROR\");\r\n                props.history.replace(\"/\");\r\n                return;\r\n            }\r\n            // 임시저장한 녀석\r\n\r\n\r\n            if (scene.cutList.length) {\r\n\r\n                if (scene.isFirst) {\r\n                    setIsFirstScene(true)\r\n                }\r\n\r\n                // 임시저장된 녀석 불러오기\r\n                setCutList(scene.cutList);\r\n                const tmpFirstCut = scene.cutList[0]\r\n                dispatch(setCharacterList(tmpFirstCut.characterList));\r\n                setBackgroundImg(tmpFirstCut.background)\r\n                setName(tmpFirstCut.name);\r\n                setScript(tmpFirstCut.script);\r\n                setCutNumber(scene.cutList.length - 1);\r\n                dispatch(gameLoadingPage(0));\r\n                dispatch(gameLoadingPage(1));\r\n\r\n            }\r\n            // 껍데기\r\n            else {\r\n                if (!scene.isFirst) {\r\n                    const variable = { sceneId: scene.prevSceneId };\r\n                    Axios.post(\"/api/scene/scenedetail\", variable)\r\n                        .then((response) => {\r\n                            //! 이전 씬의 마지막 컷 설정 유지\r\n                            if (response.data.success) {\r\n                                const lastCut = response.data.lastCut;\r\n                                dispatch(setCharacterList(lastCut.characterList));\r\n                                setBackgroundImg(lastCut.background);\r\n                                setName(lastCut.name);\r\n                                dispatch(gameLoadingPage(0));\r\n                                dispatch(gameLoadingPage(1));\r\n                            } else {\r\n                                message.error(\"이전 Scene의 정보를 불러오는데 실패했습니다.\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    setIsFirstScene(true)\r\n                }\r\n            }\r\n        })();\r\n    }, [])\r\n\r\n    const onScriptChange = (event) => {\r\n        setScript(event.currentTarget.value);\r\n    };\r\n\r\n    const onNameChange = (event) => {\r\n        setName(event.currentTarget.value);\r\n    };\r\n    const characterSidebarElement = useRef();\r\n    const backgroundSidebarElement = useRef();\r\n    const bgmSidebarElement = useRef();\r\n    const soundSidebarElement = useRef();\r\n    const scriptElement = useRef();\r\n    const nameElement = useRef();\r\n\r\n    const makeVisible = (element) => {\r\n        makeInvisible()\r\n        element.current.style.display = 'block'\r\n    }\r\n\r\n    const makeInvisible = () => {\r\n        characterSidebarElement.current.style.display = 'none'\r\n        backgroundSidebarElement.current.style.display = 'none'\r\n        bgmSidebarElement.current.style.display = 'none'\r\n        soundSidebarElement.current.style.display = 'none'\r\n    }\r\n\r\n    const onClick_character = () => {\r\n        if (characterSidebarElement.current.style.display === 'none') {\r\n            makeVisible(characterSidebarElement);\r\n        }\r\n    };\r\n\r\n    const onClick_background = () => {\r\n        if (backgroundSidebarElement.current.style.display === 'none') {\r\n            makeVisible(backgroundSidebarElement);\r\n        }\r\n    };\r\n\r\n\r\n    const onClick_bgm = () => {\r\n        if (bgmSidebarElement.current.style.display === 'none') {\r\n            makeVisible(bgmSidebarElement);\r\n        }\r\n    };\r\n\r\n    const onClick_sound = () => {\r\n        if (soundSidebarElement.current.style.display === 'none') {\r\n            makeVisible(soundSidebarElement);\r\n        }\r\n    };\r\n\r\n    const onClick_script = () => {\r\n        if (SidBar_script) {\r\n            setSidBar_script(false);\r\n        } else {\r\n            setSidBar_script(true);\r\n        }\r\n    };\r\n\r\n    const onClick_bgm_player = () => {\r\n        if (bgm_audio.paused) bgm_audio.play();\r\n        else bgm_audio.pause();\r\n        setReload(reload => reload + 1)\r\n    };\r\n\r\n    const onClick_sound_player = () => {\r\n        if (sound_audio.paused) sound_audio.play();\r\n        else sound_audio.pause();\r\n        setReload(reload => reload + 1)\r\n    };\r\n\r\n    function handleEnter(event) {\r\n        if (nameElement.current === document.activeElement)\r\n            scriptElement.current.focus();\r\n        else if (scriptElement.current === document.activeElement)\r\n            onSubmit_nextCut(event);\r\n    }\r\n\r\n    function handleTab(event) {\r\n        if (nameElement.current === document.activeElement)\r\n            scriptElement.current.focus();\r\n        else if (scriptElement.current === document.activeElement)\r\n            nameElement.current.focus();\r\n    }\r\n\r\n    useKey(\"Enter\", handleEnter);\r\n\r\n    const saveCut = () => {\r\n        const Cut = {\r\n            characterList: CharacterList,\r\n            background: BackgroundImg,\r\n            script: Script,\r\n            name: Name,\r\n            bgm: BgmFile,\r\n            sound: SoundFile,\r\n        };\r\n        setBgmFile({\r\n            name: \"\",\r\n            music: \"\",\r\n        });\r\n        setSoundFile({\r\n            name: \"\",\r\n            music: \"\",\r\n        });\r\n\r\n        setCutList((oldArray) => [\r\n            ...oldArray.slice(0, CutNumber),\r\n            Cut,\r\n            ...oldArray.slice(CutNumber + 1, 31),\r\n        ]);\r\n        if (CutList.length === CutNumber) {\r\n            setEmptyCutList((oldArray) => [\r\n                ...oldArray.slice(0, EmptyCutList.length - 1),\r\n            ]);\r\n        }\r\n    };\r\n\r\n    const displayCut = (index) => {\r\n        dispatch(setCharacterList(CutList[index].characterList));\r\n        setBackgroundImg(CutList[index].background);\r\n        setScript(CutList[index].script);\r\n        setName(CutList[index].name);\r\n        setBgmFile(CutList[index].bgm);\r\n        setSoundFile(CutList[index].sound);\r\n        if (CutList[index].bgm.music) {\r\n            bgm_audio.src = CutList[index].bgm.music;\r\n            bgm_audio.play();\r\n        } else {\r\n            bgm_audio.pause();\r\n        }\r\n        if (CutList[index].sound.music) {\r\n            sound_audio.src = CutList[index].sound.music;\r\n            sound_audio.play();\r\n        } else {\r\n            sound_audio.pause();\r\n        }\r\n    };\r\n\r\n    const onRemove_character = (index) => {\r\n        dispatch(popCharacter({\r\n            oldArray: CharacterList,\r\n            index\r\n        }))\r\n    };\r\n\r\n    const onSubmit_nextCut = (event) => {\r\n        event.preventDefault();\r\n        if (CutNumber >= 29) {\r\n            message.error(\"더이상 Cut을 생성할 수 없습니다.\");\r\n            return;\r\n        } else if (CutNumber === 24) {\r\n            message.warning(\"생성 가능한 Cut이 5개 남았습니다.\");\r\n        }\r\n\r\n        saveCut();\r\n\r\n        if (CutNumber < CutList.length - 1) {\r\n            displayCut(CutNumber + 1);\r\n        } else {\r\n            setScript(\"\");\r\n        }\r\n        setCutNumber((oldNumber) => oldNumber + 1);\r\n        scriptElement.current.focus()\r\n\r\n    };\r\n\r\n    const onRemove_cut = () => {\r\n        if (CutNumber === 0) {\r\n            message.info('첫번째 컷 입니다.');\r\n            return;\r\n        } else if (CutList.length - 1 <= CutNumber) {\r\n            displayCut(CutNumber - 1);\r\n            setCutNumber(CutNumber - 1);\r\n            return;\r\n        }\r\n        message.success(`${CutNumber + 1}번째 컷이 삭제되었습니다.`);\r\n        setCutList((oldArray) => [\r\n            ...oldArray.slice(0, CutNumber),\r\n            ...oldArray.slice(CutNumber + 1, 31),\r\n        ]);\r\n        setEmptyCutList((oldArray) => [\r\n            0, ...oldArray\r\n        ]);\r\n        displayCut(CutNumber + 1);\r\n    }\r\n\r\n    const onSubmit_first = () => {\r\n        setUploadModalState(true)\r\n    }\r\n\r\n    const onSubmit_saveScene = async (event, isTmp = 0) => {\r\n        if (CutList.length < 1) {\r\n            message.error(\"최소 2개의 컷을 생성해주세요.\");\r\n            return;\r\n        }\r\n        const submitCut = {\r\n            characterList: CharacterList,\r\n            background: BackgroundImg,\r\n            script: Script,\r\n            name: Name,\r\n            bgm: BgmFile,\r\n            sound: SoundFile,\r\n        };\r\n\r\n        const submitCutList = [\r\n            ...CutList.slice(0, CutNumber),\r\n            submitCut,\r\n            ...CutList.slice(CutNumber + 1, 31),\r\n        ];\r\n\r\n        if (window.confirm(\"게임 제작을 완료하시겠습니까?\")) {\r\n            const variable = {\r\n                gameId: gameId,\r\n                sceneId: sceneId,\r\n                cutList: submitCutList,\r\n                isTmp,\r\n            };\r\n\r\n            const response = await Axios.post(`/api/scene/save`, variable)\r\n\r\n            if (response.data.success) {\r\n                dispatch(detachCharacter());\r\n                message\r\n                    .loading(\"게임 업로드 중..\", 1.0)\r\n                    .then(() => {\r\n                        if (!isTmp) {\r\n                            message.success(\"게임 제작이 완료되었습니다.\", 1.0)\r\n                        }\r\n                        else {\r\n                            message.success(\"업로드 성공.\")\r\n                        }\r\n                    }\r\n                    ).then(() => {\r\n                        if (!isTmp && isFirstScene) {\r\n                            history.replace(\r\n                                `/game/${gameId}`\r\n                            );\r\n\r\n                        } else if (!isTmp) {\r\n                            socket.emit(\"final_submit\", {\r\n                                prevSceneId: response.data.scene.prevSceneId,\r\n                                sceneId: response.data.scene._id,\r\n                                title: response.data.scene.title,\r\n                                userId: user.userData._id.toString(),\r\n                            })\r\n                            history.replace({\r\n                                pathname: `/gameplay`,\r\n                                state: {\r\n                                    sceneId: response.data.scene._id,\r\n                                    gameId: gameId,\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n            } else if (response.data.msg === 'expired') {\r\n                message.error(\"제작 유효기간이 만료되었습니다..\", 1.0);\r\n                props.history.replace({\r\n                    pathname: `/gameplay`,\r\n                    state: {\r\n                        sceneId: response.data.prevSceneId,\r\n                        gameId: gameId,\r\n                    }\r\n                })\r\n                return;\r\n            }\r\n            else {\r\n                message.error(\"DB에 문제가 있습니다.\");\r\n            }\r\n\r\n        } else {\r\n            message.error(\"제출 취소\");\r\n        }\r\n    };\r\n\r\n    const onTmpSave = (event) => {\r\n        onSubmit_saveScene(event, 1);\r\n    }\r\n\r\n    const onSetModal = () => {\r\n        setMakeModalState(1);\r\n    }\r\n\r\n    const [gameDetail, setGameDetail] = useState([]);\r\n    const [sideBar, setSideBar] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/game/getgamedetail', { gameId: gameId })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setGameDetail(response.data.gameDetail)\r\n                } else {\r\n                    alert('게임 정보를 로딩하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }, [reload, gameId])\r\n\r\n\r\n    useEffect(() => {\r\n        if (gameDetail.character) {\r\n            const reload_Sidebar = (< div className=\"sideBar\">\r\n                <div ref={characterSidebarElement}>\r\n                    <CharacterModal\r\n                        setName={setName}\r\n                        GameCharacterList={gameDetail.character}\r\n                    />\r\n                    <CharacterSideBar\r\n                        gameDetail={gameDetail}\r\n                        setMakeModalState={setMakeModalState}\r\n                        setName={setName}\r\n                    />\r\n                </div>\r\n                <div ref={backgroundSidebarElement} style={{ display: 'none' }}>\r\n                    <BackgroundSideBar\r\n                        gameDetail={gameDetail}\r\n                        setBackgroundImg={setBackgroundImg}\r\n                        setMakeModalState={setMakeModalState}\r\n                    />\r\n                </div>\r\n                <div ref={bgmSidebarElement} style={{ display: 'none' }}>\r\n                    <BgmSideBar\r\n                        gameDetail={gameDetail}\r\n                        bgm_audio={bgm_audio}\r\n                        setBgmFile={setBgmFile}\r\n                        setMakeModalState={setMakeModalState}\r\n                    />\r\n                </div>\r\n                <div ref={soundSidebarElement} style={{ display: 'none' }}>\r\n                    <SoundSideBar\r\n                        gameDetail={gameDetail}\r\n                        sound_audio={sound_audio}\r\n                        setSoundFile={setSoundFile}\r\n                        setMakeModalState={setMakeModalState}\r\n                    />\r\n                </div>\r\n            </div>)\r\n            setSideBar(reload_Sidebar)\r\n        }\r\n    }, [gameDetail, CharacterList, reload])\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setwindowWidth(window.innerWidth);\r\n            setwindowHeight(window.innerHeight);\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n        if (windowWidth * ratio > windowHeight) {\r\n            setNewScreenSize({\r\n                width: `${windowHeight * (1 - 2 * padding) / ratio}px`,\r\n                height: `${windowHeight * (1 - 2 * padding)}px`,\r\n                minWidth: `${minSize / ratio}px`,\r\n                minHeight: `${minSize}px`\r\n            })\r\n        } else {\r\n            setNewScreenSize({\r\n                width: `${windowWidth * (1 - 2 * padding)}px`,\r\n                height: `${windowWidth * (1 - 2 * padding) * ratio}px`,\r\n                minWidth: `${minSize}px`,\r\n                minHeight: `${minSize * ratio}px`\r\n            })\r\n        }\r\n    }, [window.innerWidth, window.innerHeight]);\r\n\r\n    const onLeft = () => {\r\n        if (CutNumber !== 0) {\r\n            saveCut();\r\n            displayCut(CutNumber - 1);\r\n            setCutNumber(CutNumber - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"box title\">\r\n                <span>[{gameDetail?.title}]</span>\r\n                {/* <span>제작 유효기간: 2020.01.02 {exp}</span> */}\r\n                <div className=\"box title-btn\">상세정보</div>\r\n            </div>\r\n            <SceneBox\r\n                CutList={CutList}\r\n                CutNumber={CutNumber}\r\n                displayCut={displayCut}\r\n                setCutNumber={setCutNumber}\r\n                Hover={Hover}\r\n                setHover={setHover}\r\n                EmptyCutList={EmptyCutList}\r\n                saveCut={saveCut}\r\n            />\r\n\r\n            <div className=\"scene\">\r\n                <div className=\"scene left-arrow\"\r\n                    onClick={onLeft}>\r\n                    <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color=\"#F5F5F5\" />\r\n                </div>\r\n                <div\r\n                    className=\"backgroundImg\"\r\n                    id=\"backgroundImg_container\"\r\n                    style={{ overflow: \"hidden\" }}\r\n                >\r\n\r\n                    <img\r\n                        className=\"backgroundImg\"\r\n                        // id=\"backgroundImg_container\"\r\n                        src={`${BackgroundImg}`}\r\n                        alt=\"img\"\r\n                    />\r\n                    <CharacterBlock\r\n                        GameCharacterList={gameDetail.character}\r\n                        onRemovech_aracter={onRemove_character}\r\n                    />\r\n                    {SidBar_script && Script && (\r\n                        <TextBlock\r\n                            cut_name={Name ? Name : \"이름을 입력해주세요.\"}\r\n                            cut_script={Script ? Script : \"대사를 입력해주세요.\"}\r\n                            setIsTyping={null}\r\n                            isTyping={null}\r\n                            theme={null}\r\n                        />\r\n                    )}\r\n                    <div className=\"scene__sound_container\">\r\n                        {BgmFile.name ? (\r\n                            <div\r\n                                onClick={onClick_bgm_player}\r\n                            >\r\n                                {\r\n                                    BgmFile.name && bgm_audio.paused &&\r\n                                    <PlayCircleOutlined\r\n                                        style={{ fontSize: \"20px\" }} />\r\n                                }\r\n                                {\r\n                                    BgmFile.name && !bgm_audio.paused &&\r\n                                    <PauseCircleOutlined\r\n                                        style={{ fontSize: \"20px\" }} />\r\n                                }\r\n                                {BgmFile.name}\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <StopOutlined\r\n                                    style={{ fontSize: \"20px\" }}\r\n                                />\r\n                            BGM\r\n                            </div>\r\n                        )}\r\n                        {SoundFile.name ? (\r\n                            <div\r\n                                onClick={onClick_sound_player}\r\n                            >\r\n                                {\r\n                                    BgmFile.name && sound_audio.paused &&\r\n                                    <PlayCircleOutlined\r\n                                        style={{ fontSize: \"20px\" }} />\r\n                                }\r\n                                {\r\n                                    BgmFile.name && !sound_audio.paused &&\r\n                                    <PauseCircleOutlined\r\n                                        style={{ fontSize: \"20px\" }} />\r\n                                }\r\n                                {SoundFile.name}\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <StopOutlined\r\n                                    style={{ fontSize: \"20px\" }}\r\n                                />\r\n                            Sound\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"scene right-arrow\"\r\n                    onClick={CutNumber < 29 && onSubmit_nextCut}>\r\n                    <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color={CutNumber < 29 ? \"#F5F5F5\" : \"black\"} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"scene__btn_top\">\r\n\r\n                <div className=\"scene_btn\"\r\n                    onClick={onSetModal}>\r\n                    에셋 추가\r\n                </div>\r\n                <div className=\"scene_btn\"\r\n                    onClick={onTmpSave}>\r\n                    임시 저장\r\n                </div>\r\n                {isFirstScene ?\r\n                    <div className=\"scene_btn scene_btn_blue\"\r\n                        onClick={onSubmit_first}>\r\n                        완료\r\n                        </div>\r\n                    : <div className=\"scene_btn scene_btn_blue\"\r\n                        onClick={onSubmit_saveScene}>\r\n                        완료\r\n                        </div>\r\n                }\r\n\r\n            </div>\r\n            <div className=\" btn_side\">\r\n                <div\r\n                    className=\"scene_side_btn\"\r\n                    onClick={onClick_character}\r\n                >캐릭터</div>\r\n                <div\r\n                    className=\"scene_side_btn\"\r\n                    onClick={onClick_background}\r\n                >배경</div>\r\n\r\n                <div className=\"scene_side_btn\" onClick={onClick_bgm}>\r\n                    배경음\r\n                    </div>\r\n                <div className=\"scene_side_btn\" onClick={onClick_sound}>\r\n                    효과음\r\n                    </div>\r\n            </div>\r\n            {sideBar !== 0 && sideBar}\r\n            <div\r\n                className=\"textbox_name\">\r\n                <div className=\"textbox__name_block_btn\">\r\n                    <SVG src=\"arrow_1\" width=\"15\" height=\"25\" color=\"#FFFFFF\" />\r\n                </div>\r\n            </div>\r\n            <input\r\n                onChange={onNameChange}\r\n                placeholder=\"이름\"\r\n                value={Name}\r\n                ref={nameElement}\r\n                className=\"textbox_name\"\r\n            />\r\n            <div className=\"textbox_bottom\">\r\n                <div className=\"enter\"\r\n                    onClick={onSubmit_nextCut}>\r\n                    Enter\r\n                    <br />\r\n                    {CutNumber + 1}/30\r\n                </div>\r\n                <textarea\r\n                    onChange={onScriptChange}\r\n                    value={Script}\r\n                    placeholder=\"대사가 없으면 스크립트 창이 표시되지 않습니다.\"\r\n                    className=\"textbox_script\"\r\n                    ref={scriptElement}\r\n                />\r\n            </div>\r\n            <div className=\"options\">\r\n                <div className=\"scene_btn\"\r\n                    onClick={onRemove_cut}>\r\n                    컷 삭제\r\n                </div>\r\n                <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >On/Off</div>\r\n                <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >Preview</div>\r\n                <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >배경음 음소거</div>\r\n                <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >효과음 음소거</div>\r\n                <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >테마 선택(개발자)</div>\r\n            </div>\r\n\r\n            <UploadModal\r\n                gameId={gameId}\r\n                visible={uploadModalState}\r\n                setUploadModalState={setUploadModalState}\r\n                onSubmit_saveScene={onSubmit_saveScene}\r\n                defaultTitle={gameDetail.title}\r\n                defaultDescription={gameDetail.description}\r\n            />\r\n            {\r\n                makeModalState !== 0 && <SceneMakeModal\r\n                    gameId={gameId}\r\n                    visible={Boolean(makeModalState)}\r\n                    setTag={setMakeModalState}\r\n                    tag={makeModalState}\r\n                    setReload={setReload}\r\n                />\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SceneMakePage;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { USER_SERVER } from \"../../../Config\";\r\nimport { withRouter ,Link} from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction RightMenu(props) {\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const logoutHandler = () => {\r\n        axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n            if (response.status === 200) {\r\n                props.history.push(\"/login\");\r\n            } else {\r\n                alert(\"Log Out Failed\");\r\n            }\r\n        });\r\n    };\r\n\r\n    if (user.userData && !user.userData.isAuth) {\r\n        return (\r\n            <Menu mode={props.mode}>\r\n                <Menu.Item key=\"login\">\r\n                    <Link to=\"/login\">로그인</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"register\">\r\n                    <Link to=\"/register\">회원가입</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    } else {\r\n        return (\r\n            <Menu mode={props.mode}>\r\n                <Menu.Item key=\"profile\">\r\n                    {user?.userData?._id ? \r\n                        <Link to={`/profile/${user.userData._id}`}>프로필</Link>\r\n                        :\r\n                        \"프로필\"\r\n                    }\r\n                </Menu.Item>\r\n                <Menu.Item key=\"logout\">\r\n                    <Link to=\"/\" onClick={logoutHandler}>로그아웃</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","import React, { memo, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RightMenu from \"./Sections/RightMenu\";\r\nimport { Drawer, Button, Icon } from \"antd\";\r\nimport \"./Sections/Navbar.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ninterface State_controlpage {\r\n  controlpage: {\r\n    navbarOn: boolean;\r\n  }\r\n}\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n  const navbarOn: boolean = useSelector((state: State_controlpage) => state.controlpage.navbarOn);\r\n  let style = {};\r\n\r\n  const showDrawer = ():void => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = ():void => {\r\n    setVisible(false);\r\n  };\r\n  \r\n  if (navbarOn) {\r\n    style = { position: \"fixed\", zIndex: 5, width: \"100%\" };\r\n  } else {\r\n    style = {\r\n      position: \"fixed\",\r\n      zIndex: 5,\r\n      width: \"100%\",\r\n      // transform: \"translate(0,-69px)\",\r\n      opacity: 0,\r\n      animation: \"0.8s ease-out 0s 1 hide\",\r\n    };\r\n  }\r\n  \r\n  return (\r\n    <nav className=\"menu\" style={style}>\r\n      <div className=\"menu__logo\">\r\n        <Link to=\"/\">NEVER ENDING</Link>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"NEVER ENDING\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default memo(NavBar);\r\n","import React from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer_container\">\r\n      <p>\r\n        Mutsad 화이팅 <Icon type=\"smile\" />\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport io from 'socket.io-client';\r\n\r\nimport Auth from \"../hoc/auth\";\r\nimport Valid from \"../hoc/valid\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\n\r\nimport LoginPage from \"./views/LoginPage/LoginPage.tsx\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.tsx\";\r\nimport Profile from './views/Profile/Profile.tsx';\r\n\r\nimport GameDetailPage from './views/GameDetailPage/GameDetailPage.js';\r\nimport GameUploadPage from \"./views/GameUploadPage/GameUploadPage.js\";\r\nimport GameBuildUpPage from \"./views/GameUploadPage/GameBuildUpPage.js\";\r\nimport GamePlayPage from \"./views/GamePlayPage/GamePlayPage.js\";\r\nimport SceneMakePage from \"./views/Scene/SceneMakePage/SceneMakePage\";\r\nimport SceneMakePage2 from \"./views/Scene/SceneMakePage/SceneMakePage2\";\r\n\r\nimport NavBar from \"./views/NavBar/NavBar.tsx\";\r\nimport Footer from \"./views/Footer/Footer.tsx\"\r\nimport { LOCAL_HOST } from './Config';\r\nimport './App.css';\r\n\r\nconst config = require('../config/key');\r\n// export let socket = io(`http://${LOCAL_HOST}:5000`, {transports : ['websocket']});\r\nexport let socket = io(config.SOCKET, {transports : ['websocket']});\r\nexport const MS_PER_HR = 3600000\r\n\r\nwindow.onpopstate = () => {\r\n  window.location.reload();\r\n};\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={(<div>Loading...</div>)}>\r\n      <NavBar />\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n          <Route exact path=\"/profile/:userId\" component={Auth(Profile, true)} />\r\n          <Route exact path=\"/game/upload\" component={Auth(GameUploadPage, true)} />\r\n          <Route path=\"/game/:gameId\" component={Auth(GameDetailPage, null)} />\r\n          <Route path=\"/gameplay\" component={Valid(Auth(GamePlayPage, null))} />\r\n          <Route exact path=\"/scene/make2\" component={Valid(Auth(SceneMakePage, true))} />\r\n          <Route exact path=\"/scene/make\" component={Valid(Auth(SceneMakePage2, true))} />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { NAVBAR_CONTROL } from \"../_actions/types\";\r\n\r\nconst initialState = { navbarOn : true };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case NAVBAR_CONTROL:\r\n      return { ...state, navbarOn: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { LOADINGPAGE_GAMEPLAY, PAUSE_GAMEPLAY } from \"../_actions/types\";\r\n\r\nconst initialState = { loadingType: 0, isPause: false };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADINGPAGE_GAMEPLAY:\r\n      return { ...state, loadingType: action.payload };\r\n    case PAUSE_GAMEPLAY:\r\n      return { ...state, isPause: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SELECT_CHARACTER,\r\n  DETACH_CHARACTER,\r\n  PUSH_CHARACTER,\r\n  POP_CHARACTER,\r\n  UPDATE_CHARACTER,\r\n  SET_CHARACTER_LIST\r\n} from '../_actions/types';\r\n\r\nconst initialState = {\r\n  description: \"\",\r\n  image: \"\",\r\n  image_array: [],\r\n  name: \"\",\r\n  _id: \"\",\r\n  index: -1\r\n}\r\n\r\nexport default function (state = { characterSelected: initialState, CharacterList: [] }, action) {\r\n\r\n  switch (action.type) {\r\n    case SELECT_CHARACTER:\r\n      return { ...state, characterSelected: action.payload }\r\n    case DETACH_CHARACTER:\r\n      return { ...state, characterSelected: initialState }\r\n    case PUSH_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    case POP_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    case UPDATE_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    case SET_CHARACTER_LIST:\r\n      return { ...state, CharacterList: action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  SELECT_DISPLAYED\r\n} from '../_actions/types';\r\n\r\nconst initialState = {index: -1}\r\n                      \r\nexport default function(state={characterDisplayed : initialState},action){\r\n\r\n  switch(action.type){\r\n      case SELECT_DISPLAYED:\r\n          return {...state, characterDisplayed: action.payload }\r\n      default:\r\n          return state;\r\n  }\r\n}","import { \r\n  SELECT_MOVINGTARGET, DETACH_MOVINGTARGET \r\n} from \"../_actions/types\";\r\n\r\n\r\nconst initialState = { movingTarget: -1 };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SELECT_MOVINGTARGET:\r\n      return { ...state, movingTarget: action.payload };\r\n    case DETACH_MOVINGTARGET:\r\n      return { ...state, movingTarget: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user_reducer\";\r\nimport controlpage from \"./controlPage_reducer\";\r\nimport gameplay from \"./gamePlay_reducer\";\r\nimport sync from './sync_reducer';\r\nimport character from \"./characterSelected_reducer\";\r\nimport characterDisplayed from \"./characterDisplayed_reducer\";\r\nimport movingTarget from \"./movingTarget_reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  controlpage,\r\n  gameplay,\r\n  sync,\r\n  character,\r\n  characterDisplayed,\r\n  movingTarget,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    LOAD_EMPTY_NUM,\r\n    SAVE_PREV_SCENE\r\n} from '../_actions/types';\r\n\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case LOAD_EMPTY_NUM:\r\n            return { ...state, emptyNum: action.payload }\r\n        case SAVE_PREV_SCENE:\r\n            return { ...state, prevSceneId: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","if (process.env.NODE_ENV === 'production') {\r\n    module.exports = require('./prod');\r\n} else {\r\n    module.exports = require('./dev');\r\n}","import React from \"react\";\r\nimport { Modal, Form, Input, Radio } from \"antd\";\r\nimport \"./TitleModalForm.css\"\r\n\r\nconst ModalFormComponent = ({ visible, onCancel, onCreate, form }) => {\r\n    const { getFieldDecorator } = form;\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"어떤 이야기를 만드실건가요?\"\r\n            okText=\"제작\"\r\n            cancelText=\"취소\"\r\n            onCancel={onCancel}\r\n            onOk={onCreate}c\r\n            closable = {false}\r\n        >\r\n            <Form layout=\"vertical\">\r\n                <Form.Item label=\"제목\">\r\n                    {getFieldDecorator(\"title\", {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: \"제목을 입력해주세요!\"\r\n                            }\r\n                        ]\r\n                    })(<Input />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"게임 설명\">\r\n                    {getFieldDecorator(\"description\")(<Input type=\"textarea\"/>)}\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst TitleModalForm = Form.create({ name: \"modal_form\" })(ModalFormComponent);\r\n\r\nexport  {TitleModalForm};\r\n","module.exports = {\r\n    STORAGE: 'https://neverending.s3.ap-northeast-2.amazonaws.com/original',\r\n    SERVER: 'http://15.164.48.192:80',\r\n    CLIENT: 'http://13.209.68.246:80',\r\n    SOCKET: 'http://13.124.130.199:5001'\r\n}"],"sourceRoot":""}