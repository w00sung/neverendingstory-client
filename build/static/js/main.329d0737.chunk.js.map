{"version":3,"sources":["components/views/Modal/TitleModalForm.js","config/prod.js","_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","hoc/valid.js","components/views/LandingPage/LandingPage_banners.tsx","components/views/LandingPage/LandingPage_buttons.tsx","components/svg/icon.js","components/views/LandingPage/LandingPage_gameLists.tsx","_actions/controlPage_actions.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.tsx","components/views/RegisterPage/RegisterPage.tsx","components/views/Profile/ContributedGame/ContributedGame.tsx","components/views/Profile/Profile.tsx","components/views/Comment/SingleReply.js","components/views/Comment/SingleComment.js","components/views/Comment/Comment.js","components/views/GameDetailPage/TopRatingContributer.js","components/views/GameDetailPage/GameDetailPage.js","components/views/GameUploadPage/GameUploadPage.js","components/views/GameUploadPage/GameBuildUpPage.js","components/views/GamePlayPage/GameCharacterBlock.js","components/functions/useKey.js","components/views/Modal/InputModalForm.js","_actions/gamePlay_actions.js","components/views/Modal/InputModal.js","components/functions/useMouse.js","components/views/GamePlayPage/TextAnimation.js","components/views/Scene/SceneTeleport/FirstSceneTeleport.js","components/views/Scene/SceneTeleport/PrevSceneTeleport.js","components/views/Scene/SceneEndingPage/SceneEndingPage.js","components/views/GamePlayPage/TextBlock.js","components/views/GamePlayPage/Dislike.js","components/views/GamePlayPage/HistoryMap.js","components/views/GamePlayPage/LoadingPage.js","_actions/sync_actions.js","utils/useFullscreenStatus.js","components/views/GamePlayPage/TreeMap.js","components/views/GamePlayPage/GamePlayPage.js","components/views/Scene/SceneMakePage/SideBar/BackgroundImg.js","components/views/Scene/SceneMakePage/SideBar/BackgroundSideBar.js","_actions/characterSelected_actions.js","components/views/Scene/SceneMakePage/SideBar/CharacterImg.js","components/views/Scene/SceneMakePage/SideBar/CharacterSideBar.js","components/views/Scene/SceneMakePage/SideBar/BgmFile.js","components/views/Scene/SceneMakePage/SideBar/BgmSideBar.js","components/views/Scene/SceneMakePage/SideBar/SoundFile.js","components/views/Scene/SceneMakePage/SideBar/SoundSideBar.js","components/views/Scene/SceneMakePage/Tab/SceneMakeModalTab.js","components/views/Dropzone/MyDropzone.js","components/views/Scene/SceneMakePage/Tab/CharacterTab.js","components/views/Scene/SceneMakePage/Tab/BackgroundTab.js","components/views/Scene/SceneMakePage/Tab/BgmTab.js","components/views/Scene/SceneMakePage/Tab/SoundTab.js","components/views/Scene/SceneMakePage/SceneMakeModal.js","components/views/Scene/SceneMakePage/UploadModal.js","components/functions/handleEventListener.js","components/functions/CharacterModal/Character.js","components/views/GamePlayPage/CharacterBlock.js","components/functions/CharacterModal/CharacterInfoDisplay/CharacterInfoDisplay.js","components/functions/CharacterModal/CharacterModal.js","components/views/Scene/SceneMakePage/SceneBox/SceneBox.js","components/views/Scene/SceneMakePage/SceneMakePage.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.tsx","components/views/Footer/Footer.tsx","components/App.js","serviceWorker.js","_reducers/controlPage_reducer.js","_reducers/gamePlay_reducer.js","_reducers/characterSelected_reducer.js","_reducers/characterDisplayed_reducer.js","_reducers/movingTarget_reducer.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/sync_reducer.js","index.js","config/key.js","../../node_modules/require_optional sync"],"names":["TitleModalForm","Form","create","name","visible","onCancel","onCreate","getFieldDecorator","form","title","okText","cancelText","onOk","c","closable","layout","Item","label","rules","required","message","type","module","exports","STORAGE","SERVER","CLIENT","SOCKET","registerUser","dataToSubmit","payload","axios","post","then","response","data","auth","get","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","replace","push","Validate","location","useLocation","undefined","Banner_main1","className","require","NewGameButton","useState","setVisible","formRef","setFormRef","uploadGameFrame","description","a","Axios","gameResponse","success","alert","firstScene","gameId","game","_id","prevSceneId","sceneDepth","isFirst","sceneResponse","setTimeout","pathname","sceneId","saveFormRef","useCallback","node","onClick","ref","validateFields","err","values","resetFields","svg","arrow_1","playIcon_1","close_1","close_2","SVG","src","color","width","height","viewBox","fill","xmlns","d","BAR","SCENE_ICON","id","x","y","GameList","games","length","gameList","map","index","thumbnailPath","first_scene","thumbnail","key","to","alt","sceneCnt","category","limit","Math","round","bars","i","style","filter","onMouseEnter","target","bar","arrow","document","getElementById","pos","Error","display","String","transform","opacity","mouseOnEvent","onMouseLeave","mouseOffEvent","container","ContainerToLeft","ContainerToRight","navbarControl","navbarOn","ListContainer","recent_games","popular_games","LandingPage","setGames","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","min","onSubmit","setSubmitting","loginUser","loginSuccess","window","setItem","removeItem","catch","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","prefix","placeholder","value","onChange","onBlur","checked","disabled","RegisterPage","nickname","confirmPassword","oneOf","flag","usedEmail","image","errmsg","labelAlign","labelCol","span","wrapperCol","hasFeedback","validateStatus","ContributedGame","createdAt","gameDetail","setGameDetail","view","setView","like","isClick","thumbsUp","setThumbsUp","ObjectId","objectId","isClicked","thumbsup","slice","icon","faFile","marginLeft","faEye","faHeart","Profile","userId","match","params","currUserData","userData","makingGameList","contributedSceneList","contributedGameList","setUser","gameContentsNumber","setGameContentsNumber","sceneContentsNumber","setSceneContentsNumber","totalSceneContribute","setTotalSceneContribute","totalGameContribute","setTotalGameContribute","tmp","error","onClick_tab","element","contributedScene","displayContributedScene","contributedGame","displayContributedGame","memo","comment","updateToggle_comment","user_id","isEdit","setIsEdit","editComment","setEditComment","setLike","update","setUpdate","updateToggle","like_variable","commentId","result","writer","event","currentTarget","e","preventDefault","content","reference","useRef","commentContent","setCommentContent","Replys","setReplys","writeReply","setWriteReply","showComment","setShowComment","comment_variable","responseTo","toString","mapReply","reply","current","variables","comments","setComments","fetching","setFetching","totalComment","setTotalComment","contentNumber","setContentNumber","fetchNextData","handleScroll","scrollHeight","documentElement","scrollTop","clientHeight","addEventListener","removeEventListener","mapComment","TopRatingContributer","contributerList","totalSceneCnt","creatorNickname","topRateContributer_SceneCnt","userSceneCnt","topContributer","contributer","contributeRatio","fakeRatio","substr","GameDetailPage","variable","setSceneId","isMaking","setIsMaking","thumbsUpClicked","setThumbsUpClicked","setTotalSceneCnt","ContributerCnt","setContributerCnt","setContributerList","isPlayed","setIsPlayed","playFirstScene","console","log","socket","emit","scene_id","prevOfLastScene","teleportSceneId","topRank","contributerCnt","gamePlaying","sceneIdList","creator","TextArea","Input","Title","Typography","PrivateOptions","CategoryOptions","GameUploadPage","GameTitle","setGameTitle","setDescription","isPrivate","setIsPrivate","setCategory","ratio","setRatio","filePath","setFilePath","onRatioChange","floatRatio","game_variables","privacy","character","background","bgm","sound","maxWidth","margin","textAlign","marginBottom","level","justifyContent","onDrop","files","formData","FormData","append","header","url","multiple","maxSize","getRootProps","getInputProps","border","alignItems","fontSize","item","cat_idx","text","size","GameBuildUpPage","GameCharacterBlock","characterList","characterblocks","charSchema","left","posX","top","posY","useKey","cb","callbackRef","handle","code","shiftKey","ModalForm","remainTime","input","focus","gameLoadingPage","loadingType","gamePause","isPause","decTimer","scene_depth","game_id","scene_next_list","theme","useHistory","emptyNum","sync","setRemainTime","decreaseTimer","setDecreaseTimer","validated","setValidated","createFlag","cancelHandler","clearTimeout","dino","setDino","off","on","tick","setInterval","clearInterval","res","exp","useMouse","TextAnimation","cut_script","setIsTyping","setFlag","useWindupString","pace","onFinished","skip","handleEnter","FirstSceneTeleport","setScene","isWarningVisible","setIsWarningVisible","Fragment","maskClosable","centered","footer","PrevSceneTeleport","SceneEndingPage","TextBlock","cut_name","isTyping","TextBlockChoice","isEnding","isLastMotion","choices","choice","textDecoration","script","DislikePopup","trigger","setTrigger","setTitle","Description","MapToLeft","getElementsByClassName","getComputedStyle","getPropertyValue","new_position","parseInt","split","MapToRight","sceneInfo","targetScene","HistoryMapPopup","userhistory","SceneInfo","setSceneInfo","isModalVisible","setIsModalVisible","sceneinfo","HistoryMap_scenes","scene","sceneIndex","close","click","GoToScene","LOADING_TYPE","LoadingPage","gameplay","animation","loadEmptyNum","sceneTmp","getBrowserFullscreenElementProp","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","sceneMap","link","pivot","position","drag","TreeMapPopup","Position","setPosition","mouseDown","pageX","pageY","mouseUp","mouseMove","callBack","hasBeenCalled","setHasBeenCalled","useConstructor","depth","cnt_limit","cnt","TreeMap_nodes","nodeWidth","pow","SceneDepth","bgm_audio","Audio","volume","sound_audio","ProductScreen","isFullscreen","setIsFullscreen","errorMessage","userHistory","innerWidth","windowWidth","setwindowWidth","innerHeight","windowHeight","setwindowHeight","setI","Scene","Dislike","setDislike","History","setHistory","HistoryMap","setHistoryMap","TreeMap","setTreeMap","lastMotion","setLastMotion","setIsClicked","maximizableElement","elRef","React","useLayoutEffect","onfullscreenchange","requestFullscreen","useFullscreenStatus","handleChoice","newNextList","nextList","newScene","setVolume","muted","setMuted","tempVolume","volumeControl","isFirstCut","setIsFirstCut","playMusic","cutList","music","pause","play","variable_thumbsup","variable_view","room","inner","newScreenSize","padding","minWidth","minHeight","minSize","max","step","exitFullscreen","faCompress","faExpand","BackgroundImg","imgUrl","setBackgroundImg","renderBackground","setMakeModalState","selectCharacter","popCharacter","request","oldArray","info","splice","setCharacterList","CharacterList","CharacterImg","image_array","setName","renderCharacter","BgmFile","setBgmFile","renderBgm","SoundFile","setSoundFile","renderSound","SceneMakeModalTab","setTag","tag","MyDropzone","accept","blobURL","FileAddOutlined","CharacterTab","blobGame","setBlobGame","charPageNum","setCharFileQueue","setCharBlobList","characterProfile","setCharacterProfile","characterCards","setCharacterCards","isUpdate","setIsUpdate","indexNum","onNameChange","num","onDescriptionChange","curURL","URL","createObjectURL","Number","array","cards","path","BackgroundTab","setFileQueue","setTypeQueue","setBackBlobList","backBlobList","backgroundCards","setBackgroundCards","blobCards","setBlobCards","BgmTab","setBgmBlobList","bgmBlobList","setBgmBlobNames","bgmBlobNames","bgmCards","setBgmCards","SoundTab","setSoundBlobList","soundBlobList","setSoundBlobNames","soundBlobNames","soundCards","setSoundCards","SceneMakeModal","setReload","setGame","fileQueue","typeQueue","charFileQueue","charBlobList","_","cloneDeep","revokeBlobList","forEach","revokeObjectURL","uploadFlag","uploadCharFiles","j","fileNum","Array","from","uploadCharDB","DBForm","reload","uploadFiles","uploadDB","originalname","UploadModal","setUploadModalState","onSubmit_saveScene","defaultTitle","defaultDescription","setBlobURL","thumbFile","setThumbFile","upload","uploadThumb","config","uploadGame","_eventHandlers","addEvent","handler","capture","removeAllEvents","handlers","eventHandlers","GameCharacterList","element_X","element_Y","clicked","moving","setMoving","sizing","setSizing","imgWidth","setImgWidth","background_element","page","background_width","offsetWidth","background_height","offsetHeight","prev_posX","prev_posY","next_posX","next_posY","image_width","prev_size","next_size","stopPropagation","onMouseUp","onMouseDown","updateCharacter","faTimesCircle","onMouseOver","onMouseOut","onRemove_character","onClick_putCharacter","characterSchema","reverse","pushCharacter","characterDetailImages","onClick_selectCharacter","currentCharacter","setIsAdded","characterSelected","CutList","CutNumber","displayCut","setCutNumber","Hover","EmptyCutList","setHover","saveCut","onClick_GotoCut","display_SceneBox","Cut","display_EmptyBox","EmptyCut","SceneMakePage","returnValue","back","maxCount","setNewScreenSize","makeModalState","uploadModalState","SidBar_script","setSidBar_script","Script","setScript","Name","isFirstScene","setIsFirstScene","setCutList","setEmptyCutList","validation","tmpFirstCut","lastCut","characterSidebarElement","backgroundSidebarElement","bgmSidebarElement","soundSidebarElement","scriptElement","nameElement","makeVisible","makeInvisible","onClick_script","activeElement","onSubmit_nextCut","warning","oldNumber","isTmp","submitCut","submitCutList","confirm","loading","msg","sideBar","setSideBar","reload_Sidebar","overflow","onRemovech_aracter","paused","PlayCircleOutlined","PauseCircleOutlined","StopOutlined","TEXT_MAX_LENGTH","maxlength","Boolean","mode","status","controlpage","zIndex","placement","onClose","Footer","io","transports","onpopstate","App","fallback","exact","component","Auth","LoginPage","Valid","GamePlayPage","hostname","initialState","movingTarget","rootReducer","combineReducers","action","register","loginSucces","characterDisplayed","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","keys","resolve"],"mappings":"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","file":"static/js/main.329d0737.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Modal, Form, Input, Radio } from \"antd\";\r\nimport \"./TitleModalForm.css\"\r\n\r\nconst ModalFormComponent = ({ visible, onCancel, onCreate, form }) => {\r\n    const { getFieldDecorator } = form;\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"어떤 이야기를 만드실건가요?\"\r\n            okText=\"제작\"\r\n            cancelText=\"취소\"\r\n            onCancel={onCancel}\r\n            onOk={onCreate}c\r\n            closable = {false}\r\n        >\r\n            <Form layout=\"vertical\">\r\n                <Form.Item label=\"제목\">\r\n                    {getFieldDecorator(\"title\", {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: \"제목을 입력해주세요!\"\r\n                            }\r\n                        ]\r\n                    })(<Input />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"게임 설명\">\r\n                    {getFieldDecorator(\"description\")(<Input type=\"textarea\"/>)}\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst TitleModalForm = Form.create({ name: \"modal_form\" })(ModalFormComponent);\r\n\r\nexport  {TitleModalForm};\r\n","module.exports = {\r\n    STORAGE: 'https://iovar.s3.ap-northeast-2.amazonaws.com/original',\r\n    SERVER: 'http://54.180.24.213:80',\r\n    CLIENT: 'http://13.209.68.246:80',\r\n    SOCKET: 'https://www.iovar.co.kr'\r\n}","import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\r\n        .then(response => response.data);\r\n    \r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\n\r\nexport const LOAD_EMPTY_NUM = 'load_empty_num';\r\nexport const SAVE_PREV_SCENE = 'SAVE_PREV_SCENE';\r\n\r\nexport const LOADINGPAGE_GAMEPLAY = \"gameLoading_gamePlay\"\r\nexport const PAUSE_GAMEPLAY = \"pause_gamePlay\"\r\n\r\nexport const NAVBAR_CONTROL = \"navbar_control\";\r\n\r\nexport const SELECT_CHARACTER = \"select_character\";\r\nexport const DETACH_CHARACTER = \"detach_character\";\r\nexport const POP_CHARACTER = \"pop_character\";\r\nexport const PUSH_CHARACTER = \"push_character\";\r\nexport const UPDATE_CHARACTER = \"update_character\";\r\nexport const SET_CHARACTER_LIST = \"set_character_list\";\r\n\r\n\r\nexport const SELECT_MOVINGTARGET = \"select_movingtarget\";\r\nexport const DETACH_MOVINGTARGET = \"detach_movingtarget\"; \r\nexport const SELECT_DISPLAYED = \"select_displayed\";\r\n","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n// ip address ( please be careful... )\r\n// export const LOCAL_HOST = \"15.164.48.192\";\r\nexport const LOCAL_HOST = \"localhost\";\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.replace('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.replace('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nexport default function (SpecificComponent, adminRoute = null) {\r\n    function Validate(props) {\r\n        const location = useLocation();\r\n        useEffect(() => {\r\n            if (location.state === undefined) {\r\n                props.history.replace('/');\r\n            }\r\n        }, [])\r\n        if(location.state) {\r\n            return (\r\n                <SpecificComponent {...props}/>\r\n            )\r\n        }\r\n        else {\r\n            return <div>잘못된 접근입니다ㅋㅋ</div>\r\n        }\r\n    }\r\n    return Validate\r\n}\r\n\r\n\r\n","import React from \"react\"\r\nimport \"./LandingPage_banners.css\"\r\n\r\nexport function Banner_main1() {\r\n  return (<div className=\"banner-container banner-main1\">\r\n    <div className=\"banner-main1-slogan1\">NEVER ENDING</div>\r\n    <div className=\"banner-main1-slogan2\">함께 만드는 무한한 이야기</div>\r\n  </div>);\r\n}","import React, { useState, useCallback } from \"react\";\r\nimport \"./LandingPage_buttons.css\"\r\nimport \"antd/dist/antd.css\";\r\nimport Axios from \"axios\"\r\nimport { message } from \"antd\";\r\n\r\nconst {TitleModalForm}: any = require(\"../Modal/TitleModalForm\")\r\ninterface newGameButtonProps{\r\n    replace : Function;\r\n}\r\n\r\ninterface responseTypes{\r\n    data: {\r\n        game: {\r\n            _id:string;\r\n        }\r\n        sceneId: string;\r\n        success: boolean;\r\n    };\r\n}\r\n\r\nexport function NewGameButton({replace}:newGameButtonProps) {\r\n\r\n    const [visible, setVisible] = useState<any>(false);\r\n    const [formRef, setFormRef] = useState<any>(null);\r\n    // const [formRef, setFormRef] = useState<null | {validateFileds:any}></null>;\r\n\r\n\r\n\r\n    const uploadGameFrame = async (title : String, description:any) => {\r\n        // tmp scene create\r\n        const gameResponse : responseTypes = await Axios.post(\"/api/game/uploadgameframe\", {title, description});\r\n\r\n        if (!gameResponse.data.success) {\r\n            alert(\"game Frame제작 실패\");\r\n            return;\r\n        }\r\n\r\n        const firstScene = {\r\n            gameId: gameResponse.data.game._id,\r\n            prevSceneId: null,\r\n            sceneDepth: 0,\r\n            isFirst: 1,\r\n            title: \"\",\r\n        };\r\n\r\n        const sceneResponse : responseTypes = await Axios.post(\"/api/scene/create\", firstScene);\r\n        if (!sceneResponse.data.success) {\r\n            alert(\"scene Frame제작 실패\");\r\n            return;\r\n        }\r\n\r\n        message.success(\r\n            \"첫 Scene을 생성해주세요. 오른쪽의 버튼을 활용해 이미지들을 추가할 수 있습니다.\"\r\n        );\r\n        \r\n        setTimeout(() => {\r\n            replace({\r\n                pathname: `/scene/make`,\r\n                state: {\r\n                    gameId: gameResponse.data.game._id,\r\n                    sceneId: sceneResponse.data.sceneId,\r\n                },\r\n            });\r\n        }, 1000);\r\n    };\r\n    \r\n    const handleCreate = () => {\r\n        formRef?.validateFields((err: Error, values: {title : String, description : any}) => {\r\n            if (err) {\r\n                return;\r\n            }\r\n\r\n            // console.log(\"Received values of form: \", values.title);\r\n            uploadGameFrame(values.title, values.description);\r\n            formRef?.resetFields();\r\n            setVisible(false);\r\n        });\r\n\r\n    }\r\n\r\n    const saveFormRef = useCallback(node => {\r\n        if (node !== null) {\r\n            setFormRef(node);\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <button className=\"button-newgame\" onClick ={uploadGameFrame}>\r\n                NEW 게임 만들기\r\n            </button> */}\r\n            <button className=\"button-newgame\" onClick={() => setVisible(true)}>\r\n                NEW 게임 만들기\r\n            </button>\r\n        \r\n            <TitleModalForm \r\n                ref={saveFormRef}\r\n                visible={visible}\r\n                onCancel={() => setVisible(false)}\r\n                onCreate={() => handleCreate()}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nconst svg = {\r\n  arrow_1:\r\n    \"M-1.73589e-06 5.2875L16.6883 22.5L-2.31124e-07 39.7125L5.13765 45L27 22.5L5.13765 -2.24574e-07L-1.73589e-06 5.2875Z\",\r\n  playIcon_1:\r\n    \"M0.497437 0.796925V17.5524L15.8567 9.17468L0.497437 0.796925Z\",\r\n  close_1:\r\n    \"M11 0C4.917 0 0 4.917 0 11C0 17.083 4.917 22 11 22C17.083 22 22 17.083 22 11C22 4.917 17.083 0 11 0ZM16.5 14.949L14.949 16.5L11 12.551L7.051 16.5L5.5 14.949L9.449 11L5.5 7.051L7.051 5.5L11 9.449L14.949 5.5L16.5 7.051L12.551 11L16.5 14.949Z\",\r\n  close_2:\r\n    \"M10 0.600006C4.47 0.600006 0 5.07001 0 10.6C0 16.13 4.47 20.6 10 20.6C15.53 20.6 20 16.13 20 10.6C20 5.07001 15.53 0.600006 10 0.600006ZM15 14.19L13.59 15.6L10 12.01L6.41 15.6L5 14.19L8.59 10.6L5 7.01001L6.41 5.60001L10 9.19001L13.59 5.60001L15 7.01001L11.41 10.6L15 14.19Z\",\r\n};\r\n\r\nexport function SVG(props) {\r\n  const { src, color, width, height } = props;\r\n  return (\r\n    <svg\r\n      width={width ? width : \"auto\"}\r\n      height={height ? height : \"auto\"}\r\n      viewBox=\"0 0 27 45\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d={svg[src]} fill={color} />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function BAR(props) {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"3\"\r\n      viewBox=\"0 0 15 3\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <rect width=\"15\" height=\"3\" fill=\"white\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function SCENE_ICON(props) {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"15\"\r\n      id=\"fi_93839\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 348.462 348.462\"\r\n    >\r\n      <g>\r\n        <path  fill={\"white\"}\r\n          d=\"M330.725,112.541H83.178l238.875-64.006c0.038-0.01,0.074-0.025,0.111-0.036c0.035-0.009,0.07-0.013,0.105-0.023\r\n\t\tc4.001-1.072,6.375-5.185,5.304-9.186l-9.038-33.731c-0.515-1.921-1.772-3.559-3.495-4.554c-1.723-0.995-3.771-1.264-5.691-0.749\r\n\t\tL15.798,78.913c-4.001,1.072-6.375,5.185-5.304,9.185l8.824,32.931v219.932c0,4.142,3.358,7.5,7.5,7.5h303.907\r\n\t\tc4.142,0,7.5-3.358,7.5-7.5V120.041C338.225,115.898,334.867,112.541,330.725,112.541z M323.225,147.305h-31.319l19.764-19.764\r\n\t\th11.555V147.305z M34.318,147.305v-19.764h33.354l-19.764,19.764H34.318z M88.885,127.541h33.858l-19.616,19.616\r\n\t\tc-0.048,0.048-0.088,0.099-0.134,0.148H69.121L88.885,127.541z M143.956,127.541h35.859l-19.764,19.764h-35.859L143.956,127.541z\r\n\t\t M201.028,127.541h34.359l-19.764,19.764h-34.359L201.028,127.541z M256.305,127.835c0.095-0.095,0.178-0.196,0.266-0.294h33.886\r\n\t\tl-19.764,19.764h-33.858L256.305,127.835z M93.614,73.591c0.111,0.072,0.218,0.149,0.334,0.216l24.038,13.878l-33.67,9.022\r\n\t\tL59.917,82.62L93.614,73.591z M147.748,59.086l24.399,14.087l-33.67,9.022l-24.4-14.087L147.748,59.086z M201.91,44.573\r\n\t\tl24.399,14.087l-33.671,9.022l-24.399-14.087L201.91,44.573z M256.069,30.061l24.399,14.087l-33.698,9.029\r\n\t\tc-0.115-0.075-0.225-0.154-0.345-0.223L222.4,39.083L256.069,30.061z M311.143,35.929l-10.185,2.729l-24.399-14.087l29.428-7.885\r\n\t\tL311.143,35.929z M39.427,88.111l24.399,14.087l-31.745,8.506L26.924,91.46L39.427,88.111z M34.318,333.462V162.305h288.907\r\n\t\tv171.157H34.318z\"\r\n        ></path>\r\n        <path fill={\"white\"}\r\n          d=\"M290.354,207.162c4.142,0,7.5-3.358,7.5-7.5c0-4.142-3.358-7.5-7.5-7.5H63.825c-4.142,0-7.5,3.358-7.5,7.5\r\n\t\tc0,4.142,3.358,7.5,7.5,7.5h56.421v53.321H63.825c-4.142,0-7.5,3.358-7.5,7.5c0,4.142,3.358,7.5,7.5,7.5h226.528\r\n\t\tc4.142,0,7.5-3.358,7.5-7.5c0-4.142-3.358-7.5-7.5-7.5H239.54v-53.321H290.354z M224.54,260.483h-89.293v-53.321h89.293V260.483z\"\r\n        ></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { SVG, BAR, SCENE_ICON } from \"../../svg/icon\";\r\nimport \"./LandingPage_gameLists.css\"\r\nimport { LOCAL_HOST } from \"../../Config\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst config = require('../../../config/key')\r\ninterface Data {\r\n    category: string;\r\n    id: string;\r\n    length: 0,\r\n    pos: number;\r\n    limit: number;\r\n}\r\n\r\ninterface Game {\r\n    title: string;\r\n    _id: string;\r\n    thumbnail: string;\r\n    category: string;\r\n    first_scene: string;\r\n    sceneCnt:number;\r\n}\r\n\r\ninterface ContainerProps {\r\n    data: Data;\r\n    games: Game[];\r\n}\r\n\r\nfunction ContainerToRight(target: Data) {\r\n    if (target.pos < target.limit - 1) {\r\n        //* bar\r\n        var bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(50%)\";\r\n        }\r\n\r\n        //* change location\r\n        target.pos += 1;\r\n\r\n        //* container\r\n        var container = document.getElementById(target.id + \"_gameList\");\r\n        if (container === null) {\r\n            throw Error(\"can not find target container\")\r\n        } else {\r\n            container.style.transform = `translate(${-1336 * target.pos}px, 0px)`;\r\n        }\r\n        //* bar\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(100%)\";\r\n        }\r\n        //* arrows\r\n        if (target.pos == target.limit - 1) {\r\n            var arrow = document.getElementById(\r\n                target.id + \"_right_arrow\"\r\n            );\r\n            if (arrow === null) {\r\n                throw Error(\"can not find target arrow\")\r\n            } else {\r\n                arrow.style.display = \"none\";\r\n            }\r\n        }\r\n        arrow = document.getElementById(target.id + \"_left_arrow\");\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction ContainerToLeft(target: Data) {\r\n    if (target.pos > 0) {\r\n        //* bar\r\n        var bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(50%)\";\r\n        }\r\n\r\n        //* change location\r\n        target.pos -= 1;\r\n\r\n        //* container\r\n        var container = document.getElementById(target.id + \"_gameList\");\r\n        if (container === null) {\r\n            throw Error(\"can not find target container\")\r\n        } else {\r\n            container.style.transform = `translate(${-1336 * target.pos}px, 0px)`;\r\n        }\r\n        //* bar\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(100%)\";\r\n        }\r\n        //* arrows\r\n        if (target.pos == 0) {\r\n            var arrow = document.getElementById(\r\n                target.id + \"_left_arrow\"\r\n            );\r\n            if (arrow === null) {\r\n                throw Error(\"can not find target arrow\")\r\n            } else {\r\n                arrow.style.display = \"none\";\r\n            }\r\n        }\r\n        arrow = document.getElementById(target.id + \"_right_arrow\");\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction mouseOnEvent(target: Data) {\r\n    //* arrow right\r\n    let arrow = document.getElementById(\r\n        target.id + \"_right_arrow\"\r\n    );\r\n    if (target.pos < target.limit - 1) {\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n    //* arrow left\r\n    arrow = document.getElementById(\r\n        target.id + \"_left_arrow\"\r\n    );\r\n    if (target.pos > 0) {\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n    //* bar\r\n    let bar\r\n    for (let i = 0; i < target.limit; i++) {\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(i)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.transform = \"opacity(1)\";\r\n            bar.style.opacity = \"1\";\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction mouseOffEvent(target: Data) {\r\n    //* arrow right\r\n    let arrow = document.getElementById(\r\n        target.id + \"_right_arrow\"\r\n    );\r\n    if (arrow === null) {\r\n        throw Error(\"can not find target arrow\")\r\n    } else {\r\n        arrow.style.display = \"none\";\r\n    }\r\n    //* arrow left\r\n    arrow = document.getElementById(\r\n        target.id + \"_left_arrow\"\r\n    );\r\n    if (target.pos > 0) {\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"none\";\r\n            \r\n        }\r\n    }\r\n    //* bar\r\n    let bar\r\n    for (let i = 0; i < target.limit; i++) {\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(i)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.transform = \"opacity(0)\";\r\n            bar.style.opacity = \"0\";\r\n        }\r\n    }\r\n}\r\n\r\nexport function GameList(props: ContainerProps) {\r\n    const { data, games } = props;\r\n    //* game list\r\n    data.length = 0;\r\n    const gameList = games.map((game: Game, index: number) => {\r\n        if (game.first_scene) {\r\n            data.length += 1;\r\n            let thumbnailPath;\r\n            \r\n            if(process.env.NODE_ENV === \"production\")\r\n                thumbnailPath = game.thumbnail\r\n            else\r\n                thumbnailPath = `${config.STORAGE}/${game.thumbnail}`\r\n            return (\r\n                <div className=\"gamelist-game\" key={index}>\r\n                    <Link to={`/game/${game._id}`}>\r\n                        <img\r\n                            className=\"game-image\"\r\n                            src={thumbnailPath}\r\n                            alt={game.title}\r\n                        />\r\n                        <div className=\"game-title\">{game.title}</div>\r\n                    </Link>\r\n                    <div className=\"game-sceneNum\">{game.sceneCnt}</div>\r\n                    <div className=\"game-sceneIcon\"><SCENE_ICON/></div>\r\n                    <div className=\"game-category\">{game.category}</div>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    });\r\n\r\n    data.limit = Math.round(data.length / 4)\r\n\r\n    //* bars\r\n    const bars = [];\r\n    for (let i = data.limit - 1; i > 0; i--) {\r\n        bars.push(\r\n            <div id={`${data.id}_bar${i}`} className=\"bar\" key={`${i}`}>\r\n                <BAR />\r\n            </div>\r\n        )\r\n    }\r\n    bars.push(<div\r\n        id={`${data.id}_bar0`}\r\n        className=\"bar\"\r\n        style={{ filter: \"brightness(100%)\" }}\r\n        key={0}\r\n    >\r\n        <BAR />\r\n    </div>)\r\n\r\n    //* return component\r\n    return (\r\n        <div className=\"box-container game-box\">\r\n            <div className=\"box-title\">{data.category}</div>\r\n            <div className=\"box-positionBar\">\r\n                {bars}\r\n            </div>\r\n            <div className=\"box-gameList\"\r\n                onMouseEnter={() => { mouseOnEvent(data) }}\r\n                onMouseLeave={() => { mouseOffEvent(data) }}\r\n            >\r\n                <div\r\n                    id={`${data.id}_gameList`}\r\n                    className=\"gamelist-container\"\r\n                    style={{ width: data.length * 335 + \"px\" }}\r\n                >\r\n                    {gameList}\r\n                </div>\r\n                <div\r\n                    id={`${data.id}_left_arrow`}\r\n                    className=\"gamelist-left-arrow\"\r\n                    onClick={() => {\r\n                        ContainerToLeft(data);\r\n                    }}\r\n                >\r\n                    <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\r\n                </div>\r\n                <div\r\n                    id={`${data.id}_right_arrow`}\r\n                    className=\"gamelist-right-arrow\"\r\n                    onClick={() => {\r\n                        ContainerToRight(data);\r\n                    }}\r\n                >\r\n                    <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { NAVBAR_CONTROL } from \"./types\";\r\n\r\nexport function navbarControl(navbarOn) {\r\n  return {\r\n    type: NAVBAR_CONTROL,\r\n    payload: navbarOn,\r\n  };\r\n}\r\n","import React, { useEffect, useState} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport \"./LandingPage.css\";\r\nimport { Banner_main1 } from \"./LandingPage_banners\";\r\nimport { NewGameButton } from \"./LandingPage_buttons\";\r\nimport { GameList } from \"./LandingPage_gameLists\";\r\nimport { navbarControl } from \"../../../_actions/controlPage_actions\"\r\n\r\nconst ListContainer = {\r\n  recent_games: {\r\n    category: \"최근 플레이한 게임\",\r\n    id: \"recent\",\r\n    length: 0,\r\n    pos: 0,\r\n    limit: 0,\r\n  },\r\n  popular_games: {\r\n    category: \"인기 게임\",\r\n    id: \"popular\",\r\n    length: 0,\r\n    pos: 0,\r\n    limit: 0,\r\n  },\r\n};\r\n\r\nfunction LandingPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //* navigation bar control\r\n    dispatch(navbarControl(true));\r\n    \r\n    Axios.get(\"/api/game/getgames\").then((response) => {\r\n      if (response.data.success) {\r\n        setGames(response.data.games);\r\n      } else {\r\n        alert(\"game load에 실패했습니다.\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mainPage_container\">\r\n      <div className=\"box-container\">\r\n        <Banner_main1 />\r\n        <NewGameButton replace={props.history.replace} />\r\n      </div>\r\n      <GameList data={ListContainer.recent_games} games={games} />\r\n      <GameList data={ListContainer.popular_games} games={games} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./LoginPage.css\";\r\n\r\ninterface LoginPageProps {\r\n  history: {\r\n    replace: Function;\r\n  }\r\n}\r\n\r\ninterface LoginUser {\r\n  payload: {\r\n    loginSuccess: boolean;\r\n    userId?: string | undefined;\r\n    message?: string;\r\n  }\r\n  type: string;\r\n}\r\n\r\nfunction LoginPage(props: LoginPageProps) {\r\n  const dispatch:any = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe);\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\")\r\n    ? localStorage.getItem(\"rememberMe\")!\r\n    : undefined;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"이메일 주소를 입력해 주세요.\")\r\n          .required(\"이메일 주소를 입력해 주세요.\"),\r\n        password: Yup.string()\r\n          .min(6, \"비밀번호는 최소 6글자 이상이어야 합니다.\")\r\n          .required(\"비밀번호를 입력해 주세요.\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then((response: LoginUser) => {\r\n              if (response.payload.loginSuccess) {\r\n                if (rememberMe === true && values.email) {\r\n                  window.localStorage.setItem(\"rememberMe\", values.email);\r\n                } else {\r\n                  localStorage.removeItem(\"rememberMe\");\r\n                }\r\n                props.history.replace(\"/\");\r\n              } else {\r\n                setFormErrorMessage(\"아이디와 비밀번호를 확인해 주세요.\");\r\n              }\r\n            })\r\n            .catch((err: boolean) => {\r\n              setFormErrorMessage(\"아이디와 비밀번호를 확인해 주세요.\");\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\");\r\n              }, 3000);\r\n            });\r\n\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"loginPage-container\">\r\n            <div className=\"loginDiv-container\">\r\n              <div className=\"login-Title\">로그인</div>\r\n              <div className=\"login-newUser\">신규 사용자이신가요? <Link className=\"login-register\" to=\"/register\">계정만들기</Link></div>\r\n              <form onSubmit={handleSubmit} style={{ width: \"600px\" }}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    id=\"email\"\r\n                    prefix={\r\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                    }\r\n                    placeholder=\"이메일 주소\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.email}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required>\r\n                  <Input\r\n                    id=\"password\"\r\n                    prefix={\r\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                    }\r\n                    placeholder=\"비밀번호\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.password && touched.password\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.password}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                {formErrorMessage && (\r\n                  <label>\r\n                    <p className=\"login-error\">\r\n                      {formErrorMessage}\r\n                    </p>\r\n                  </label>\r\n                )}\r\n\r\n                <Form.Item>\r\n                  <Checkbox\r\n                    className=\"rememberMe\"\r\n                    onChange={handleRememberMe}\r\n                    checked={rememberMe}\r\n                    style={{ color: \"white\" }}\r\n                  >\r\n                    아이디 기억하기\r\n                  </Checkbox>\r\n                  {/* <a\r\n                    className=\"login-form-forgot\"\r\n                    href=\"/reset_user\"\r\n                    style={{ float: \"right\" }}\r\n                  >\r\n                    forgot password\r\n                  </a> */}\r\n                  <div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"login-button\"\r\n                      disabled={isSubmitting}\r\n                      onSubmit={() => handleSubmit()}\r\n                    >\r\n                      로그인\r\n                    </button>\r\n                  </div>\r\n\r\n                </Form.Item>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import * as React from \"react\";\r\nimport * as Yup from 'yup';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport { Form, Input } from 'antd';\r\nimport \"./RegisterPage.css\"\r\nimport Axios from \"axios\"\r\n\r\ninterface RegisterPageProps {\r\n  history: {\r\n    push: Function;\r\n  }\r\n}\r\n\r\ninterface RegisterUser {\r\n  payload: {\r\n    success: boolean;\r\n    err: {\r\n      errmsg: string;\r\n    }\r\n  }\r\n}\r\n\r\ninterface FormType {\r\n  email: string;\r\n  nickname: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n}\r\n\r\nfunction RegisterPage(props: RegisterPageProps) {\r\n  const dispatch: any = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        nickname: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        nickname: Yup.string()\r\n          .required('필수 정보입니다.'),\r\n        email: Yup.string()\r\n          .email('이메일 형식이 아닙니다.')\r\n          .required('필수 정보입니다.'),\r\n        password: Yup.string()\r\n          .min(6, '패스워드는 최소 6글자 이상이어야합니다.')\r\n          .required('필수 정보입니다.'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), undefined], '패스워드가 틀립니다.')\r\n          .required('패스워드를 다시 입력해주세요.')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(async () => {\r\n          let flag\r\n          await Axios.post(\"api/users/email-check\", { email: values.email }).then((response) => {\r\n            flag = response.data.usedEmail\r\n          })\r\n\r\n          if (flag) {\r\n            alert(\"이미 사용 중인 아이디 입니다.\")\r\n            setSubmitting(false);\r\n            return\r\n          }\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            nickname: values.nickname,\r\n            image: \"https://i.imgur.com/rF80MBo.png\",\r\n            // image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n          };\r\n\r\n          await dispatch(registerUser(dataToSubmit)).then((response: RegisterUser) => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"registerPage-container\">\r\n            <div className=\"registerDiv-container\">\r\n              <div className=\"register-Title\">회원가입</div>\r\n              <div className=\"register-oldUser\">기존 사용자이신가요? <Link className=\"register-login\" to=\"/login\">로그인하기</Link></div>\r\n\r\n              <Form onSubmit={handleSubmit} labelAlign=\"left\"\r\n                labelCol={{ span: 5 }} wrapperCol={{ span: 19 }}>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 닉네임</label>}>\r\n                  <Input\r\n                    id=\"nickname\"\r\n                    placeholder=\"닉네임을 입력하세요\"\r\n                    type=\"text\"\r\n                    value={values.nickname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.nickname && touched.nickname ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.nickname && touched.nickname && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.nickname}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 이메일</label>}\r\n                  hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                  <Input\r\n                    id=\"email\"\r\n                    placeholder=\"이메일을 입력하세요.\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.email}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 비밀번호</label>}\r\n                  hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                  <Input\r\n                    id=\"password\"\r\n                    placeholder=\"비밀번호를 입력하세요\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.password}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 비밀번호 재확인</label>} hasFeedback>\r\n                  <Input\r\n                    id=\"confirmPassword\"\r\n                    placeholder=\"비밀번호를 재입력하세요\"\r\n                    type=\"password\"\r\n                    value={values.confirmPassword}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.confirmPassword && touched.confirmPassword && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.confirmPassword}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"register-button\"\r\n                      disabled={isSubmitting}\r\n                      onSubmit={() => handleSubmit()}\r\n                    >\r\n                      회원가입\r\n                    </button>\r\n                  </div>\r\n                </Form.Item>\r\n\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import { message } from 'antd';\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport {LOCAL_HOST} from \"../../../Config\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport './ContributedGame.css';\r\n\r\nimport { ObjectId } from \"mongodb\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faFile, faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { SCENE_ICON } from '../../../svg/icon';\r\n\r\ninterface ContributedGame {\r\n  gameId: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  _id: string;\r\n}\r\n\r\ninterface GameDetail {\r\n  createdAt: string;\r\n  description: string;\r\n  sceneCnt: number;\r\n  thumbnail: string;\r\n  title: string;\r\n}\r\n\r\ninterface ThumbsUp {\r\n  like: number;\r\n  isClick: boolean;\r\n}\r\n\r\nfunction ContributedGame(props: any) {\r\n  const gameId: string = props.gameId;\r\n  const sceneCnt: number = props.sceneCnt;\r\n\r\n  const [gameDetail, setGameDetail] = useState<GameDetail>({\r\n    createdAt: \"\",\r\n    description: \"\",\r\n    sceneCnt: 0,\r\n    thumbnail: \"\",\r\n    title: \"\",\r\n  });\r\n  const [view, setView] = useState<number>(0);\r\n  const [thumbsUp, setThumbsUp] = useState<ThumbsUp>({\r\n    like: 0,\r\n    isClick: false,\r\n  });\r\n  \r\n  useEffect(() => {\r\n    Axios.post(\"/api/game/getgamedetail\", {gameId: new ObjectId(gameId)}).then((response) => {\r\n      setGameDetail(response.data.gameDetail)\r\n    })\r\n    Axios.post(\"/api/view/\", {objectId: new ObjectId(gameId)}).then((response) => {\r\n      setView(response.data.view)\r\n    })\r\n    Axios.post(\"/api/thumbsup/count\", {objectId: new ObjectId(gameId)}).then((response) => {\r\n      setThumbsUp({\r\n        isClick: response.data.isClicked,\r\n        like: response.data.thumbsup\r\n      });\r\n    })\r\n  },[])\r\n\r\n  if(gameDetail.title === \"\"){\r\n    return <div></div>\r\n  }\r\n\r\n  const description = gameDetail.description.length > 300 ? gameDetail.description.slice(0,300)+'...' : gameDetail.description;\r\n  return (\r\n    <div className=\"contribute__container\">\r\n      <Link to={`/game/${gameId}`}>\r\n        <img\r\n          className=\"contribute__img\"\r\n          src={`http://${LOCAL_HOST}:5000/${gameDetail.thumbnail}`}\r\n          alt=\"https://cdn.crowdpic.net/list-thumb/thumb_l_110F2464CA8958D839ECCBA33E453FDF.jpg\"\r\n        />\r\n        <div className=\"contribute__icon\">\r\n          <div>\r\n            {gameDetail.sceneCnt}\r\n            <FontAwesomeIcon icon={faFile} style={{ marginLeft: \"10px\" }} /> \r\n          </div>\r\n          <div>\r\n            {view}\r\n            <FontAwesomeIcon icon={faEye} style={{ marginLeft: \"10px\" }} />\r\n          </div>\r\n          <div>\r\n            {thumbsUp.like} \r\n            <FontAwesomeIcon style={{ marginLeft: \"10px\" }} icon={faHeart} />\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <div className=\"contribute__info\">\r\n        <div className=\"contribute__title\">{gameDetail.title}</div>\r\n        <div className=\"contribute__text\">{description}</div>\r\n        {sceneCnt >= 0 ?\r\n          <div className=\"contribute__contributeCntText\">\r\n            기여한 스토리 개수: \r\n            <div className=\"contribute__cnt\">\r\n              {sceneCnt}\r\n            </div>\r\n          </div>\r\n          :\r\n          <div></div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ContributedGame\r\n","import { message } from 'antd';\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport {LOCAL_HOST} from \"../../Config\";\r\nimport ContributedGame from './ContributedGame/ContributedGame';\r\n\r\nimport './Profile.css';\r\n\r\ninterface Game {\r\n  gameId: string;\r\n  sceneId: string;\r\n}\r\n\r\ninterface SceneInfo {\r\n  sceneId: string;\r\n  depth: number;\r\n}\r\n\r\ninterface ContributedScene_type {\r\n  sceneCnt: number;\r\n  gameId: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  sceneList: SceneInfo[];\r\n}\r\n\r\ninterface ContributedGame_type {\r\n  gameId: string;\r\n  title: string;\r\n  thumbnail: string;\r\n}\r\n\r\ninterface UserData {\r\n  makingGameList: Game[];\r\n  image: string;\r\n  email: string;\r\n  nickname: string;\r\n  _id: string;\r\n  contributedSceneList: ContributedScene_type[];\r\n  contributedGameList: ContributedGame_type[];\r\n}\r\n\r\ninterface State_user {\r\n  user: {\r\n    userData: UserData;\r\n  }\r\n}\r\n\r\nfunction Profile(props: any) {\r\n  const userId: string = props.match.params.userId;\r\n  const currUserData: UserData = useSelector((state: State_user) => state.user.userData);\r\n  let isUser: boolean = false;\r\n  const FETCHNIG_CNT: number = 5;\r\n\r\n  const [user, setUser] = useState<UserData>({\r\n    makingGameList: [],\r\n    image: \"\",\r\n    email: \"\",\r\n    nickname: \"\",\r\n    _id: \"\",\r\n    contributedSceneList: [],\r\n    contributedGameList: [],\r\n  });\r\n  const [fetching, setFetching] = useState(false);\r\n  const [gameContentsNumber, setGameContentsNumber] = useState<number>(FETCHNIG_CNT);\r\n  const [sceneContentsNumber, setSceneContentsNumber] = useState<number>(FETCHNIG_CNT);\r\n  const [totalSceneContribute, setTotalSceneContribute] = useState<number>(0);\r\n  const [totalGameContribute, setTotalGameContribute] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    Axios.post(\"/api/users/profile\", {userId: userId}).then((response) => {\r\n      if (response.data.success) {\r\n        setUser(response.data.user);\r\n        let tmp: number = 0;\r\n        for (let i=0; i<response.data.user.contributedSceneList.length; i++){\r\n          tmp += response.data.user.contributedSceneList[i].sceneCnt;\r\n        }\r\n        setTotalSceneContribute(tmp);\r\n        setTotalGameContribute(response.data.user.contributedGameList.length);\r\n      } else {\r\n          message.error(\"사용자 정보를 불러오는데 실패했습니다.\");\r\n      }\r\n    })\r\n  },[])\r\n  \r\n  if(currUserData?._id === userId){\r\n    isUser = true;\r\n  }\r\n\r\n  const displayContributedScene = (user: UserData) => {\r\n    const contributedSceneList: ContributedScene_type[] = user.contributedSceneList.slice(0,sceneContentsNumber);\r\n    if(contributedSceneList){\r\n      const contributedScene =  contributedSceneList.map((\r\n        game: ContributedScene_type\r\n      ) => {\r\n        return (\r\n          <div key={game.gameId}>\r\n            <ContributedGame \r\n              gameId={game.gameId}\r\n              sceneCnt={game.sceneCnt}\r\n            />\r\n          </div>\r\n        )\r\n      })\r\n      return (\r\n        <>\r\n        {contributedScene}\r\n        {user.contributedSceneList.length > sceneContentsNumber?\r\n          <div\r\n            className=\"displayMore\" \r\n            onClick={()=>setSceneContentsNumber((state)=>state+FETCHNIG_CNT)}\r\n          >\r\n            더보기\r\n          </div>\r\n          :\r\n          <div></div>\r\n        }\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const displayContributedGame = (user: UserData) => {\r\n    const contributedGameList: ContributedGame_type[] = user.contributedGameList.slice(0,gameContentsNumber);;\r\n    if(contributedGameList){\r\n      const contributedGame =  contributedGameList.map((\r\n        game: ContributedGame_type\r\n      ) => {\r\n        return (\r\n          <div key={game.gameId}>\r\n            <ContributedGame \r\n              gameId={game.gameId}\r\n              sceneCnt={-1}\r\n            />\r\n          </div>\r\n        )\r\n      })\r\n      return (\r\n        <>\r\n        {contributedGame}\r\n        {user.contributedGameList.length > gameContentsNumber?\r\n          <div\r\n            className=\"displayMore\" \r\n            onClick={()=>setGameContentsNumber((state)=>state+FETCHNIG_CNT)}\r\n          >\r\n            더보기\r\n          </div>\r\n          :\r\n          <div></div>\r\n        }\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  // const displayMakingGame = (currUserData: UserData) => {\r\n  //   const makingGameList: Game[] = currUserData.makingGameList;\r\n  //   if (makingGameList){\r\n  //     return makingGameList.map((game: Game, index: number) => {\r\n  //       return (\r\n  //         <div key={index}>\r\n  //           <div>\r\n  //             {game.gameId}\r\n  //           </div>\r\n  //           <Link to={\r\n  //             {\r\n  //               pathname: `/scene/make`,\r\n  //               state: {\r\n  //                 gameId: game.gameId,\r\n  //                 sceneId: game.sceneId\r\n  //               }\r\n  //             }\r\n  //           } key = {index}>\r\n  //             게임 만들러가기..\r\n  //           </Link>\r\n  //         </div>\r\n  //       )\r\n  //     })\r\n  //   } else{\r\n  //     return <div>만드는 중인 게임이 없습니다..</div>\r\n  //   }\r\n  // }\r\n\r\n  const onClick_tab = (name: string): void => {\r\n    const element: HTMLElement | null = document.getElementById(name);\r\n    document.getElementById(\"contributedGame\")!.style.display = \"none\";\r\n    document.getElementById(\"contributedScene\")!.style.display = \"none\";\r\n    // if(isUser)\r\n    //   document.getElementById(\"makingGame\")!.style.display = \"none\";\r\n    element!.style.display = \"block\";\r\n  }\r\n\r\n  if (currUserData){\r\n    return (\r\n      <div className=\"profile__container\">\r\n        \r\n        <div className=\"profile__thumbnail_container\">\r\n          <img\r\n              className=\"profile__thumbnail\"\r\n              src={`https://i.imgur.com/UwPKBqQ.jpg`}\r\n              alt=\"\"\r\n          />\r\n          <div className=\"profile__gradation\"></div>\r\n          <div className=\"profile__userInfo\">\r\n            <img \r\n              src={user.image} alt=\"\" \r\n              className=\"profile__img\"\r\n            />\r\n            <div className=\"profile__text\">\r\n              <div>{user.nickname}</div>\r\n              <div>{user.email}</div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        \r\n        <div className=\"profile__btn_container\">\r\n          <div \r\n            className=\"profile__btn\"\r\n            onClick={() => onClick_tab(\"contributedScene\")}\r\n          >\r\n            내가 만든 스토리 \r\n          </div>\r\n          <div \r\n            className=\"profile__btn\"\r\n            onClick={() => onClick_tab(\"contributedGame\")}\r\n          >\r\n            내가 만든 게임 \r\n          </div>\r\n          \r\n          {/* {isUser &&\r\n          <div onClick={() => onClick_tab(\"makingGame\")}>만들던 게임</div>\r\n          } */}\r\n        </div>\r\n        <div \r\n          id=\"contributedScene\"\r\n          style={{display:\"block\"}}\r\n        >\r\n          <div className=\"profile__title\">\r\n            기여한 스토리 {totalSceneContribute} 개\r\n          </div>\r\n          {displayContributedScene(user)}\r\n        </div>\r\n        <div \r\n          id=\"contributedGame\"\r\n          style={{display:\"none\"}}\r\n        >\r\n          <div className=\"profile__title\">\r\n            기여한 게임 {totalGameContribute} 개\r\n          </div>\r\n          {displayContributedGame(user)}\r\n        </div>\r\n        \r\n        {/* {isUser &&\r\n        <div \r\n          id=\"makingGame\"\r\n          style={{display:\"none\"}}\r\n        >\r\n          만들던 게임\r\n          {displayMakingGame(currUserData)}\r\n        </div>\r\n        }\r\n        {isUser ? \r\n        <div>isuser</div>\r\n        :\r\n        <div>isnt user</div>\r\n        } */}\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        loading...\r\n      </div>)\r\n  }\r\n}\r\n\r\nexport default Profile\r\n","import axios from 'axios';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport { Input, message } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport './SingleReply.css';\r\n\r\nfunction SingleReply({comment, updateToggle_comment, gameId}) {\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  const user_id = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData._id;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editComment, setEditComment] = useState(\"\");\r\n  const [like, setLike] = useState(0);\r\n  const [update, setUpdate] = useState(true);\r\n\r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        setLike(response.data.result.length);\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onClick_removeComment = () => {\r\n    setIsEdit(false);\r\n    axios.post('/api/comment/remove-comment', {commentId: comment._id}).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 삭제되었습니다.');\r\n        updateToggle_comment();\r\n      } else {\r\n        message.error('댓글 삭제에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClick_toggleEdit = () => {\r\n    setIsEdit((state) => !state);\r\n    setEditComment(comment.content);\r\n  }\r\n\r\n  const onChange_editcomment = (event) => {\r\n    setEditComment(event.currentTarget.value);\r\n  }\r\n\r\n  const onClick_editComment = (e) => {\r\n    e.preventDefault();\r\n    axios.post('/api/comment/edit-comment', \r\n      {commentId: comment._id, comment: editComment}\r\n    ).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 수정되었습니다.');\r\n        updateToggle();\r\n      } else {\r\n        message.error('댓글 수정에 실패했습니다.');\r\n      }\r\n    })\r\n    setIsEdit((state) => !state);\r\n  }\r\n\r\n  const onClick_like = () => {\r\n    if(isAuth === false){\r\n      return\r\n    }\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/setlike', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        updateToggle();\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"container_box\" id={comment._id}>\r\n      <div className=\"comment_container\">\r\n        <img src={comment.writer.image} alt=\"img\" className=\"SingleReply__img\"/>\r\n        <div className=\"comment_contents\">\r\n          <div className=\"SingleReply__nickname\">{comment.writer.nickname}</div>\r\n          {isAuth &isEdit ? \r\n          <div className=\"edit_container\">\r\n          <textarea className=\"comment_input\" onChange={onChange_editcomment} value={editComment} />\r\n          <button className=\"comment__btn\" onClick={onClick_editComment}>수정</button>\r\n          </div>\r\n          :\r\n          <div className=\"SingleReply__content\">{comment.content}</div>\r\n          }\r\n          <div className=\"SingleReply__comment_info\">\r\n          <div onClick={onClick_like} className=\"comment_like\">좋아요 : {like}</div>\r\n            { comment.writer._id === user_id&&\r\n            <>\r\n            <div onClick={onClick_toggleEdit} className=\"comment_option\">{isEdit ? \"수정 취소\" : \"댓글 수정\"}</div>\r\n            <div onClick={onClick_removeComment} className=\"comment_option\">댓글 삭제</div>\r\n            </>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(SingleReply)","import { Input, message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { memo, useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport SingleReply from './SingleReply';\r\nimport './SingleComment.css';\r\n\r\n//Todo : 댓글이 밀린다,,,!\r\n\r\nfunction SingleComment({gameId, comment, updateToggle_comment}) {\r\n  const user = useSelector((state) => state.user);\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  const user_id = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData._id;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const reference = useRef();\r\n\r\n  const [update, setUpdate] = useState(true);\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n  const [Replys, setReplys] = useState([]);\r\n  const [writeReply, setWriteReply] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editComment, setEditComment] = useState(\"\");\r\n  const [showComment, setShowComment] = useState(false);\r\n  const [like, setLike] = useState(0);\r\n\r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    const comment_variable = {\r\n      gameId: gameId,\r\n      responseTo: comment._id.toString()\r\n    }\r\n    axios.post('/api/comment/get-reply', comment_variable).then(response => {\r\n      if (response.data.success) {\r\n        setReplys(response.data.result);\r\n      } else {\r\n        message.error('대댓글을 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        setLike(response.data.result.length);\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onClick_writeReply = () => {\r\n    setWriteReply((state) => !state);\r\n  }\r\n\r\n  const onClick_displayReply = () => {\r\n    if (reference.current.style.display === 'block') {\r\n      reference.current.style.display = 'none';\r\n      setShowComment(false);\r\n      setWriteReply(false);\r\n    } else {\r\n      reference.current.style.display = 'block'\r\n      setShowComment(true);\r\n    }\r\n  }\r\n  \r\n  const onChange_comment = (event) => {\r\n    setCommentContent(event.currentTarget.value);\r\n  }\r\n\r\n  const onSubmit_response = (event) => {\r\n    event.preventDefault();\r\n    if(commentContent === \"\"){\r\n      return;\r\n    }\r\n    const variables = {\r\n      content: commentContent,\r\n      writer: user.userData._id,\r\n      gameId: gameId,\r\n      responseTo: comment._id.toString()\r\n    };\r\n\r\n    axios.post('/api/comment/save-comment', variables).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글 감사합니다!');\r\n        updateToggle();\r\n        setCommentContent(\"\");\r\n        if (reference.current.style.display !== 'block') {\r\n          reference.current.style.display = 'block'\r\n          setShowComment(true);\r\n        } \r\n      } else {\r\n        message.error('댓글 저장에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClick_removeComment = () => {\r\n    setIsEdit(false);\r\n    axios.post('/api/comment/remove-comment', {commentId: comment._id}).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 삭제되었습니다.');\r\n        updateToggle_comment();\r\n      } else {\r\n        message.error('댓글 삭제에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClick_toggleEdit = () => {\r\n    setIsEdit((state) => !state);\r\n    setEditComment(comment.content);\r\n  }\r\n\r\n  const onChange_editcomment = (event) => {\r\n    setEditComment(event.currentTarget.value);\r\n  }\r\n\r\n  const onClick_editComment = (e) => {\r\n    e.preventDefault();\r\n    axios.post('/api/comment/edit-comment', \r\n      {commentId: comment._id, comment: editComment}\r\n    ).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 수정되었습니다.');\r\n        updateToggle_comment();\r\n      } else {\r\n        message.error('댓글 수정에 실패했습니다.');\r\n      }\r\n    })\r\n    setIsEdit((state) => !state);\r\n  }\r\n\r\n  const onClick_like = () => {\r\n    if(isAuth === false){\r\n      return\r\n    }\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/setlike', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        updateToggle();\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }\r\n\r\n  const mapReply = Replys.map((reply, index) => {\r\n    return (\r\n      <div key={reply._id} style={{marginLeft:'10px'}}>\r\n        {reply &&\r\n          <SingleReply\r\n            updateToggle_comment={updateToggle}\r\n            gameId={gameId} \r\n            comment={reply}/>\r\n        }\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"container_box\" id={comment._id}>\r\n      <div className=\"comment_container\">\r\n        <img src={comment.writer.image} alt=\"img\" className=\"img\"/>\r\n        <div className=\"comment_contents\">\r\n          <div className=\"nickname\">{comment.writer.nickname}</div>\r\n          {isEdit ? \r\n          <div className=\"edit_container\">\r\n            <textarea className=\"singleComment_input\" onChange={onChange_editcomment} value={editComment} />\r\n            <button className=\"comment__btn\" onClick={onClick_editComment}>수정</button>\r\n          </div>\r\n          :\r\n          <div className=\"content\">{comment.content}</div>\r\n          }\r\n          <div className=\"comment_info\">\r\n            <div onClick={onClick_like} className=\"comment_like\">좋아요 : {like}</div>\r\n            { Replys.length ? \r\n            <>\r\n            <div onClick={onClick_displayReply} className=\"comment_displayReplyToggle\">\r\n            { showComment ?\r\n              <div>\r\n                댓글 닫기\r\n              </div>\r\n              :\r\n              <div>\r\n                댓글 {Replys.length}개 보기\r\n              </div>\r\n            }\r\n            </div>\r\n            </>\r\n            :\r\n            <div></div>\r\n            }\r\n            <div onClick={onClick_writeReply} className=\"comment_option\">{writeReply? \"작성 취소\" :\"댓글 작성\"}</div>\r\n            { comment.writer._id === user_id&&\r\n            <>\r\n            <div onClick={onClick_toggleEdit} className=\"comment_option\">{isEdit ? \"수정 취소\" : \"댓글 수정\"}</div>\r\n            <div onClick={onClick_removeComment} className=\"comment_option\">댓글 삭제</div>\r\n            </>\r\n            }\r\n          </div>\r\n          {(isAuth & writeReply) ?\r\n          <form className=\"comment__form\">\r\n            <textarea\r\n              className=\"singleComment__textarea\"\r\n              onChange={onChange_comment}\r\n              value={commentContent}\r\n              placeholder=\"코멘트를 작성해 주세요.\"\r\n              />\r\n            <button className=\"comment__btn\" onClick={onSubmit_response}>댓글</button>\r\n          </form> \r\n          :\r\n          <div></div>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div ref={reference} className=\"reply_container\">\r\n        {mapReply}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(SingleComment)","import { message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { memo, useEffect, useState } from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport './Comment.css';\r\nimport SingleComment from './SingleComment';\r\n\r\nfunction Comment({gameId}) {\r\n  const user = useSelector((state) => state.user);\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  \r\n  const [update, setUpdate] = useState(true);\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const FETCHNIG_CNT = 8;\r\n  const [fetching, setFetching] = useState(false);\r\n  const [totalComment, setTotalComment] = useState([]);\r\n  const [contentNumber, setContentNumber] = useState(0);\r\n\r\n  const fetchNextData = async () => {\r\n    setFetching(true);\r\n    \r\n    setComments(totalComment.slice(0,contentNumber+FETCHNIG_CNT));\r\n    setContentNumber((state) => state+FETCHNIG_CNT);\r\n\r\n    setFetching(false);\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n    if (scrollTop + clientHeight*(3/2) >= scrollHeight && fetching === false) {\r\n      fetchNextData();\r\n    }\r\n   };\r\n\r\n   useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  });\r\n \r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.post('/api/comment/get-comment', {gameId: gameId}).then(response => {\r\n      if (response.data.success) {\r\n        setTotalComment(response.data.result);\r\n        setComments(response.data.result.slice(0,contentNumber));\r\n      } else {\r\n        message.error('댓글을 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onChange_comment = (event) => {\r\n    setCommentContent(event.currentTarget.value);\r\n  }\r\n\r\n  const onSubmit_comment = (event) => {\r\n    event.preventDefault();\r\n    if(commentContent === \"\"){\r\n      return;\r\n    }\r\n\r\n    const variables = {\r\n      content: commentContent,\r\n      writer: user.userData._id,\r\n      gameId: gameId,\r\n      responseTo : \"\"\r\n    };\r\n\r\n    axios.post('/api/comment/save-comment', variables).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글 감사합니다!');\r\n        updateToggle();\r\n        setCommentContent(\"\");\r\n      } else {\r\n        message.error('댓글 저장에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const mapComment = comments.map((comment, index) => {\r\n    return (\r\n      <div key={comment._id}>\r\n        {comment &&\r\n          <SingleComment \r\n            updateToggle_comment={updateToggle}\r\n            gameId={gameId} \r\n            comment={comment}/>\r\n        }\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"comment__container\">\r\n      <div className=\"comment__commentCnt\">\r\n        댓글 {totalComment.length}개\r\n      </div>\r\n      <hr/>\r\n      <br />\r\n      {isAuth &&\r\n      <form className=\"comment__form\">\r\n        <textarea\r\n          className=\"comment__textarea\"\r\n          onChange={onChange_comment}\r\n          value={commentContent}\r\n        />\r\n        <button className=\"comment__btn\" onClick={onSubmit_comment}>댓글</button>\r\n      </form>\r\n      }\r\n      {mapComment}\r\n      <br />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Comment)","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction TopRatingContributer(props) {\r\n  const contributerList = props.contributerList;\r\n  const totalSceneCnt = props.totalSceneCnt;\r\n  const creatorNickname = props.creatorNickname;\r\n\r\n  const topRateContributer_SceneCnt = contributerList[0]?.userSceneCnt;\r\n\r\n  const topContributer = contributerList.map((contributer, index) => {\r\n      const contributeRatio = Math.round(contributer.userSceneCnt/totalSceneCnt*100);\r\n      const fakeRatio = Math.round(contributer.userSceneCnt/topRateContributer_SceneCnt*100);\r\n      return (\r\n          <div \r\n              key={contributer.userId}\r\n              className=\"detailPage__contributer\"\r\n          >\r\n              <div className={`detailPage__contributer_rankNum ${index}`}>\r\n                  {index+1}위\r\n              </div>\r\n              <img \r\n                  className=\"detailPage__contributer_img\"   \r\n                  src={contributer.image} \r\n                  alt=\"image\"\r\n              />\r\n              <div className=\"detailPage__contributer_info\">\r\n                  <Link to={`/profile/${contributer.userId}`}\r\n                      className={\r\n                      creatorNickname === contributer.nickname ? \r\n                      \"detailPage__creater_nickname\" : \r\n                      \"detailPage__contributer_nickname\"\r\n                      }>\r\n                      {contributer.nickname.substr(0,11)}\r\n                  </Link>\r\n                  <div className=\"detailPage__contributer_graph\">\r\n                      <div \r\n                          className=\"detailPage__graph_wrapper\"\r\n                          style={{width: `${fakeRatio}%`}}\r\n                      >\r\n                          <div \r\n                              className=\"detailPage__graph\">\r\n                              {contributeRatio}%\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      )\r\n  })  \r\n  return (\r\n    <div>\r\n      {topContributer}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopRatingContributer\r\n","import { Button, message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./GameDetailPage.css\";\r\nimport { LOCAL_HOST } from \"../../Config\"\r\nimport Comment from '../Comment/Comment.js';\r\nimport { socket } from \"../../App\";\r\nimport { SVG } from \"../../svg/icon\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport TopRatingContributer from \"./TopRatingContributer\";\r\n\r\nconst config = require('../../../config/key')\r\n\r\nfunction GameDetailPage(props) {\r\n    const gameId = props.match.params.gameId;\r\n    const variable = { gameId: gameId };\r\n\r\n    const [gameDetail, setGameDetail] = useState([]);\r\n    const [sceneId, setSceneId] = useState([]);\r\n    const [isMaking, setIsMaking] = useState(false);\r\n    const [view, setView] = useState(0);\r\n    const [thumbsUp, setThumbsUp] = useState(0);\r\n    const [thumbsUpClicked, setThumbsUpClicked] = useState(false);\r\n    const [totalSceneCnt, setTotalSceneCnt] = useState(0);\r\n    const [ContributerCnt, setContributerCnt] = useState(0);\r\n    const [contributerList, setContributerList] = useState([]);\r\n    const [isPlayed, setIsPlayed] = useState(false);\r\n\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const playFirstScene = async (isFirst) => {\r\n        try {\r\n            let response;\r\n            if(isFirst){\r\n                response = await Axios.get(\"/api/users/playing-list/clear\");\r\n                // Not Yet Tested\r\n                console.log(\"****\",response.data, \"user!!!\", user.userData)\r\n                socket.emit(\"empty_num_increase\", {user_id: user.userData._id.toString(), scene_id: response.data.prevOfLastScene.toString()});\r\n            }\r\n            props.history.replace({\r\n                pathname: (!isFirst && isMaking) ? `/scene/make` : `/gameplay`,\r\n                state: {\r\n                    sceneId: isFirst ? response.data.teleportSceneId : sceneId,\r\n                    gameId: gameId,\r\n                }\r\n            })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.post(\"/api/game/getgamedetail\", variable).then((response) => {\r\n            if (response.data.success) {\r\n                setGameDetail(response.data.gameDetail);\r\n            } else {\r\n                message.error(\"게임 정보를 로딩하는데 실패했습니다.\");\r\n            }\r\n        });\r\n        Axios.post(\"/api/game/rank\", variable).then((response) => {\r\n            if (response.data.success) {\r\n                setContributerList(response.data.topRank);\r\n                setContributerCnt(response.data.contributerCnt);\r\n                setTotalSceneCnt(response.data.totalSceneCnt);\r\n            } else {\r\n                message.error(\"게임 정보를 로딩하는데 실패했습니다.\");\r\n            }\r\n        });\r\n        Axios.get(`/api/game/gamestart/${gameId}`).then((response) => {\r\n            if (response.data.success) {\r\n                setSceneId(response.data.sceneId);\r\n                setIsMaking(response.data.isMaking);\r\n            } else {\r\n                message.error(\"로그인 해주세요.\");\r\n            }\r\n        });\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user && user.userData) {\r\n            const variable = {\r\n                userId: user.userData._id,\r\n                objectId: gameId\r\n            }\r\n            Axios.post(\"/api/view/\", variable).then((response) => {\r\n                if (response.data.success) {\r\n                    setView(response.data.view);\r\n                }\r\n            })\r\n        }\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        if (user && user.userData) {\r\n            const variable = {\r\n                objectId: gameId,\r\n                userId: user.userData._id,\r\n            }\r\n            Axios.post(\"/api/thumbsup/count\", variable).then((response) => {\r\n                if (response.data.success) {\r\n                    setThumbsUp(response.data.thumbsup);\r\n                    setThumbsUpClicked(response.data.isClicked);\r\n                }\r\n            })\r\n            Axios.post(\"/api/users/game-visit\", {userId: user.userData._id}).then((response) => {\r\n                if (response.data.success) {\r\n                    const sceneIdLength = response.data.gamePlaying.gamePlaying.sceneIdList.length;\r\n                    if(sceneIdLength > 1)\r\n                        setIsPlayed(true);\r\n                }\r\n            })\r\n        }\r\n    }, [user])\r\n\r\n    function onClick_thumbsUp() {\r\n        if (user && user.userData) {\r\n            // ((state) => state+1);\r\n            const variable = {\r\n                userId: user.userData._id,\r\n                objectId: gameId\r\n            }\r\n            Axios.post(\"/api/thumbsup/\", variable).then((response) => {\r\n                if (response.data.success) {\r\n                    setThumbsUp(response.data.thumbsup);\r\n                    setThumbsUpClicked(response.data.isClicked);\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"detailPage__container\">\r\n\r\n            {/* 이미지 불러오는게 늦음 디버깅 필요 */}\r\n            <div className=\"detailPage__thumbnail_container\">\r\n                <img\r\n                    className=\"detailPage__thumbnail\"\r\n                    src={\r\n                        process.env.NODE_ENV === 'production' ?\r\n                            gameDetail.thumbnail\r\n                            :\r\n                            `${config.SERVER}/${gameDetail?.thumbnail}`}\r\n                    alt=\"thumbnail\"\r\n                />\r\n                <div className=\"detailPage__contributer_container\">\r\n                    <div className=\"detailPage__contributer_title\"> {ContributerCnt}명이 함께하는 이야기</div>\r\n                    <TopRatingContributer\r\n                        contributerList={contributerList}\r\n                        creatorNickname={gameDetail?.creator?.nickname}\r\n                        totalSceneCnt={totalSceneCnt}\r\n                    />\r\n                </div>\r\n                <div className=\"detailPage__gamePlay\">\r\n                    <div className=\"detailPage__gamePlay_container\">\r\n                        <div className=\"detailPage__gamePlay_text\">\r\n                            현재 스토리\r\n                        </div>\r\n                        <div className=\"detailPage__gamePlay_sceneCntContainer\">\r\n                            <div className=\"detailPage__gamePlay_sceneCnt\">\r\n                                {totalSceneCnt}\r\n                            </div>\r\n                            <div className=\"detailPage__gamePlay_cntText\">\r\n                                개\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <Link\r\n                        className=\"detailPage__gamePlay_link\"\r\n                        style={{ color: \"#f05454\" }}\r\n                        to={\r\n                            {\r\n                                pathname: isMaking ? `/scene/make` : `/gameplay`,\r\n                                state: {\r\n                                    gameId: gameId,\r\n                                    sceneId: sceneId\r\n                                },\r\n                            }\r\n                        }>\r\n                        <div className=\"icon\">\r\n                            <SVG\r\n                                src=\"playIcon_1\"\r\n                                width=\"30\"\r\n                                height=\"30\"\r\n                                color=\"#FFF\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"text\">시작하기</div>\r\n                    </Link> */}\r\n                    {/* 게임 시작하기 or 이어 만들기 */}\r\n                    <div \r\n                        className=\"detailPage__gamePlay_link\"\r\n                        onClick={() => playFirstScene(false)}\r\n                    >\r\n                        <div className=\"icon\">\r\n                            <SVG\r\n                                src=\"playIcon_1\"\r\n                                width=\"30\"\r\n                                height=\"30\"\r\n                                color=\"#FFF\"\r\n                            />\r\n                        </div>\r\n                        {isPlayed ? \"이어하기\" : \"시작하기\"}\r\n                    </div>\r\n                </div>\r\n                <div className=\"detailPage__gradation\"></div>\r\n                <div className=\"detailPage__UPTitle\">\r\n                    {gameDetail.title}\r\n                </div>\r\n                <div className=\"detailPage__interaction\">\r\n                    <div\r\n                        onClick={onClick_thumbsUp}\r\n                        className=\"detailPage__like\"\r\n                    >\r\n                        {thumbsUp}\r\n                        {thumbsUpClicked ?\r\n                            <FontAwesomeIcon style={{ color: \"red\", marginLeft: \"10px\" }} icon={faHeart} />\r\n                            :\r\n                            <FontAwesomeIcon icon={faHeart} style={{ marginLeft: \"10px\" }} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"detailPage__view\">\r\n                        {view}\r\n                        <FontAwesomeIcon icon={faEye} style={{ marginLeft: \"10px\" }} />\r\n                    </div>\r\n                </div>\r\n                {isPlayed &&\r\n                    <div \r\n                        className=\"detailPage__gamePlayFromStart_link\"\r\n                        onClick={() => playFirstScene(true)}\r\n                    >\r\n                        처음부터 하기\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"detailPage__info_container\">\r\n                <div className=\"detailPage__title\">\r\n                    {/* {gameDetail.title} */}\r\n\r\n                </div>\r\n                <div className=\"detailPage__genre\">\r\n                    장르:\r\n                    <div className=\"bold_text\">\r\n                        {gameDetail.category}\r\n                    </div>\r\n                    작가:\r\n                    <div className=\"bold_text\">\r\n                        {gameDetail?.creator?.nickname.substr(0, 20)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"detailPage__description\">\r\n                    {gameDetail.description}\r\n                </div>\r\n\r\n                <Comment gameId={gameId} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameDetailPage;\r\n","import React, { useState } from \"react\";\r\nimport { Typography, Button, Form, message, Input, Icon } from \"antd\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./GameUploadPage.css\";\r\nimport {LOCAL_HOST} from\"../../Config\"\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst PrivateOptions = [\r\n    { value: 0, label: \"Private\" },\r\n    { value: 1, label: \"Public\" },\r\n];\r\n\r\nconst CategoryOptions = [\r\n    { value: 0, label: \"살아남기\" },\r\n    { value: 1, label: \"로맨스\" },\r\n    { value: 2, label: \"스토리\" },\r\n    { value: 3, label: \"추리\" },\r\n    { value: 4, label: \"병맛\" },\r\n];\r\n\r\nconst RatioOptions = [\r\n    { value: `${9/16}`, label: \"16:9\"}, \r\n    { value: `${16/9}`, label: \"9:16(스마트폰)\"}, \r\n]\r\n\r\nfunction GameUploadPage(props) {\r\n    const user = useSelector((state) => state.user);\r\n    const [GameTitle, setGameTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [isPrivate, setIsPrivate] = useState(0);\r\n    const [category, setCategory] = useState(\"살아남기\");\r\n    const [ratio, setRatio] = useState(true);\r\n\r\n    const [filePath, setFilePath] = useState(\"\");\r\n    // const [duration, setDuration] = useState(\"\")\r\n    // const [thumbnailPath, setThumbnailPath] = useState(\"\")\r\n\r\n    const onTitleChange = (event) => {\r\n        setGameTitle(event.currentTarget.value);\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescription(event.currentTarget.value);\r\n    };\r\n\r\n    const onPrivateChange = (event) => {\r\n        setIsPrivate(event.currentTarget.value);\r\n    };\r\n\r\n    const onCartegoryChange = (event) => {\r\n        let cat_idx = event.currentTarget.value;\r\n        setCategory(event.currentTarget[cat_idx].text);\r\n    };\r\n\r\n    const onRatioChange = (event) => {\r\n        setRatio(state => !state);\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        if (!files[0]) {\r\n            alert(\"손상된 파일입니다.\");\r\n            return;\r\n        }\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { \"content-type\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n        };\r\n        formData.append(\"file\", files[0]);\r\n\r\n        Axios.post(\"/api/game/uploadfiles\", formData, config).then(\r\n            (response) => {\r\n                if (response.data.success) {\r\n                    setFilePath(response.data.url);\r\n                } else {\r\n                    alert(\"업로드 실패\");\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (GameTitle === \"\" || description === \"\" || filePath === \"\") {\r\n            alert(\"모든 정보를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        let floatRatio;\r\n        if (ratio) {\r\n            floatRatio = 9/16;\r\n        } else {\r\n            floatRatio = 16/9;\r\n        }\r\n        const game_variables = {\r\n            creator: user.userData._id,\r\n            title: GameTitle,\r\n            description: description,\r\n            thumbnail: filePath,\r\n            privacy: isPrivate,\r\n            category: category,\r\n            ratio: floatRatio,\r\n            writer: [user.userData._id],\r\n            character: [],\r\n            background: [],\r\n            bgm: [],\r\n            sound: [],\r\n        };\r\n        \r\n        Axios.post(\"/api/game/uploadgame\", game_variables).then((response) => {\r\n            if (response.data.success) {\r\n                message.success(\r\n                    \"첫 Scene을 생성해주세요. 오른쪽의 +버튼을 활용해 이미지들을 추가할 수 있습니다.\"\r\n                );\r\n                setTimeout(() => {\r\n                    props.history.replace(\r\n                        `/game/upload/${response.data.game._id}`\r\n                    );\r\n                }, 1000);\r\n            } else {\r\n                alert(\"game제작 실패\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n            <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n                <Title level={2}>Upload Game</Title>\r\n            </div>\r\n            <Form onSubmit={onSubmit}>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"300px\",\r\n                                    height: \"240px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    {/* thunb nail */}\r\n                    {filePath && (\r\n                        <div>\r\n                            <img\r\n                                className=\"thumbnail__img\"\r\n                                src={`http://${LOCAL_HOST}:5000/${filePath}`}\r\n                                alt=\"thumbnail\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <label>Title</label>\r\n                <Input onChange={onTitleChange} value={GameTitle} />\r\n                <br />\r\n                <br />\r\n                <label>Description</label>\r\n                <TextArea onChange={onDescriptionChange} value={description} />\r\n                <br />\r\n                <br />\r\n                <select onChange={onPrivateChange}>\r\n                    {PrivateOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <select onChange={onCartegoryChange}>\r\n                    {CategoryOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <label><input type=\"radio\" name=\"ratio\" checked={ratio} onChange={onRatioChange}/>컴퓨터</label>\r\n                <br />\r\n                <label><input type=\"radio\" name=\"ratio\" checked={!ratio} onChange={onRatioChange}/>스마트폰</label>\r\n                    \r\n                {/* <select onChange={onRatioChange}>\r\n                    {RatioOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select> */}\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Next Step\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameUploadPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row, Typography, Button, Form, Icon, message } from \"antd\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Axios from \"axios\";\r\nimport \"./GameBuildUpPage\";\r\nimport { LOCAL_HOST } from \"../../Config\"\r\n\r\nconst { Title } = Typography;\r\n\r\nconst config = require('../../../config/key')\r\n\r\nconst extension = {\r\n    image: [\".jpg\", \".png\", \".jpeg\", \".gif\"],\r\n    music: [\".mp3\", \".wav\", \".wmv\", \".wma\", \".flac\"],\r\n};\r\n\r\nfunction GameBuildUpPage(props) {\r\n    const [filePath, setFilePath] = useState(\"\");\r\n    const [fileState, setFileState] = useState(\"\");\r\n    const [cur_game, setGame] = useState([]);\r\n    const [characterCards, setCharacterCards] = useState([]);\r\n    const [backgroundCards, setBackgroundCards] = useState([]);\r\n    const [bgmCards, setBgmCards] = useState([]);\r\n    const [soundCards, setSoundCards] = useState([]);\r\n    const gameId = props.match.params.gameId;\r\n\r\n    const game_form = {\r\n        gameId: gameId,\r\n    };\r\n\r\n    useEffect(() => {\r\n        Axios.post(\"/api/game/getgamedetail\", game_form).then((response) => {\r\n            if (response.data.success) {\r\n                setGame(response.data.gameDetail);\r\n            } else {\r\n                message.error(\"game load에 실패했습니다.\");\r\n            }\r\n        });\r\n    }, [filePath]);\r\n\r\n    useEffect(() => {\r\n        //character\r\n        if (cur_game.character) {\r\n            const tempCharacterCards = cur_game.character.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"50px\", height: \"50px\" }}\r\n                                src={`${cur_game.character[index].image}`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setCharacterCards(tempCharacterCards);\r\n        }\r\n        //background\r\n        if (cur_game.background) {\r\n            const backgroundCards = cur_game.background.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"50px\", height: \"50px\" }}\r\n                                src={`${cur_game.background[index].image}`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setBackgroundCards(backgroundCards);\r\n        }\r\n        //bgm\r\n        if (cur_game.bgm) {\r\n            const bgmCards = cur_game.bgm.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"20px\", height: \"20px\" }}\r\n                                src={`${config.STORAGE}/music_icon.jpg`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                            {cur_game.bgm[index].name}\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setBgmCards(bgmCards);\r\n        }\r\n        //sound\r\n        if (cur_game.sound) {\r\n            const soundCards = cur_game.sound.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"20px\", height: \"20px\" }}\r\n                                src={`${config.STORAGE}/music_icon.jpg`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                            {cur_game.sound[index].name}\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setSoundCards(soundCards);\r\n        }\r\n    }, [cur_game]);\r\n\r\n    const onDrop = (files) => {\r\n        //check is_file ok\r\n        for (let i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n\r\n            let dotIdx = files[i].name.lastIndexOf(\".\");\r\n            if (dotIdx === -1) {\r\n                message.error(files[i].name + \"은 확장자가 없는 파일입니다.\");\r\n                return;\r\n            }\r\n\r\n            let cur_extension = files[i].name.substr(dotIdx, 10000);\r\n            if (\r\n                //image check\r\n                (fileState === 1 || fileState === 2) &&\r\n                extension.image.indexOf(cur_extension) == -1\r\n            ) {\r\n                message.error(\r\n                    files[i].name + \"은 지원하지 않는 이미지 확장자 파일입니다.\"\r\n                );\r\n                return;\r\n            }\r\n\r\n            if (\r\n                //sound check\r\n                (fileState === 3 || fileState === 4) &&\r\n                extension.music.indexOf(cur_extension) == -1\r\n            ) {\r\n                message.error(\r\n                    files[i].name + \"은 지원하지 않는 음원 확장자 파일입니다.\"\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            let formData = new FormData();\r\n            const header = {\r\n                header: { \"content-type\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n            };\r\n            formData.append(\"file\", files[i]);\r\n            let file_name = files[i].name;\r\n            Axios.post(\"/api/game/uploadfile\", formData, header).then(\r\n                (response) => {\r\n                    if (response.data.success) {\r\n                        setFilePath(response.data.url);\r\n\r\n                        switch (fileState) {\r\n                            case 1:\r\n                                const characterForm = {\r\n                                    gameId: gameId,\r\n                                    character: {\r\n                                        name: file_name,\r\n                                        image: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putCharacterImg\",\r\n                                    characterForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"캐릭터 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            case 2: //background\r\n                                const backgroundForm = {\r\n                                    gameId: gameId,\r\n                                    background: {\r\n                                        name: file_name,\r\n                                        image: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putBackgroundImg\",\r\n                                    backgroundForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"배경 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            case 3:\r\n                                const bgmForm = {\r\n                                    gameId: gameId,\r\n                                    bgm: {\r\n                                        name: file_name,\r\n                                        music: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\"/api/game/putBgm\", bgmForm).then(\r\n                                    (response) => {\r\n                                        if (response.data.success) {\r\n                                            setFilePath(response.data.url);\r\n                                        } else {\r\n                                            message.error(\"배경음 업데이트 실패\");\r\n                                        }\r\n                                    }\r\n                                );\r\n                                return;\r\n\r\n                            case 4:\r\n                                const soundForm = {\r\n                                    gameId: gameId,\r\n                                    sound: {\r\n                                        name: file_name,\r\n                                        music: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putSound\",\r\n                                    soundForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"효과음 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            default:\r\n                                message.error(\"정의되지 않은 업로드 버튼입니다.\");\r\n                                return;\r\n                        }\r\n                    } else {\r\n                        message.error(\"업로드 실패\");\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.history.push(`/scene/make/`);\r\n    };\r\n\r\n    const onCharacter = () => {\r\n        setFileState(1);\r\n    };\r\n    const onBackground = () => {\r\n        setFileState(2);\r\n    };\r\n    const onBgm = () => {\r\n        setFileState(3);\r\n    };\r\n    const onSound = () => {\r\n        setFileState(4);\r\n    };\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 캐릭터를 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"flex-start\" }}\r\n                    onClick={onCharacter}\r\n                >\r\n                    {/* Set click handler */}\r\n                    {/* <button onClick={onBackground}> </button> */}\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{characterCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 배경을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    // style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    style={{ display: \"flex\", justifyContent: \"flex-start\" }}\r\n                    onClick={onBackground}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{backgroundCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 음악을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    onClick={onBgm}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{bgmCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 효과음을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    onClick={onSound}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{soundCards}</Row>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Go to Last Step!!\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameBuildUpPage;\r\n","import \"./GameCharacterBlock.css\";\r\nimport React from \"react\";\r\nconst GameCharacterBlock = (props) => {\r\n  const { characterList } = props;\r\n  const characterblocks = characterList?.map((charSchema, index) => {\r\n    return (\r\n      <div key={index}>\r\n        <div\r\n          className=\"CharacterBlock\"\r\n          style={{ left: `${charSchema.posX}%` }}\r\n        >\r\n          <div\r\n            className=\"character__container\"\r\n            style={{\r\n              height: `${charSchema.size}%`,\r\n              top: `${charSchema.posY}%`\r\n            }}\r\n          >\r\n            <img\r\n              className=\"characterImg\"\r\n              src={charSchema.image}\r\n              alt=\"img\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  return <div className=\"CharacterBlocks\" >{characterblocks}</div>;\r\n};\r\n\r\nexport default GameCharacterBlock;","import { useEffect, useRef } from \"react\";\r\n\r\nfunction useKey(key, cb) {\r\n    const callbackRef = useRef(cb);\r\n\r\n    useEffect(() => {\r\n        callbackRef.current = cb;\r\n    });\r\n\r\n    useEffect(() => {\r\n        function handle(event) {\r\n            if (event.code === key && !event.shiftKey) {\r\n                callbackRef.current(event);\r\n            }\r\n        }\r\n        document.addEventListener(\"keypress\", handle);\r\n        return () => document.removeEventListener(\"keypress\", handle);\r\n    }, [key]);\r\n}\r\n\r\nexport default useKey;","import React, { memo } from \"react\";\r\nimport { Modal, Form, Input } from \"antd\";\r\nimport useKey from \"../../functions/useKey\";\r\n\r\nconst ModalFormComponent = ({ visible, onCancel, onCreate, form, remainTime }) => {\r\n  const { getFieldDecorator } = form;\r\n\r\n  function handleEnter() {\r\n    onCreate();\r\n  }\r\n\r\n  useKey(\"Enter\", handleEnter);\r\n\r\n  if (visible) {\r\n    return (\r\n      <Modal\r\n        visible={true}\r\n        title={`선택지 내용을 입력하세요 (${remainTime})`}\r\n        okText=\"Submit\"\r\n        onCancel={onCancel}\r\n        onOk={onCreate}\r\n      >\r\n        <Form layout=\"vertical\">\r\n          <Form.Item label=\"Title\">\r\n            {getFieldDecorator(\"title\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"제목을 입력해주세요!\",\r\n                },\r\n              ],\r\n            })(<Input ref={(input) => input && input.focus()} />)}\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst ModalForm = Form.create({ name: \"modal_form\" })(ModalFormComponent);\r\n\r\nexport default memo(ModalForm);\r\n","import { LOADINGPAGE_GAMEPLAY, PAUSE_GAMEPLAY } from \"./types\";\r\n\r\nexport function gameLoadingPage(loadingType) {\r\n  return {\r\n    type: LOADINGPAGE_GAMEPLAY,\r\n    payload: loadingType,\r\n  };\r\n}\r\n\r\nexport function gamePause(isPause) {\r\n  return {\r\n    type: PAUSE_GAMEPLAY,\r\n    payload: isPause,\r\n  };\r\n}\r\n","import React, { useState, useEffect, useCallback, useRef, memo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Button } from \"antd\";\r\nimport ModalForm from \"./InputModalForm\";\r\nimport { useHistory } from \"react-router\";\r\nimport { socket } from \"../../App\";\r\nimport axios from \"axios\";\r\nimport { gamePause } from \"../../../_actions/gamePlay_actions\";\r\nimport { SecurityScanTwoTone } from \"@ant-design/icons\";\r\n\r\nconst InputModal = ({ scene_id, scene_depth, game_id, scene_next_list, theme }) => {\r\n  const dispatch = useDispatch()\r\n  let history = useHistory();\r\n  const user = useSelector((state) => state.user);\r\n  const emptyNum = useSelector((state) => state.sync.emptyNum);\r\n  const user_id = user.userData._id.toString();\r\n  const [visible, setVisible] = useState(false);\r\n  const [formRef, setFormRef] = useState(null);\r\n  const [remainTime, setRemainTime] = useState(0);\r\n  const [decreaseTimer, setDecreaseTimer] = useState(null);\r\n  const [validated, setValidated] = useState(1)\r\n\r\n  const createFlag = useRef(false)\r\n\r\n  const tick = 30;\r\n\r\n\r\n  const handleCreate = () => {\r\n    formRef.validateFields(async (err, values) => {\r\n      clearTimeout(decreaseTimer);\r\n      if (createFlag.current || err || !visible) {\r\n        return;\r\n      }\r\n\r\n      createFlag.current = true;\r\n      const data = {\r\n        gameId: game_id,\r\n        prevSceneId: scene_id,\r\n        isFirst: 0,\r\n        sceneDepth: scene_depth + 1,\r\n        title: values.title,\r\n      };\r\n      const res = await axios.post(\"/api/scene/create\", data);\r\n      //! socket 보내서 서버에서 scene Cache x exp 업데이트\r\n\r\n      socket.emit(\"created_choice\", { sceneId: scene_id, userId: user_id, exp: res.data.exp })\r\n      // tmp scene create\r\n\r\n      formRef.resetFields();\r\n      setVisible(false);\r\n\r\n      //! 껍데기 넣을 때, 서버에서 exp 같이 넣기 (별개로 or 같이 해도됨 시간 동기화가 되는 좋은 방법이 있다면)\r\n      history.replace({\r\n        pathname: `/scene/make`,\r\n        state: {\r\n          gameId: game_id,\r\n          sceneId: res.data.sceneId\r\n        }\r\n      });\r\n\r\n    });\r\n  };\r\n\r\n  const saveFormRef = useCallback((node) => {\r\n    if (node !== null) {\r\n      setFormRef(node);\r\n    }\r\n  }, []);\r\n  let decTimer;\r\n\r\n  const onClickHandler = () => {\r\n    dispatch(gamePause(true));\r\n    clearTimeout(decreaseTimer);\r\n    let tick = 30;\r\n    setRemainTime(tick);\r\n    decTimer = setInterval(() => {\r\n      tick--;\r\n      if (tick === 0) {\r\n        clearInterval(decTimer);\r\n        cancelHandler();\r\n        return;\r\n      }\r\n      setRemainTime(tick);\r\n    }, 970);\r\n    setDecreaseTimer(decTimer);\r\n\r\n    socket.emit(\"empty_num_decrease\", { scene_id, user_id });\r\n    setVisible(true);\r\n  }\r\n\r\n  const cancelHandler = () => {\r\n    socket.emit(\"empty_num_increase\", { scene_id, user_id });\r\n    clearTimeout(decreaseTimer);\r\n    setVisible(false);\r\n    dispatch(gamePause(false));\r\n  }\r\n\r\n  const createHandler = () => {\r\n    return handleCreate();\r\n  }\r\n\r\n  const [dino, setDino] = useState(0);\r\n\r\n  useEffect(() => {\r\n    socket.off(\"validated\");\r\n    socket.on(\"validated\", (data) => {\r\n      setValidated(validated * -1)\r\n    })\r\n\r\n    socket.off(\"decrease_failed\");\r\n    socket.on(\"decrease_failed\", () => {\r\n      setVisible(false);\r\n      setDino(0);\r\n      setDino(1);\r\n    })\r\n\r\n    socket.emit(\"validate_empty_num\", { scene_id })\r\n  }, [scene_id])\r\n\r\n  useEffect(() => {\r\n    if (dino) {\r\n      clearTimeout(decreaseTimer);\r\n    }\r\n  }, [dino]);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        (scene_next_list?.length < 4) &&\r\n        <>\r\n          <div\r\n            className={`text_line_choice ${theme}`}\r\n            onClick={emptyNum > 0 ? onClickHandler : null}\r\n          >\r\n            선택지 추가 (+{emptyNum})\r\n            </div>\r\n        </>\r\n      }\r\n      <ModalForm\r\n        ref={saveFormRef}\r\n        visible={visible}\r\n        onCancel={cancelHandler}\r\n        onCreate={createHandler}\r\n        remainTime={remainTime}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(InputModal);\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nfunction useMouse(key, cb) {\r\n    const callbackRef = useRef(cb);\r\n\r\n    useEffect(() => {\r\n        callbackRef.current = cb;\r\n    });\r\n\r\n    useEffect(() => {\r\n        function handle(event) {\r\n            callbackRef.current(event);\r\n        }\r\n        document.addEventListener(key, handle);\r\n        return () => document.removeEventListener(key, handle);\r\n    }, []);\r\n}\r\nexport default useMouse;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useKey from \"../../functions/useKey\";\r\nimport { useWindupString } from \"windups\";\r\nimport useMouse from \"../../functions/useMouse\";\r\n\r\n// voice.volume = 0.8\r\nfunction TextAnimation({ cut_script, setIsTyping }) {\r\n    const [flag, setFlag] = useState(false);\r\n    let i = 0;\r\n    const [text, { skip }] = useWindupString(\r\n        cut_script,\r\n        {\r\n            pace: () => 150,\r\n            onFinished: () => {\r\n                setFlag(true)\r\n            },\r\n            // onChar: () => {\r\n            //     if (!(cut_script[i] === ' ' || cut_script[i] === '.')) {\r\n            //         voice.load()\r\n            //         voice.play()\r\n            //     }\r\n            //     i++;\r\n            // }\r\n        }\r\n    );\r\n\r\n    useKey(\"Enter\", handleEnter);\r\n    useKey(\"Space\", handleEnter);\r\n    useMouse(\"mouseup\", handleEnter);\r\n    function handleEnter(event) {\r\n        skip()\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setIsTyping(false)\r\n        }\r\n    }, [flag])\r\n\r\n    if (cut_script)\r\n        return <div>{text}</div>\r\n    else\r\n        return <div></div>\r\n}\r\n\r\n\r\nexport default TextAnimation;","\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { Button, Modal } from \"antd\";\r\n\r\nimport \"../SceneEndingPage/SceneEndingPage.css\";\r\n\r\n\r\n\r\nconst FirstSceneTeleport = ({ gameId, setScene }) => {\r\n    const history = useHistory();\r\n    const user = useSelector((state) => state.user);\r\n    const [isWarningVisible, setIsWarningVisible] = useState(false)\r\n\r\n    const playingListClear = () => {\r\n\r\n        if (user) {\r\n            //! auth를 통해서 쿠키에서 유저정보 갖고올 수 있다.\r\n            Axios.get(\"/api/users/playing-list/clear\").\r\n                then(response => {\r\n                    if (response.data.success) {\r\n                        setIsWarningVisible(false)\r\n                        setScene({})\r\n                        history.push({\r\n                            pathname: `/gameplay`,\r\n                            state: {\r\n                                sceneId: response.data.teleportSceneId,\r\n                                gameId: gameId,\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        setIsWarningVisible(false)\r\n\r\n                        alert(\"오류가 발생했습니다.\")\r\n                    }\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n    const cancelModal = () => {\r\n        setIsWarningVisible(false)\r\n    }\r\n    const openModal = () => {\r\n        setIsWarningVisible(true)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                onClick={openModal}\r\n                className=\"ending_button\"\r\n            >처음으로 돌아가기\r\n            </Button>\r\n            <Modal\r\n                title=\"⚠ 주의 ⚠\"\r\n                visible={isWarningVisible}\r\n                maskClosable={false}\r\n                closable={false}\r\n                centered = {true}\r\n                footer={\r\n                    <React.Fragment>\r\n                        <Button key = \"ok\" type= \"primary\" onClick={playingListClear}>\r\n                            확인\r\n                        </Button>\r\n                        <Button key = \"cancel\" onClick={cancelModal}>\r\n                            취소\r\n                        </Button>\r\n                    </React.Fragment>\r\n                }\r\n            >\r\n\r\n                <p>첫 화면으로 돌아갑니다.</p>\r\n                <p>이어하기로 돌아올 수 없습니다.</p>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default FirstSceneTeleport;\r\n","\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { Button } from \"antd\";\r\n\r\n\r\nconst PrevSceneTeleport = ({ gameId,setScene }) => {\r\n    const history = useHistory();\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const playingListPop = () => {\r\n\r\n        if (user) {\r\n            //! auth를 통해서 쿠키에서 유저정보 갖고올 수 있다.\r\n            Axios.get(\"/api/users/playing-list/pop\").\r\n                then(response => {\r\n                    if (response.data.success) {\r\n                        setScene({})\r\n                        history.push({\r\n                            pathname: `/gameplay`,\r\n                            state: {\r\n                                sceneId: response.data.teleportSceneId,\r\n                                gameId: gameId,\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        alert(\"오류가 발생했습니다.\")\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            alert(\"로그인 시 지원되는 기능입니다.\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Button\r\n                onClick={playingListPop}\r\n                className=\"ending_button\"\r\n        >이전으로 돌아가기\r\n        </Button>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PrevSceneTeleport;\r\n","import \"./SceneEndingPage.css\";\r\nimport React, { useState } from \"react\";\r\nimport FirstSceneTeleport from \"../SceneTeleport/FirstSceneTeleport\";\r\nimport PrevSceneTeleport from \"../SceneTeleport/PrevSceneTeleport\";\r\n\r\n\r\nconst SceneEndingPage = ({ gameId, setScene }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"ending_box\">\r\n            <div>\r\n                    The End\r\n            </div>\r\n            <div className=\"ending_button_container\">\r\n                {/* <p>n개의 엔딩 중 1개를 발견하셨습니다. </p> */}\r\n                {/* <p>이 씬으로 온 당신은 1 n</p> */}\r\n\r\n                {/* <p>걸어왔던 길</p> -- 히스토리 맵 그 이상의.. 대사가 곁들여지고 멋진..*/}\r\n                <React.Fragment>\r\n\r\n                    <FirstSceneTeleport \r\n                        key={0}\r\n                        gameId={gameId}\r\n                        setScene = {setScene}\r\n                    />\r\n                    <PrevSceneTeleport \r\n                        key={1}\r\n                        gameId={gameId}\r\n                        setScene={setScene}\r\n                    />\r\n                </React.Fragment>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SceneEndingPage;\r\n","import \"./TextBlock.css\";\r\nimport React, { useReducer } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\nimport InputModal from \"../Modal/InputModal\";\r\nimport TextAnimation from './TextAnimation'\r\nimport SceneEndingPage from \"../Scene/SceneEndingPage/SceneEndingPage\";\r\n\r\n// 일단 4 나중에 어떻게 할지 다시 결정..\r\nconst CHOICE_NUM = 4;\r\n\r\nexport const TextBlock = (props) => {\r\n    let { cut_name, cut_script, setIsTyping, isTyping, theme } = props;\r\n\r\n    theme = 'atorney';\r\n\r\n    return <>\r\n        {\r\n            cut_script ?\r\n                <div className={`text_window ${theme}`} >\r\n                    <div className={`text_container ${theme}`} >\r\n                        <div className={`name_block ${theme}`} >\r\n                            {cut_name}\r\n                        </div>\r\n                        <div className={`text_block ${theme}`} >\r\n                            <div className={`text_line ${theme}`} > {\r\n                                isTyping ? < TextAnimation\r\n                                    cut_script={cut_script}\r\n                                    setIsTyping={setIsTyping}\r\n                                /> : cut_script\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className={`text_line ${theme}`} > {\r\n                    isTyping ? < TextAnimation\r\n                        cut_script={\" \"}\r\n                        setIsTyping={setIsTyping}\r\n                    /> : cut_script\r\n                }\r\n                </div>\r\n        }\r\n    </>\r\n};\r\n\r\n// 선택지 display\r\nexport const TextBlockChoice = (props) => {\r\n\r\n    // 뭔가 한다..\r\n\r\n    let {\r\n        game_id,\r\n        cut_name,\r\n        cut_script,\r\n        scene_next_list,\r\n        scene_id,\r\n        scene_depth,\r\n        setIsTyping,\r\n        isTyping,\r\n        isEnding,\r\n        isLastMotion,\r\n        theme,\r\n        setScene\r\n    } = props;\r\n\r\n    theme = 'atorney';\r\n\r\n    const choices = scene_next_list.map((choice, index) => {\r\n        return (\r\n            <Link to={\r\n                {\r\n                    pathname: `/gameplay`,\r\n                    key: index,\r\n                    state: {\r\n                        gameId: game_id,\r\n                        sceneId: choice.sceneId\r\n                    }\r\n                }\r\n            } key={index}\r\n                style={{ textDecoration: 'none' }}\r\n                className={`text_line_choice ${theme}`}\r\n                onClick={() => setScene({})}\r\n            >\r\n                { choice.script}\r\n            </Link>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={`text_window ${theme}`} >\r\n            <TextBlock\r\n                cut_name={cut_name}\r\n                cut_script={cut_script}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n                theme={theme}\r\n            />\r\n            { isLastMotion &&\r\n                <div className={`choice_box ${isEnding} ${theme}`}>\r\n                    {isEnding === true ?\r\n                        <SceneEndingPage gameId={game_id} setScene={setScene} /> :\r\n                        <>\r\n                            {choices}\r\n                            {scene_next_list.length < CHOICE_NUM ?\r\n                                (\r\n                                    <InputModal scene_id={scene_id}\r\n                                        scene_depth={scene_depth}\r\n                                        game_id={game_id}\r\n                                        scene_next_list={scene_next_list}\r\n                                        theme={theme}\r\n                                    />\r\n                                ) :\r\n                                (<div > </div>)\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import { message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Dislike.css\";\r\n\r\nfunction DislikePopup(props) {\r\n  const { gameId, sceneId, trigger, setTrigger } = props;\r\n\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [Title,setTitle] = useState(\"\");\r\n  const [Description,setDescription] = useState(\"\");\r\n\r\n  const onTitleChange = (event) => {\r\n    setTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const onDescriptionChange = (event) => {\r\n    setDescription(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const variable = {\r\n      title : Title,\r\n      description : Description,\r\n      user : user.userData._id,\r\n      sceneId : sceneId,\r\n      gameId : gameId,\r\n    }\r\n    Axios.post(\"/api/complaint/save\", variable).then((response) => {\r\n      if(!response.data.success) {\r\n        message.error(\"신고하는데 문제가 발생했습니다.\")\r\n      } else {\r\n        message.success(\"감사합니다. 신고가 접수되었습니다.\")\r\n        setTrigger(state => !state)\r\n      }\r\n    })\r\n  }\r\n\r\n  return trigger ? (\r\n    <div className=\"dislike_popup\">\r\n      <div className=\"dislike_inner\">\r\n        <button className=\"close_btn\" onClick={() => setTrigger(state => !state)}>\r\n          close\r\n        </button>\r\n        <label>Title</label>\r\n        <input onChange={onTitleChange} value={Title} />\r\n        <label>Description</label>\r\n        <textarea onChange={onDescriptionChange} value={Description} />\r\n        <button className=\"btn\" onClick={onSubmit}>\r\n          신고하기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default DislikePopup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./HistoryMap.css\";\r\nimport { message, Button, Modal } from \"antd\";\r\nimport { SVG } from \"../../svg/icon\";\r\n\r\nfunction MapToLeft() {\r\n  var map = document.getElementsByClassName(\"HistoryMap_inner\")[0];\r\n  var computedStyle = window.getComputedStyle(map);\r\n  var transform = computedStyle.getPropertyValue(\"transform\");\r\n  var new_position =\r\n    transform !== \"none\" ? parseInt(transform.split(\",\")[4]) : 0;\r\n\r\n  map.style.transform = `translate(${new_position + 250}px, 0px)`;\r\n}\r\n\r\nfunction MapToRight() {\r\n  var map = document.getElementsByClassName(\"HistoryMap_inner\")[0];\r\n  var computedStyle = window.getComputedStyle(map);\r\n  var transform = computedStyle.getPropertyValue(\"transform\");\r\n  var new_position =\r\n    transform !== \"none\" ? parseInt(transform.split(\",\")[4]) : 0;\r\n\r\n  map.style.transform = `translate(${new_position - 250}px, 0px)`;\r\n}\r\n\r\nfunction GoToScene(props) {\r\n  const { userhistory, gameId, sceneId, targetScene,setScene } = props;\r\n  const data = { data: { sceneIndex: targetScene - 1 } };\r\n  Axios.post(\"/api/game/refreshHistory\", data).then((response) => {\r\n    if (!response.data.success) {\r\n      message.error(\"Scene 변경 요청 실패\");\r\n    } else {\r\n      const close = document.getElementsByClassName(\"close_btn\");\r\n      console.log(close.length)\r\n      for (let i = close.length - 1; i >= 0; i--) {\r\n        close[i].click();\r\n      }\r\n      setScene({});\r\n\r\n      userhistory.replace({\r\n        pathname: `/gameplay`,\r\n        state: {\r\n          sceneId: sceneId[targetScene - 1],\r\n          gameId: gameId,\r\n        },\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nlet sceneInfo = [];\r\nlet targetScene = 1;\r\n\r\nfunction HistoryMapPopup(props) {\r\n  const { userhistory, setTrigger, setScene } = props;\r\n  const { gameId, sceneId } = props.history;\r\n  const [SceneInfo, setSceneInfo] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = (target) => {\r\n    targetScene = target;\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    GoToScene({ userhistory, gameId, sceneId, targetScene, setScene });\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.trigger) {\r\n      Axios.get(\"api/game/simple-scene-info\").then((response) => {\r\n        sceneInfo = response.data.sceneinfo;\r\n        setSceneInfo(sceneInfo);\r\n      });\r\n      return () => {\r\n        setSceneInfo([]);\r\n      };\r\n    }\r\n  }, [props.trigger]);\r\n\r\n  function close_button() {\r\n    setTrigger(false);\r\n  }\r\n\r\n  const HistoryMap_scenes = SceneInfo.map((scene, index) => {\r\n    // if (index === SceneInfo.length - 1) {\r\n    //   return (\r\n    //     <div\r\n    //       className=\"HistoryMap_scene\"\r\n    //       key={index + 1}\r\n    //       style={{border:\"0.2em orange solid\"}}\r\n    //     >\r\n    //       <div className=\"HistoryMap_scene_num\"> #{index + 1}</div>\r\n    //       <img className=\"HistoryMap_scene_img\" src={scene.background} />\r\n    //       <div className=\"HistoryMap_scene_name\">{scene.name}:</div>\r\n    //       <div className=\"HistoryMap_scene_text\">\"{scene.script}\"</div>\r\n    //     </div>\r\n    //   );\r\n    // } else {\r\n      return (\r\n        <div\r\n          className=\"HistoryMap_scene\"\r\n          key={index + 1}\r\n          onClick={() => showModal(index + 1)}\r\n        >\r\n          <div className=\"HistoryMap_scene_num\"> #{index + 1}</div>\r\n          <img className=\"HistoryMap_scene_img\" src={scene.background} />\r\n          <div className=\"HistoryMap_scene_name\">{scene.name}:</div>\r\n          <div className=\"HistoryMap_scene_text\">\"{scene.script}\"</div>\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n\r\n  return props.trigger ? (\r\n    <div className=\"HistoryMap_popup\">\r\n      <div className=\"close_btn\" onClick={() => close_button()}>\r\n        <SVG\r\n          className=\"close_btn\"\r\n          src=\"close_2\"\r\n          width=\"45\"\r\n          height=\"50\"\r\n          color=\"#F5F5F5\"\r\n        ></SVG>\r\n      </div>\r\n\r\n      <div className=\"HistoryMap-toleft_btn\" onClick={MapToLeft}>\r\n        <SVG\r\n          src=\"arrow_1\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          color=\"#F5F5F5\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"HistoryMap-toright_btn\" onClick={MapToRight}>\r\n        <SVG\r\n          src=\"arrow_1\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          color=\"#F5F5F5\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"HistoryMap_inner\"\r\n        style={{ width: sceneInfo.length * 15 + \"%\" }}\r\n      >\r\n        {HistoryMap_scenes}\r\n      </div>\r\n\r\n      <Modal\r\n        title=\"경고\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <p>\r\n          {targetScene} 번째 씬으로 돌아갑니다. 돌아가려는 씬까지의 기록은\r\n          삭제됩니다.\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default HistoryMapPopup;\r\n","import React, { useState } from \"react\";\r\nimport \"./LoadingPage.css\";\r\nimport { useSelector } from \"react-redux\";\r\nconst LOADING_TYPE = {\r\n  NONE: 0,\r\n  BASIC: 1,\r\n  SLIDELEFT: 2,\r\n  SLIDERIGHT: 3,\r\n  SLIDEUP: 4,\r\n  SLIDEDOWN: 5,\r\n  BLACKIN: 6,\r\n};\r\n\r\nconst LoadingPage = () => {\r\n  const loadingType = useSelector((state) => state.gameplay.loadingType);\r\n  switch (loadingType) {\r\n    case LOADING_TYPE.NONE:\r\n      return null;\r\n    case LOADING_TYPE.BASIC:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1.5s ease-out 0s 1 basic\" }}\r\n          className=\"loading_page\"\r\n        >\r\n          <div className=\"loading_icon\">loading.....</div>\r\n        </div>\r\n      );\r\n    case LOADING_TYPE.SLIDELEFT:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideLeft\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDERIGHT:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideRight\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDEUP:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideUp\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDEDOWN:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideDown\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.BLACKIN:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 blackIn\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default LoadingPage;\r\n","import axios from 'axios';\r\nimport {\r\n    LOAD_EMPTY_NUM,\r\n    SAVE_PREV_SCENE\r\n} from './types';\r\n\r\nexport function loadEmptyNum(dataToSubmit){\r\n    const request = dataToSubmit.emptyNum !== undefined ? dataToSubmit.emptyNum : axios.get(`/api/game/getSceneInfo/${dataToSubmit.sceneId}`)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                const scene = response.data.scene;\r\n                return scene.sceneTmp.emptyNum;\r\n            }\r\n        });\r\n\r\n    return {\r\n        type: LOAD_EMPTY_NUM,\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function savePrevScene(dataToSubmit){\r\n    const request = dataToSubmit.prevSceneId;\r\n\r\n    return {\r\n        type: SAVE_PREV_SCENE,\r\n        payload: request\r\n    };\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function useFullscreenStatus(elRef) {\r\n  const [isFullscreen, setIsFullscreen] = React.useState(\r\n    document[getBrowserFullscreenElementProp()] != null\r\n  );\r\n\r\n  const setFullscreen = () => {\r\n    if (elRef.current == null) return;\r\n\r\n    elRef.current\r\n      .requestFullscreen()\r\n      .then(() => {\r\n        setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n      })\r\n      .catch(() => {\r\n        setIsFullscreen(false);\r\n      });\r\n  };\r\n\r\n  React.useLayoutEffect(() => {\r\n    document.onfullscreenchange = () =>\r\n      setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n\r\n    return () => (document.onfullscreenchange = undefined);\r\n  });\r\n\r\n  return [isFullscreen, setFullscreen];\r\n}\r\n\r\nfunction getBrowserFullscreenElementProp() {\r\n  if (typeof document.fullscreenElement !== \"undefined\") {\r\n    return \"fullscreenElement\";\r\n  } else if (typeof document.mozFullScreenElement !== \"undefined\") {\r\n    return \"mozFullScreenElement\";\r\n  } else if (typeof document.msFullscreenElement !== \"undefined\") {\r\n    return \"msFullscreenElement\";\r\n  } else if (typeof document.webkitFullscreenElement !== \"undefined\") {\r\n    return \"webkitFullscreenElement\";\r\n  } else {\r\n    throw new Error(\"fullscreenElement is not supported by this browser\");\r\n  }\r\n}\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./TreeMap.css\";\r\nimport { message } from \"antd\";\r\n\r\nfunction GoToScene(props) {\r\n  const { userhistory, gameId, sceneId, GoScene } = props;\r\n  const data = { data: { sceneIndex: GoScene - 1 } };\r\n  Axios.post(\"/api/game/refreshHistory\", data).then((response) => {\r\n    if (!response.data.success) {\r\n      message.error(\"Scene 변경 요청 실패\");\r\n    } else {\r\n      userhistory.push(`/gameplay/${gameId}/${sceneId[GoScene - 1]}`);\r\n      const close = document.getElementsByClassName(\"close_btn\");\r\n      for (let i = close.length - 1; i >= 0; i--) {\r\n        close[i].click();\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction GetSceneInfo(props) {\r\n  const { index, scene, setSceneInfo } = props;\r\n  Axios.get(`/api/game/getSceneInfo/${scene}`).then((response) => {\r\n    if (!response.data.success) {\r\n      alert(\"Scene 정보 없음...\");\r\n    } else {\r\n      const cutList = response.data.scene.cutList;\r\n      const lastcut = cutList[cutList.length - 1];\r\n      setSceneInfo({\r\n        sceneindex: index,\r\n        background: lastcut.background,\r\n        name: lastcut.name,\r\n        script: lastcut.script,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction useConstructor(callBack = () => {}) {\r\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\r\n  if (hasBeenCalled) return;\r\n  callBack();\r\n  setHasBeenCalled(true);\r\n}\r\n\r\n//* 나중에 스키마로 만들어야함\r\nconst SceneDepth = 4;\r\nconst sceneMap = [\r\n  { sceneId: 1, link: null },\r\n  { sceneId: 2, link: null },\r\n  { sceneId: 3, link: null },\r\n  { sceneId: 4, link: null },\r\n  { sceneId: null, link: null },\r\n  { sceneId: null, link: null },\r\n  { sceneId: 7, link: null },\r\n  { sceneId: 8, link: null },\r\n  { sceneId: 9, link: null },\r\n  { sceneId: 10, link: null },\r\n  { sceneId: 11, link: null },\r\n  { sceneId: 12, link: null },\r\n  { sceneId: 13, link: null },\r\n  { sceneId: 14, link: null },\r\n  { sceneId: 15, link: null },\r\n  { sceneId: 16, link: null },\r\n  { sceneId: 17, link: null },\r\n  { sceneId: 18, link: null },\r\n  { sceneId: 19, link: null },\r\n  { sceneId: 20, link: null },\r\n  { sceneId: 21, link: null },\r\n  { sceneId: 22, link: null },\r\n];\r\n\r\nconst nodeWidth = 10;\r\nconst nodeHeight = 5;\r\n\r\nlet pivot = [0, 0];\r\nlet position = [50, 0];\r\nlet drag = false;\r\n\r\nfunction TreeMapPopup(props) {\r\n  const { trigger, userhistory, setTrigger} = props;\r\n  const { gameId, sceneId } = props.history;\r\n\r\n  const [Position, setPosition] = useState();\r\n  \r\n  useConstructor(() => {\r\n    setPosition(position);\r\n    // console.log(\"constructor\");\r\n    // console.log(userhistory);\r\n  });\r\n\r\n  useEffect(() => {\r\n    var container = document.getElementsByClassName(\"TreeMap_popup\");\r\n    if (trigger) {\r\n      container[0].addEventListener(\"mousedown\", mouseDown);\r\n      container[0].addEventListener(\"mouseup\", mouseUp);\r\n      container[0].addEventListener(\"mousemove\", mouseMove);\r\n    } else {\r\n      if (container[0]) {\r\n        container[0].removeEventListener(\"mousedown\", mouseDown);\r\n        container[0].removeEventListener(\"mouseup\", mouseUp);\r\n        container[0].removeEventListener(\"mousemove\", mouseMove);\r\n      }\r\n    }\r\n  }, [trigger]);\r\n\r\n  function close_button() {\r\n    setTrigger(false);\r\n  }\r\n\r\n  function mouseDown(e) {\r\n    pivot = [e.pageX, e.pageY];\r\n    drag = true;\r\n    e.preventDefault();\r\n  }\r\n\r\n  function mouseUp(e) {\r\n    drag = false;\r\n    e.preventDefault();\r\n  }\r\n\r\n  function mouseMove(e) {\r\n    if (drag) {\r\n      if (pivot[0] !== e.pageX || pivot[1] !== e.pageY) {\r\n        position = [\r\n          position[0] - (pivot[0] - e.pageX),\r\n          position[1] - (pivot[1] - e.pageY),\r\n        ];\r\n        setPosition(position);\r\n        pivot = [e.pageX, e.pageY];\r\n      }\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  let depth = 1;\r\n  let cnt_limit = 1;\r\n  let cnt = 0;\r\n  const TreeMap_nodes = sceneMap.map((scene, index) => {\r\n    if (cnt === cnt_limit) {\r\n      depth += 1;\r\n      cnt = 0;\r\n      cnt_limit = cnt_limit * 4;\r\n    }\r\n    cnt += 1;\r\n\r\n    // console.log(index, depth);\r\n\r\n    return (\r\n      <div\r\n        className=\"TreeMap_nodeContainer\"\r\n        style={{\r\n          width: (1 / SceneDepth) * 100 + \"%\",\r\n          height: (1 / cnt_limit) * 100 + \"%\",\r\n          left: ((depth - 1) / SceneDepth) * 100 + \"%\",\r\n          top: ((cnt - 1) / cnt_limit) * 100 + \"%\",\r\n        }}\r\n      >\r\n        {/* {index} */}\r\n        <div\r\n          className=\"TreeMap_node\"\r\n          style={{ width: 1 +\"rem\", height: 1+\"rem\" }}\r\n\r\n        />\r\n        {depth !== SceneDepth ? (\r\n          <Fragment>\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"12.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"37.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"62.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"87.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"50%\", top: \"50%\" }}\r\n            />\r\n            <hr className=\"TreeMap_nodeLine_vertical\" />\r\n          </Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return trigger ? (\r\n    <div className=\"TreeMap_popup\">\r\n      <button className=\"close_btn\" onClick={() => close_button()}>\r\n        close\r\n      </button>\r\n      <div\r\n        className=\"TreeMap_inner\"\r\n        style={{\r\n          width: nodeWidth * SceneDepth + \"%\",\r\n          height: nodeHeight * Math.pow(4, SceneDepth - 1) + \"%\",\r\n          left: Position[0],\r\n          top: Position[1],\r\n        }}\r\n      >\r\n        {TreeMap_nodes}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default TreeMapPopup;\r\n","import \"./GamePlayPage.css\";\r\nimport 'react-rangeslider/lib/index.css'\r\nimport \"./GamePlaySlider.css\";\r\nimport GameCharacterBlock from \"./GameCharacterBlock\";\r\nimport { TextBlock, TextBlockChoice } from \"./TextBlock.js\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport DislikePopup from \"./Dislike\";\r\nimport HistoryMapPopup from \"./HistoryMap\";\r\nimport LoadingPage from \"./LoadingPage\";\r\nimport { message } from \"antd\";\r\nimport { socket } from \"../../App\"\r\nimport { loadEmptyNum, savePrevScene } from \"../../../_actions/sync_actions\"\r\nimport useKey from \"../../functions/useKey\";\r\nimport { gameLoadingPage } from \"../../../_actions/gamePlay_actions\";\r\nimport { navbarControl } from \"../../../_actions/controlPage_actions\";\r\nimport useFullscreenStatus from \"../../../utils/useFullscreenStatus\";\r\nimport { useLocation } from \"react-router\";\r\nimport TreeMapPopup from \"./TreeMap\";\r\nimport { gamePause } from \"../../../_actions/gamePlay_actions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport Slider from 'react-rangeslider'\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport {\r\n  faCheckSquare,\r\n  faCompress,\r\n  faExpand,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst bgm_audio = new Audio();\r\nbgm_audio.volume = 0.5\r\nconst sound_audio = new Audio();\r\nsound_audio.volume = 0.5\r\n\r\nfunction useConstructor(callBack = () => { }) {\r\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\r\n  if (hasBeenCalled) return;\r\n  callBack();\r\n  setHasBeenCalled(true);\r\n}\r\n\r\n//! playscreen\r\nconst ProductScreen = (props) => {\r\n  const location = useLocation();\r\n\r\n  const { gameId, sceneId } = location.state;\r\n  const userHistory = props.history;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state.user);\r\n  const isPause = useSelector((state) => state.gameplay.isPause);\r\n\r\n  const ratio = 1080 / 1920;\r\n\r\n  const [windowWidth, setwindowWidth] = useState(window.innerWidth);\r\n  const [windowHeight, setwindowHeight] = useState(window.innerHeight);\r\n  const [i, setI] = useState(0);\r\n  const [Scene, setScene] = useState({});\r\n  const [Dislike, setDislike] = useState(false);\r\n  const [History, setHistory] = useState({});\r\n  const [HistoryMap, setHistoryMap] = useState(false);\r\n  const [TreeMap, setTreeMap] = useState(false);\r\n  const [lastMotion, setLastMotion] = useState(false)\r\n  const [view, setView] = useState(0);\r\n  const [thumbsUp, setThumbsUp] = useState(0);\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  const prevSceneId = useSelector(state => state.sync.prevSceneId);\r\n\r\n  const maximizableElement = useRef(null);\r\n\r\n  const handleExitFullscreen = () => document.exitFullscreen();\r\n\r\n  let isFullscreen, setIsFullscreen;\r\n  let errorMessage;\r\n\r\n  try {\r\n    [isFullscreen, setIsFullscreen] = useFullscreenStatus(maximizableElement);\r\n  } catch (e) {\r\n    errorMessage = \"Fullscreen not supported\";\r\n    isFullscreen = false;\r\n    setIsFullscreen = undefined;\r\n  }\r\n\r\n  useKey(\"Enter\", handleEnter);\r\n  useKey(\"Space\", handleEnter);\r\n  useKey(\"Digit1\", handleChoice);\r\n  useKey(\"Digit2\", handleChoice);\r\n  useKey(\"Digit3\", handleChoice);\r\n  useKey(\"Digit4\", handleChoice);\r\n\r\n\r\n  useEffect(() => {\r\n    socket.off(\"accept_final_change\");\r\n    socket.on(\"accept_final_change\", data => {\r\n      const { sceneId, title } = data;\r\n      let newNextList = Scene.nextList ? [...Scene.nextList] : [];\r\n      newNextList.push({ sceneId, script: title });\r\n      const newScene = { ...Scene, nextList: newNextList };\r\n      setScene(newScene);\r\n    })\r\n  }, [Scene])\r\n\r\n  const [volume, setVolume] = useState(0.5)\r\n  const [muted, setMuted] = useState(false)\r\n  const tempVolume = useRef(0.5)\r\n\r\n  const mute = () => {\r\n    if (muted) {\r\n      setMuted(false)\r\n      volumeControl(tempVolume.current)\r\n    } else {\r\n      tempVolume.current = volume\r\n      setMuted(true)\r\n      volumeControl(0)\r\n    }\r\n  }\r\n\r\n  const volumeControl = (volume) => {\r\n    setVolume(volume)\r\n    volume === 0 ? setMuted(true) : setMuted(false)\r\n    bgm_audio.volume = volume\r\n    sound_audio.volume = volume\r\n  }\r\n\r\n  const [isFirstCut, setIsFirstCut] = useState(true);\r\n  function playMusic(i) {\r\n    if (isFirstCut) setIsFirstCut(false);\r\n    if (Scene?.cutList[i]?.bgm.music) {\r\n      //이전 곡과 같은 bgm이 아니라면\r\n      if (\r\n        !(i > 0 && Scene.cutList[i - 1].bgm.music == Scene.cutList[i]?.bgm.music)\r\n      ) {\r\n        bgm_audio.pause();\r\n        bgm_audio.src = Scene.cutList[i]?.bgm.music;\r\n        bgm_audio.play();\r\n      }\r\n    }\r\n    if (Scene?.cutList[i]?.sound.music) {\r\n      sound_audio.pause();\r\n\r\n      sound_audio.src = Scene.cutList[i]?.sound.music;\r\n      sound_audio.play();\r\n    }\r\n  }\r\n\r\n  const [isTyping, setIsTyping] = useState(true);\r\n\r\n\r\n  function handleEnter(event) {\r\n    //! 타이핑 끝 & 미니맵 X\r\n    if (!isTyping && !isPause) {\r\n      if (i < Scene?.cutList?.length - 1) {\r\n        playMusic(i + 1);\r\n        setI(i + 1);\r\n        setIsTyping(true);\r\n      }\r\n      else if (i == Scene?.cutList?.length - 1) {\r\n        //! 엔딩자리\r\n        setLastMotion(true)\r\n        // setIsTyping(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleChoice(event) {\r\n    if (i === Scene.cutList.length - 1 && !isPause) {\r\n      if (Scene.nextList[parseInt(event.key) - 1]) {\r\n        userHistory.replace({\r\n          pathname: `/gameplay`,\r\n          state: {\r\n            sceneId: Scene.nextList[parseInt(event.key) - 1].sceneId,\r\n            gameId: gameId,\r\n          }\r\n        })\r\n      } else {\r\n        if (parseInt(event.key) - 1 === Scene.nextList.length) {\r\n          dispatch(gamePause(true));\r\n          event.preventDefault();\r\n          let choice = document.getElementById(\"choice\");\r\n          if (choice) {\r\n            choice.click();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function onClick_thumbsUp() {\r\n    if (user && user.userData) {\r\n      // setUpdate((state) => state+1);\r\n      const variable = {\r\n        userId: user.userData._id,\r\n        objectId: sceneId\r\n      }\r\n      Axios.post(\"/api/thumbsup/\", variable).then((response) => {\r\n        if (response.data.success) {\r\n          setIsClicked(response.data.isClicked);\r\n          setThumbsUp(response.data.thumbsup);\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user && user.userData) {\r\n      const variable_thumbsup = {\r\n        objectId: sceneId,\r\n        userId: user.userData._id,\r\n      }\r\n      Axios.post(\"/api/thumbsup/count\", variable_thumbsup).then((response) => {\r\n        if (response.data.success) {\r\n          setIsClicked(response.data.isClicked);\r\n          setThumbsUp(response.data.thumbsup);\r\n        }\r\n      })\r\n      const variable_view = {\r\n        userId: user.userData._id,\r\n        objectId: sceneId\r\n      }\r\n      Axios.post(\"/api/view/\", variable_view).then((response) => {\r\n        if (response.data.success) {\r\n          setView(response.data.view);\r\n        }\r\n      })\r\n    }\r\n  }, [sceneId, user])\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"leave room\", { room: prevSceneId });\r\n    socket.emit(\"room\", { room: sceneId });\r\n    // socket.emit(\"exp_val\", {room: sceneId});\r\n    dispatch(savePrevScene({ prevSceneId: sceneId }));\r\n    socket.off(\"empty_num_changed\") //! 매번 열린다.\r\n    socket.on(\"empty_num_changed\", data => {\r\n      dispatch(loadEmptyNum({\r\n        sceneId,\r\n        emptyNum: data.emptyNum\r\n      }));\r\n    })\r\n    socket.emit(\"validate_empty_num\", { scene_id: sceneId })\r\n\r\n  }, [sceneId])\r\n\r\n  //* navigation bar control\r\n  useEffect(() => {\r\n    dispatch(navbarControl(false));\r\n  }, []);\r\n\r\n  //* game pause control\r\n  useEffect(() => {\r\n    if (HistoryMap || Dislike || TreeMap) {\r\n      dispatch(gamePause(true));\r\n    } else {\r\n      dispatch(gamePause(false));\r\n    }\r\n  }, [HistoryMap, Dislike, TreeMap]);\r\n\r\n  useEffect(() => {\r\n    setLastMotion(false)\r\n    Axios.get(`/api/game/getnextscene/${gameId}/${sceneId}`).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          const history = {\r\n            gameId: gameId,\r\n            sceneId: response.data.sceneIdList,\r\n          };\r\n          setIsTyping(true)\r\n          setHistory(history);\r\n          setI(0);\r\n          bgm_audio.pause();\r\n          sound_audio.pause();\r\n          setIsFirstCut(true);\r\n          setScene(response.data.scene);\r\n          dispatch(gamePause(false));\r\n          dispatch(gameLoadingPage(0));\r\n          dispatch(gameLoadingPage(6));\r\n        } else {\r\n          message.error(\"Scene 정보가 없습니다.\");\r\n          props.history.replace(`/game/${gameId}`);\r\n        }\r\n      }\r\n    );\r\n  }, [sceneId]);\r\n\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setwindowWidth(window.innerWidth);\r\n      setwindowHeight(window.innerHeight);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n  }, [window.innerWidth, window.inner]);\r\n\r\n  const padding = isFullscreen ? 0.0 : 0.1;\r\n  const minSize = 300;\r\n\r\n  let newScreenSize;\r\n  if (windowWidth * ratio > windowHeight) {\r\n    newScreenSize = {\r\n      width: `${(windowHeight * (1 - 2 * padding)) / ratio}px`,\r\n      height: `${windowHeight * (1 - 2 * padding)}px`,\r\n      minWidth: `${minSize / ratio}px`,\r\n      minHeight: `${minSize}px`,\r\n    };\r\n  } else {\r\n    newScreenSize = {\r\n      width: `${windowWidth * (1 - 2 * padding)}px`,\r\n      height: `${windowWidth * (1 - 2 * padding) * ratio}px`,\r\n      minWidth: `${minSize}px`,\r\n      minHeight: `${minSize * ratio}px`,\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(loadEmptyNum({\r\n      sceneId,\r\n    }));\r\n\r\n    return () => {\r\n      bgm_audio.pause();\r\n      sound_audio.pause();\r\n    };\r\n  }, []);\r\n\r\n\r\n  if (Scene?.cutList !== undefined) {\r\n    if (i == 0 && isFirstCut) playMusic(0);\r\n    return (\r\n      <div\r\n        className={`${isFullscreen\r\n          ? \"gamePlay__container_fullscreen\"\r\n          : \"gamePlay__container\"\r\n          }`}\r\n        ref={maximizableElement}\r\n      >\r\n        <div\r\n          className={`${isFullscreen\r\n            ? \"gamePlay__mainContainer_fullscreen\"\r\n            : \"gamePlay__mainContainer\"\r\n            }`}\r\n        >\r\n          <div\r\n            className={`${isFullscreen\r\n              ? \"backgroundImg_container_fullscreen\"\r\n              : \"backgroundImg_container\"\r\n              }`}\r\n            style={newScreenSize}\r\n            onClick={(event) => handleEnter(event)}\r\n          >\r\n            <LoadingPage />\r\n            {(Scene.cutList[i] && Scene.cutList[i]?.background) ?\r\n              <img\r\n                className=\"backgroundImg\"\r\n                src={Scene.cutList[i]?.background}\r\n                alt=\"Network Error\"\r\n              />\r\n              : (\r\n                <div></div>\r\n              )}\r\n            <GameCharacterBlock\r\n              characterList={Scene?.cutList[i]?.characterList}\r\n            />\r\n\r\n\r\n            {i === Scene.cutList.length - 1 ? (\r\n              <TextBlockChoice\r\n                game_id={gameId}\r\n                cut_name={Scene.cutList[i]?.name}\r\n                cut_script={Scene.cutList[i]?.script}\r\n                scene_depth={Scene.depth}\r\n                scene_id={Scene._id}\r\n                scene_next_list={Scene.nextList}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n                isEnding={Scene.isEnding}\r\n                isLastMotion={lastMotion}\r\n                theme={Scene.theme}\r\n                setScene={setScene}\r\n              />\r\n            ) :\r\n              <TextBlock\r\n                cut_name={Scene.cutList[i]?.name}\r\n                cut_script={Scene.cutList[i]?.script}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n                theme={Scene.theme}\r\n              />\r\n            }\r\n\r\n            <HistoryMapPopup\r\n              userhistory={userHistory}\r\n              history={History}\r\n              trigger={HistoryMap}\r\n              setTrigger={setHistoryMap}\r\n              setScene={setScene}\r\n            />\r\n            <TreeMapPopup\r\n              userhistory={userHistory}\r\n              history={History}\r\n              trigger={TreeMap}\r\n              setTrigger={setTreeMap}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"gamePlay__btn_container\">\r\n          <div\r\n            className=\"gamePlay__btn\"\r\n            onClick={mute}\r\n          >\r\n            {muted ? <VolumeOffIcon /> : <VolumeUpIcon />}\r\n          </div>\r\n          <div\r\n            style={{ width: \"80px\" }} //slider width\r\n          >\r\n            <Slider\r\n              min={0}\r\n              max={1}\r\n              step={0.02}\r\n              value={volume}\r\n              onChange={event => {\r\n                volumeControl(event)\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            {i === Scene.cutList.length - 1 &&\r\n              <>\r\n                <button\r\n                  className={isClicked ? \"gamePlay__btnClicked\" : \"gamePlay__btn\"}\r\n                  onClick={onClick_thumbsUp}\r\n                >\r\n                  좋아요: {thumbsUp}\r\n                </button>\r\n                <button\r\n                  className=\"gamePlay__btn\"\r\n                >\r\n                  조회수: {view}\r\n                </button>\r\n              </>\r\n            }\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => setHistoryMap((state) => !state)}\r\n            >\r\n              미니맵\r\n            </button>\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => {\r\n                setTreeMap((state) => !state);\r\n              }}\r\n            >\r\n              트리맵\r\n            </button>\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => setDislike((state) => !state)}\r\n            >\r\n              신고\r\n            </button>\r\n          </div>\r\n          {errorMessage ? (\r\n            <button\r\n              onClick={() =>\r\n                alert(\r\n                  \"Fullscreen is unsupported by this browser, please try another browser.\"\r\n                )\r\n              }\r\n              className=\"gamePlay__btn\"\r\n            >\r\n              {errorMessage}\r\n            </button>\r\n          ) : isFullscreen ? (\r\n            <button onClick={handleExitFullscreen} className=\"gamePlay__btn\">\r\n              <FontAwesomeIcon icon={faCompress} />\r\n            </button>\r\n          ) : (\r\n            <button onClick={setIsFullscreen} className=\"gamePlay__btn\">\r\n              <FontAwesomeIcon icon={faExpand} />\r\n            </button>\r\n          )}\r\n        </div>\r\n        <DislikePopup\r\n          sceneId={sceneId}\r\n          gameId={gameId}\r\n          trigger={Dislike}\r\n          setTrigger={setDislike}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    // dispatch(gameLoadingPage(0));\r\n    // dispatch(gameLoadingPage(1));\r\n\r\n    return (\r\n      <div className=\"loader_container\">\r\n        <div className=\"loader\">Loading...</div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default ProductScreen;\r\n","import React from 'react'\r\n\r\nfunction BackgroundImg({ imgUrl, setBackgroundImg }) {\r\n\r\n  const onClick_img = () => {\r\n    setBackgroundImg(imgUrl);\r\n  }\r\n  return (\r\n    <div\r\n      className=\"backSidebar_image_container\"\r\n      onClick={onClick_img}>\r\n      <img\r\n        src={imgUrl}\r\n        alt=\"img\"\r\n        className=\"backSidebar_image\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BackgroundImg\r\n","import { Button } from 'antd';\r\nimport React, { memo } from 'react'\r\nimport './BackgroundSideBar.css'\r\nimport BackgroundImg from './BackgroundImg'\r\nimport './BackgroundSideBar.css'\r\n\r\nfunction BackgroundSideBar({ gameDetail, setBackgroundImg, setMakeModalState }) {\r\n\r\n  const renderBackground = gameDetail.background.map((background, index) => {\r\n    return (\r\n      <div\r\n        className=\"backSidebar_box\"\r\n        key={`${index}`}>\r\n        <BackgroundImg imgUrl={background.image} setBackgroundImg={setBackgroundImg} />\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"backSidebar__container\">\r\n        {renderBackground}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(BackgroundSideBar)\r\n","import { message } from \"antd\";\r\nimport {\r\n  SELECT_CHARACTER,\r\n  DETACH_CHARACTER,\r\n  PUSH_CHARACTER,\r\n  POP_CHARACTER,\r\n  UPDATE_CHARACTER,\r\n  SET_CHARACTER_LIST\r\n} from \"./types\";\r\n\r\n\r\nexport function selectCharacter(character) {\r\n  return {\r\n    type: SELECT_CHARACTER,\r\n    payload: character,\r\n  };\r\n}\r\n\r\n\r\nexport function detachCharacter() {\r\n  return {\r\n    type: DETACH_CHARACTER,\r\n  };\r\n}\r\n\r\n\r\nexport function popCharacter(dataToSubmit) {\r\n  const { oldArray, index } = dataToSubmit;\r\n  let request;\r\n  for (let i = 0; i < oldArray.length; i++) {\r\n    if (oldArray[i].index === index) {\r\n      message.info(\"삭제되었습니다.\");\r\n      oldArray.splice(i, 1)\r\n      request = [...oldArray]\r\n      break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: POP_CHARACTER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\n\r\nexport function pushCharacter(dataToSubmit) {\r\n  const { oldArray, characterSchema } = dataToSubmit;\r\n  let request;\r\n\r\n  for (let i = 0; i < oldArray?.length; i++) {\r\n    if (oldArray[i].index === characterSchema.index) {\r\n      oldArray.splice(i, 1)\r\n      request = [...oldArray]\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (!request && oldArray?.length >= 3) {\r\n    message.info(\"인물은 최대 세명까지 추가 가능합니다.\");\r\n    request = oldArray;\r\n  }\r\n\r\n  request = request ? request : [...(oldArray ? oldArray : []), characterSchema]\r\n\r\n  return {\r\n    type: PUSH_CHARACTER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function updateCharacter(dataToSubmit) {\r\n  const { oldArray, data, index } = dataToSubmit;\r\n  const request = [\r\n    ...oldArray.slice(0, index),\r\n    {\r\n      ...oldArray[index],\r\n      ...data\r\n    },\r\n    ...oldArray.slice(index + 1, 4)\r\n  ]\r\n\r\n  return {\r\n    type: UPDATE_CHARACTER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function setCharacterList(dataToSubmit) {\r\n  const { CharacterList } = dataToSubmit;\r\n  const request = CharacterList\r\n\r\n  return {\r\n    type: SET_CHARACTER_LIST,\r\n    payload: request,\r\n  };\r\n}","import React from 'react'\r\nimport { message } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { selectCharacter } from '../../../../../_actions/characterSelected_actions';\r\n\r\nfunction CharacterImg({ character, index }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick_selectCharacter = () => {\r\n    dispatch(selectCharacter({ ...character, index: index }));\r\n  }\r\n\r\n  // const img = new Image();\r\n  // img.src = character.image_array[0];\r\n  return (\r\n    <div\r\n      className=\"characterSidebar_image_box\"\r\n      onClick={onClick_selectCharacter}>\r\n      <img\r\n        src={character.image_array[0]}\r\n        alt=\"img\"\r\n        // className={img.width > img.height ?\r\n        //   \"characterSidebar_image_width\" : \"characterSidebar_image_height\"}\r\n        className=\"characterSidebar_image\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterImg\r\n","import { Button } from 'antd';\r\nimport React, { memo, useEffect } from 'react'\r\nimport CharacterImg from './CharacterImg'\r\nimport './CharacterSideBar.css'\r\n\r\n\r\nfunction CharacterSideBar({ gameDetail, setName }) {\r\n\r\n  const renderCharacter = gameDetail.character.map((character, index) => {\r\n    return <div className=\"characterSidebar_box\" key={`${index}`}>\r\n      <CharacterImg\r\n        character={character}\r\n        index={index}\r\n        setName={setName} />\r\n    </div>\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"characterSidebar__container\">\r\n        {renderCharacter}\r\n      </div>\r\n      <div className=\"characterSidebar_line\">\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CharacterSideBar)\r\n","import React from \"react\";\r\nimport { LOCAL_HOST } from \"../../../../Config\"\r\n\r\nfunction BgmFile({ bgm_audio, bgm, setBgmFile }) {\r\n    const onClick_music = () => {\r\n        setBgmFile(bgm);\r\n        bgm_audio.src = bgm.music;\r\n        bgm_audio.play();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"bgmSidebar_box\"\r\n            onClick={onClick_music}\r\n        >\r\n            {bgm.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BgmFile;\r\n","import { Button } from 'antd';\r\nimport React, { memo } from \"react\";\r\nimport \"./BgmSideBar.css\";\r\n\r\nimport BgmFile from \"./BgmFile\";\r\n\r\nfunction BgmSideBar({ gameDetail, bgm_audio, setBgmFile, setMakeModalState }) {\r\n\r\n    const renderBgm = gameDetail.bgm.map((bgm, index) => {\r\n        return (\r\n            <div\r\n                className=\"bgmSidebar_box\"\r\n                key={`${index}`}>\r\n                <BgmFile\r\n                    bgm_audio={bgm_audio}\r\n                    bgm={bgm}\r\n                    setBgmFile={setBgmFile}\r\n                />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"bgmSidebar__container\">\r\n                <div>{renderBgm}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(BgmSideBar);\r\n","import React from \"react\";\r\nimport { LOCAL_HOST } from \"../../../../Config\"\r\n\r\nfunction SoundFile({ sound_audio, sound, setSoundFile }) {\r\n    const onClick_music = () => {\r\n        setSoundFile(sound);\r\n        sound_audio.src = sound.music;\r\n        sound_audio.play();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"bgmSidebar_box\"\r\n            onClick={onClick_music}\r\n        >\r\n            {sound.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundFile;\r\n","import { Button } from 'antd';\r\nimport React, { memo } from \"react\";\r\nimport \"./BgmSideBar.css\";\r\n\r\nimport SoundFile from \"./SoundFile\";\r\n\r\nfunction SoundSideBar({ gameDetail, sound_audio, setSoundFile, setMakeModalState }) {\r\n\r\n    const renderSound = gameDetail.sound.map((sound, index) => {\r\n        return (\r\n            <div\r\n                className=\"bgmSidebar_box\"\r\n                key={`${index}`}>\r\n                <SoundFile\r\n                    sound_audio={sound_audio}\r\n                    sound={sound}\r\n                    setSoundFile={setSoundFile}\r\n                />\r\n                {/* <img src={`${sound.image}`} alt=\"img\"/> */}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"bgmSidebar__container\">\r\n                <div>{renderSound}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(SoundSideBar);\r\n","import React from \"react\";\r\nimport \"../SceneMakeModal.css\";\r\n\r\nconst SceneMakeModalTab = ({ setTag, tag }) => {\r\n  return (\r\n    // <div className=\"sceenmake_modal_container2\">\r\n    <div className=\"tabs\">\r\n      <div\r\n        className={`${tag === 1 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(1)}>\r\n        캐릭터\r\n          </div>\r\n      <div\r\n        className={`${tag === 2 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(2)}>\r\n        배경\r\n          </div>\r\n      <div\r\n        className={`${tag === 3 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(3)}>\r\n        배경음악\r\n          </div>\r\n      <div\r\n        className={`${tag === 4 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(4)}>\r\n        효과음\r\n          </div>\r\n    </div>\r\n    // </div>\r\n  )\r\n}\r\nexport default SceneMakeModalTab;\r\n","import React from \"react\";\r\nimport { FileAddOutlined } from '@ant-design/icons';\r\nimport Dropzone from \"react-dropzone\";\r\nimport \"./MyDropzone.css\";\r\n\r\n\r\nfunction MyDropzone({ onDrop, multiple, maxSize, accept, blobURL }) {\r\n    return <Dropzone\r\n        onDrop={onDrop}\r\n        multiple={multiple}\r\n        maxSize={maxSize} // 10MB + 1\r\n\r\n        // accept=\"image/*,audio/*,video/*\"\r\n        accept={accept}\r\n    >\r\n\r\n        {({ getRootProps, getInputProps }) => (\r\n            <div className=\"dropzone\" {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                {blobURL ? (\r\n                    <div className=\"thumbnail__container\">\r\n                        <img\r\n                            className=\"thumbnail__img\"\r\n                            src={blobURL}\r\n                            alt=\"thumbnail\"\r\n                        />\r\n\r\n                    </div>\r\n                )\r\n                    :\r\n                    <>\r\n                        <div><p className=\"thumbnail__msg\"><b>파일 업로드</b></p>  </div>\r\n                        <FileAddOutlined className=\"dropzone-icon\" />\r\n                    </>\r\n                }\r\n            </div>\r\n        )}\r\n    </Dropzone>\r\n\r\n}\r\n\r\nexport default MyDropzone;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { message, Form } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./CharacterTab.css\";\r\nimport { SVG } from \"../../../../svg/icon\";\r\nimport useMouse from \"../../../../functions/useMouse\";\r\n\r\nfunction CharacterTab({ blobGame, setBlobGame, charPageNum, setCharFileQueue, setCharBlobList }) {\r\n    const [characterProfile, setCharacterProfile] = useState(\"\");\r\n    const [characterCards, setCharacterCards] = useState(\"\");\r\n    const [isUpdate, setIsUpdate] = useState(0);\r\n    const indexNum = useRef(0);\r\n\r\n    const onNameChange = (event) => {\r\n        setBlobGame(game => {\r\n            game.character[charPageNum.current].name = event.currentTarget.value\r\n            return game\r\n        })\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setBlobGame(game => {\r\n            game.character[charPageNum.current].description = event.currentTarget.value\r\n            return game\r\n        })\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n    const onDrop = (files) => {\r\n        console.log(indexNum.current)\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            let curURL = URL.createObjectURL(files[i])\r\n            setCharBlobList(oldArray => [...oldArray, curURL])\r\n\r\n            //new Character\r\n            if (indexNum.current === \"-1\") {\r\n                setBlobGame(game => {\r\n                    game.character = [...game.character, {\r\n                        name: \"\",\r\n                        description: \"\",\r\n                        image_array: [curURL],\r\n                    }]\r\n                    return game\r\n                })\r\n                indexNum.current = blobGame.character.length - 1\r\n            }\r\n            else {\r\n                setBlobGame(game => {\r\n                    game.character[indexNum.current].image_array = [...game.character[indexNum.current].image_array, curURL]\r\n                    return game\r\n                })\r\n            }\r\n        }\r\n        setCharFileQueue(oldArray => [...oldArray, { index: Number(indexNum.current), array: files }])\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (blobGame.character && charPageNum.current < blobGame.character.length) {\r\n            const profile = () => {\r\n                // const img = new Image()\r\n                // img.src = image;\r\n                const image = blobGame.character[charPageNum.current].image_array[0]\r\n                return (\r\n                    <div>\r\n                        <div className=\"characterTab_profile_image\">\r\n                            <img\r\n                                // className={img.width > img.height ?\r\n                                //     \"characterTab_image_width\" : \"characterTab_image_height\"}\r\n                                className=\"characterTab_image\"\r\n                                src={image}\r\n                                alt=\"img\"\r\n                            />\r\n                        </div>\r\n\r\n                        <Form>\r\n                            <input\r\n                                onChange={onNameChange}\r\n                                value={blobGame.character[charPageNum.current].name}\r\n                                className=\"characterTab_profile_name\"\r\n                                placeholder=\"이름을 입력해주세요.\" />\r\n                            <textarea\r\n                                onChange={onDescriptionChange}\r\n                                value={blobGame.character[charPageNum.current].description}\r\n                                className=\"characterTab_profile_text\"\r\n                                placeholder=\"설명을 입력해주세요.\" />\r\n                            {/* <label>(혈액형/좋아하는 것 등 이모지넣을 수 있는 공간?)</label> */}\r\n                        </Form>\r\n                    </div>\r\n                )\r\n            }\r\n            setCharacterProfile(profile);\r\n            const cards = blobGame.character[charPageNum.current].image_array.map((image, index) => {\r\n                // const img = new Image()\r\n                // img.src = image;\r\n                return (\r\n                    <div\r\n                        id={charPageNum.current}\r\n                        key={index}\r\n                        className=\"characterTab_cards\"\r\n                    >\r\n                        <img\r\n                            // className={img.width > img.height ?\r\n                            //     \"characterTab_image_width\" : \"characterTab_image_height\"}\r\n                            className=\"characterTab_image\"\r\n                            src={image}\r\n                            alt=\"img\"\r\n                        />\r\n                    </div>\r\n                )\r\n            })\r\n            setCharacterCards(cards)\r\n        } else {\r\n            setCharacterProfile(\"\");\r\n            setCharacterCards(\"\")\r\n        }\r\n\r\n    }, [isUpdate, blobGame]);\r\n\r\n    useMouse(\"mousedown\", handleMouse)\r\n    function handleMouse(event) {\r\n        for (var i = 0; i < event.path.length; i++) {\r\n            if (event.path[i].id) {\r\n                indexNum.current = event.path[i].id\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"characterTab-container\">\r\n            {blobGame.character?.length !== charPageNum.current &&\r\n                <div>\r\n                    <div>{characterProfile}</div>\r\n                    <div className=\"characterTab_cards_Box\">{characterCards}</div>\r\n                    <div className=\"characterTab_char_dropzone\"\r\n                        id={charPageNum.current}>\r\n                        <MyDropzone\r\n                            onDrop={onDrop}\r\n                            multiple={true}\r\n                            maxSize={10485761} // 10MB + 1\r\n                            accept=\"image/*\"\r\n                        />\r\n                    </div>\r\n                    {blobGame.character &&\r\n                        <div\r\n                            className=\"characterTab_pagenum\"\r\n                        >\r\n                            {charPageNum.current + 1}/{blobGame.character.length}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n            {blobGame.character?.length === charPageNum.current &&\r\n                <div\r\n                    className=\"characterTab_empty_dropzone\"\r\n                    id={-1}>\r\n                    <MyDropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={10485761} // 10MB + 1\r\n                        accept=\"image/*\"\r\n                    />\r\n                    <div className=\"characterTab_instruct\">\r\n                        캐릭터를 추가해주세요\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                charPageNum.current !== 0 &&\r\n                <div\r\n                    className=\"characterTab_leftarrow\"\r\n                    onClick={() => {\r\n                        charPageNum.current--\r\n                        setIsUpdate(num => num + 1)\r\n                    }}>\r\n                    <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color=\"#222831\" />\r\n                </div>\r\n            }\r\n            {\r\n                blobGame?.character?.length !== charPageNum.current &&\r\n                <div\r\n                    className=\"characterTab_rightarrow\"\r\n                    onClick={() => {\r\n                        charPageNum.current++\r\n                        setIsUpdate(num => num + 1)\r\n                    }}>\r\n                    <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color=\"#222831\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CharacterTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./BackgroundTab.css\";\r\n\r\nfunction BackgroundTab({ game, setFileQueue, setTypeQueue, setBackBlobList, backBlobList }) {\r\n    const [backgroundCards, setBackgroundCards] = useState(\"\");\r\n    const [blobCards, setBlobCards] = useState(\"\");\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 1])\r\n            setBackBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (game.background)\r\n            setBackgroundCards(game.background.map((element, index) => {\r\n                return <div className=\"backgroundTab_image_box\" key={index}>\r\n                    <img className=\"backgroundTab_image\"\r\n                        src={element.image}\r\n                        alt=\"img\"\r\n                    />\r\n                </div>\r\n            }))\r\n    }, [game]);\r\n\r\n    useEffect(() => {\r\n        if (backBlobList)\r\n            setBlobCards(backBlobList.map((element, index) => {\r\n                return <div className=\"backgroundTab_image_box\" key={index}>\r\n                    <img className=\"backgroundTab_image\"\r\n                        src={element}\r\n                        alt=\"img\"\r\n                    />\r\n                </div>\r\n            }))\r\n    }, [backBlobList]);\r\n\r\n    return (\r\n        <div className=\"backgroundTab_container\">\r\n            <div className=\"backgroundTab_dropzone\">\r\n                <MyDropzone\r\n                    onDrop={onDrop}\r\n                    multiple={true}\r\n                    maxSize={10485761} // 10MB + 1\r\n                    accept=\"image/*\"\r\n                >\r\n                </MyDropzone>\r\n            </div>\r\n            <div className=\"backgroundTab_Box\">\r\n                <div>{backgroundCards} {blobCards}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackgroundTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./MusicTab.css\";\r\nimport { LOCAL_HOST } from \"../../../../Config\";\r\nfunction BgmTab({ game, setFileQueue, setTypeQueue, setBgmBlobList, bgmBlobList, setBgmBlobNames, bgmBlobNames }) {\r\n    const [bgmCards, setBgmCards] = useState([]);\r\n    const [blobCards, setBlobCards] = useState([]);\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 음원 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 2])\r\n            setBgmBlobNames(oldArray => [...oldArray, files[i]])\r\n            setBgmBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (game.bgm)\r\n            setBgmCards(game.bgm.map((element, index) => {\r\n                return (\r\n                    <div className=\"bgmTab_text_box\" key={index}>\r\n                        {element.name}\r\n                    </div>\r\n                )\r\n            }))\r\n    }, [game]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (bgmBlobList)\r\n            setBlobCards(bgmBlobList.map((element, index) => {\r\n                return (\r\n                    <div className=\"bgmTab_text_box\" key={index}>\r\n                        {bgmBlobNames[index].name}\r\n                    </div>\r\n                )\r\n            }))\r\n    }, [bgmBlobList]);\r\n\r\n    return (\r\n        <div className=\"bgmTab_container\">\r\n            <div className=\"bgmTab_dropzone\">\r\n                <MyDropzone\r\n                    onDrop={onDrop}\r\n                    multiple={true}\r\n                    maxSize={10485761} // 10MB + 1\r\n                    accept=\"audio/*\"\r\n                >\r\n                </MyDropzone>\r\n            </div>\r\n            <div className=\"bgmTab_Box\">\r\n                {bgmCards !== 0 && <div>{bgmCards}</div>}\r\n                {blobCards !== 0 && <div>{blobCards}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BgmTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./MusicTab.css\";\r\nimport { LOCAL_HOST } from \"../../../../Config\";\r\n\r\nfunction SoundTab({ game, setFileQueue, setTypeQueue, setSoundBlobList, soundBlobList, setSoundBlobNames, soundBlobNames }) {\r\n    const [soundCards, setSoundCards] = useState([]);\r\n    const [blobCards, setBlobCards] = useState([]);\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 음원 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 3])\r\n            setSoundBlobNames(oldArray => [...oldArray, files[i]])\r\n            setSoundBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (game.sound)\r\n            setSoundCards(game.sound.map((element, index) => {\r\n                return (\r\n                    <div className=\"bgmTab_text_box\" key={index}>\r\n                        {element.name}\r\n                    </div>\r\n                )\r\n            }))\r\n    }, [game]);\r\n\r\n    useEffect(() => {\r\n        if (soundBlobList)\r\n            setBlobCards(soundBlobList.map((element, index) => {\r\n                return (\r\n                    <div className=\"bgmTab_text_box\" key={index}>\r\n                        {soundBlobNames[index].name}\r\n                    </div>\r\n                )\r\n            }))\r\n    }, [soundBlobList]);\r\n\r\n    return (\r\n        <div className=\"bgmTab_container\">\r\n            <div className=\"bgmTab_dropzone\">\r\n                <MyDropzone\r\n                    onDrop={onDrop}\r\n                    multiple={true}\r\n                    maxSize={10485761} // 10MB + 1\r\n                    accept=\"audio/*\"\r\n                >\r\n                </MyDropzone>\r\n            </div>\r\n            <div className=\"bgmTab_Box\">\r\n                {soundCards !== 0 && <div>{soundCards}</div>}\r\n                {blobCards !== 0 && <div>{blobCards}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundTab;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Modal, message } from \"antd\";\r\nimport Axios from \"axios\";\r\n\r\nimport SceneMakeModalTab from \"./Tab/SceneMakeModalTab\";\r\nimport CharacterTab from \"./Tab/CharacterTab\"\r\nimport BackgroundTab from \"./Tab/BackgroundTab\"\r\nimport BgmTab from \"./Tab/BgmTab\"\r\nimport SoundTab from \"./Tab/SoundTab\"\r\nimport { LOCAL_HOST } from \"../../../Config\";\r\nimport _ from \"lodash\";\r\nimport \"./SceneMakeModal.css\";\r\n\r\nconst config = require('../../../../config/key');\r\n\r\nconst SceneMakeModal = ({ gameId, visible, setTag, tag, setReload }) => {\r\n  const [game, setGame] = useState([]);\r\n  const [fileQueue, setFileQueue] = useState([]);\r\n  const [typeQueue, setTypeQueue] = useState([]);\r\n\r\n  const [backBlobList, setBackBlobList] = useState([]);\r\n  const [bgmBlobList, setBgmBlobList] = useState([]);\r\n  const [bgmBlobNames, setBgmBlobNames] = useState([]);\r\n  const [soundBlobList, setSoundBlobList] = useState([]);\r\n  const [soundBlobNames, setSoundBlobNames] = useState([]);\r\n\r\n  const [blobGame, setBlobGame] = useState([]);\r\n  const charPageNum = useRef(0);\r\n  const [charFileQueue, setCharFileQueue] = useState([]);\r\n  const [charBlobList, setCharBlobList] = useState([]);\r\n\r\n\r\n  const variable = { gameId: gameId }\r\n  useEffect(() => {\r\n    Axios.post('/api/game/getgamedetail', variable)\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          setGame(response.data.gameDetail);\r\n          setBlobGame(_.cloneDeep(response.data.gameDetail));\r\n        } else {\r\n          alert('게임 정보를 로딩하는데 실패했습니다.')\r\n        }\r\n      })\r\n  }, [])\r\n\r\n  const revokeBlobList = () => {\r\n    charBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    backBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    bgmBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    soundBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n  }\r\n\r\n\r\n  const cancelUpload = () => {\r\n    revokeBlobList();\r\n    setTag(0)\r\n  }\r\n\r\n  let uploadFlag = false;\r\n  const upload = () => {\r\n    if (!uploadFlag) {\r\n      uploadFlag = true;\r\n      revokeBlobList();\r\n\r\n      uploadCharFiles()\r\n      if (fileQueue.length)\r\n        uploadFiles()\r\n    }\r\n  };\r\n\r\n  const uploadCharFiles = () => {\r\n    if (charFileQueue.length) {\r\n      let fileNum = Array.from({ length: blobGame.character.length }, () => 0);\r\n      let formData = new FormData();\r\n      for (var i = 0; i < blobGame.character.length; i++) {\r\n        //파일 합치기        \r\n        for (var j = 0; j < charFileQueue.length; j++) {\r\n          if (charFileQueue[j].index === i) {\r\n            fileNum[i] += charFileQueue[j].array.length\r\n            charFileQueue[j].array.forEach(function (value) {\r\n              formData.append('files', value);\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const config = {\r\n        header: { \"encrpyt\": \"multipart/form-data\" },\r\n      };\r\n\r\n\r\n      Axios.post(\"/api/game/uploadfile\", formData, config).then(\r\n        (response) => {\r\n          if (response.data.success) {\r\n            uploadCharDB(fileNum, response.data.files);\r\n          } else {\r\n            alert(\"캐릭터 DB 업로드 실패\");\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      uploadCharDB(null, null);\r\n    }\r\n  }\r\n\r\n  const uploadCharDB = (fileNum, files) => {\r\n    let cnt = 0\r\n    for (var i = 0; i < blobGame.character.length; i++) {\r\n      if (!game.character[i])\r\n        game.character.push({\r\n          name: \"\",\r\n          description: \"\",\r\n          image_array: [],\r\n        })\r\n      game.character[i].name = blobGame.character[i].name;\r\n      game.character[i].description = blobGame.character[i].description;\r\n\r\n      if (fileNum) {\r\n        for (var j = cnt; j < cnt + fileNum[i]; j++) {\r\n          game.character[i].image_array.push(process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[j].path}` : files[j].location)\r\n        }\r\n        cnt += fileNum[i]\r\n      }\r\n    }\r\n    const DBForm = {\r\n      gameId: gameId,\r\n      character: game.character\r\n    };\r\n    Axios.post(\r\n      \"/api/game/putCharDB\",\r\n      DBForm\r\n    ).then((response) => {\r\n      if (response.data.success) {\r\n        // character파일만 올리는 경우\r\n        if (!fileQueue.length) {\r\n          setReload(reload => reload + 1)\r\n          setTag(0)\r\n        }\r\n        // console.log(\"SceneMakeModal::CharDB 업데이트 성공\")\r\n      } else {\r\n        message.error(\"DB 업데이트 실패\");\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  const uploadFiles = () => {\r\n    //upload file queue\r\n    let formData = new FormData();\r\n    fileQueue.forEach(value => {\r\n      formData.append('files', value);\r\n    })\r\n    const header = {\r\n      header: { \"encrpyt\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n    };\r\n\r\n    Axios.post(\"/api/game/uploadfile\", formData, header).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          uploadDB(response.data.files);\r\n        } else {\r\n          alert(\"업로드 실패\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  const uploadDB = (files) => {\r\n    const DBForm = { gameId: gameId, background: [], bgm: [], sound: [] };\r\n    for (var i = 0; i < files.length; i++) {\r\n      switch (typeQueue[i]) {\r\n        case 1: //background\r\n          DBForm.background.push({\r\n            name: files[i].originalname,\r\n            image: (process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        case 2:\r\n          DBForm.bgm.push({\r\n            name: files[i].originalname,\r\n            music: (process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        case 3:\r\n          DBForm.sound.push({\r\n            name: files[i].originalname,\r\n            music: (process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        default:\r\n          message.error(\"정의되지 않은 업로드 버튼입니다.\");\r\n          break;\r\n      }\r\n    }\r\n    Axios.post(\r\n      \"/api/game/putDB\",\r\n      DBForm\r\n    ).then((response) => {\r\n      if (response.data.success) {\r\n        setReload(reload => reload + 1)\r\n        setTag(0)\r\n      } else {\r\n        message.error(\"DB 업데이트 실패\");\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <Modal className=\"scenemake_modal\"\r\n      visible={visible}\r\n      okText=\"Upload\"\r\n      onCancel={cancelUpload}\r\n      onOk={upload}\r\n      width={1500}\r\n      style={{ top: 20 }}\r\n    >\r\n      <div className=\"sceenmake_modal_container\">\r\n        <SceneMakeModalTab setTag={setTag} tag={tag} />\r\n        {tag === 1 &&\r\n          <CharacterTab\r\n            blobGame={blobGame}\r\n            setBlobGame={setBlobGame}\r\n            charPageNum={charPageNum}\r\n            setCharFileQueue={setCharFileQueue}\r\n            setCharBlobList={setCharBlobList}\r\n          />\r\n        }\r\n        {tag === 2 &&\r\n          <BackgroundTab\r\n            game={game}\r\n            setFileQueue={setFileQueue}\r\n            setTypeQueue={setTypeQueue}\r\n            setBackBlobList={setBackBlobList}\r\n            backBlobList={backBlobList}\r\n          />\r\n        }\r\n        {tag === 3 &&\r\n          <BgmTab\r\n            game={game}\r\n            setFileQueue={setFileQueue}\r\n            setTypeQueue={setTypeQueue}\r\n            setBgmBlobList={setBgmBlobList}\r\n            bgmBlobList={bgmBlobList}\r\n            setBgmBlobNames={setBgmBlobNames}\r\n            bgmBlobNames={bgmBlobNames}\r\n          />\r\n        }\r\n        {tag === 4 &&\r\n          <SoundTab\r\n            game={game}\r\n            setFileQueue={setFileQueue}\r\n            setTypeQueue={setTypeQueue}\r\n            setSoundBlobList={setSoundBlobList}\r\n            soundBlobList={soundBlobList}\r\n            setSoundBlobNames={setSoundBlobNames}\r\n            soundBlobNames={soundBlobNames}\r\n          />\r\n        }\r\n      </div>\r\n    </Modal>\r\n\r\n  )\r\n}\r\nexport default SceneMakeModal\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Form, message, Input } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MyDropzone from \"../../Dropzone/MyDropzone\";\r\nimport \"./UploadModal.css\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst PrivateOptions = [\r\n    { value: 0, label: \"Private\" },\r\n    { value: 1, label: \"Public\" },\r\n];\r\n\r\nconst CategoryOptions = [\r\n    { value: 0, label: \"살아남기\" },\r\n    { value: 1, label: \"로맨스\" },\r\n    { value: 2, label: \"스토리\" },\r\n    { value: 3, label: \"추리\" },\r\n    { value: 4, label: \"병맛\" },\r\n];\r\n\r\nconst UploadModal = ({ gameId, visible, setUploadModalState, onSubmit_saveScene, defaultTitle, defaultDescription }) => {\r\n    const user = useSelector((state) => state.user);\r\n    const [GameTitle, setGameTitle] = useState({defaultTitle});\r\n    const [description, setDescription] = useState({defaultDescription});\r\n    const [isPrivate, setIsPrivate] = useState(0);\r\n    const [category, setCategory] = useState(CategoryOptions[0].label);\r\n\r\n    const [blobURL, setBlobURL] = useState(\"\");\r\n    const [thumbFile, setThumbFile] = useState([]);\r\n\r\n    //! 렌더링의 타이밍으로 부득이하게..\r\n    useEffect(() => {\r\n        setGameTitle(defaultTitle)\r\n        setDescription(defaultDescription)\r\n    }, [defaultTitle, defaultDescription])\r\n\r\n\r\n    const onTitleChange = (event) => {\r\n        //최대 50자 제한\r\n        setGameTitle(event.currentTarget.value.substr(0,50));\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescription(event.currentTarget.value);\r\n    };\r\n\r\n    const onPrivateChange = (event) => {\r\n        setIsPrivate(event.currentTarget.value);\r\n    };\r\n\r\n    const onCartegoryChange = (event) => {\r\n        let cat_idx = event.currentTarget.value;\r\n        setCategory(event.currentTarget[cat_idx].text);\r\n    };\r\n\r\n    const onDrop = (files) => {\r\n        if (!files[0]) {\r\n            message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n            return;\r\n        }\r\n        URL.revokeObjectURL(blobURL)\r\n\r\n        setBlobURL(URL.createObjectURL(files[0]))\r\n        setThumbFile(files)\r\n    };\r\n\r\n    const cancel = () => {\r\n        if (blobURL)\r\n            URL.revokeObjectURL(blobURL)\r\n        setUploadModalState(false)\r\n    }\r\n\r\n    const upload = async (event) => {\r\n        event.preventDefault();\r\n        if (GameTitle === \"\" || description === \"\" || blobURL === \"\") {\r\n            message.error(\"모든 정보를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        uploadThumb();\r\n        setUploadModalState(false);\r\n        onSubmit_saveScene()\r\n    }\r\n\r\n    const uploadThumb = async () => {\r\n        //revoke blobURL\r\n        URL.revokeObjectURL(blobURL)\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { \"encrpyt\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n        };\r\n\r\n        thumbFile.forEach(value => {\r\n            formData.append('files', value);\r\n        })\r\n\r\n        await Axios.post(\"/api/game/uploadfile\", formData, config).then(\r\n            (response) => {\r\n                if (response.data.success) {\r\n                    uploadGame( process.env.NODE_ENV === 'development' ? response.data.files[0].path : response.data.files[0].location );\r\n                } else {\r\n                    message.error(\"업로드 실패\");\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const uploadGame = async (filePath) => {\r\n        const game_variables = {\r\n            gameId: gameId,\r\n            creator: user.userData._id,\r\n            title: GameTitle,\r\n            description: description,\r\n            thumbnail: filePath,\r\n            privacy: isPrivate,\r\n            category: category,\r\n            writer: [user.userData._id],\r\n        };\r\n\r\n        await Axios.post(\"/api/game/uploadgameInfo\", game_variables).then((response) => {\r\n            if (response.data.success) {\r\n\r\n            } else {\r\n                message.error(\"game제작 실패\");\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"scenemake_modal\"\r\n            visible={visible}\r\n            okText=\"업로드\"\r\n            cancelText = \"취소\"\r\n            onCancel={cancel}\r\n            onOk={upload}\r\n            width={1000}\r\n            centered = {true}\r\n            closable ={false}\r\n        >\r\n            <div>\r\n                <label>Upload Game</label>\r\n                <Form onSubmit={upload}>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <MyDropzone\r\n                            onDrop={onDrop}\r\n                            multiple={false}\r\n                            maxSize={10485761} // 10MB + 1\r\n                            accept=\"image/*\"\r\n                            blobURL = {blobURL}\r\n                        >\r\n                        </MyDropzone>\r\n\r\n\r\n                    </div>\r\n                    <div className =\"scenemake_modal_description\">\r\n                        <label>Title(최대 50자)</label>\r\n                        <Input onChange={onTitleChange} value={GameTitle}/>\r\n\r\n                        <label>게임 설명</label>\r\n                        <TextArea onChange={onDescriptionChange} value={description} />\r\n\r\n                        <select onChange={onPrivateChange}>\r\n                            {PrivateOptions.map((item, index) => (\r\n                                <option key={index} value={item.value}>\r\n                                    {item.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n                        <select onChange={onCartegoryChange}>\r\n                            {CategoryOptions.map((item, index) => (\r\n                                <option key={index} value={item.value}>\r\n                                    {item.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n                    </div>\r\n\r\n                </Form>\r\n            </div>\r\n        </Modal>\r\n\r\n    )\r\n}\r\nexport default UploadModal;\r\n","var _eventHandlers = {}; // somewhere global\r\n\r\nexport const addEvent = (node, event, handler, capture) => {\r\n    if (!(node in _eventHandlers)) {\r\n        // _eventHandlers stores references to nodes\r\n        _eventHandlers[node] = {};\r\n    }\r\n    if (!(event in _eventHandlers[node])) {\r\n        // each entry contains another entry for each event type\r\n        _eventHandlers[node][event] = [];\r\n    }\r\n    // capture reference\r\n    _eventHandlers[node][event].push([handler, capture]);\r\n    node.addEventListener(event, handler, capture);\r\n}\r\n\r\nexport const removeAllEvents = (node, event) => {\r\n    if (node in _eventHandlers) {\r\n        var handlers = _eventHandlers[node];\r\n        if (event in handlers) {\r\n            var eventHandlers = handlers[event];\r\n            for (var i = eventHandlers.length; i--;) {\r\n                var handler = eventHandlers[i];\r\n                node.removeEventListener(event, handler[0], handler[1]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React, { useRef, memo, useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport './Character.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { popCharacter, selectCharacter, updateCharacter } from '../../../_actions/characterSelected_actions';\r\nimport { addEvent, removeAllEvents } from '../handleEventListener';\r\nimport { faTimes, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Character(props) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n  const { charSchema, GameCharacterList, index } = props;\r\n\r\n  const element_X = useRef();\r\n  const element_Y = useRef();\r\n\r\n  const [clicked, setClicked] = useState(true);\r\n  const [moving, setMoving] = useState(true);\r\n  const [sizing, setSizing] = useState(false);\r\n  const [imgWidth, setImgWidth] = useState(0);\r\n\r\n  const background_element = document.getElementById(\"backgroundImg_container\");\r\n  let pivot = [0, 0];\r\n  let drag = false;\r\n\r\n  function mouseMove(e) {\r\n    const page = [e.pageX, e.pageY];\r\n    if (drag && clicked && moving) {\r\n      if (pivot[0] - e.pageX > 3 || pivot[1] - e.pageY > 3 || pivot[0] - e.pageX < -3 || pivot[1] - e.pageY < -3) {\r\n        const background_width = background_element.offsetWidth;\r\n        const background_height = background_element.offsetHeight;\r\n        const prev_posX = Number(element_X.current.style.left.replace(/%/g, ''));\r\n        const prev_posY = Number(element_Y.current.style.top.replace(/%/g, '').replace(/px/g, ''));\r\n        const next_posX = prev_posX + 100 * (e.pageX - pivot[0]) / background_width;\r\n        const next_posY = prev_posY + 100 * (e.pageY - pivot[1]) / background_height;\r\n        element_X.current.style.left = String(next_posX) + '%';\r\n        element_Y.current.style.top = String(next_posY) + '%';\r\n        pivot = page;\r\n      }\r\n    } else if (drag && clicked && sizing) {\r\n      if (pivot[0] - e.pageX > 7 || pivot[0] - e.pageX < -7) {\r\n        const image_width = document.getElementById(`${index}`).offsetWidth;\r\n        const prev_size = Number(element_Y.current.style.height.replace(/%/g, ''));\r\n        let next_size = 0;\r\n        if (pivot[0] - page[0] < 0) {\r\n          next_size = prev_size * (image_width - 1 * (pivot[0] - page[0])) / image_width;\r\n        } else {\r\n          next_size = prev_size * (image_width - 1 * (pivot[0] - page[0])) / image_width;\r\n        }\r\n        if (next_size > 20) {\r\n          element_Y.current.style.height = String(next_size) + '%';\r\n        }\r\n        pivot = page;\r\n      }\r\n    }\r\n    setImgWidth(document.getElementById(`${index}`).offsetWidth);\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!background_element) {\r\n      return;\r\n    }\r\n    addEvent(background_element, \"mousemove\", mouseMove, false);\r\n    addEvent(background_element, \"mouseup\", onMouseUp, false);\r\n    setImgWidth(document.getElementById(`${index}`).offsetWidth);\r\n    return () => {\r\n      removeAllEvents(background_element, \"mousemove\");\r\n      removeAllEvents(background_element, \"mouseup\");\r\n    }\r\n  }, [])\r\n\r\n  const onMouseDown = (e) => {\r\n    if (!background_element) {\r\n      return;\r\n    }\r\n    addEvent(background_element, \"mousemove\", mouseMove, false);\r\n    addEvent(background_element, \"mouseup\", onMouseUp, false);\r\n    pivot = [e.pageX, e.pageY];\r\n    drag = true;\r\n  }\r\n\r\n  const onMouseUp = (e) => {\r\n    removeAllEvents(background_element, \"mousemove\");\r\n    removeAllEvents(background_element, \"mouseup\");\r\n    dispatch(updateCharacter({\r\n      oldArray: CharacterList,\r\n      data: {\r\n        posX: Number(element_X.current.style.left.replace(/%/g, '')),\r\n        posY: Number(element_Y.current.style.top.replace(/%/g, '').replace(/px/g, '')),\r\n        size: Number(element_Y.current.style.height.replace(/%/g, ''))\r\n      },\r\n      index\r\n    }))\r\n\r\n    pivot = [e.pageX, e.pageY];\r\n    drag = false;\r\n    setSizing(false);\r\n    setMoving(true);\r\n    dispatch(selectCharacter({ ...GameCharacterList[charSchema.index], index: charSchema.index }));\r\n  }\r\n\r\n  const onMouseOver = (e) => {\r\n    setMoving(false);\r\n    setSizing(true);\r\n  }\r\n\r\n  const onMouseOut = (e) => {\r\n    setMoving(true);\r\n    setSizing(false);\r\n  }\r\n\r\n  const onClick = () => {\r\n    dispatch(popCharacter({ oldArray: CharacterList, index }));\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={element_X}\r\n      key={index}\r\n      className=\"CharacterBlock\"\r\n      style={{ left: `${charSchema.posX}%` }}\r\n    >\r\n      <div\r\n        ref={element_Y}\r\n        className=\"character__container\"\r\n        style={{\r\n          height: `${charSchema.size}%`,\r\n          top: `${charSchema.posY}%`\r\n        }}\r\n      >\r\n        {imgWidth && \r\n          <FontAwesomeIcon\r\n            icon={faTimesCircle}\r\n            className=\"btn_character_delete\"\r\n            style={{ left: `${imgWidth - 17}px` }}\r\n            onClick={onClick}\r\n          />\r\n        }\r\n        <img\r\n          onMouseDown={onMouseDown}\r\n          className={\"characterImg_clicked\"}\r\n          id={`${index}`}\r\n          src={charSchema.image}\r\n          alt=\"img\"\r\n        />\r\n        {imgWidth && \r\n          <div\r\n            className={`${sizing ? \"btn_sizing_clicked\" : \"btn_sizing\"}`}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n            onMouseDown={onMouseDown}\r\n            style={{ left: `${imgWidth - 3}px` }}\r\n          ></div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Character)\r\n","import React, { memo, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport Character from \"../../functions/CharacterModal/Character\";\r\n\r\nimport \"./CharacterBlock.css\";\r\nconst CharacterBlock = (props) => {\r\n  const { onRemove_character, GameCharacterList } = props;\r\n\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n  const characterblocks = CharacterList?.map((charSchema, index) => {\r\n    return (\r\n      <div key={index}>\r\n        <Character\r\n          GameCharacterList={GameCharacterList}\r\n          onRemove_character={onRemove_character}\r\n          index={index}\r\n          charSchema={charSchema}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    CharacterList?.length > 0 &&\r\n    <div className=\"CharacterBlocks\" id=\"CharacterBlocks\">\r\n      {characterblocks}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default memo(CharacterBlock);\r\n","import { message } from 'antd';\r\nimport React, { memo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { pushCharacter, selectCharacter } from '../../../../_actions/characterSelected_actions';\r\nimport './CharacterInfoDisplay.css';\r\n\r\nfunction CharacterInfoDisplay({ setName, character, GameCharacterList }) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n\r\n  const onClick_putCharacter = (index, url) => {\r\n    const characterSchema = {\r\n      index: character.index,\r\n      image: url,\r\n      posX: 30,\r\n      posY: 15,\r\n      reverse: 0,\r\n      size: 90,\r\n    }\r\n    dispatch(pushCharacter({ oldArray: CharacterList, characterSchema }))\r\n    setName(character?.name)\r\n  }\r\n\r\n  const onClick_selectCharacter = (index) => {\r\n    setName(GameCharacterList[index].name)\r\n    dispatch(selectCharacter({ ...GameCharacterList[index], index: index }));\r\n  }\r\n\r\n  const CharacterListImages = CharacterList?.map((character, index) => {\r\n    // const img = new Image();\r\n    // img.src = character.image;\r\n    return (\r\n      <div key={index}>\r\n        <div\r\n          className=\"characterList_Info\"\r\n          onClick={() => { onClick_selectCharacter(character.index) }}\r\n        >\r\n          <img\r\n            src={character?.image}\r\n            alt=\"\"\r\n            // className={img.height > img.width ?\r\n            //   \"characterList_image_height\" : \"characterList_image_width\"}\r\n            className=\"characterList_image_height\"\r\n          />\r\n          {/* <div className=\"characterList_Text\">\r\n        x: {character.posX} y: {character.posY} size: {character.size}\r\n      </div> */}\r\n        </div>\r\n        <div>{character?.name}이름 삭제</div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const characterDetailImages = character?.image_array?.map((url, index) => {\r\n    // const img = new Image();\r\n    // img.src = url;\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"image_array__box\"\r\n        onClick={() => { onClick_putCharacter(index, url) }}\r\n      >\r\n        <img\r\n          src={url}\r\n          alt=\"\"\r\n          // className={img.height > img.width ?\r\n          //   \"image_array_image_height\" : \"image_array_image_width\"}\r\n          className=\"image_array_image\"\r\n        />\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"image_array__container\">\r\n      {/* <div className=\"characterList__container\">\r\n        {CharacterListImages}\r\n      </div> */}\r\n      {characterDetailImages}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CharacterInfoDisplay)\r\n","import { message } from 'antd';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detachCharacter, selectCharacter } from '../../../_actions/characterSelected_actions';\r\nimport Character from './Character';\r\nimport CharacterInfoDisplay from './CharacterInfoDisplay/CharacterInfoDisplay';\r\nimport './CharacterModal.css';\r\n\r\nfunction CharacterModal({GameCharacterList, setName }) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n  // const onClick_detachCharacter = () => {\r\n  //   dispatch(detachCharacter());\r\n  // }\r\n\r\n  const currentCharacter = useSelector((state) => state.character);\r\n\r\n  const onClick_removeCharacter = () => {\r\n    let index = currentCharacter.characterSelected.index;\r\n    dispatch({oldArray:CharacterList, index})\r\n    setName(\"\")\r\n  }\r\n\r\n  const [isAdded, setIsAdded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let flag = 0;\r\n    for (let i = 0; i < CharacterList?.length; i++) {\r\n      if (CharacterList[i].index === currentCharacter.characterSelected.index) {\r\n        flag = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (flag === 1) {\r\n      setIsAdded(true);\r\n    } else {\r\n      setIsAdded(false);\r\n    }\r\n\r\n  }, [currentCharacter, CharacterList])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"modal\">\r\n        {/* <div onClick={onClick_detachCharacter}>캐릭터 선택 해제</div> */}\r\n        <CharacterInfoDisplay\r\n          setName={setName}\r\n          GameCharacterList={GameCharacterList}\r\n          character={currentCharacter.characterSelected}\r\n        />\r\n        {/* {isAdded && <div onClick={onClick_removeCharacter}>삭제</div>} */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CharacterModal)\r\n","import { Switch } from 'antd';\r\nimport React, { memo } from 'react';\r\nimport '../SceneMakePage.css';\r\nimport './SceneBox.css';\r\n\r\nfunction SceneBox(props) {\r\n    const { CutList, CutNumber, displayCut, setCutNumber,\r\n        Hover, setHover, EmptyCutList, saveCut } = props;\r\n\r\n    const onClick_GotoCut = (index) => {\r\n        if (CutNumber > 29) {\r\n            displayCut(index);\r\n            setCutNumber(index);\r\n            return;\r\n        }\r\n        if (CutNumber !== index) {\r\n            saveCut();\r\n            displayCut(index);\r\n            setCutNumber(index);\r\n        }\r\n    };\r\n\r\n    const display_SceneBox = CutList.map((Cut, index) => {\r\n        if (CutNumber === index) {\r\n            return (\r\n                (<div className=\"scene__CurrentSceneBox\" key={`${index}`}></div>)\r\n            );\r\n        } else {\r\n            if (Hover) {\r\n                return (\r\n                    <div\r\n                        className=\"scene__SceneBox_color\"\r\n                        key={`${index}`}\r\n                        onMouseOver={() => onClick_GotoCut(index)}\r\n                    ></div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div\r\n                        className=\"scene__SceneBox_color\"\r\n                        key={`${index}`}\r\n                        onClick={() => onClick_GotoCut(index)}\r\n                    ></div>\r\n                )\r\n            }\r\n        }\r\n    });\r\n\r\n    const display_EmptyBox = EmptyCutList.map((EmptyCut, index) => {\r\n        if (CutNumber - CutList.length === index) {\r\n            return (\r\n                <div className=\"scene__CurrentSceneBox\" key={`${index}`}></div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"scene__EmptySceneBox\" key={`${index}`}></div>\r\n            );\r\n        }\r\n    });\r\n    return (\r\n        <div className=\"box sceneBox\">\r\n            {display_SceneBox}\r\n            {display_EmptyBox}\r\n            {/* <Switch\r\n                checked={Hover}\r\n                checkedChildren={CutNumber}\r\n                unCheckedChildren={CutNumber}\r\n                onChange={() => { setHover((state) => !state) }}\r\n                size=\"small\"\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(SceneBox)\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BackgroundSideBar from \"./SideBar/BackgroundSideBar\";\r\nimport CharacterSideBar from \"./SideBar/CharacterSideBar\";\r\nimport BgmSideBar from \"./SideBar/BgmSideBar\";\r\nimport SoundSideBar from \"./SideBar/SoundSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useLocation } from \"react-router\";\r\nimport SceneMakeModal from './SceneMakeModal';\r\nimport UploadModal from './UploadModal';\r\nimport useKey from \"../../../functions/useKey\";\r\nimport CharacterBlock from \"../../GamePlayPage/CharacterBlock\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LoadingPage from \"../../GamePlayPage/LoadingPage\";\r\nimport { gameLoadingPage } from \"../../../../_actions/gamePlay_actions\";\r\nimport { navbarControl } from \"../../../../_actions/controlPage_actions\";\r\nimport CharacterModal from \"../../../functions/CharacterModal/CharacterModal\";\r\nimport SceneBox from \"./SceneBox/SceneBox\";\r\nimport axios from \"axios\";\r\nimport { SVG } from \"../../../svg/icon\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { socket } from \"../../../App\";\r\nimport { PlayCircleOutlined, PauseCircleOutlined, StopOutlined } from '@ant-design/icons';\r\nimport { detachCharacter, popCharacter, setCharacterList } from \"../../../../_actions/characterSelected_actions\";\r\nimport \"./SceneMakePage.css\";\r\nimport { TextBlock } from \"../../GamePlayPage/TextBlock\";\r\nimport { MS_PER_HR } from \"../../../App\"\r\nimport moment from \"moment\";\r\n\r\n\r\nlet bgm_audio = new Audio();\r\nlet sound_audio = new Audio();\r\nconst SceneMakePage = (props) => {\r\n    window.addEventListener('beforeunload', (event) => {\r\n        // 표준에 따라 기본 동작 방지\r\n        event.preventDefault();\r\n        // Chrome에서는 returnValue 설정이 필요함\r\n        event.returnValue = '';\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { gameId, sceneId } = location.state\r\n    const TEXT_MAX_LENGTH = 50;\r\n    let exp;\r\n    // const {gameId,sceneId} = location.state ;\r\n    if (location.state === undefined) {\r\n        window.history.back();\r\n        // return <div></div>;\r\n    }\r\n    message.config({maxCount:2})\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const CharacterList = useSelector((state) => state.character.CharacterList);\r\n\r\n    const padding = 0.1;\r\n    const minSize = 300;\r\n    const ratio = 1080 / 1920;\r\n\r\n    const [windowWidth, setwindowWidth] = useState(window.innerWidth);\r\n    const [windowHeight, setwindowHeight] = useState(window.innerHeight);\r\n    const [newScreenSize, setNewScreenSize] = useState({});\r\n\r\n    //modal\r\n    const [makeModalState, setMakeModalState] = useState(0);\r\n    const [reload, setReload] = useState(1);\r\n    const [uploadModalState, setUploadModalState] = useState(false);\r\n\r\n    const [SidBar_script, setSidBar_script] = useState(true);\r\n\r\n    const [BackgroundImg, setBackgroundImg] = useState(\"http://localhost:5000/uploads/defaultBackground.png\");\r\n    const [Script, setScript] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [BgmFile, setBgmFile] = useState({\r\n        name: \"\",\r\n        music: \"\",\r\n    });\r\n    const [SoundFile, setSoundFile] = useState({\r\n        name: \"\",\r\n        music: \"\",\r\n    });\r\n\r\n    const [isFirstScene, setIsFirstScene] = useState(false)\r\n\r\n    const [CutNumber, setCutNumber] = useState(0);\r\n    const [Hover, setHover] = useState(false);\r\n\r\n    const [CutList, setCutList] = useState([]);\r\n    const [EmptyCutList, setEmptyCutList] = useState(\r\n        Array.from({ length: 30 }, () => 0)\r\n    );\r\n\r\n    let scene;\r\n    useEffect(() => {\r\n        dispatch(navbarControl(false));\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (user.userData) {\r\n            socket.emit(\"leave room\", { room: user.userData._id.toString() });\r\n            socket.emit(\"room\", { room: user.userData._id.toString() });\r\n        }\r\n        socket.off(\"timeout_making\")\r\n        socket.on(\"timeout_making\", data => {\r\n            // console.log(\"GO HOME\")\r\n            props.history.replace(\"/\")\r\n        })\r\n\r\n    }, [user])\r\n\r\n    //! scene save할 때 필요한 정보 갖고오기\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await axios.get(`/api/game/getSceneInfo/${sceneId}`)\r\n            const validation = await axios.post(`/api/game/scene/validate`, { sceneId, gameId, isMaking: true })\r\n            // console.log(res.data)\r\n            if (res.data.success && validation.data.success) { scene = res.data.scene; }\r\n            else {\r\n                // console.log(\"get scene ERROR\");\r\n                props.history.replace(\"/\");\r\n                return;\r\n            }\r\n            // 임시저장한 녀석\r\n\r\n\r\n            if (scene.cutList.length) {\r\n\r\n                if (scene.isFirst) {\r\n                    setIsFirstScene(true)\r\n                }\r\n\r\n                // 임시저장된 녀석 불러오기\r\n                setCutList(scene.cutList);\r\n                const tmpFirstCut = scene.cutList[0]\r\n                dispatch(setCharacterList({ CharacterList: tmpFirstCut.characterList }));\r\n                setBackgroundImg(tmpFirstCut.background)\r\n                setName(tmpFirstCut.name);\r\n                setScript(tmpFirstCut.script);\r\n                setCutNumber(scene.cutList.length - 1);\r\n                dispatch(gameLoadingPage(0));\r\n                dispatch(gameLoadingPage(1));\r\n\r\n            }\r\n            // 껍데기\r\n            else {\r\n                if (!scene.isFirst) {\r\n                    const variable = { sceneId: scene.prevSceneId };\r\n                    Axios.post(\"/api/scene/scenedetail\", variable)\r\n                        .then((response) => {\r\n                            //! 이전 씬의 마지막 컷 설정 유지\r\n                            if (response.data.success) {\r\n                                const lastCut = response.data.lastCut;\r\n                                dispatch(setCharacterList({ CharacterList: lastCut.characterList }));\r\n                                setBackgroundImg(lastCut.background);\r\n                                setName(lastCut.name);\r\n                                dispatch(gameLoadingPage(0));\r\n                                dispatch(gameLoadingPage(1));\r\n                            } else {\r\n                                message.error(\"이전 Scene의 정보를 불러오는데 실패했습니다.\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    setIsFirstScene(true)\r\n                }\r\n            }\r\n        })();\r\n    }, [])\r\n\r\n    const onScriptChange = (event) => {\r\n        if (event.currentTarget.value.length === (TEXT_MAX_LENGTH+1)) {\r\n            message.error({\r\n                content: '글자 수 제한을 초과하였습니다.',\r\n            });\r\n        }\r\n        else{\r\n            if (event.currentTarget.value[event.currentTarget.value.length-1] !== '\\n') {\r\n                setScript(event.currentTarget.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onNameChange = (event) => {\r\n        setName(event.currentTarget.value);\r\n    };\r\n    const characterSidebarElement = useRef();\r\n    const backgroundSidebarElement = useRef();\r\n    const bgmSidebarElement = useRef();\r\n    const soundSidebarElement = useRef();\r\n    const scriptElement = useRef();\r\n    const nameElement = useRef();\r\n\r\n    const makeVisible = (element) => {\r\n        makeInvisible()\r\n        element.current.style.display = 'block'\r\n    }\r\n\r\n    const makeInvisible = () => {\r\n        characterSidebarElement.current.style.display = 'none'\r\n        backgroundSidebarElement.current.style.display = 'none'\r\n        bgmSidebarElement.current.style.display = 'none'\r\n        soundSidebarElement.current.style.display = 'none'\r\n    }\r\n\r\n    const onClick_character = () => {\r\n        if (characterSidebarElement.current.style.display === 'none') {\r\n            makeVisible(characterSidebarElement);\r\n        }\r\n    };\r\n\r\n    const onClick_background = () => {\r\n        if (backgroundSidebarElement.current.style.display === 'none') {\r\n            makeVisible(backgroundSidebarElement);\r\n        }\r\n    };\r\n\r\n\r\n    const onClick_bgm = () => {\r\n        if (bgmSidebarElement.current.style.display === 'none') {\r\n            makeVisible(bgmSidebarElement);\r\n        }\r\n    };\r\n\r\n    const onClick_sound = () => {\r\n        if (soundSidebarElement.current.style.display === 'none') {\r\n            makeVisible(soundSidebarElement);\r\n        }\r\n    };\r\n\r\n    const onClick_script = () => {\r\n        if (SidBar_script) {\r\n            setSidBar_script(false);\r\n        } else {\r\n            setSidBar_script(true);\r\n        }\r\n    };\r\n\r\n    const onClick_bgm_player = () => {\r\n        if (bgm_audio.paused) bgm_audio.play();\r\n        else bgm_audio.pause();\r\n        setReload(reload => reload + 1)\r\n    };\r\n\r\n    const onClick_sound_player = () => {\r\n        if (sound_audio.paused) sound_audio.play();\r\n        else sound_audio.pause();\r\n        setReload(reload => reload + 1)\r\n    };\r\n\r\n    function handleEnter(event) {\r\n        if (nameElement.current === document.activeElement)\r\n            scriptElement.current.focus();\r\n        else if (scriptElement.current === document.activeElement)\r\n            onSubmit_nextCut(event);\r\n    }\r\n\r\n    function handleTab(event) {\r\n        if (nameElement.current === document.activeElement)\r\n            scriptElement.current.focus();\r\n        else if (scriptElement.current === document.activeElement)\r\n            nameElement.current.focus();\r\n    }\r\n\r\n    useKey(\"Enter\", handleEnter);\r\n\r\n    const saveCut = () => {\r\n        const Cut = {\r\n            characterList: CharacterList,\r\n            background: BackgroundImg,\r\n            script: Script,\r\n            name: Name,\r\n            bgm: BgmFile,\r\n            sound: SoundFile,\r\n        };\r\n        setSoundFile({\r\n            name: \"\",\r\n            music: \"\",\r\n        });\r\n\r\n        setCutList((oldArray) => [\r\n            ...oldArray.slice(0, CutNumber),\r\n            Cut,\r\n            ...oldArray.slice(CutNumber + 1, 31),\r\n        ]);\r\n        if (CutList.length === CutNumber) {\r\n            setEmptyCutList((oldArray) => [\r\n                ...oldArray.slice(0, EmptyCutList.length - 1),\r\n            ]);\r\n        }\r\n    };\r\n\r\n    const displayCut = (index) => {\r\n        dispatch(setCharacterList({ CharacterList: CutList[index]?.characterList }));\r\n        setBackgroundImg(CutList[index]?.background);\r\n        setScript(CutList[index]?.script);\r\n        setName(CutList[index]?.name);\r\n        setBgmFile(CutList[index]?.bgm);\r\n        setSoundFile(CutList[index]?.sound);\r\n        if (CutList[index]?.bgm.music) {\r\n            bgm_audio.src = CutList[index]?.bgm.music;\r\n            bgm_audio.play();\r\n        } else {\r\n            bgm_audio.pause();\r\n        }\r\n        if (CutList[index]?.sound.music) {\r\n            sound_audio.src = CutList[index]?.sound.music;\r\n            sound_audio.play();\r\n        } else {\r\n            sound_audio.pause();\r\n        }\r\n    };\r\n\r\n    const onRemove_character = (index) => {\r\n        dispatch(popCharacter({\r\n            oldArray: CharacterList,\r\n            index\r\n        }))\r\n    };\r\n\r\n    const onSubmit_nextCut = (event) => {\r\n        event.preventDefault();\r\n        if (CutNumber >= 29) {\r\n            message.error(\"더이상 Cut을 생성할 수 없습니다.\");\r\n            return;\r\n        } else if (CutNumber === 24) {\r\n            message.warning(\"생성 가능한 Cut이 5개 남았습니다.\");\r\n        }\r\n\r\n        saveCut();\r\n\r\n        if (CutNumber < CutList.length - 1) {\r\n            displayCut(CutNumber + 1);\r\n        } else {\r\n            setScript(\"\");\r\n        }\r\n        setCutNumber((oldNumber) => oldNumber + 1);\r\n        scriptElement.current.focus()\r\n\r\n    };\r\n\r\n    const onRemove_cut = () => {\r\n        if (CutList.length <= 1) {\r\n            // setCutList([]);\r\n            // setEmptyCutList((oldArray) => [\r\n            //     0, ...oldArray\r\n            // ]);\r\n            // displayCut(0);\r\n            // setCutNumber(0);\r\n            message.info('첫번째 컷 입니다.');\r\n            return;\r\n        } else if (CutList.length - 1 <= CutNumber) {\r\n            if (CutList[CutNumber]) {\r\n                setCutList((oldArray) => [\r\n                    ...oldArray.slice(0, CutNumber)\r\n                ]);\r\n                setEmptyCutList((oldArray) => [\r\n                    0, ...oldArray\r\n                ]);\r\n            }\r\n            displayCut(CutNumber - 1);\r\n            setCutNumber(CutNumber - 1);\r\n            return;\r\n        }\r\n        message.success(`${CutNumber + 1}번째 컷이 삭제되었습니다.`);\r\n        setCutList((oldArray) => [\r\n            ...oldArray.slice(0, CutNumber),\r\n            ...oldArray.slice(CutNumber + 1, 31),\r\n        ]);\r\n        setEmptyCutList((oldArray) => [\r\n            0, ...oldArray\r\n        ]);\r\n        displayCut(CutNumber + 1);\r\n    }\r\n\r\n    const onSubmit_first = () => {\r\n        setUploadModalState(true)\r\n    }\r\n\r\n    const onSubmit_saveScene = async (event, isTmp = 0) => {\r\n        if (CutList.length < 1 ||  (CutList.length === 1 && CutList[CutNumber])) {\r\n            message.error(\"최소 2개의 컷을 생성해주세요.\");\r\n            return;\r\n        }\r\n        bgm_audio.pause();\r\n        const submitCut = {\r\n            characterList: CharacterList,\r\n            background: BackgroundImg,\r\n            script: Script,\r\n            name: Name,\r\n            bgm: BgmFile,\r\n            sound: SoundFile,\r\n        };\r\n\r\n        const submitCutList = [\r\n            ...CutList.slice(0, CutNumber),\r\n            submitCut,\r\n            ...CutList.slice(CutNumber + 1, 31),\r\n        ];\r\n        console.log(\"SSS\",isTmp)\r\n        if (isTmp || window.confirm(\"게임 제작을 완료하시겠습니까?\")) {\r\n            const variable = {\r\n                gameId: gameId,\r\n                sceneId: sceneId,\r\n                cutList: submitCutList,\r\n                isTmp,\r\n            };\r\n\r\n            const response = await Axios.post(`/api/scene/save`, variable)\r\n\r\n            if (response.data.success) {\r\n                dispatch(detachCharacter());\r\n                message\r\n                    .loading(\"게임 업로드 중..\", 1.0)\r\n                    .then(() => {\r\n                        if (!isTmp) {\r\n                            message.success(\"게임 제작이 완료되었습니다.\", 1.0)\r\n                        }\r\n                        else {\r\n                            message.success(\"업로드 성공.\")\r\n                        }\r\n                    }\r\n                    ).then(() => {\r\n                        if (!isTmp && isFirstScene) {\r\n                            history.replace(\r\n                                `/game/${gameId}`\r\n                            );\r\n\r\n                        } else if (!isTmp) {\r\n                            socket.emit(\"final_submit\", {\r\n                                prevSceneId: response.data.scene.prevSceneId,\r\n                                sceneId: response.data.scene._id,\r\n                                title: response.data.scene.title,\r\n                                userId: user.userData._id.toString(),\r\n                            })\r\n                            history.replace({\r\n                                pathname: `/gameplay`,\r\n                                state: {\r\n                                    sceneId: response.data.scene._id,\r\n                                    gameId: gameId,\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n            } else if (response.data.msg === 'expired') {\r\n                message.error(\"제작 유효기간이 만료되었습니다..\", 1.0);\r\n                props.history.replace({\r\n                    pathname: `/gameplay`,\r\n                    state: {\r\n                        sceneId: response.data.prevSceneId,\r\n                        gameId: gameId,\r\n                    }\r\n                })\r\n                return;\r\n            }\r\n            else {\r\n                message.error(\"DB에 문제가 있습니다.\");\r\n            }\r\n\r\n        } else {\r\n            message.error(\"제출 취소\");\r\n        }\r\n    };\r\n\r\n    const onTmpSave = (event) => {\r\n        onSubmit_saveScene(event, 1);\r\n    }\r\n\r\n    const onSetModal = () => {\r\n        setMakeModalState(1);\r\n    }\r\n\r\n    const [gameDetail, setGameDetail] = useState([]);\r\n    const [sideBar, setSideBar] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/game/getgamedetail', { gameId: gameId })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setGameDetail(response.data.gameDetail)\r\n                } else {\r\n                    alert('게임 정보를 로딩하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }, [reload, gameId])\r\n\r\n\r\n    useEffect(() => {\r\n        if (gameDetail.character) {\r\n            const reload_Sidebar = (< div className=\"sideBar\">\r\n                <div ref={characterSidebarElement}>\r\n                    <CharacterModal\r\n                        setName={setName}\r\n                        GameCharacterList={gameDetail.character}\r\n                    />\r\n                    <CharacterSideBar\r\n                        gameDetail={gameDetail}\r\n                        setMakeModalState={setMakeModalState}\r\n                        setName={setName}\r\n                    />\r\n                </div>\r\n                <div ref={backgroundSidebarElement} style={{ display: 'none' }}>\r\n                    <BackgroundSideBar\r\n                        gameDetail={gameDetail}\r\n                        setBackgroundImg={setBackgroundImg}\r\n                        setMakeModalState={setMakeModalState}\r\n                    />\r\n                </div>\r\n                <div ref={bgmSidebarElement} style={{ display: 'none' }}>\r\n                    <BgmSideBar\r\n                        gameDetail={gameDetail}\r\n                        bgm_audio={bgm_audio}\r\n                        setBgmFile={setBgmFile}\r\n                        setMakeModalState={setMakeModalState}\r\n                    />\r\n                </div>\r\n                <div ref={soundSidebarElement} style={{ display: 'none' }}>\r\n                    <SoundSideBar\r\n                        gameDetail={gameDetail}\r\n                        sound_audio={sound_audio}\r\n                        setSoundFile={setSoundFile}\r\n                        setMakeModalState={setMakeModalState}\r\n                    />\r\n                </div>\r\n            </div>)\r\n            setSideBar(reload_Sidebar)\r\n        }\r\n    }, [gameDetail, CharacterList, reload])\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setwindowWidth(window.innerWidth);\r\n            setwindowHeight(window.innerHeight);\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n        if (windowWidth * ratio > windowHeight) {\r\n            setNewScreenSize({\r\n                width: `${windowHeight * (1 - 2 * padding) / ratio}px`,\r\n                height: `${windowHeight * (1 - 2 * padding)}px`,\r\n                minWidth: `${minSize / ratio}px`,\r\n                minHeight: `${minSize}px`\r\n            })\r\n        } else {\r\n            setNewScreenSize({\r\n                width: `${windowWidth * (1 - 2 * padding)}px`,\r\n                height: `${windowWidth * (1 - 2 * padding) * ratio}px`,\r\n                minWidth: `${minSize}px`,\r\n                minHeight: `${minSize * ratio}px`\r\n            })\r\n        }\r\n    }, [window.innerWidth, window.innerHeight]);\r\n\r\n    const onLeft = () => {\r\n        if (CutNumber !== 0) {\r\n            saveCut();\r\n            displayCut(CutNumber - 1);\r\n            setCutNumber(CutNumber - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"title\">\r\n                <span>[{gameDetail?.title}]</span>\r\n                {/* <span>제작 유효기간: 2020.01.02 {exp}</span> */}\r\n                <div className=\"title-btn\">상세정보</div>\r\n            </div>\r\n            <SceneBox\r\n                CutList={CutList}\r\n                CutNumber={CutNumber}\r\n                displayCut={displayCut}\r\n                setCutNumber={setCutNumber}\r\n                Hover={Hover}\r\n                setHover={setHover}\r\n                EmptyCutList={EmptyCutList}\r\n                saveCut={saveCut}\r\n            />\r\n\r\n            <div className=\"scene\">\r\n                <div className=\"scene left-arrow\"\r\n                    onClick={onLeft}>\r\n                    <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color=\"#F5F5F5\" />\r\n                </div>\r\n                <div\r\n                    className=\"backgroundImg\"\r\n                    id=\"backgroundImg_container\"\r\n                    style={{ overflow: \"hidden\" }}\r\n                >\r\n\r\n                    <img\r\n                        className=\"backgroundImg\"\r\n                        // id=\"backgroundImg_container\"\r\n                        src={`${BackgroundImg}`}\r\n                        alt=\"img\"\r\n                    />\r\n                    <CharacterBlock\r\n                        GameCharacterList={gameDetail.character}\r\n                        onRemovech_aracter={onRemove_character}\r\n                    />\r\n                    {SidBar_script && Script && (\r\n                        <TextBlock\r\n                            cut_name={Name ? Name : \"이름을 입력해주세요.\"}\r\n                            cut_script={Script ? Script : \"대사를 입력해주세요.\"}\r\n                            setIsTyping={null}\r\n                            isTyping={null}\r\n                            theme={null}\r\n                        />\r\n                    )}\r\n                    <div className=\"scene__sound_container\">\r\n                        {BgmFile?.name ? (\r\n                            <div\r\n                                onClick={onClick_bgm_player}\r\n                            >\r\n                                {\r\n                                    BgmFile.name && bgm_audio.paused &&\r\n                                    <PlayCircleOutlined\r\n                                        style={{ fontSize: \"20px\" }} />\r\n                                }\r\n                                {\r\n                                    BgmFile.name && !bgm_audio.paused &&\r\n                                    <PauseCircleOutlined\r\n                                        style={{ fontSize: \"20px\" }} />\r\n                                }\r\n                                <div className=\"scene__sound_name\">{BgmFile.name}</div>\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <StopOutlined\r\n                                    style={{ fontSize: \"20px\" }}\r\n                                />\r\n                                <div className=\"scene__sound_name\">BGM</div>\r\n                            </div>\r\n                        )}\r\n                        {SoundFile?.name ? (\r\n                            <div\r\n                                onClick={onClick_sound_player}\r\n                            >\r\n                                {\r\n                                    SoundFile.name && sound_audio.paused &&\r\n                                    <PlayCircleOutlined\r\n                                        style={{ fontSize: \"20px\" }} />\r\n                                }\r\n                                {\r\n                                    SoundFile.name && !sound_audio.paused &&\r\n                                    <PauseCircleOutlined\r\n                                        style={{ fontSize: \"20px\" }} />\r\n                                }\r\n                                <div className=\"scene__sound_name\">{SoundFile.name}</div>\r\n                            </div>\r\n                        ) : (\r\n                                <div>\r\n                                    <StopOutlined\r\n                                        style={{ fontSize: \"20px\" }}\r\n                                    />\r\n                                    <div className=\"scene__sound_name\">Sound</div>\r\n                                </div>\r\n                            )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"scene right-arrow\"\r\n                    onClick={CutNumber < 29 && onSubmit_nextCut}>\r\n                    <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color={CutNumber < 29 ? \"#F5F5F5\" : \"black\"} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"scene__btn_top\">\r\n\r\n                <div className=\"scene_btn\"\r\n                    onClick={onSetModal}>\r\n                    에셋 추가\r\n                </div>\r\n                <div className=\"scene_btn\"\r\n                    onClick={onTmpSave}>\r\n                    임시 저장\r\n                </div>\r\n                {isFirstScene ?\r\n                    <div className=\"scene_btn scene_btn_blue\"\r\n                        onClick={onSubmit_first}>\r\n                        완료\r\n                        </div>\r\n                    : <div className=\"scene_btn scene_btn_blue\"\r\n                        onClick={onSubmit_saveScene}>\r\n                        완료\r\n                        </div>\r\n                }\r\n\r\n            </div>\r\n            <div className=\" btn_side\">\r\n                <div\r\n                    className=\"scene_side_btn\"\r\n                    onClick={onClick_character}\r\n                >캐릭터</div>\r\n                <div\r\n                    className=\"scene_side_btn\"\r\n                    onClick={onClick_background}\r\n                >배경</div>\r\n\r\n                <div className=\"scene_side_btn\" onClick={onClick_bgm}>\r\n                    배경음\r\n                    </div>\r\n                <div className=\"scene_side_btn\" onClick={onClick_sound}>\r\n                    효과음\r\n                    </div>\r\n            </div>\r\n            {sideBar !== 0 && sideBar}\r\n            <div\r\n                className=\"textbox_name\">\r\n                <div className=\"textbox__name_block_btn\">\r\n                    <SVG src=\"arrow_1\" width=\"15\" height=\"25\" color=\"#FFFFFF\" />\r\n                </div>\r\n            </div>\r\n            <input\r\n                onChange={onNameChange}\r\n                placeholder=\"이름\"\r\n                value={Name}\r\n                ref={nameElement}\r\n                className=\"textbox_name\"\r\n            />\r\n            <div className=\"textbox_bottom\">\r\n                <div className=\"enter\"\r\n                    onClick={onSubmit_nextCut}>\r\n                    Enter\r\n                    <br />\r\n                    {/* {CutNumber + 1}/30\r\n                    <br /> */}\r\n                    {Script.length}/{TEXT_MAX_LENGTH}\r\n                </div>\r\n                <textarea\r\n                    onChange={onScriptChange}\r\n                    value={Script}\r\n                    placeholder=\"대사가 없으면 스크립트 창이 표시되지 않습니다.\"\r\n                    className=\"textbox_script\"\r\n                    maxlength={TEXT_MAX_LENGTH+1}\r\n                    ref={scriptElement}\r\n                />\r\n            </div>\r\n            <div className=\"options\">\r\n                <div className=\"scene_btn\"\r\n                    onClick={onRemove_cut}>\r\n                    컷 삭제\r\n                </div>\r\n                {/* <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >On/Off</div>\r\n                <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >Preview</div> */}\r\n                <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >배경음 음소거</div>\r\n                <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >효과음 음소거</div>\r\n                <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >테마 선택</div>\r\n            </div>\r\n\r\n            <UploadModal\r\n                gameId={gameId}\r\n                visible={uploadModalState}\r\n                setUploadModalState={setUploadModalState}\r\n                onSubmit_saveScene={onSubmit_saveScene}\r\n                defaultTitle={gameDetail.title}\r\n                defaultDescription={gameDetail.description}\r\n            />\r\n            {\r\n                makeModalState !== 0 && <SceneMakeModal\r\n                    gameId={gameId}\r\n                    visible={Boolean(makeModalState)}\r\n                    setTag={setMakeModalState}\r\n                    tag={makeModalState}\r\n                    setReload={setReload}\r\n                />\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SceneMakePage;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { USER_SERVER } from \"../../../Config\";\r\nimport { withRouter ,Link} from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction RightMenu(props) {\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const logoutHandler = () => {\r\n        axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n            if (response.status === 200) {\r\n                props.history.push(\"/login\");\r\n            } else {\r\n                alert(\"Log Out Failed\");\r\n            }\r\n        });\r\n    };\r\n\r\n    if (user.userData && !user.userData.isAuth) {\r\n        return (\r\n            <Menu mode={props.mode}>\r\n                <Menu.Item key=\"login\">\r\n                    <Link to=\"/login\">로그인</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"register\">\r\n                    <Link to=\"/register\">회원가입</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    } else {\r\n        return (\r\n            <Menu mode={props.mode}>\r\n                <Menu.Item key=\"profile\">\r\n                    {user?.userData?._id ? \r\n                        <Link to={`/profile/${user.userData._id}`}>프로필</Link>\r\n                        :\r\n                        \"프로필\"\r\n                    }\r\n                </Menu.Item>\r\n                <Menu.Item key=\"logout\">\r\n                    <Link to=\"/\" onClick={logoutHandler}>로그아웃</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","import React, { memo, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RightMenu from \"./Sections/RightMenu\";\r\nimport { Drawer, Button, Icon } from \"antd\";\r\nimport \"./Sections/Navbar.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ninterface State_controlpage {\r\n  controlpage: {\r\n    navbarOn: boolean;\r\n  }\r\n}\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n  const navbarOn: boolean = useSelector((state: State_controlpage) => state.controlpage.navbarOn);\r\n  let style = {};\r\n\r\n  const showDrawer = ():void => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = ():void => {\r\n    setVisible(false);\r\n  };\r\n  \r\n  if (navbarOn) {\r\n    style = { position: \"fixed\", zIndex: 5, width: \"100%\" };\r\n  } else {\r\n    style = {\r\n      position: \"fixed\",\r\n      zIndex: 5,\r\n      width: \"100%\",\r\n      // transform: \"translate(0,-69px)\",\r\n      opacity: 0,\r\n      animation: \"0.8s ease-out 0s 1 hide\",\r\n    };\r\n  }\r\n  \r\n  return (\r\n    <nav className=\"menu\" style={style}>\r\n      <div className=\"menu__logo\">\r\n        <Link to=\"/\">이어봐</Link>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"이어봐\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default memo(NavBar);\r\n","import React from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer_container\">\r\n      <p>\r\n        Mutsad 화이팅 <Icon type=\"smile\" />\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport io from 'socket.io-client';\r\n\r\nimport Auth from \"../hoc/auth\";\r\nimport Valid from \"../hoc/valid\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\n\r\nimport LoginPage from \"./views/LoginPage/LoginPage.tsx\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.tsx\";\r\nimport Profile from './views/Profile/Profile.tsx';\r\n\r\nimport GameDetailPage from './views/GameDetailPage/GameDetailPage.js';\r\nimport GameUploadPage from \"./views/GameUploadPage/GameUploadPage.js\";\r\nimport GameBuildUpPage from \"./views/GameUploadPage/GameBuildUpPage.js\";\r\nimport GamePlayPage from \"./views/GamePlayPage/GamePlayPage.js\";\r\nimport SceneMakePage from \"./views/Scene/SceneMakePage/SceneMakePage\";\r\n\r\nimport NavBar from \"./views/NavBar/NavBar.tsx\";\r\nimport Footer from \"./views/Footer/Footer.tsx\"\r\nimport { LOCAL_HOST } from './Config';\r\nimport './App.css';\r\n\r\nconst config = require('../config/key');\r\n// export let socket = io(`http://${LOCAL_HOST}:5000`, {transports : ['websocket']});\r\nexport let socket = io(config.SOCKET, { transports: ['websocket'] });\r\nexport const MS_PER_HR = 360000\r\n\r\nwindow.onpopstate = () => {\r\n  window.location.reload();\r\n};\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={(<div>Loading...</div>)}>\r\n      <NavBar />\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n          <Route exact path=\"/profile/:userId\" component={Auth(Profile, true)} />\r\n          <Route exact path=\"/game/upload\" component={Auth(GameUploadPage, true)} />\r\n          <Route path=\"/game/:gameId\" component={Auth(GameDetailPage, null)} />\r\n          <Route path=\"/gameplay\" component={Valid(Auth(GamePlayPage, null))} />\r\n          <Route exact path=\"/scene/make\" component={Valid(Auth(SceneMakePage, true))} />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { NAVBAR_CONTROL } from \"../_actions/types\";\r\n\r\nconst initialState = { navbarOn : true };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case NAVBAR_CONTROL:\r\n      return { ...state, navbarOn: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { LOADINGPAGE_GAMEPLAY, PAUSE_GAMEPLAY } from \"../_actions/types\";\r\n\r\nconst initialState = { loadingType: 0, isPause: false };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADINGPAGE_GAMEPLAY:\r\n      return { ...state, loadingType: action.payload };\r\n    case PAUSE_GAMEPLAY:\r\n      return { ...state, isPause: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SELECT_CHARACTER,\r\n  DETACH_CHARACTER,\r\n  PUSH_CHARACTER,\r\n  POP_CHARACTER,\r\n  UPDATE_CHARACTER,\r\n  SET_CHARACTER_LIST\r\n} from '../_actions/types';\r\n\r\nconst initialState = {\r\n  description: \"\",\r\n  image: \"\",\r\n  image_array: [],\r\n  name: \"\",\r\n  _id: \"\",\r\n  index: -1\r\n}\r\n\r\nexport default function (state = { characterSelected: initialState, CharacterList: [] }, action) {\r\n\r\n  switch (action.type) {\r\n    case SELECT_CHARACTER:\r\n      return { ...state, characterSelected: action.payload }\r\n    case DETACH_CHARACTER:\r\n      return { ...state, characterSelected: initialState }\r\n    case PUSH_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    case POP_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    case UPDATE_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    case SET_CHARACTER_LIST:\r\n      return { ...state, CharacterList: action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  SELECT_DISPLAYED\r\n} from '../_actions/types';\r\n\r\nconst initialState = {index: -1}\r\n                      \r\nexport default function(state={characterDisplayed : initialState},action){\r\n\r\n  switch(action.type){\r\n      case SELECT_DISPLAYED:\r\n          return {...state, characterDisplayed: action.payload }\r\n      default:\r\n          return state;\r\n  }\r\n}","import { \r\n  SELECT_MOVINGTARGET, DETACH_MOVINGTARGET \r\n} from \"../_actions/types\";\r\n\r\n\r\nconst initialState = { movingTarget: -1 };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SELECT_MOVINGTARGET:\r\n      return { ...state, movingTarget: action.payload };\r\n    case DETACH_MOVINGTARGET:\r\n      return { ...state, movingTarget: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user_reducer\";\r\nimport controlpage from \"./controlPage_reducer\";\r\nimport gameplay from \"./gamePlay_reducer\";\r\nimport sync from './sync_reducer';\r\nimport character from \"./characterSelected_reducer\";\r\nimport characterDisplayed from \"./characterDisplayed_reducer\";\r\nimport movingTarget from \"./movingTarget_reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  controlpage,\r\n  gameplay,\r\n  sync,\r\n  character,\r\n  characterDisplayed,\r\n  movingTarget,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    LOAD_EMPTY_NUM,\r\n    SAVE_PREV_SCENE\r\n} from '../_actions/types';\r\n\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case LOAD_EMPTY_NUM:\r\n            return { ...state, emptyNum: action.payload }\r\n        case SAVE_PREV_SCENE:\r\n            return { ...state, prevSceneId: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","if (process.env.NODE_ENV === 'production') {\r\n    module.exports = require('./prod');\r\n} else {\r\n    module.exports = require('./dev');\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 419;"],"sourceRoot":""}