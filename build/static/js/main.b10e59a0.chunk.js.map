{"version":3,"sources":["components/views/Modal/TitleModalForm.js","config/prod.js","_actions/user_actions.js","_actions/types.js","components/Config.js","components/functions/useConstructor.js","hoc/auth.js","hoc/valid.js","components/views/LandingPage/LandingPage_buttons.tsx","components/views/Footer/ContactUs.tsx","components/views/LandingPage/LandingPage_banners.tsx","components/svg/icon.js","components/views/LandingPage/LandingPage_gameLists.tsx","_actions/controlPage_actions.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.tsx","components/views/RegisterPage/RegisterPage.tsx","components/views/RegisterPage/PassportRegisterPage.tsx","components/views/Profile/ContributedGame/ContributedGame.tsx","components/views/Profile/Profile.tsx","components/views/Comment/SingleReply.js","components/views/Comment/SingleComment.js","components/views/Comment/Comment.js","components/views/GameDetailPage/TopRatingContributer.js","components/views/GameDetailPage/GameDetailPage.js","components/views/GameUploadPage/GameUploadPage.js","components/views/GameUploadPage/GameBuildUpPage.js","components/views/GamePlayPage/GameCharacterBlock.js","components/functions/useKey.js","components/views/Modal/InputModalForm.js","_actions/gamePlay_actions.js","components/views/Modal/InputModal.js","components/functions/useMouse.js","components/views/GamePlayPage/TextAnimation.js","components/views/Scene/SceneTeleport/FirstSceneTeleport.js","components/views/Scene/SceneTeleport/PrevSceneTeleport.js","components/views/Scene/SceneEndingPage/SceneEndingPage.js","components/views/GamePlayPage/TextBlock.js","components/views/GamePlayPage/Dislike.js","components/views/GamePlayPage/HistoryMap.js","components/views/GamePlayPage/LoadingPage.js","_actions/sync_actions.js","utils/useFullscreenStatus.js","components/views/GamePlayPage/TreeMap.js","components/views/GamePlayPage/GamePlayPage.js","components/views/Scene/SceneMakePage/SideBar/BackgroundImg.js","components/views/Scene/SceneMakePage/SideBar/BackgroundSideBar.js","_actions/characterSelected_actions.js","components/views/Scene/SceneMakePage/SideBar/CharacterImg.js","components/views/Scene/SceneMakePage/SideBar/CharacterSideBar.js","components/views/Scene/SceneMakePage/SideBar/BgmFile.js","components/views/Scene/SceneMakePage/SideBar/BgmSideBar.js","components/views/Scene/SceneMakePage/SideBar/SoundFile.js","components/views/Scene/SceneMakePage/SideBar/SoundSideBar.js","components/views/Scene/SceneMakePage/Tab/EssetModalTab.js","components/views/Dropzone/MyDropzone.js","components/views/Scene/SceneMakePage/Tab/CharacterTab.js","components/views/Scene/SceneMakePage/Tab/BackgroundTab.js","components/views/Scene/SceneMakePage/Tab/BgmTab.js","components/views/Scene/SceneMakePage/Tab/SoundTab.js","components/views/Scene/SceneMakePage/EssetModal.js","components/views/Scene/SceneMakePage/UploadModal.js","components/views/Scene/SceneMakePage/EndingModal.js","components/functions/handleEventListener.js","components/functions/CharacterModal/Character.js","components/views/GamePlayPage/CharacterBlock.js","components/functions/CharacterModal/CharacterInfoDisplay/CharacterInfoDisplay.js","components/functions/CharacterModal/CharacterModal.js","components/views/Scene/SceneMakePage/SceneBox/SceneBox.js","components/views/Scene/SceneMakePage/SceneMakePage.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.tsx","components/views/Footer/Footer.tsx","components/views/Etc/PortraitWarning.tsx","components/App.js","utils/scrollToTop.js","serviceWorker.js","_reducers/controlPage_reducer.js","_reducers/gamePlay_reducer.js","_reducers/characterSelected_reducer.js","_reducers/characterDisplayed_reducer.js","_reducers/movingTarget_reducer.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/sync_reducer.js","FontAwsome.tsx","index.js","config/key.js","../../node_modules/require_optional sync"],"names":["TitleModalForm","Form","create","name","visible","onCancel","onCreate","setGameTitle","setGameDescription","title","okText","cancelText","onOk","closable","bodyStyle","height","fontFamily","fontSize","fontWeight","layout","Item","label","rules","required","message","max","className","maxLength","onChange","event","currentTarget","value","substr","module","exports","STORAGE","SERVER","CLIENT","SOCKET","KAKAO_KEY","registerUser","dataToSubmit","type","payload","axios","post","then","response","data","auth","get","useConstructor","cb","useState","isInited","setInit","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","replace","push","Validate","location","useLocation","undefined","require","NewGameButton","setVisible","gameTitle","gameDescription","uploadGameFrame","description","a","Axios","gameResponse","success","alert","firstScene","gameId","game","_id","prevSceneId","sceneDepth","isFirst","sceneResponse","setTimeout","pathname","sceneId","onClick","userData","error","ContactUs","isModalVisible","setIsModalVisible","Type","setType","Content","setContent","Email","setEmail","PhoneNumber","setPhoneNumber","Option","Select","TextArea","Input","feedback","length","defaultValue","style","width","placeholder","rows","Banner_main","CurrentSlide","setCurrentSlide","IsModalVisible","slideRef","React","createRef","TimerID","useRef","stopBanner","current","clearTimeout","startBanner","timer","TOTAL_SLIDES","transition","transform","ref","onMouseEnter","onMouseLeave","Banner_main1","Banner_main2","svg","arrow_1","playIcon_1","close_1","close_2","SVG","src","color","viewBox","fill","xmlns","d","Relay_Icon","xmlnsXlink","version","x","y","xmlSpace","cx","cy","r","Ending_Icon","enableBackground","rx","ry","BAR","SCENE_ICON","id","GameList","games","gameList","map","index","thumbnailPath","first_scene","thumbnail","key","to","alt","sceneCnt","category","limit","Math","round","bars","i","filter","target","bar","arrow","document","getElementById","pos","Error","display","String","opacity","mouseOnEvent","mouseOffEvent","container","ContainerToLeft","ContainerToRight","navbarControl","navbarOn","ListContainer","recent_games","popular_games","LandingPage","setGames","config","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","kakaoLogin","login","profile","res","newUser","snsId","snsProvider","fail","initialValues","email","password","validationSchema","Yup","shape","min","onSubmit","values","setSubmitting","loginUser","loginSuccess","window","setItem","removeItem","catch","err","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","prefix","onBlur","checked","disabled","token","onSuccess","onFail","RegisterPage","nickname","confirmPassword","oneOf","emailFlag","usedEmail","nicknameFlag","usedNickname","image","errmsg","labelAlign","labelCol","span","wrapperCol","hasFeedback","validateStatus","PassportRegisterPage","flag","ContributedGame","createdAt","gameDetail","setGameDetail","view","setView","like","isClick","thumbsUp","setThumbsUp","ObjectId","objectId","isClicked","thumbsup","slice","icon","faFile","marginLeft","faEye","faHeart","Profile","userId","match","params","currUserData","makingGameList","contributedSceneList","contributedGameList","setUser","gameContentsNumber","setGameContentsNumber","sceneContentsNumber","setSceneContentsNumber","totalSceneContribute","setTotalSceneContribute","totalGameContribute","setTotalGameContribute","tmp","onClick_tab","element","contributedScene","displayContributedScene","contributedGame","displayContributedGame","memo","comment","updateToggle_comment","user_id","isEdit","setIsEdit","editComment","setEditComment","setLike","update","setUpdate","updateToggle","like_variable","commentId","result","writer","e","preventDefault","content","reference","commentContent","setCommentContent","Replys","setReplys","writeReply","setWriteReply","showComment","setShowComment","comment_variable","responseTo","toString","mapReply","reply","variables","comments","setComments","fetching","setFetching","totalComment","setTotalComment","contentNumber","setContentNumber","fetchNextData","handleScroll","scrollHeight","documentElement","scrollTop","clientHeight","addEventListener","removeEventListener","mapComment","TopRatingContributer","contributerList","totalSceneCnt","creatorNickname","topRateContributer_SceneCnt","userSceneCnt","topContributer","contributer","contributeRatio","fakeRatio","GameDetailPage","variable","setSceneId","isMaking","setIsMaking","thumbsUpClicked","setThumbsUpClicked","setTotalSceneCnt","ContributerCnt","setContributerCnt","setContributerList","isPlayed","setIsPlayed","playFirstScene","socket","emit","scene_id","prevOfLastScene","teleportSceneId","console","log","topRank","contributerCnt","gamePlaying","sceneIdList","creator","Title","Typography","PrivateOptions","CategoryOptions","GameUploadPage","GameTitle","setDescription","isPrivate","setIsPrivate","setCategory","ratio","setRatio","filePath","setFilePath","onRatioChange","floatRatio","game_variables","privacy","character","background","bgm","sound","maxWidth","margin","textAlign","marginBottom","level","justifyContent","onDrop","files","formData","FormData","append","header","url","multiple","maxSize","getRootProps","getInputProps","border","alignItems","item","cat_idx","text","size","GameBuildUpPage","GameCharacterBlock","characterList","characterblocks","charSchema","left","posX","top","posY","useKey","callbackRef","handle","code","shiftKey","ModalForm","setSceneTitle","remainTime","getContainer","centered","input","focus","gameLoadingPage","loadingType","gamePause","isPause","decTimer","scene_depth","game_id","scene_next_list","theme","useHistory","emptyNum","sync","sceneTitle","setRemainTime","decreaseTimer","createFlag","handleCreate","exp","cancelHandler","dino","setDino","off","on","tick","setInterval","clearInterval","useMouse","voice","Audio","volume","TextAnimation","cut_script","setIsTyping","setFlag","useWindupString","pace","onFinished","pause","onChar","play","skip","handleEnter","FirstSceneTeleport","setScene","isWarningVisible","setIsWarningVisible","Fragment","maskClosable","footer","PrevSceneTeleport","SceneEndingPage","TextBlock","cut_name","isTyping","TextBlockChoice","isEnding","isLastMotion","choices","choice","textDecoration","script","DislikePopup","trigger","setTrigger","setTitle","Description","MapToLeft","getElementsByClassName","getComputedStyle","getPropertyValue","new_position","parseInt","split","MapToRight","sceneInfo","targetScene","HistoryMapPopup","userhistory","SceneInfo","setSceneInfo","sceneinfo","HistoryMap_scenes","scene","sceneIndex","close","click","GoToScene","LOADING_TYPE","LoadingPage","gameplay","animation","faSpinner","loadEmptyNum","sceneTmp","getBrowserFullscreenElementProp","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","TreeMapPopup","bgm_audio","sound_audio","ProductScreen","isFullscreen","setIsFullscreen","errorMessage","userHistory","innerWidth","windowWidth","setwindowWidth","innerHeight","windowHeight","setwindowHeight","setI","Scene","Dislike","setDislike","History","setHistory","HistoryMap","setHistoryMap","lastMotion","setLastMotion","setIsClicked","maximizableElement","elRef","useLayoutEffect","onfullscreenchange","requestFullscreen","useFullscreenStatus","handleChoice","newNextList","nextList","newScene","setVolume","muted","setMuted","tempVolume","volumeControl","isFirstCut","setIsFirstCut","playMusic","cutList","music","variable_thumbsup","variable_view","room","inner","newScreenSize","padding","minWidth","minHeight","minSize","depth","step","exitFullscreen","faCompress","faExpand","BackgroundImg","imgUrl","setBackgroundImg","onEssetModal","isFirstScene","isWriter","renderBackground","FileAddOutlined","selectCharacter","popCharacter","request","oldArray","info","splice","pushCharacter","characterSchema","updateCharacter","setCharacterList","CharacterList","orderCharacter","num","lastIndex","CharacterImg","setName","characterSelected","isIn","some","selected","image_array","reverse","renderCharacter","BgmFile","setBgmFile","renderBgm","SoundFile","setSoundFile","renderSound","EssetModalTab","setTag","tag","MyDropzone","mention","accept","blobURL","InstagramOutlined","PlayCircleOutlined","CharacterTab","blobGame","setBlobGame","charPageNum","setCharFileQueue","setCharBlobList","characterProfile","setCharacterProfile","characterCards","setCharacterCards","isUpdate","setIsUpdate","indexNum","onNameChange","onDescriptionChange","curURL","URL","createObjectURL","Number","array","cards","path","BackgroundTab","setFileQueue","setTypeQueue","setBackBlobList","backBlobList","isInfo","backgroundCards","setBackgroundCards","blobCards","setBlobCards","BgmTab","setBgmBlobList","bgmBlobList","setBgmBlobNames","bgmBlobNames","bgmCards","setBgmCards","SoundTab","setSoundBlobList","soundBlobList","setSoundBlobNames","soundBlobNames","soundCards","setSoundCards","EssetModal","setReload","fileQueue","typeQueue","charFileQueue","charBlobList","_","cloneDeep","revokeBlobList","forEach","revokeObjectURL","uploadFlag","uploadCharFiles","j","fileNum","Array","from","uploadCharDB","cnt","DBForm","reload","uploadFiles","uploadDB","originalname","keyboard","UploadModal","setUploadModalState","onSubmit_saveScene","defaultTitle","defaultDescription","setBlobURL","thumbFile","setThumbFile","upload","uploadThumb","uploadGame","EndingModal","setEndingModalState","warning","setWarning","cancel","focusable","data-icon","aria-hidden","_eventHandlers","addEvent","node","handler","capture","removeAllEvents","handlers","eventHandlers","GameCharacterList","element_X","element_Y","clicked","moving","setMoving","sizing","setSizing","imgWidth","setImgWidth","zIndex","setZIndex","background_element","pivot","drag","mouseMove","page","pageX","pageY","background_width","offsetWidth","background_height","offsetHeight","prev_posX","prev_posY","next_posX","next_posY","image_width","prev_size","next_size","stopPropagation","onMouseDown","onMouseUp","onClickOrder","faTimesCircle","faAngleDoubleDown","faAngleDown","onMouseOver","onMouseOut","characterDetailImages","onClick_selectCharacter","onClick_putCharacter","currentCharacter","setIsAdded","CutList","CutNumber","displayCut","setCutNumber","Hover","EmptyCutList","setHover","saveCut","onClick_GotoCut","display_SceneBox","Cut","display_EmptyBox","EmptyCut","SceneMakePage","back","maxCount","setNewScreenSize","essetModalState","setEssetModalState","uploadModalState","endingModalState","SidBar_script","setSidBar_script","Script","setScript","Name","setWriter","expTime","setExpTime","setCutList","setEmptyCutList","validation","tmpExpTime","Date","getTime","LIMIT_HR","tmpFirstCut","lastCut","characterSidebarElement","backgroundSidebarElement","bgmSidebarElement","soundSidebarElement","scriptElement","nameElement","makeVisible","makeInvisible","sideTabIndex","onClick_script","activeElement","onSubmit_nextCut","oldNumber","isTmp","submitCut","submitCutList","confirm","loading","msg","sideBar","setSideBar","reload_Sidebar","gameInfoIndex","tab","format","date","timezone","overflow","onRemovech_aracter","paused","PauseCircleOutlined","StopOutlined","delete","TEXT_MAX_LENGTH","Boolean","mode","status","controlpage","position","placement","onClose","Footer","open","PortraitWarning","io","transports","onpopstate","App","loaded","setloaded","matchMedia","matches","isPortrait","setIsPortrait","handleResize","fallback","exact","component","Auth","LoginPage","Valid","GamePlayPage","ScrollToTop","scrollTo","hostname","initialState","movingTarget","rootReducer","combineReducers","action","register","characterDisplayed","library","add","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","keys","resolve"],"mappings":"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","file":"static/js/main.b10e59a0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Form, message, Input } from \"antd\";\r\nimport \"./TitleModalForm.css\"\r\n\r\nconst ModalFormComponent = ({ visible, onCancel, onCreate, setGameTitle, setGameDescription }) => {\r\n    const onTitleChange = (event) => {\r\n        setGameTitle(event.currentTarget.value.substr(0, 30));\r\n    };\r\n    const onDescriptionChange = (event) =>{\r\n        setGameDescription(event.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"어떤 이야기를 만드실건가요?\"\r\n            okText=\"제작\"\r\n            cancelText=\"취소\"\r\n            onCancel={onCancel}\r\n            onOk={onCreate}\r\n            closable={false}\r\n            bodyStyle={{\r\n                height: \"425px\",\r\n                fontFamily: \"Noto Sans KR\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"300\"\r\n            }}\r\n        >\r\n            <Form layout=\"vertical\">\r\n                <Form.Item label=\"제목\" name=\"title\" rules={[\r\n                    { required: true, message: \"제목을 입력해주세요!\" },\r\n                    { max: 30, message: '제목은 30자 이내여야 합니다.' },\r\n                ]}>\r\n                    <textarea\r\n                        className=\"title_modalform_title\"\r\n                        maxLength={31}\r\n                        onChange={onTitleChange}\r\n                         />\r\n                </Form.Item>\r\n                <Form.Item label=\"게임 설명\" name=\"description\" rules={[\r\n                    { required: true, message: \"게임 설명을 입력해주세요!\" },\r\n                    { max: 1000, message: '설명은 1000자 이내여야 합니다.' },\r\n                ]}>\r\n                    <textarea maxLength={1001} onChange={onDescriptionChange}  className=\"title_modalform_description\" />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst TitleModalForm = Form.create({ name: \"modal_form\" })(ModalFormComponent);\r\n\r\nexport { TitleModalForm };\r\n","module.exports = {\r\n    STORAGE: 'https://iovar.s3.ap-northeast-2.amazonaws.com',\r\n    SERVER: 'http://54.180.24.213:80',\r\n    CLIENT: 'http://13.209.68.246:80',\r\n    SOCKET: 'https://www.iovar.co.kr',\r\n    KAKAO_KEY: '31ba9e7c5c25cdc29ae62436da6f8733'\r\n}","import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\r\n        .then(response => response.data);\r\n    \r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: null\r\n    }\r\n}\r\n\r\n","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\n\r\nexport const LOAD_EMPTY_NUM = 'load_empty_num';\r\nexport const SAVE_PREV_SCENE = 'SAVE_PREV_SCENE';\r\n\r\nexport const LOADINGPAGE_GAMEPLAY = \"gameLoading_gamePlay\"\r\nexport const PAUSE_GAMEPLAY = \"pause_gamePlay\"\r\n\r\nexport const NAVBAR_CONTROL = \"navbar_control\";\r\n\r\nexport const SELECT_CHARACTER = \"select_character\";\r\nexport const DETACH_CHARACTER = \"detach_character\";\r\nexport const POP_CHARACTER = \"pop_character\";\r\nexport const PUSH_CHARACTER = \"push_character\";\r\nexport const UPDATE_CHARACTER = \"update_character\";\r\nexport const SET_CHARACTER_LIST = \"set_character_list\";\r\nexport const ORDER_CHARACTER = \"order_character\";\r\n\r\n\r\nexport const SELECT_MOVINGTARGET = \"select_movingtarget\";\r\nexport const DETACH_MOVINGTARGET = \"detach_movingtarget\"; \r\nexport const SELECT_DISPLAYED = \"select_displayed\";\r\n","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n// ip address ( please be careful... )\r\n// export const LOCAL_HOST = \"15.164.48.192\";\r\nexport const LOCAL_HOST = \"localhost\";\r\n\r\n","import { useState } from \"react\";\r\n\r\nexport const useConstructor = (cb) => {\r\n    const [isInited, setInit] = useState(false);\r\n    if (isInited) return;\r\n    cb();\r\n    setInit(true);\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useConstructor } from '../components/functions/useConstructor';\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.replace('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.replace('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nexport default function (SpecificComponent, adminRoute = null) {\r\n    function Validate(props) {\r\n        const location = useLocation();\r\n        useEffect(() => {\r\n            if (location.state === undefined) {\r\n                props.history.replace('/');\r\n            }\r\n        }, [])\r\n        if(location.state) {\r\n            return (\r\n                <SpecificComponent {...props}/>\r\n            )\r\n        }\r\n        else {\r\n            return <div>잘못된 접근입니다ㅋㅋ</div>\r\n        }\r\n    }\r\n    return Validate\r\n}\r\n\r\n\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport \"./LandingPage_buttons.css\"\r\nimport \"antd/dist/antd.css\";\r\nimport Axios from \"axios\"\r\nimport { message } from \"antd\";\r\n\r\nconst {TitleModalForm}: any = require(\"../Modal/TitleModalForm\")\r\ninterface newGameButtonProps{\r\n    replace : Function;\r\n}\r\n\r\ninterface responseTypes{\r\n    data: {\r\n        game: {\r\n            _id:string;\r\n        }\r\n        sceneId: string;\r\n        success: boolean;\r\n    };\r\n}\r\n\r\nexport function NewGameButton({replace}:newGameButtonProps) {\r\n\r\n    const [visible, setVisible] = useState<any>(false);\r\n    const [gameTitle, setGameTitle] = useState<String>(\"\");\r\n    const [gameDescription, setGameDescription] = useState<String>(\"\");\r\n\r\n    // const [formRef, setFormRef] = useState<null | {validateFileds:any}></null>;\r\n    const user = useSelector<any, any>((state) => state.user);\r\n\r\n\r\n\r\n    const uploadGameFrame = async (title : String, description:any) => {\r\n        // tmp scene create\r\n        const gameResponse : responseTypes = await Axios.post(\"/api/game/uploadgameframe\", {title, description});\r\n\r\n        if (!gameResponse.data.success) {\r\n            alert(\"game Frame제작 실패\");\r\n            return;\r\n        }\r\n\r\n        const firstScene = {\r\n            gameId: gameResponse.data.game._id,\r\n            prevSceneId: null,\r\n            sceneDepth: 0,\r\n            isFirst: 1,\r\n            title: \"\",\r\n        };\r\n\r\n        const sceneResponse : responseTypes = await Axios.post(\"/api/scene/create\", firstScene);\r\n        if (!sceneResponse.data.success) {\r\n            alert(\"scene Frame제작 실패\");\r\n            return;\r\n        }\r\n\r\n        message.success(\r\n            \"첫 Scene을 생성해주세요. 오른쪽의 버튼을 활용해 이미지들을 추가할 수 있습니다.\"\r\n        );\r\n        \r\n        setTimeout(() => {\r\n            replace({\r\n                pathname: `/scene/make`,\r\n                state: {\r\n                    gameId: gameResponse.data.game._id,\r\n                    sceneId: sceneResponse.data.sceneId,\r\n                },\r\n            });\r\n        }, 1000);\r\n    };\r\n    \r\n    const handleClick = () =>{\r\n        if(user.userData?.isAuth){\r\n            setVisible(true)\r\n        }\r\n        else{\r\n            message.error(\"로그인이 필요합니다.\")\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n\r\n        uploadGameFrame(gameTitle, gameDescription);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <button className=\"button-newgame\" onClick ={uploadGameFrame}>\r\n                NEW 게임 만들기\r\n            </button> */}\r\n            <button className=\"button-newgame\" onClick={handleClick}>\r\n                NEW 게임 만들기\r\n            </button>\r\n        \r\n            <TitleModalForm \r\n                visible={visible}\r\n                onCancel={() => setVisible(false)}\r\n                onCreate={() => handleCreate()}\r\n                setGameTitle={setGameTitle}\r\n                setGameDescription={setGameDescription}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Modal, Select, Form, Input, message } from \"antd\";\r\nimport Axios from \"axios\"\r\n\r\nexport default function ContactUs(props: any) {\r\n    const { isModalVisible, setIsModalVisible } = props\r\n    const [Type, setType] = useState(\"feedback\");\r\n    const [Content, setContent] = useState(\"\");\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [PhoneNumber, setPhoneNumber] = useState(\"\");\r\n\r\n    const { Option } = Select;\r\n    const { TextArea } = Input;\r\n\r\n    function handleType(value: string) {\r\n        setType(value)\r\n    }\r\n\r\n    const handleContent = (event: any) => {\r\n        setContent(event.currentTarget.value);\r\n    }\r\n\r\n    const handleEmail = (event: any) => {\r\n        setEmail(event.currentTarget.value);\r\n    }\r\n\r\n    const handlePhoneNumber = (event: any) => {\r\n        setPhoneNumber(event.currentTarget.value);\r\n    }\r\n\r\n    const handleOk = () => {\r\n        const feedback = {\r\n            Type: Type,\r\n            Email: Email,\r\n            PhoneNumber: PhoneNumber,\r\n            Content: Content\r\n        }\r\n        if (feedback.Content?.length) {\r\n            Axios.post(\"api/users/send-feedback\", feedback).then((response) => {\r\n                if (response.data.success) {\r\n                    message.success('전송되었습니다. 고맙습니다.');\r\n                } else {\r\n                    message.error('전송 실패하였습니다. 조속히 처리하겠습니다.');\r\n                }\r\n                setType(\"feedback\")\r\n                setContent(\"\")\r\n                setEmail(\"\")\r\n                setPhoneNumber(\"\")\r\n            })\r\n            setIsModalVisible(false);\r\n        } else {\r\n            message.error(\"내용을 입력해주세요.\");\r\n        }\r\n\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                title=\"문의하기\"\r\n                visible={isModalVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n            >\r\n                <p>사이트에 대한 피드백 혹은 문의를 남겨주세요. 필요하시다면, 답장 받으실 연락처를 남겨주세요.</p>\r\n                <p />\r\n                <div>\r\n                    <Select defaultValue=\"feedback\" style={{ width: 120 }} onChange={handleType}>\r\n                        <Option value=\"feedback\">피드백</Option>\r\n                        <Option value=\"ask\">문의</Option>\r\n                        <Option value=\"copywrite\">저작권 관련</Option>\r\n                    </Select>\r\n                </div>\r\n                <Form.Item required>\r\n                    <p />\r\n                    <TextArea placeholder=\"내용을 적어주세요\" rows={6} value={Content} onChange={handleContent} />\r\n                    <p />\r\n                    이메일 :\r\n                <Input placeholder=\"이메일 주소\" value={Email} onChange={handleEmail} />\r\n                    <p />\r\n                    연락처 :\r\n                <Input placeholder=\"휴대폰 번호\" value={PhoneNumber} onChange={handlePhoneNumber} />\r\n                </Form.Item>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useRef, createRef } from \"react\"\r\nimport { NewGameButton } from \"./LandingPage_buttons\";\r\nimport ContactUs from \"../Footer/ContactUs\"\r\nimport \"./LandingPage_banners.css\"\r\n\r\ninterface Props_type {\r\n  replace: Function;\r\n}\r\n\r\nconst TOTAL_SLIDES = 3;\r\n\r\nexport function Banner_main({ replace }: Props_type) {\r\n  const [CurrentSlide, setCurrentSlide] = useState(0);\r\n  // const [TimerID, setTimerID] = useState<NodeJS.Timeout | undefined>(undefined);\r\n  const [IsModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const slideRef = React.createRef<HTMLDivElement>();\r\n  const TimerID = useRef<any>(undefined)\r\n  const stopBanner = () => {\r\n    if (TimerID.current !== undefined) {\r\n      clearTimeout(TimerID.current);\r\n    }\r\n  }\r\n\r\n  const startBanner = () => {\r\n    const timer = setTimeout(() => {\r\n      if(TimerID.current === timer){\r\n        if (CurrentSlide >= TOTAL_SLIDES - 1) {\r\n          setCurrentSlide(0)\r\n        } else {\r\n          setCurrentSlide(CurrentSlide + 1)\r\n        }\r\n      }\r\n    }, 3000);\r\n    TimerID.current = timer\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (slideRef.current) {\r\n      if (CurrentSlide != 0) {\r\n        slideRef.current.style.transition = \"all 1s ease-in-out\";\r\n      } else {\r\n        slideRef.current.style.transition = \"all 0s\";\r\n      }\r\n      slideRef.current.style.transform = `translateX(-${CurrentSlide * 100 / TOTAL_SLIDES}%)`;\r\n    }\r\n    startBanner()\r\n    return () => {\r\n      stopBanner()\r\n    }\r\n  }, [CurrentSlide])\r\n  \r\n\r\n  return (<div className=\"banner-container\" ref={slideRef}\r\n  onMouseEnter={() => stopBanner()} onMouseLeave={() => startBanner()}>\r\n    <Banner_main1 replace={replace} />\r\n    <Banner_main2 isModalVisible={IsModalVisible} setIsModalVisible={setIsModalVisible} />\r\n    <Banner_main1 replace={replace} />\r\n  </div>);\r\n}\r\n\r\nexport function Banner_main1({ replace }: Props_type) {\r\n  return (<div className=\"banner-main1\">\r\n    <div className=\"banner-main1-slogan1\">NEVER ENDING</div>\r\n    <div className=\"banner-main1-slogan2\">함께 만드는 무한한 이야기</div>\r\n    <NewGameButton replace={replace} />\r\n  </div>);\r\n}\r\n\r\nexport function Banner_main2(props: any) {\r\n  const { isModalVisible, setIsModalVisible } = props\r\n  return (<div className=\"banner-main2\">\r\n    <div className=\"banner-main2-imoji\">👨‍💻</div>\r\n    <div className=\"banner-main2-slogan1\">피드백을 요청합니다!</div>\r\n    <div className=\"banner-main2-slogan2\">더 멋진 서비스를 위해 여러분의 의견을 남겨주세요.</div>\r\n    <button className=\"banner-main2-button\" onClick={() => setIsModalVisible(true)}>\r\n      피드백 남기기\r\n    </button>\r\n    <ContactUs isModalVisible={isModalVisible} setIsModalVisible={setIsModalVisible} />\r\n  </div>);\r\n}","import React from \"react\";\r\n\r\nconst svg = {\r\n  arrow_1:\r\n    \"M-1.73589e-06 5.2875L16.6883 22.5L-2.31124e-07 39.7125L5.13765 45L27 22.5L5.13765 -2.24574e-07L-1.73589e-06 5.2875Z\",\r\n  playIcon_1:\r\n    \"M0.497437 0.796925V17.5524L15.8567 9.17468L0.497437 0.796925Z\",\r\n  close_1:\r\n    \"M11 0C4.917 0 0 4.917 0 11C0 17.083 4.917 22 11 22C17.083 22 22 17.083 22 11C22 4.917 17.083 0 11 0ZM16.5 14.949L14.949 16.5L11 12.551L7.051 16.5L5.5 14.949L9.449 11L5.5 7.051L7.051 5.5L11 9.449L14.949 5.5L16.5 7.051L12.551 11L16.5 14.949Z\",\r\n  close_2:\r\n    \"M10 0.600006C4.47 0.600006 0 5.07001 0 10.6C0 16.13 4.47 20.6 10 20.6C15.53 20.6 20 16.13 20 10.6C20 5.07001 15.53 0.600006 10 0.600006ZM15 14.19L13.59 15.6L10 12.01L6.41 15.6L5 14.19L8.59 10.6L5 7.01001L6.41 5.60001L10 9.19001L13.59 5.60001L15 7.01001L11.41 10.6L15 14.19Z\",\r\n};\r\n\r\nexport function SVG(props) {\r\n  const { src, color, width, height } = props;\r\n  return (\r\n    <svg\r\n      width={width ? width : \"auto\"}\r\n      height={height ? height : \"auto\"}\r\n      viewBox=\"0 0 27 45\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d={svg[src]} fill={color} />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function Relay_Icon() {\r\n  return (\r\n    <svg height='270px' width='270px' fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 96 96\" xmlSpace=\"preserve\"><g><g><circle cx=\"85\" cy=\"19.6\" r=\"6\"></circle><path d=\"M59,52.4c-0.1-0.2-0.4-0.1-0.5,0.1l-2.9,9.3c-0.1,0.4-0.5,0.8-0.9,0.8L45,63.9c-0.6,0.1-1,0.6-1,1.2v1c0,0.6,0.5,1,1,1.1    l12.2,0.4c0.8,0,1.6-0.4,2-1.1l4.4-7.6c0.1-0.2,0.1-0.5-0.1-0.7L59,52.4z\"></path><path d=\"M84.1,37.8c-0.3-0.3-0.4-0.6-0.4-1l0.2-5.9c0-0.7-0.1-1.4-0.4-2l-0.2-0.5c-0.1-0.1-0.1-0.3-0.2-0.4    c-1.4-1.7-3.4-2.9-5.6-3.4l-0.8-0.2c-0.4-0.1-0.9-0.1-1.3-0.1l-8.7,0.2c-1.2,0-2.3,0.6-3.1,1.5l-5.4,6.9c-0.6,0.8-0.5,1.9,0.3,2.5    l0.1,0.1c0.6,0.4,1.4,0.4,1.9-0.2l4.9-4.8c0.4-0.4,0.9-0.5,1.4-0.4l3.3,0.7c0.3,0.1,0.4,0.4,0.3,0.7L69.5,33c0,0-4.9,6.7-8.1,11.4    c-1.7,2.5-1.5,5.7,0.4,8l3.3,4l4.9,6.4c0.5,0.6,0.6,1.4,0.4,2.2l-2.9,10.7c-0.3,1,0.4,1.9,1.5,2l0.6,0c0.7,0,1.3-0.3,1.5-0.9    l5.8-12.5c0.5-1.1,0.5-2.4-0.1-3.4l-6.2-11.7c-0.5-0.9-0.4-2,0.3-2.8l4.9-6.2l1.1-0.4c0.9-0.3,1.6-0.9,2.1-1.6v1.1    c0,0.8,0.4,1.6,1,2l7.1,5c0.7,0.5,1.6,0.5,2.3,0c1.1-0.9,1.1-2.6,0.1-3.5L84.1,37.8z\"></path><circle cx=\"44.2\" cy=\"19.8\" r=\"6.3\"></circle><path d=\"M45,51.2l1-1.6c0.1-0.2,0.1-0.4-0.1-0.5l-2.4-1.4c-0.2-0.1-0.4,0-0.5,0.1l-0.9,1.4c-0.1,0.2-0.1,0.4,0.1,0.5l2.3,1.5    C44.7,51.4,44.9,51.4,45,51.2z\"></path><path d=\"M47.8,41.1l2.1,1.7c0.2,0.1,0.4,0.1,0.6-0.1l3.1-4.9c0.1-0.2,0.1-0.4-0.1-0.5l-2.3-1.5c-0.2-0.1-0.4-0.1-0.5,0.1l-3,4.7    C47.6,40.8,47.6,41,47.8,41.1z\"></path><path d=\"M28.6,53.7c-0.2-0.2-0.6-0.2-0.7,0.1l-3.5,6.5c-0.2,0.3-0.1,0.7,0.2,0.9l2.5,1.9c0.3,0.3,0.5,0.7,0.4,1.1l-2.9,10.5    c-0.3,1,0.5,2,1.5,2.1l0.7,0c0.7,0,1.3-0.4,1.6-1l5.8-12.4c0.7-1.5,0.4-3.3-0.7-4.5L28.6,53.7z\"></path><path d=\"M48.8,47.8c1.2-0.9,1.2-2.7,0.1-3.6L43.3,39c-0.3-0.3-0.4-0.6-0.4-1l0.2-6.2c0-0.7-0.1-1.5-0.4-2.1L42.5,29    c-0.1-0.1-0.1-0.3-0.2-0.4c-1.5-1.8-3.6-3.1-5.9-3.6l-0.8-0.2c-0.5-0.1-0.9-0.1-1.4-0.1L25,25c-1.3,0-2.5,0.6-3.2,1.6l-5.6,7.2    c-0.6,0.8-0.5,2,0.4,2.6l0.1,0.1c0.6,0.5,1.5,0.4,2-0.2l5.2-5c0.4-0.4,0.9-0.5,1.5-0.4l3.5,0.7c0.3,0.1,0.5,0.4,0.3,0.7l-1.1,1.6    l-7.9,10.4l0,0c-3,3.7-4.9,8.1-5.7,12.7l-1,5.9c-0.1,0.5-0.5,0.8-1,0.9l-10,1.5c-0.6,0.1-1.1,0.6-1.1,1.2v1.1    c0,0.6,0.5,1.1,1.1,1.1l12.8,0.5c0.8,0,1.6-0.4,2-1.1l9.5-16.3l7.1-9.2l0,0l1.6-0.5c1.1-0.4,2-1.2,2.5-2.3l0.1-0.2v0.9    c0,0.8,0.4,1.6,1.1,2.1l7.4,5.3C47.2,48.3,48.2,48.3,48.8,47.8z\"></path></g></g></svg>)\r\n}\r\n\r\nexport function Ending_Icon() {\r\n  return (\r\n    <svg height='270px' width='270px' fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 48 48\" enableBackground=\"new 0 0 48 48\" xmlSpace=\"preserve\"><g><ellipse fill=\"#000000\" cx=\"22.3\" cy=\"6.3\" rx=\"4.6\" ry=\"4.3\"></ellipse><path fill=\"#000000\" d=\"M46.8,23.7c-0.4-0.2-9.3-5.8-25.1-1.4c-14,3.9-18.6-0.7-18.7-0.8c-0.5-0.6-1.4-0.6-2-0.1   c-0.6,0.5-0.7,1.4-0.1,2c0.2,0.2,3,3.3,10.7,3.3c2.9,0,6.5-0.5,10.9-1.7c14.4-4.1,22.7,1,22.7,1c0.7,0.4,1.6,0.2,2-0.4   C47.7,25,47.5,24.1,46.8,23.7z\"></path><path fill=\"#000000\" d=\"M13,21.7c0.1,0,0.2,0,0.3,0c1.1-0.1,2-1.1,1.9-2.2c0.1-0.3,0.7-1,2.8-1.4V21c0,0,7.4-2.1,10.3-2.3l0-2.3   c5.4-2.3,7.1-8.2,7.5-11.6c0.1-1.1-0.7-2.2-1.9-2.3c-1.2-0.1-2.3,0.7-2.4,1.8c0,0.4-1.2,9.2-8.8,9.2c-0.1,0-0.1,0-0.2,0   c-5-0.1-8.4,0.8-10.3,2.7c-1.5,1.6-1.3,3.2-1.3,3.5C11,20.9,11.9,21.7,13,21.7z\"></path><path fill=\"#000000\" d=\"M28,25.8L18,28l-0.2,2.3c-0.1,0.9-0.5,2.2-0.8,2.3c0,0-1.1,0.1-3.8-2.7C12.3,29,10.9,29,10,29.7   c-0.9,0.8-1,2.1-0.1,2.9c1,1.1,3.9,4.1,7.1,4.1c0.5,0,1-0.1,1.5-0.2c2.9-1,4.8-5.4,4.9-6.6l4.1,7.1l-2,6.4   c-0.3,1.1,0.3,2.2,1.5,2.6c0.2,0.1,0.4,0.1,0.6,0.1c1,0,1.8-0.6,2.1-1.5l2.2-7.1c0.1-0.5,0.1-0.9-0.1-1.4L28,25.8z\"></path></g></svg>\r\n  )\r\n}\r\n\r\n\r\nexport function BAR(props) {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"3\"\r\n      viewBox=\"0 0 15 3\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <rect width=\"15\" height=\"3\" fill=\"white\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function SCENE_ICON(props) {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"15\"\r\n      id=\"fi_93839\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 348.462 348.462\"\r\n    >\r\n      <g>\r\n        <path fill={\"white\"}\r\n          d=\"M330.725,112.541H83.178l238.875-64.006c0.038-0.01,0.074-0.025,0.111-0.036c0.035-0.009,0.07-0.013,0.105-0.023\r\n\t\tc4.001-1.072,6.375-5.185,5.304-9.186l-9.038-33.731c-0.515-1.921-1.772-3.559-3.495-4.554c-1.723-0.995-3.771-1.264-5.691-0.749\r\n\t\tL15.798,78.913c-4.001,1.072-6.375,5.185-5.304,9.185l8.824,32.931v219.932c0,4.142,3.358,7.5,7.5,7.5h303.907\r\n\t\tc4.142,0,7.5-3.358,7.5-7.5V120.041C338.225,115.898,334.867,112.541,330.725,112.541z M323.225,147.305h-31.319l19.764-19.764\r\n\t\th11.555V147.305z M34.318,147.305v-19.764h33.354l-19.764,19.764H34.318z M88.885,127.541h33.858l-19.616,19.616\r\n\t\tc-0.048,0.048-0.088,0.099-0.134,0.148H69.121L88.885,127.541z M143.956,127.541h35.859l-19.764,19.764h-35.859L143.956,127.541z\r\n\t\t M201.028,127.541h34.359l-19.764,19.764h-34.359L201.028,127.541z M256.305,127.835c0.095-0.095,0.178-0.196,0.266-0.294h33.886\r\n\t\tl-19.764,19.764h-33.858L256.305,127.835z M93.614,73.591c0.111,0.072,0.218,0.149,0.334,0.216l24.038,13.878l-33.67,9.022\r\n\t\tL59.917,82.62L93.614,73.591z M147.748,59.086l24.399,14.087l-33.67,9.022l-24.4-14.087L147.748,59.086z M201.91,44.573\r\n\t\tl24.399,14.087l-33.671,9.022l-24.399-14.087L201.91,44.573z M256.069,30.061l24.399,14.087l-33.698,9.029\r\n\t\tc-0.115-0.075-0.225-0.154-0.345-0.223L222.4,39.083L256.069,30.061z M311.143,35.929l-10.185,2.729l-24.399-14.087l29.428-7.885\r\n\t\tL311.143,35.929z M39.427,88.111l24.399,14.087l-31.745,8.506L26.924,91.46L39.427,88.111z M34.318,333.462V162.305h288.907\r\n\t\tv171.157H34.318z\"\r\n        ></path>\r\n        <path fill={\"white\"}\r\n          d=\"M290.354,207.162c4.142,0,7.5-3.358,7.5-7.5c0-4.142-3.358-7.5-7.5-7.5H63.825c-4.142,0-7.5,3.358-7.5,7.5\r\n\t\tc0,4.142,3.358,7.5,7.5,7.5h56.421v53.321H63.825c-4.142,0-7.5,3.358-7.5,7.5c0,4.142,3.358,7.5,7.5,7.5h226.528\r\n\t\tc4.142,0,7.5-3.358,7.5-7.5c0-4.142-3.358-7.5-7.5-7.5H239.54v-53.321H290.354z M224.54,260.483h-89.293v-53.321h89.293V260.483z\"\r\n        ></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { SVG, BAR, SCENE_ICON } from \"../../svg/icon\";\r\nimport \"./LandingPage_gameLists.css\"\r\nimport { LOCAL_HOST } from \"../../Config\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst config = require('../../../config/key')\r\ninterface Data {\r\n    category: string;\r\n    id: string;\r\n    length: 0,\r\n    pos: number;\r\n    limit: number;\r\n}\r\n\r\ninterface Game {\r\n    title: string;\r\n    _id: string;\r\n    thumbnail: string;\r\n    category: string;\r\n    first_scene: string;\r\n    sceneCnt:number;\r\n}\r\n\r\ninterface ContainerProps {\r\n    data: Data;\r\n    games: Game[];\r\n}\r\n\r\nfunction ContainerToRight(target: Data) {\r\n    if (target.pos < target.limit - 1) {\r\n        //* bar\r\n        var bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(50%)\";\r\n        }\r\n\r\n        //* change location\r\n        target.pos += 1;\r\n\r\n        //* container\r\n        var container = document.getElementById(target.id + \"_gameList\");\r\n        if (container === null) {\r\n            throw Error(\"can not find target container\")\r\n        } else {\r\n            container.style.transform = `translate(${-1336 * target.pos}px, 0px)`;\r\n        }\r\n        //* bar\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(100%)\";\r\n        }\r\n        //* arrows\r\n        if (target.pos == target.limit - 1) {\r\n            var arrow = document.getElementById(\r\n                target.id + \"_right_arrow\"\r\n            );\r\n            if (arrow === null) {\r\n                throw Error(\"can not find target arrow\")\r\n            } else {\r\n                arrow.style.display = \"none\";\r\n            }\r\n        }\r\n        arrow = document.getElementById(target.id + \"_left_arrow\");\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction ContainerToLeft(target: Data) {\r\n    if (target.pos > 0) {\r\n        //* bar\r\n        var bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(50%)\";\r\n        }\r\n\r\n        //* change location\r\n        target.pos -= 1;\r\n\r\n        //* container\r\n        var container = document.getElementById(target.id + \"_gameList\");\r\n        if (container === null) {\r\n            throw Error(\"can not find target container\")\r\n        } else {\r\n            container.style.transform = `translate(${-1336 * target.pos}px, 0px)`;\r\n        }\r\n        //* bar\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(100%)\";\r\n        }\r\n        //* arrows\r\n        if (target.pos == 0) {\r\n            var arrow = document.getElementById(\r\n                target.id + \"_left_arrow\"\r\n            );\r\n            if (arrow === null) {\r\n                throw Error(\"can not find target arrow\")\r\n            } else {\r\n                arrow.style.display = \"none\";\r\n            }\r\n        }\r\n        arrow = document.getElementById(target.id + \"_right_arrow\");\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction mouseOnEvent(target: Data) {\r\n    //* arrow right\r\n    let arrow = document.getElementById(\r\n        target.id + \"_right_arrow\"\r\n    );\r\n    if (target.pos < target.limit - 1) {\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n    //* arrow left\r\n    arrow = document.getElementById(\r\n        target.id + \"_left_arrow\"\r\n    );\r\n    if (target.pos > 0) {\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n    //* bar\r\n    let bar\r\n    for (let i = 0; i < target.limit; i++) {\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(i)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.transform = \"opacity(1)\";\r\n            bar.style.opacity = \"1\";\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction mouseOffEvent(target: Data) {\r\n    //* arrow right\r\n    let arrow = document.getElementById(\r\n        target.id + \"_right_arrow\"\r\n    );\r\n    if (arrow === null) {\r\n        throw Error(\"can not find target arrow\")\r\n    } else {\r\n        arrow.style.display = \"none\";\r\n    }\r\n    //* arrow left\r\n    arrow = document.getElementById(\r\n        target.id + \"_left_arrow\"\r\n    );\r\n    if (target.pos > 0) {\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"none\";\r\n            \r\n        }\r\n    }\r\n    //* bar\r\n    let bar\r\n    for (let i = 0; i < target.limit; i++) {\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(i)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.transform = \"opacity(0)\";\r\n            bar.style.opacity = \"0\";\r\n        }\r\n    }\r\n}\r\n\r\nexport function GameList(props: ContainerProps) {\r\n    const { data, games } = props;\r\n    //* game list\r\n    data.length = 0;\r\n    const gameList = games.map((game: Game, index: number) => {\r\n        if (game.first_scene) {\r\n            data.length += 1;\r\n            let thumbnailPath;\r\n            \r\n            if(process.env.NODE_ENV === \"production\")\r\n                thumbnailPath = game.thumbnail\r\n            else\r\n                thumbnailPath = `${config.STORAGE}/${game.thumbnail}`\r\n            return (\r\n                <div className=\"gamelist-game\" key={index}>\r\n                    <Link to={`/game/${game._id}`}>\r\n                        <img\r\n                            className=\"game-image\"\r\n                            src={thumbnailPath}\r\n                            alt={game.title}\r\n                        />\r\n                        <div className=\"game-title\">{game.title}</div>\r\n                    </Link>\r\n                    <div className=\"game-sceneNum\">{game.sceneCnt}</div>\r\n                    <div className=\"game-sceneIcon\"><SCENE_ICON/></div>\r\n                    <div className=\"game-category\">{game.category}</div>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    });\r\n\r\n    data.limit = Math.round((data.length/ 4)+0.49)\r\n\r\n    //* bars\r\n    const bars = [];\r\n    for (let i = data.limit - 1; i > 0; i--) {\r\n        bars.push(\r\n            <div id={`${data.id}_bar${i}`} className=\"bar\" key={`${i}`}>\r\n                <BAR />\r\n            </div>\r\n        )\r\n    }\r\n    bars.push(<div\r\n        id={`${data.id}_bar0`}\r\n        className=\"bar\"\r\n        style={{ filter: \"brightness(100%)\" }}\r\n        key={0}\r\n    >\r\n        <BAR />\r\n    </div>)\r\n\r\n    //* return component\r\n    return (\r\n        <div className=\"box-container game-box\">\r\n            <div className=\"box-title\">{data.category}</div>\r\n            <div className=\"box-positionBar\">\r\n                {bars}\r\n            </div>\r\n            <div className=\"box-gameList\"\r\n                onMouseEnter={() => { mouseOnEvent(data) }}\r\n                onMouseLeave={() => { mouseOffEvent(data) }}\r\n            >\r\n                <div\r\n                    id={`${data.id}_gameList`}\r\n                    className=\"gamelist-container\"\r\n                    style={{ width: data.length * 335 + \"px\" }}\r\n                >\r\n                    {gameList}\r\n                </div>\r\n                <div\r\n                    id={`${data.id}_left_arrow`}\r\n                    className=\"gamelist-left-arrow\"\r\n                    onClick={() => {\r\n                        ContainerToLeft(data);\r\n                    }}\r\n                >\r\n                    <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\r\n                </div>\r\n                <div\r\n                    id={`${data.id}_right_arrow`}\r\n                    className=\"gamelist-right-arrow\"\r\n                    onClick={() => {\r\n                        ContainerToRight(data);\r\n                    }}\r\n                >\r\n                    <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { NAVBAR_CONTROL } from \"./types\";\r\n\r\nexport function navbarControl(navbarOn) {\r\n  return {\r\n    type: NAVBAR_CONTROL,\r\n    payload: navbarOn,\r\n  };\r\n}\r\n","import React, { useEffect, useState} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport \"./LandingPage.css\";\r\nimport { Banner_main } from \"./LandingPage_banners\";\r\nimport { GameList } from \"./LandingPage_gameLists\";\r\nimport { navbarControl } from \"../../../_actions/controlPage_actions\"\r\n\r\nconst ListContainer = {\r\n  recent_games: {\r\n    category: \"최근 플레이한 게임\",\r\n    id: \"recent\",\r\n    length: 0,\r\n    pos: 0,\r\n    limit: 0,\r\n  },\r\n  popular_games: {\r\n    category: \"인기 게임\",\r\n    id: \"popular\",\r\n    length: 0,\r\n    pos: 0,\r\n    limit: 0,\r\n  },\r\n};\r\n\r\nfunction LandingPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //* navigation bar control\r\n    dispatch(navbarControl(true));\r\n    \r\n    Axios.get(\"/api/game/getgames\").then((response) => {\r\n      if (response.data.success) {\r\n        setGames(response.data.games);\r\n      } else {\r\n        alert(\"game load에 실패했습니다.\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mainPage_container\">\r\n      <div className=\"box-container\">\r\n        <Banner_main replace={props.history.replace} />\r\n      </div>\r\n      <GameList data={ListContainer.recent_games} games={games} />\r\n      <GameList data={ListContainer.popular_games} games={games} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./LoginPage.css\";\r\nimport KakaoLogin from \"react-kakao-login\"\r\nimport Axios from \"axios\";\r\nconst config = require(\"../../../config/key\")\r\ninterface LoginPageProps {\r\n  history: {\r\n    replace: Function;\r\n  }\r\n}\r\n\r\ninterface LoginUser {\r\n  payload: {\r\n    loginSuccess: boolean;\r\n    userId?: string | undefined;\r\n    message?: string;\r\n  }\r\n  type: string;\r\n}\r\n\r\nfunction LoginPage(props: LoginPageProps) {\r\n  const dispatch: any = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe);\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\")\r\n    ? localStorage.getItem(\"rememberMe\")!\r\n    : undefined;\r\n\r\n  const kakaoLogin = (login: any) => {\r\n    Axios.post('/api/passport/kakao/oauth', { profile: login.profile })\r\n      .then((res: any) => {\r\n        if (res.data.success) {\r\n          if (res.data.newUser) {\r\n            props.history.replace({\r\n              pathname: `/passport/register`,\r\n              state: {\r\n                snsId: login.profile.id,\r\n                snsProvider: \"kakao\",\r\n              }\r\n            })\r\n          }\r\n          else {\r\n            props.history.replace(\"/\");\r\n          }\r\n        }\r\n      })\r\n\r\n  }\r\n  const fail = () =>{\r\n    props.history.replace({\r\n      pathname:`/login`\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"이메일 주소를 입력해 주세요.\")\r\n          .required(\"이메일 주소를 입력해 주세요.\"),\r\n        password: Yup.string()\r\n          .min(6, \"비밀번호는 최소 6글자 이상이어야 합니다.\")\r\n          .required(\"비밀번호를 입력해 주세요.\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then((response: LoginUser) => {\r\n              if (response.payload.loginSuccess) {\r\n                if (rememberMe === true && values.email) {\r\n                  window.localStorage.setItem(\"rememberMe\", values.email);\r\n                } else {\r\n                  localStorage.removeItem(\"rememberMe\");\r\n                }\r\n                props.history.replace(\"/\");\r\n              } else {\r\n                setFormErrorMessage(\"아이디와 비밀번호를 확인해 주세요.\");\r\n              }\r\n            })\r\n            .catch((err: boolean) => {\r\n              setFormErrorMessage(\"아이디와 비밀번호를 확인해 주세요.\");\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\");\r\n              }, 3000);\r\n            });\r\n\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"loginPage-container\">\r\n            <div className=\"loginDiv-container\">\r\n              <div className=\"login-Title\">로그인</div>\r\n              <div className=\"login-newUser\">신규 사용자이신가요? <Link className=\"login-register\" to=\"/register\">계정만들기</Link></div>\r\n              <form onSubmit={handleSubmit} style={{ width: \"600px\" }}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    id=\"email\"\r\n                    prefix={\r\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                    }\r\n                    placeholder=\"이메일 주소\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.email}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required>\r\n                  <Input\r\n                    id=\"password\"\r\n                    prefix={\r\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                    }\r\n                    placeholder=\"비밀번호\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.password && touched.password\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.password}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                {formErrorMessage && (\r\n                  <label>\r\n                    <p className=\"login-error\">\r\n                      {formErrorMessage}\r\n                    </p>\r\n                  </label>\r\n                )}\r\n\r\n                <Form.Item>\r\n                  <Checkbox\r\n                    className=\"rememberMe\"\r\n                    onChange={handleRememberMe}\r\n                    checked={rememberMe}\r\n                    style={{ color: \"white\" }}\r\n                  >\r\n                    아이디 기억하기\r\n                  </Checkbox>\r\n                  {/* <a\r\n                    className=\"login-form-forgot\"\r\n                    href=\"/reset_user\"\r\n                    style={{ float: \"right\" }}\r\n                  >\r\n                    forgot password\r\n                  </a> */}\r\n                  <Form.Item>\r\n                    <div>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"login-button\"\r\n                        disabled={isSubmitting}\r\n                        onSubmit={() => handleSubmit()}\r\n                      >\r\n                        로그인\r\n                    </button>\r\n                      <KakaoLogin\r\n                        token={config.KAKAO_KEY}\r\n                        onSuccess={(login) => kakaoLogin(login) }\r\n                        onFail={()=>{fail()}}\r\n                        className=\"login-button login-kakao\">\r\n                        카카오 로그인\r\n\r\n                    </KakaoLogin>\r\n\r\n                  </div>\r\n                  </Form.Item>\r\n\r\n                </Form.Item>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import * as React from \"react\";\r\nimport * as Yup from 'yup';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport { Form, Input } from 'antd';\r\nimport \"./RegisterPage.css\"\r\nimport Axios from \"axios\"\r\n\r\ninterface RegisterPageProps {\r\n  history: {\r\n    push: Function;\r\n  }\r\n}\r\n\r\ninterface RegisterUser {\r\n  payload: {\r\n    success: boolean;\r\n    err: {\r\n      errmsg: string;\r\n    }\r\n  }\r\n}\r\n\r\ninterface FormType {\r\n  email: string;\r\n  nickname: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n}\r\n\r\nfunction RegisterPage(props: RegisterPageProps) {\r\n  const dispatch: any = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        nickname: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        nickname: Yup.string()\r\n          .required('필수 정보입니다.'),\r\n        email: Yup.string()\r\n          .email('이메일 형식이 아닙니다.')\r\n          .required('필수 정보입니다.'),\r\n        password: Yup.string()\r\n          .min(6, '패스워드는 최소 6글자 이상이어야합니다.')\r\n          .required('필수 정보입니다.'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), undefined], '패스워드가 틀립니다.')\r\n          .required('패스워드를 다시 입력해주세요.')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(async () => {\r\n          let emailFlag\r\n          await Axios.post(\"/api/users/email-check\", { email: values.email }).then((response) => {\r\n            emailFlag = response.data.usedEmail\r\n          })\r\n\r\n          if (emailFlag) {\r\n            alert(\"이미 사용 중인 이메일 입니다.\")\r\n            setSubmitting(false);\r\n            return\r\n          }\r\n          let nicknameFlag\r\n          await Axios.post(\"/api/users/nickname-check\", { nickname: values.nickname }).then((response) => {\r\n            nicknameFlag = response.data.usedNickname\r\n          })\r\n\r\n          if (nicknameFlag) {\r\n            alert(\"이미 사용 중인 닉네임 입니다.\")\r\n            setSubmitting(false);\r\n            return\r\n          }\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            nickname: values.nickname,\r\n            image: \"https://i.imgur.com/rF80MBo.png\",\r\n            // image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n          };\r\n\r\n          await dispatch(registerUser(dataToSubmit)).then((response: RegisterUser) => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"registerPage-container\">\r\n            <div className=\"registerDiv-container\">\r\n              <div className=\"register-Title\">회원가입</div>\r\n              <div className=\"register-oldUser\">기존 사용자이신가요? <Link className=\"register-login\" to=\"/login\">로그인하기</Link></div>\r\n\r\n              <Form onSubmit={handleSubmit} labelAlign=\"left\"\r\n                labelCol={{ span: 5 }} wrapperCol={{ span: 19 }}>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 닉네임</label>}>\r\n                  <Input\r\n                    id=\"nickname\"\r\n                    placeholder=\"닉네임을 입력하세요\"\r\n                    type=\"text\"\r\n                    value={values.nickname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.nickname && touched.nickname ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.nickname && touched.nickname && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.nickname}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 이메일</label>}\r\n                  hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                  <Input\r\n                    id=\"email\"\r\n                    placeholder=\"이메일을 입력하세요.\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.email}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 비밀번호</label>}\r\n                  hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                  <Input\r\n                    id=\"password\"\r\n                    placeholder=\"비밀번호를 입력하세요\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.password}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 비밀번호 재확인</label>} hasFeedback>\r\n                  <Input\r\n                    id=\"confirmPassword\"\r\n                    placeholder=\"비밀번호를 재입력하세요\"\r\n                    type=\"password\"\r\n                    value={values.confirmPassword}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.confirmPassword && touched.confirmPassword && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.confirmPassword}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"register-button\"\r\n                      disabled={isSubmitting}\r\n                      onSubmit={() => handleSubmit()}\r\n                    >\r\n                      회원가입\r\n                    </button>\r\n                  </div>\r\n                </Form.Item>\r\n\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import * as React from \"react\";\r\nimport * as Yup from 'yup';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport { Form, Input } from 'antd';\r\nimport \"./RegisterPage.css\"\r\nimport Axios from \"axios\"\r\n\r\ninterface RegisterPageProps {\r\n    history: {\r\n        push: Function;\r\n    }\r\n\r\n}\r\n\r\ninterface LocationState {\r\n    snsId : Number;\r\n    snsProvider:string;\r\n}\r\n\r\ninterface RegisterUser {\r\n    payload: {\r\n        success: boolean;\r\n        err: {\r\n            errmsg: string;\r\n        }\r\n    }\r\n}\r\n\r\ninterface FormType {\r\n    nickname: string;\r\n    snsId : Number;\r\n    snsProvide : string;\r\n}\r\n\r\nfunction PassportRegisterPage(props: RegisterPageProps) {\r\n    const dispatch: any = useDispatch();\r\n    const location = useLocation<LocationState>();\r\n    const { snsId, snsProvider} = location.state;\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                nickname: '',\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                nickname: Yup.string()\r\n                    .required('필수 정보입니다.'),\r\n            })}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setTimeout(async () => {\r\n                    let flag\r\n                    await Axios.post(\"/api/users/nickname-check\", { nickname: values.nickname }).then((response) => {\r\n                        flag = response.data.usedNickname\r\n                    })\r\n\r\n                    if (flag) {\r\n                        alert(\"이미 사용 중인 닉네임 입니다.\")\r\n                        setSubmitting(false);\r\n                        return\r\n                    }\r\n\r\n                    let dataToSubmit = {\r\n                        nickname: values.nickname,\r\n                        snsId : snsId,\r\n                        snsProvider: snsProvider,\r\n                        image: \"https://i.imgur.com/rF80MBo.png\",\r\n                        // image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n                    };\r\n\r\n                    await dispatch(registerUser(dataToSubmit)).then((response: RegisterUser) => {\r\n                        if (response.payload.success) {\r\n                            props.history.push(\"/\");\r\n                        } else {\r\n                            alert(response.payload.err.errmsg)\r\n                        }\r\n                    })\r\n\r\n                    setSubmitting(false);\r\n                }, 500);\r\n            }}\r\n        >\r\n            {props => {\r\n                const {\r\n                    values,\r\n                    touched,\r\n                    errors,\r\n                    isSubmitting,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                } = props;\r\n                return (\r\n                    <div className=\"registerPage-container\">\r\n                        <div className=\"registerDiv-container\">\r\n                            <div className=\"register-Title\">회원가입</div>\r\n\r\n                            <Form onSubmit={handleSubmit} labelAlign=\"left\"\r\n                                labelCol={{ span: 5 }} wrapperCol={{ span: 19 }}>\r\n\r\n                                <Form.Item required label={<label style={{ color: \"white\" }}> 닉네임</label>}>\r\n                                    <Input\r\n                                        id=\"nickname\"\r\n                                        placeholder=\"닉네임을 입력하세요\"\r\n                                        type=\"text\"\r\n                                        value={values.nickname}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.nickname && touched.nickname ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                    />\r\n                                    {errors.nickname && touched.nickname && (\r\n                                        <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.nickname}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <div>\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className=\"register-button\"\r\n                                            disabled={isSubmitting}\r\n                                            onSubmit={() => handleSubmit()}\r\n                                        >\r\n                                            회원가입\r\n                    </button>\r\n                                    </div>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default PassportRegisterPage\r\n","import { message } from 'antd';\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport {LOCAL_HOST} from \"../../../Config\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport './ContributedGame.css';\r\n\r\nimport { ObjectId } from \"mongodb\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faFile, faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { SCENE_ICON } from '../../../svg/icon';\r\n\r\ninterface ContributedGame {\r\n  gameId: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  _id: string;\r\n}\r\n\r\ninterface GameDetail {\r\n  createdAt: string;\r\n  description: string;\r\n  sceneCnt: number;\r\n  thumbnail: string;\r\n  title: string;\r\n}\r\n\r\ninterface ThumbsUp {\r\n  like: number;\r\n  isClick: boolean;\r\n}\r\n\r\nfunction ContributedGame(props: any) {\r\n  const gameId: string = props.gameId;\r\n  const sceneCnt: number = props.sceneCnt;\r\n\r\n  const [gameDetail, setGameDetail] = useState<GameDetail>({\r\n    createdAt: \"\",\r\n    description: \"\",\r\n    sceneCnt: 0,\r\n    thumbnail: \"\",\r\n    title: \"\",\r\n  });\r\n  const [view, setView] = useState<number>(0);\r\n  const [thumbsUp, setThumbsUp] = useState<ThumbsUp>({\r\n    like: 0,\r\n    isClick: false,\r\n  });\r\n  \r\n  useEffect(() => {\r\n    Axios.post(\"/api/game/getgamedetail\", {gameId: new ObjectId(gameId)}).then((response) => {\r\n      setGameDetail(response.data.gameDetail)\r\n    })\r\n    Axios.post(\"/api/view/\", {objectId: new ObjectId(gameId)}).then((response) => {\r\n      setView(response.data.view)\r\n    })\r\n    Axios.post(\"/api/thumbsup/count\", {objectId: new ObjectId(gameId)}).then((response) => {\r\n      setThumbsUp({\r\n        isClick: response.data.isClicked,\r\n        like: response.data.thumbsup\r\n      });\r\n    })\r\n  },[])\r\n\r\n  if(gameDetail.title === \"\"){\r\n    return <div></div>\r\n  }\r\n\r\n  const description = gameDetail.description.length > 300 ? gameDetail.description.slice(0,300)+'...' : gameDetail.description;\r\n  return (\r\n    <div className=\"contribute__container\">\r\n      <Link to={`/game/${gameId}`}>\r\n        <img\r\n          className=\"contribute__img\"\r\n          src={`http://${LOCAL_HOST}:5000/${gameDetail.thumbnail}`}\r\n          alt=\"https://cdn.crowdpic.net/list-thumb/thumb_l_110F2464CA8958D839ECCBA33E453FDF.jpg\"\r\n        />\r\n        <div className=\"contribute__icon\">\r\n          <div>\r\n            {gameDetail.sceneCnt}\r\n            <FontAwesomeIcon icon={faFile} style={{ marginLeft: \"10px\" }} /> \r\n          </div>\r\n          <div>\r\n            {view}\r\n            <FontAwesomeIcon icon={faEye} style={{ marginLeft: \"10px\" }} />\r\n          </div>\r\n          <div>\r\n            {thumbsUp.like} \r\n            <FontAwesomeIcon style={{ marginLeft: \"10px\" }} icon={faHeart} />\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <div className=\"contribute__info\">\r\n        <div className=\"contribute__title\">{gameDetail.title}</div>\r\n        <div className=\"contribute__text\">{description}</div>\r\n        {sceneCnt >= 0 ?\r\n          <div className=\"contribute__contributeCntText\">\r\n            기여한 스토리 개수: \r\n            <div className=\"contribute__cnt\">\r\n              {sceneCnt}\r\n            </div>\r\n          </div>\r\n          :\r\n          <div></div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ContributedGame\r\n","import { message } from 'antd';\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport {LOCAL_HOST} from \"../../Config\";\r\nimport ContributedGame from './ContributedGame/ContributedGame';\r\n\r\nimport './Profile.css';\r\n\r\ninterface Game {\r\n  gameId: string;\r\n  sceneId: string;\r\n}\r\n\r\ninterface SceneInfo {\r\n  sceneId: string;\r\n  depth: number;\r\n}\r\n\r\ninterface ContributedScene_type {\r\n  sceneCnt: number;\r\n  gameId: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  sceneList: SceneInfo[];\r\n}\r\n\r\ninterface ContributedGame_type {\r\n  gameId: string;\r\n  title: string;\r\n  thumbnail: string;\r\n}\r\n\r\ninterface UserData {\r\n  makingGameList: Game[];\r\n  image: string;\r\n  email: string;\r\n  nickname: string;\r\n  _id: string;\r\n  contributedSceneList: ContributedScene_type[];\r\n  contributedGameList: ContributedGame_type[];\r\n}\r\n\r\ninterface State_user {\r\n  user: {\r\n    userData: UserData;\r\n  }\r\n}\r\n\r\nfunction Profile(props: any) {\r\n  const userId: string = props.match.params.userId;\r\n  const currUserData: UserData = useSelector((state: State_user) => state.user.userData);\r\n  let isUser: boolean = false;\r\n  const FETCHNIG_CNT: number = 5;\r\n\r\n  const [user, setUser] = useState<UserData>({\r\n    makingGameList: [],\r\n    image: \"\",\r\n    email: \"\",\r\n    nickname: \"\",\r\n    _id: \"\",\r\n    contributedSceneList: [],\r\n    contributedGameList: [],\r\n  });\r\n  const [fetching, setFetching] = useState(false);\r\n  const [gameContentsNumber, setGameContentsNumber] = useState<number>(FETCHNIG_CNT);\r\n  const [sceneContentsNumber, setSceneContentsNumber] = useState<number>(FETCHNIG_CNT);\r\n  const [totalSceneContribute, setTotalSceneContribute] = useState<number>(0);\r\n  const [totalGameContribute, setTotalGameContribute] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    Axios.post(\"/api/users/profile\", {userId: userId}).then((response) => {\r\n      if (response.data.success) {\r\n        setUser(response.data.user);\r\n        let tmp: number = 0;\r\n        for (let i=0; i<response.data.user.contributedSceneList.length; i++){\r\n          tmp += response.data.user.contributedSceneList[i].sceneCnt;\r\n        }\r\n        setTotalSceneContribute(tmp);\r\n        setTotalGameContribute(response.data.user.contributedGameList.length);\r\n      } else {\r\n          message.error(\"사용자 정보를 불러오는데 실패했습니다.\");\r\n      }\r\n    })\r\n  },[])\r\n  \r\n  if(currUserData?._id === userId){\r\n    isUser = true;\r\n  }\r\n\r\n  const displayContributedScene = (user: UserData) => {\r\n    const contributedSceneList: ContributedScene_type[] = user.contributedSceneList.slice(0,sceneContentsNumber);\r\n    if(contributedSceneList){\r\n      const contributedScene =  contributedSceneList.map((\r\n        game: ContributedScene_type\r\n      ) => {\r\n        return (\r\n          <div key={game.gameId}>\r\n            <ContributedGame \r\n              gameId={game.gameId}\r\n              sceneCnt={game.sceneCnt}\r\n            />\r\n          </div>\r\n        )\r\n      })\r\n      return (\r\n        <>\r\n        {contributedScene}\r\n        {user.contributedSceneList.length > sceneContentsNumber?\r\n          <div\r\n            className=\"displayMore\" \r\n            onClick={()=>setSceneContentsNumber((state)=>state+FETCHNIG_CNT)}\r\n          >\r\n            더보기\r\n          </div>\r\n          :\r\n          <div></div>\r\n        }\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const displayContributedGame = (user: UserData) => {\r\n    const contributedGameList: ContributedGame_type[] = user.contributedGameList.slice(0,gameContentsNumber);;\r\n    if(contributedGameList){\r\n      const contributedGame =  contributedGameList.map((\r\n        game: ContributedGame_type\r\n      ) => {\r\n        return (\r\n          <div key={game.gameId}>\r\n            <ContributedGame \r\n              gameId={game.gameId}\r\n              sceneCnt={-1}\r\n            />\r\n          </div>\r\n        )\r\n      })\r\n      return (\r\n        <>\r\n        {contributedGame}\r\n        {user.contributedGameList.length > gameContentsNumber?\r\n          <div\r\n            className=\"displayMore\" \r\n            onClick={()=>setGameContentsNumber((state)=>state+FETCHNIG_CNT)}\r\n          >\r\n            더보기\r\n          </div>\r\n          :\r\n          <div></div>\r\n        }\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  // const displayMakingGame = (currUserData: UserData) => {\r\n  //   const makingGameList: Game[] = currUserData.makingGameList;\r\n  //   if (makingGameList){\r\n  //     return makingGameList.map((game: Game, index: number) => {\r\n  //       return (\r\n  //         <div key={index}>\r\n  //           <div>\r\n  //             {game.gameId}\r\n  //           </div>\r\n  //           <Link to={\r\n  //             {\r\n  //               pathname: `/scene/make`,\r\n  //               state: {\r\n  //                 gameId: game.gameId,\r\n  //                 sceneId: game.sceneId\r\n  //               }\r\n  //             }\r\n  //           } key = {index}>\r\n  //             게임 만들러가기..\r\n  //           </Link>\r\n  //         </div>\r\n  //       )\r\n  //     })\r\n  //   } else{\r\n  //     return <div>만드는 중인 게임이 없습니다..</div>\r\n  //   }\r\n  // }\r\n\r\n  const onClick_tab = (name: string): void => {\r\n    const element: HTMLElement | null = document.getElementById(name);\r\n    document.getElementById(\"contributedGame\")!.style.display = \"none\";\r\n    document.getElementById(\"contributedScene\")!.style.display = \"none\";\r\n    // if(isUser)\r\n    //   document.getElementById(\"makingGame\")!.style.display = \"none\";\r\n    element!.style.display = \"block\";\r\n  }\r\n\r\n  if (currUserData){\r\n    return (\r\n      <div className=\"profile__container\">\r\n        \r\n        <div className=\"profile__thumbnail_container\">\r\n          <img\r\n              className=\"profile__thumbnail\"\r\n              src={`https://i.imgur.com/UwPKBqQ.jpg`}\r\n              alt=\"\"\r\n          />\r\n          <div className=\"profile__gradation\"></div>\r\n          <div className=\"profile__userInfo\">\r\n            <img \r\n              src={user.image} alt=\"\" \r\n              className=\"profile__img\"\r\n            />\r\n            <div className=\"profile__text\">\r\n              <div>{user.nickname}</div>\r\n              <div>{user.email}</div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        \r\n        <div className=\"profile__btn_container\">\r\n          <div \r\n            className=\"profile__btn\"\r\n            onClick={() => onClick_tab(\"contributedScene\")}\r\n          >\r\n            내가 만든 스토리 \r\n          </div>\r\n          <div \r\n            className=\"profile__btn\"\r\n            onClick={() => onClick_tab(\"contributedGame\")}\r\n          >\r\n            내가 만든 게임 \r\n          </div>\r\n          \r\n          {/* {isUser &&\r\n          <div onClick={() => onClick_tab(\"makingGame\")}>만들던 게임</div>\r\n          } */}\r\n        </div>\r\n        <div \r\n          id=\"contributedScene\"\r\n          style={{display:\"block\"}}\r\n        >\r\n          <div className=\"profile__title\">\r\n            기여한 스토리 {totalSceneContribute} 개\r\n          </div>\r\n          {displayContributedScene(user)}\r\n        </div>\r\n        <div \r\n          id=\"contributedGame\"\r\n          style={{display:\"none\"}}\r\n        >\r\n          <div className=\"profile__title\">\r\n            기여한 게임 {totalGameContribute} 개\r\n          </div>\r\n          {displayContributedGame(user)}\r\n        </div>\r\n        \r\n        {/* {isUser &&\r\n        <div \r\n          id=\"makingGame\"\r\n          style={{display:\"none\"}}\r\n        >\r\n          만들던 게임\r\n          {displayMakingGame(currUserData)}\r\n        </div>\r\n        }\r\n        {isUser ? \r\n        <div>isuser</div>\r\n        :\r\n        <div>isnt user</div>\r\n        } */}\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        loading...\r\n      </div>)\r\n  }\r\n}\r\n\r\nexport default Profile\r\n","import axios from 'axios';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport { Input, message } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport './SingleReply.css';\r\n\r\nfunction SingleReply({comment, updateToggle_comment, gameId}) {\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  const user_id = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData._id;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editComment, setEditComment] = useState(\"\");\r\n  const [like, setLike] = useState(0);\r\n  const [update, setUpdate] = useState(true);\r\n\r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        setLike(response.data.result.length);\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onClick_removeComment = () => {\r\n    setIsEdit(false);\r\n    axios.post('/api/comment/remove-comment', {commentId: comment._id}).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 삭제되었습니다.');\r\n        updateToggle_comment();\r\n      } else {\r\n        message.error('댓글 삭제에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClick_toggleEdit = () => {\r\n    setIsEdit((state) => !state);\r\n    setEditComment(comment.content);\r\n  }\r\n\r\n  const onChange_editcomment = (event) => {\r\n    setEditComment(event.currentTarget.value);\r\n  }\r\n\r\n  const onClick_editComment = (e) => {\r\n    e.preventDefault();\r\n    axios.post('/api/comment/edit-comment', \r\n      {commentId: comment._id, comment: editComment}\r\n    ).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 수정되었습니다.');\r\n        updateToggle();\r\n      } else {\r\n        message.error('댓글 수정에 실패했습니다.');\r\n      }\r\n    })\r\n    setIsEdit((state) => !state);\r\n  }\r\n\r\n  const onClick_like = () => {\r\n    if(isAuth === false){\r\n      return\r\n    }\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/setlike', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        updateToggle();\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"container_box\" id={comment._id}>\r\n      <div className=\"comment_container\">\r\n        <img src={comment.writer.image} alt=\"img\" className=\"SingleReply__img\"/>\r\n        <div className=\"comment_contents\">\r\n          <div className=\"SingleReply__nickname\">{comment.writer.nickname}</div>\r\n          {isAuth &isEdit ? \r\n          <div className=\"edit_container\">\r\n          <textarea className=\"comment_input\" onChange={onChange_editcomment} value={editComment} />\r\n          <button className=\"comment__btn\" onClick={onClick_editComment}>수정</button>\r\n          </div>\r\n          :\r\n          <div className=\"SingleReply__content\">{comment.content}</div>\r\n          }\r\n          <div className=\"SingleReply__comment_info\">\r\n          <div onClick={onClick_like} className=\"comment_like\">좋아요 : {like}</div>\r\n            { comment.writer._id === user_id&&\r\n            <>\r\n            <div onClick={onClick_toggleEdit} className=\"comment_option\">{isEdit ? \"수정 취소\" : \"댓글 수정\"}</div>\r\n            <div onClick={onClick_removeComment} className=\"comment_option\">댓글 삭제</div>\r\n            </>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(SingleReply)","import { Input, message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { memo, useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport SingleReply from './SingleReply';\r\nimport './SingleComment.css';\r\n\r\n//Todo : 댓글이 밀린다,,,!\r\n\r\nfunction SingleComment({gameId, comment, updateToggle_comment}) {\r\n  const user = useSelector((state) => state.user);\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  const user_id = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData._id;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const reference = useRef();\r\n\r\n  const [update, setUpdate] = useState(true);\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n  const [Replys, setReplys] = useState([]);\r\n  const [writeReply, setWriteReply] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editComment, setEditComment] = useState(\"\");\r\n  const [showComment, setShowComment] = useState(false);\r\n  const [like, setLike] = useState(0);\r\n\r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    const comment_variable = {\r\n      gameId: gameId,\r\n      responseTo: comment._id.toString()\r\n    }\r\n    axios.post('/api/comment/get-reply', comment_variable).then(response => {\r\n      if (response.data.success) {\r\n        setReplys(response.data.result);\r\n      } else {\r\n        message.error('대댓글을 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        setLike(response.data.result.length);\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onClick_writeReply = () => {\r\n    setWriteReply((state) => !state);\r\n  }\r\n\r\n  const onClick_displayReply = () => {\r\n    if (reference.current.style.display === 'block') {\r\n      reference.current.style.display = 'none';\r\n      setShowComment(false);\r\n      setWriteReply(false);\r\n    } else {\r\n      reference.current.style.display = 'block'\r\n      setShowComment(true);\r\n    }\r\n  }\r\n  \r\n  const onChange_comment = (event) => {\r\n    setCommentContent(event.currentTarget.value);\r\n  }\r\n\r\n  const onSubmit_response = (event) => {\r\n    event.preventDefault();\r\n    if(commentContent === \"\"){\r\n      return;\r\n    }\r\n    const variables = {\r\n      content: commentContent,\r\n      writer: user.userData._id,\r\n      gameId: gameId,\r\n      responseTo: comment._id.toString()\r\n    };\r\n\r\n    axios.post('/api/comment/save-comment', variables).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글 감사합니다!');\r\n        updateToggle();\r\n        setCommentContent(\"\");\r\n        if (reference.current.style.display !== 'block') {\r\n          reference.current.style.display = 'block'\r\n          setShowComment(true);\r\n        } \r\n      } else {\r\n        message.error('댓글 저장에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClick_removeComment = () => {\r\n    setIsEdit(false);\r\n    axios.post('/api/comment/remove-comment', {commentId: comment._id}).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 삭제되었습니다.');\r\n        updateToggle_comment();\r\n      } else {\r\n        message.error('댓글 삭제에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClick_toggleEdit = () => {\r\n    setIsEdit((state) => !state);\r\n    setEditComment(comment.content);\r\n  }\r\n\r\n  const onChange_editcomment = (event) => {\r\n    setEditComment(event.currentTarget.value);\r\n  }\r\n\r\n  const onClick_editComment = (e) => {\r\n    e.preventDefault();\r\n    axios.post('/api/comment/edit-comment', \r\n      {commentId: comment._id, comment: editComment}\r\n    ).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 수정되었습니다.');\r\n        updateToggle_comment();\r\n      } else {\r\n        message.error('댓글 수정에 실패했습니다.');\r\n      }\r\n    })\r\n    setIsEdit((state) => !state);\r\n  }\r\n\r\n  const onClick_like = () => {\r\n    if(isAuth === false){\r\n      return\r\n    }\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/setlike', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        updateToggle();\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }\r\n\r\n  const mapReply = Replys.map((reply, index) => {\r\n    return (\r\n      <div key={reply._id} style={{marginLeft:'10px'}}>\r\n        {reply &&\r\n          <SingleReply\r\n            updateToggle_comment={updateToggle}\r\n            gameId={gameId} \r\n            comment={reply}/>\r\n        }\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"container_box\" id={comment._id}>\r\n      <div className=\"comment_container\">\r\n        <img src={comment.writer.image} alt=\"img\" className=\"img\"/>\r\n        <div className=\"comment_contents\">\r\n          <div className=\"nickname\">{comment.writer.nickname}</div>\r\n          {isEdit ? \r\n          <div className=\"edit_container\">\r\n            <textarea className=\"singleComment_input\" onChange={onChange_editcomment} value={editComment} />\r\n            <button className=\"comment__btn\" onClick={onClick_editComment}>수정</button>\r\n          </div>\r\n          :\r\n          <div className=\"content\">{comment.content}</div>\r\n          }\r\n          <div className=\"comment_info\">\r\n            <div onClick={onClick_like} className=\"comment_like\">좋아요 : {like}</div>\r\n            { Replys.length ? \r\n            <>\r\n            <div onClick={onClick_displayReply} className=\"comment_displayReplyToggle\">\r\n            { showComment ?\r\n              <div>\r\n                댓글 닫기\r\n              </div>\r\n              :\r\n              <div>\r\n                댓글 {Replys.length}개 보기\r\n              </div>\r\n            }\r\n            </div>\r\n            </>\r\n            :\r\n            <div></div>\r\n            }\r\n            <div onClick={onClick_writeReply} className=\"comment_option\">{writeReply? \"작성 취소\" :\"댓글 작성\"}</div>\r\n            { comment.writer._id === user_id&&\r\n            <>\r\n            <div onClick={onClick_toggleEdit} className=\"comment_option\">{isEdit ? \"수정 취소\" : \"댓글 수정\"}</div>\r\n            <div onClick={onClick_removeComment} className=\"comment_option\">댓글 삭제</div>\r\n            </>\r\n            }\r\n          </div>\r\n          {(isAuth & writeReply) ?\r\n          <form className=\"comment__form\">\r\n            <textarea\r\n              className=\"singleComment__textarea\"\r\n              onChange={onChange_comment}\r\n              value={commentContent}\r\n              placeholder=\"코멘트를 작성해 주세요.\"\r\n              />\r\n            <button className=\"comment__btn\" onClick={onSubmit_response}>댓글</button>\r\n          </form> \r\n          :\r\n          <div></div>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div ref={reference} className=\"reply_container\">\r\n        {mapReply}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(SingleComment)","import { message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { memo, useEffect, useState } from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport './Comment.css';\r\nimport SingleComment from './SingleComment';\r\n\r\nfunction Comment({gameId}) {\r\n  const user = useSelector((state) => state.user);\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  \r\n  const [update, setUpdate] = useState(true);\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const FETCHNIG_CNT = 8;\r\n  const [fetching, setFetching] = useState(false);\r\n  const [totalComment, setTotalComment] = useState([]);\r\n  const [contentNumber, setContentNumber] = useState(0);\r\n\r\n  const fetchNextData = async () => {\r\n    setFetching(true);\r\n    \r\n    setComments(totalComment.slice(0,contentNumber+FETCHNIG_CNT));\r\n    setContentNumber((state) => state+FETCHNIG_CNT);\r\n\r\n    setFetching(false);\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n    if (scrollTop + clientHeight*(3/2) >= scrollHeight && fetching === false) {\r\n      fetchNextData();\r\n    }\r\n   };\r\n\r\n   useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  });\r\n \r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.post('/api/comment/get-comment', {gameId: gameId}).then(response => {\r\n      if (response.data.success) {\r\n        setTotalComment(response.data.result);\r\n        setComments(response.data.result.slice(0,contentNumber));\r\n      } else {\r\n        message.error('댓글을 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onChange_comment = (event) => {\r\n    setCommentContent(event.currentTarget.value);\r\n  }\r\n\r\n  const onSubmit_comment = (event) => {\r\n    event.preventDefault();\r\n    if(commentContent === \"\"){\r\n      return;\r\n    }\r\n\r\n    const variables = {\r\n      content: commentContent,\r\n      writer: user.userData._id,\r\n      gameId: gameId,\r\n      responseTo : \"\"\r\n    };\r\n\r\n    axios.post('/api/comment/save-comment', variables).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글 감사합니다!');\r\n        updateToggle();\r\n        setCommentContent(\"\");\r\n      } else {\r\n        message.error('댓글 저장에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const mapComment = comments.map((comment, index) => {\r\n    return (\r\n      <div key={comment._id}>\r\n        {comment &&\r\n          <SingleComment \r\n            updateToggle_comment={updateToggle}\r\n            gameId={gameId} \r\n            comment={comment}/>\r\n        }\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"comment__container\">\r\n      <div className=\"comment__commentCnt\">\r\n        댓글 {totalComment.length}개\r\n      </div>\r\n      <hr/>\r\n      <br />\r\n      {isAuth &&\r\n      <form className=\"comment__form\">\r\n        <textarea\r\n          className=\"comment__textarea\"\r\n          onChange={onChange_comment}\r\n          value={commentContent}\r\n        />\r\n        <button className=\"comment__btn\" onClick={onSubmit_comment}>댓글</button>\r\n      </form>\r\n      }\r\n      {mapComment}\r\n      <br />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Comment)","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction TopRatingContributer(props) {\r\n  const contributerList = props.contributerList;\r\n  const totalSceneCnt = props.totalSceneCnt;\r\n  const creatorNickname = props.creatorNickname;\r\n\r\n  const topRateContributer_SceneCnt = contributerList[0]?.userSceneCnt;\r\n\r\n  const topContributer = contributerList.map((contributer, index) => {\r\n      const contributeRatio = Math.round(contributer.userSceneCnt/totalSceneCnt*100);\r\n      const fakeRatio = Math.round(contributer.userSceneCnt/topRateContributer_SceneCnt*100);\r\n      return (\r\n          <div \r\n              key={contributer.userId}\r\n              className=\"detailPage__contributer\"\r\n          >\r\n              <div className={`detailPage__contributer_rankNum ${index}`}>\r\n                  {index+1}위\r\n              </div>\r\n              <img \r\n                  className=\"detailPage__contributer_img\"   \r\n                  src={contributer.image} \r\n                  alt=\"image\"\r\n              />\r\n              <div className=\"detailPage__contributer_info\">\r\n                  <Link to={`/profile/${contributer.userId}`}\r\n                      className={\r\n                      creatorNickname === contributer.nickname ? \r\n                      \"detailPage__creater_nickname\" : \r\n                      \"detailPage__contributer_nickname\"\r\n                      }>\r\n                      {contributer.nickname.substr(0,11)}\r\n                  </Link>\r\n                  <div className=\"detailPage__contributer_graph\">\r\n                      <div \r\n                          className=\"detailPage__graph_wrapper\"\r\n                          style={{width: `${fakeRatio}%`}}\r\n                      >\r\n                          <div \r\n                              className=\"detailPage__graph\">\r\n                              {contributeRatio}%\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      )\r\n  })  \r\n  return (\r\n    <div>\r\n      {topContributer}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopRatingContributer\r\n","import { Button, message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./GameDetailPage.css\";\r\nimport { LOCAL_HOST } from \"../../Config\"\r\nimport Comment from '../Comment/Comment.js';\r\nimport { socket } from \"../../App\";\r\nimport { SVG } from \"../../svg/icon\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport TopRatingContributer from \"./TopRatingContributer\";\r\nimport \"./GameDetailPage.css\";\r\n\r\nconst config = require('../../../config/key')\r\n\r\nfunction GameDetailPage(props) {\r\n    const gameId = props.match.params.gameId;\r\n    const variable = { gameId: gameId };\r\n\r\n    const [gameDetail, setGameDetail] = useState([]);\r\n    const [sceneId, setSceneId] = useState([]);\r\n    const [isMaking, setIsMaking] = useState(false);\r\n    const [view, setView] = useState(0);\r\n    const [thumbsUp, setThumbsUp] = useState(0);\r\n    const [thumbsUpClicked, setThumbsUpClicked] = useState(false);\r\n    const [totalSceneCnt, setTotalSceneCnt] = useState(0);\r\n    const [ContributerCnt, setContributerCnt] = useState(0);\r\n    const [contributerList, setContributerList] = useState([]);\r\n    const [isPlayed, setIsPlayed] = useState(false);\r\n\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const playFirstScene = async (isFirst) => {\r\n        try {\r\n            let response;\r\n            if(isFirst){\r\n                response = await Axios.get(\"/api/users/playing-list/clear\");\r\n                // Not Yet Tested\r\n                if (user.userData.isAuth && isMaking){\r\n                    socket.emit(\"empty_num_increase\", {user_id: user.userData._id.toString(), scene_id: response.data.prevOfLastScene.toString()});\r\n                }\r\n            }\r\n            props.history.replace({\r\n                pathname: (!isFirst && isMaking) ? `/scene/make` : `/gameplay`,\r\n                state: {\r\n                    sceneId: isFirst ? response.data.teleportSceneId : sceneId,\r\n                    gameId: gameId,\r\n                }\r\n            })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.post(\"/api/game/getgamedetail\", variable).then((response) => {\r\n            if (response.data.success) {\r\n                setGameDetail(response.data.gameDetail);\r\n            } else {\r\n                message.error(\"게임 정보를 로딩하는데 실패했습니다.\");\r\n            }\r\n        });\r\n        Axios.post(\"/api/game/rank\", variable).then((response) => {\r\n            if (response.data.success) {\r\n                setContributerList(response.data.topRank);\r\n                setContributerCnt(response.data.contributerCnt);\r\n                setTotalSceneCnt(response.data.totalSceneCnt);\r\n            } else {\r\n                message.error(\"게임 정보를 로딩하는데 실패했습니다.\");\r\n            }\r\n        });\r\n        Axios.get(`/api/game/gamestart/${gameId}`).then((response) => {\r\n            if (response.data.success) {\r\n                setSceneId(response.data.sceneId);\r\n                setIsMaking(response.data.isMaking);\r\n            } else {\r\n                message.error(\"로그인 해주세요.\");\r\n            }\r\n        });\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user && user.userData) {\r\n            const variable = {\r\n                userId: user.userData._id,\r\n                objectId: gameId\r\n            }\r\n            Axios.post(\"/api/view/\", variable).then((response) => {\r\n                if (response.data.success) {\r\n                    setView(response.data.view);\r\n                }\r\n            })\r\n        }\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        if (user && user.userData) {\r\n            const variable = {\r\n                objectId: gameId,\r\n                userId: user.userData._id,\r\n            }\r\n            Axios.post(\"/api/thumbsup/count\", variable).then((response) => {\r\n                if (response.data.success) {\r\n                    setThumbsUp(response.data.thumbsup);\r\n                    setThumbsUpClicked(response.data.isClicked);\r\n                }\r\n            })\r\n            Axios.post(\"/api/users/game-visit\", {userId: user.userData._id}).then((response) => {\r\n                if (response.data.success) {\r\n                    const sceneIdLength = response.data?.gamePlaying?.sceneIdList?.length;\r\n                    if(sceneIdLength > 1)\r\n                        setIsPlayed(true);\r\n                }\r\n            })\r\n        }\r\n    }, [user])\r\n\r\n    function onClick_thumbsUp() {\r\n        if (user.userData?.isAuth) {\r\n            // ((state) => state+1);\r\n            const variable = {\r\n                userId: user.userData._id,\r\n                objectId: gameId\r\n            }\r\n            Axios.post(\"/api/thumbsup/\", variable).then((response) => {\r\n                if (response.data.success) {\r\n                    setThumbsUp(response.data.thumbsup);\r\n                    setThumbsUpClicked(response.data.isClicked);\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            message.error(\"로그인이 필요합니다.\")\r\n        }\r\n    }\r\n    if(totalSceneCnt){\r\n        \r\n        return (\r\n            <div className=\"detailPage__container\">\r\n    \r\n                {/* 이미지 불러오는게 늦음 디버깅 필요 */}\r\n                <div className=\"detailPage__thumbnail_container\">\r\n                    <img\r\n                        className=\"detailPage__thumbnail\"\r\n                        src={\r\n                            process.env.NODE_ENV === 'production' ?\r\n                                gameDetail.thumbnail\r\n                                :\r\n                                `${config.SERVER}/${gameDetail?.thumbnail}`}\r\n                        alt=\"thumbnail\"\r\n                    />\r\n                    <div className=\"detailPage__contributer_container\">\r\n                        <div className=\"detailPage__contributer_title\"> {ContributerCnt}명이 함께하는 이야기</div>\r\n                        <TopRatingContributer\r\n                            contributerList={contributerList}\r\n                            creatorNickname={gameDetail?.creator?.nickname}\r\n                            totalSceneCnt={totalSceneCnt}\r\n                        />\r\n                    </div>\r\n                    <div className=\"detailPage__gamePlay\">\r\n                        <div className=\"detailPage__gamePlay_container\">\r\n                            <div className=\"detailPage__gamePlay_text\">\r\n                                현재 스토리\r\n                            </div>\r\n                            <div className=\"detailPage__gamePlay_sceneCntContainer\">\r\n                                <div className=\"detailPage__gamePlay_sceneCnt\">\r\n                                    {totalSceneCnt}\r\n                                </div>\r\n                                <div className=\"detailPage__gamePlay_cntText\">\r\n                                    개\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n    \r\n                        {/* <Link\r\n                            className=\"detailPage__gamePlay_link\"\r\n                            style={{ color: \"#f05454\" }}\r\n                            to={\r\n                                {\r\n                                    pathname: isMaking ? `/scene/make` : `/gameplay`,\r\n                                    state: {\r\n                                        gameId: gameId,\r\n                                        sceneId: sceneId\r\n                                    },\r\n                                }\r\n                            }>\r\n                            <div className=\"icon\">\r\n                                <SVG\r\n                                    src=\"playIcon_1\"\r\n                                    width=\"30\"\r\n                                    height=\"30\"\r\n                                    color=\"#FFF\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"text\">시작하기</div>\r\n                        </Link> */}\r\n                        {/* 게임 시작하기 or 이어 만들기 */}\r\n                        <div \r\n                            className=\"detailPage__gamePlay_link\"\r\n                            onClick={() => playFirstScene(false)}\r\n                        >\r\n                            <div className=\"icon\">\r\n                                <SVG\r\n                                    src=\"playIcon_1\"\r\n                                    width=\"30\"\r\n                                    height=\"30\"\r\n                                    color=\"#FFF\"\r\n                                />\r\n                            </div>\r\n                            {isPlayed ? \"이어하기\" : \"시작하기\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"detailPage__gradation\"></div>\r\n                    <div className=\"detailPage__UPTitle\">\r\n                        {gameDetail?.title}\r\n                    </div>\r\n                    <div className=\"detailPage__interaction\">\r\n                        <div\r\n                            onClick={onClick_thumbsUp}\r\n                            className=\"detailPage__like\"\r\n                        >\r\n                            {thumbsUp}\r\n                            {thumbsUpClicked ?\r\n                                <FontAwesomeIcon style={{ color: \"red\", marginLeft: \"10px\" }} icon={faHeart} />\r\n                                :\r\n                                <FontAwesomeIcon icon={faHeart} style={{ marginLeft: \"10px\" }} />\r\n                            }\r\n                        </div>\r\n                        <div className=\"detailPage__view\">\r\n                            {view}\r\n                            <FontAwesomeIcon icon={faEye} style={{ marginLeft: \"10px\" }} />\r\n                        </div>\r\n                    </div>\r\n                    {isPlayed &&\r\n                        <div \r\n                            className=\"detailPage__gamePlayFromStart_link\"\r\n                            onClick={() => playFirstScene(true)}\r\n                        >\r\n                            처음부터 하기\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"detailPage__info_container\">\r\n                    <div className=\"detailPage__title\">\r\n                        {/* {gameDetail.title} */}\r\n    \r\n                    </div>\r\n                    <div className=\"detailPage__genre\">\r\n                        장르:\r\n                        <div className=\"bold_text\">\r\n                            {gameDetail.category}\r\n                        </div>\r\n                        작가:\r\n                        <div className=\"bold_text\">\r\n                            {gameDetail?.creator?.nickname.substr(0, 20)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"detailPage__description\">\r\n                        {gameDetail.description}\r\n                    </div>\r\n    \r\n                    <Comment gameId={gameId} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div className=\"loader_container\">\r\n                <div className=\"loader\">Loading...</div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default GameDetailPage;\r\n","import React, { useState } from \"react\";\r\nimport { Typography, Button, Form, message, Input, Icon } from \"antd\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./GameUploadPage.css\";\r\nimport {LOCAL_HOST} from\"../../Config\"\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst PrivateOptions = [\r\n    { value: 0, label: \"Private\" },\r\n    { value: 1, label: \"Public\" },\r\n];\r\n\r\nconst CategoryOptions = [\r\n    { value: 0, label: \"살아남기\" },\r\n    { value: 1, label: \"로맨스\" },\r\n    { value: 2, label: \"스토리\" },\r\n    { value: 3, label: \"추리\" },\r\n    { value: 4, label: \"병맛\" },\r\n];\r\n\r\nconst RatioOptions = [\r\n    { value: `${9/16}`, label: \"16:9\"}, \r\n    { value: `${16/9}`, label: \"9:16(스마트폰)\"}, \r\n]\r\n\r\nfunction GameUploadPage(props) {\r\n    const user = useSelector((state) => state.user);\r\n    const [GameTitle, setGameTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [isPrivate, setIsPrivate] = useState(0);\r\n    const [category, setCategory] = useState(\"살아남기\");\r\n    const [ratio, setRatio] = useState(true);\r\n\r\n    const [filePath, setFilePath] = useState(\"\");\r\n    // const [duration, setDuration] = useState(\"\")\r\n    // const [thumbnailPath, setThumbnailPath] = useState(\"\")\r\n\r\n    const onTitleChange = (event) => {\r\n        setGameTitle(event.currentTarget.value);\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescription(event.currentTarget.value);\r\n    };\r\n\r\n    const onPrivateChange = (event) => {\r\n        setIsPrivate(event.currentTarget.value);\r\n    };\r\n\r\n    const onCartegoryChange = (event) => {\r\n        let cat_idx = event.currentTarget.value;\r\n        setCategory(event.currentTarget[cat_idx].text);\r\n    };\r\n\r\n    const onRatioChange = (event) => {\r\n        setRatio(state => !state);\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        if (!files[0]) {\r\n            alert(\"손상된 파일입니다.\");\r\n            return;\r\n        }\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { \"content-type\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n        };\r\n        formData.append(\"file\", files[0]);\r\n\r\n        Axios.post(\"/api/game/uploadfiles\", formData, config).then(\r\n            (response) => {\r\n                if (response.data.success) {\r\n                    setFilePath(response.data.url);\r\n                } else {\r\n                    alert(\"업로드 실패\");\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (GameTitle === \"\" || description === \"\" || filePath === \"\") {\r\n            alert(\"모든 정보를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        let floatRatio;\r\n        if (ratio) {\r\n            floatRatio = 9/16;\r\n        } else {\r\n            floatRatio = 16/9;\r\n        }\r\n        const game_variables = {\r\n            creator: user.userData._id,\r\n            title: GameTitle,\r\n            description: description,\r\n            thumbnail: filePath,\r\n            privacy: isPrivate,\r\n            category: category,\r\n            ratio: floatRatio,\r\n            writer: [user.userData._id],\r\n            character: [],\r\n            background: [],\r\n            bgm: [],\r\n            sound: [],\r\n        };\r\n        \r\n        Axios.post(\"/api/game/uploadgame\", game_variables).then((response) => {\r\n            if (response.data.success) {\r\n                message.success(\r\n                    \"첫 Scene을 생성해주세요. 오른쪽의 +버튼을 활용해 이미지들을 추가할 수 있습니다.\"\r\n                );\r\n                setTimeout(() => {\r\n                    props.history.replace(\r\n                        `/game/upload/${response.data.game._id}`\r\n                    );\r\n                }, 1000);\r\n            } else {\r\n                alert(\"game제작 실패\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n            <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n                <Title level={2}>Upload Game</Title>\r\n            </div>\r\n            <Form onSubmit={onSubmit}>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"300px\",\r\n                                    height: \"240px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    {/* thunb nail */}\r\n                    {filePath && (\r\n                        <div>\r\n                            <img\r\n                                className=\"thumbnail__img\"\r\n                                src={`http://${LOCAL_HOST}:5000/${filePath}`}\r\n                                alt=\"thumbnail\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <label>Title</label>\r\n                <Input onChange={onTitleChange} value={GameTitle} />\r\n                <br />\r\n                <br />\r\n                <label>Description</label>\r\n                <TextArea onChange={onDescriptionChange} value={description} />\r\n                <br />\r\n                <br />\r\n                <select onChange={onPrivateChange}>\r\n                    {PrivateOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <select onChange={onCartegoryChange}>\r\n                    {CategoryOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <label><input type=\"radio\" name=\"ratio\" checked={ratio} onChange={onRatioChange}/>컴퓨터</label>\r\n                <br />\r\n                <label><input type=\"radio\" name=\"ratio\" checked={!ratio} onChange={onRatioChange}/>스마트폰</label>\r\n                    \r\n                {/* <select onChange={onRatioChange}>\r\n                    {RatioOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select> */}\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Next Step\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameUploadPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row, Typography, Button, Form, Icon, message } from \"antd\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Axios from \"axios\";\r\nimport \"./GameBuildUpPage\";\r\nimport { LOCAL_HOST } from \"../../Config\"\r\n\r\nconst { Title } = Typography;\r\n\r\nconst config = require('../../../config/key')\r\n\r\nconst extension = {\r\n    image: [\".jpg\", \".png\", \".jpeg\", \".gif\"],\r\n    music: [\".mp3\", \".wav\", \".wmv\", \".wma\", \".flac\"],\r\n};\r\n\r\nfunction GameBuildUpPage(props) {\r\n    const [filePath, setFilePath] = useState(\"\");\r\n    const [fileState, setFileState] = useState(\"\");\r\n    const [cur_game, setGame] = useState([]);\r\n    const [characterCards, setCharacterCards] = useState([]);\r\n    const [backgroundCards, setBackgroundCards] = useState([]);\r\n    const [bgmCards, setBgmCards] = useState([]);\r\n    const [soundCards, setSoundCards] = useState([]);\r\n    const gameId = props.match.params.gameId;\r\n\r\n    const game_form = {\r\n        gameId: gameId,\r\n    };\r\n\r\n    useEffect(() => {\r\n        Axios.post(\"/api/game/getgamedetail\", game_form).then((response) => {\r\n            if (response.data.success) {\r\n                setGame(response.data.gameDetail);\r\n            } else {\r\n                message.error(\"game load에 실패했습니다.\");\r\n            }\r\n        });\r\n    }, [filePath]);\r\n\r\n    useEffect(() => {\r\n        //character\r\n        if (cur_game.character) {\r\n            const tempCharacterCards = cur_game.character.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"50px\", height: \"50px\" }}\r\n                                src={`${cur_game.character[index].image}`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setCharacterCards(tempCharacterCards);\r\n        }\r\n        //background\r\n        if (cur_game.background) {\r\n            const backgroundCards = cur_game.background.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"50px\", height: \"50px\" }}\r\n                                src={`${cur_game.background[index].image}`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setBackgroundCards(backgroundCards);\r\n        }\r\n        //bgm\r\n        if (cur_game.bgm) {\r\n            const bgmCards = cur_game.bgm.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"20px\", height: \"20px\" }}\r\n                                src={`${config.STORAGE}/music_icon.jpg`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                            {cur_game.bgm[index].name}\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setBgmCards(bgmCards);\r\n        }\r\n        //sound\r\n        if (cur_game.sound) {\r\n            const soundCards = cur_game.sound.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"20px\", height: \"20px\" }}\r\n                                src={`${config.STORAGE}/music_icon.jpg`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                            {cur_game.sound[index].name}\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setSoundCards(soundCards);\r\n        }\r\n    }, [cur_game]);\r\n\r\n    const onDrop = (files) => {\r\n        //check is_file ok\r\n        for (let i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n\r\n            let dotIdx = files[i].name.lastIndexOf(\".\");\r\n            if (dotIdx === -1) {\r\n                message.error(files[i].name + \"은 확장자가 없는 파일입니다.\");\r\n                return;\r\n            }\r\n\r\n            let cur_extension = files[i].name.substr(dotIdx, 10000);\r\n            if (\r\n                //image check\r\n                (fileState === 1 || fileState === 2) &&\r\n                extension.image.indexOf(cur_extension) == -1\r\n            ) {\r\n                message.error(\r\n                    files[i].name + \"은 지원하지 않는 이미지 확장자 파일입니다.\"\r\n                );\r\n                return;\r\n            }\r\n\r\n            if (\r\n                //sound check\r\n                (fileState === 3 || fileState === 4) &&\r\n                extension.music.indexOf(cur_extension) == -1\r\n            ) {\r\n                message.error(\r\n                    files[i].name + \"은 지원하지 않는 음원 확장자 파일입니다.\"\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            let formData = new FormData();\r\n            const header = {\r\n                header: { \"content-type\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n            };\r\n            formData.append(\"file\", files[i]);\r\n            let file_name = files[i].name;\r\n            Axios.post(\"/api/game/uploadfile\", formData, header).then(\r\n                (response) => {\r\n                    if (response.data.success) {\r\n                        setFilePath(response.data.url);\r\n\r\n                        switch (fileState) {\r\n                            case 1:\r\n                                const characterForm = {\r\n                                    gameId: gameId,\r\n                                    character: {\r\n                                        name: file_name,\r\n                                        image: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putCharacterImg\",\r\n                                    characterForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"캐릭터 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            case 2: //background\r\n                                const backgroundForm = {\r\n                                    gameId: gameId,\r\n                                    background: {\r\n                                        name: file_name,\r\n                                        image: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putBackgroundImg\",\r\n                                    backgroundForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"배경 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            case 3:\r\n                                const bgmForm = {\r\n                                    gameId: gameId,\r\n                                    bgm: {\r\n                                        name: file_name,\r\n                                        music: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\"/api/game/putBgm\", bgmForm).then(\r\n                                    (response) => {\r\n                                        if (response.data.success) {\r\n                                            setFilePath(response.data.url);\r\n                                        } else {\r\n                                            message.error(\"배경음 업데이트 실패\");\r\n                                        }\r\n                                    }\r\n                                );\r\n                                return;\r\n\r\n                            case 4:\r\n                                const soundForm = {\r\n                                    gameId: gameId,\r\n                                    sound: {\r\n                                        name: file_name,\r\n                                        music: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putSound\",\r\n                                    soundForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"효과음 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            default:\r\n                                message.error(\"정의되지 않은 업로드 버튼입니다.\");\r\n                                return;\r\n                        }\r\n                    } else {\r\n                        message.error(\"업로드 실패\");\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.history.push(`/scene/make/`);\r\n    };\r\n\r\n    const onCharacter = () => {\r\n        setFileState(1);\r\n    };\r\n    const onBackground = () => {\r\n        setFileState(2);\r\n    };\r\n    const onBgm = () => {\r\n        setFileState(3);\r\n    };\r\n    const onSound = () => {\r\n        setFileState(4);\r\n    };\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 캐릭터를 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"flex-start\" }}\r\n                    onClick={onCharacter}\r\n                >\r\n                    {/* Set click handler */}\r\n                    {/* <button onClick={onBackground}> </button> */}\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{characterCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 배경을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    // style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    style={{ display: \"flex\", justifyContent: \"flex-start\" }}\r\n                    onClick={onBackground}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{backgroundCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 음악을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    onClick={onBgm}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{bgmCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 효과음을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    onClick={onSound}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{soundCards}</Row>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Go to Last Step!!\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameBuildUpPage;\r\n","import \"./GameCharacterBlock.css\";\r\nimport React from \"react\";\r\nconst GameCharacterBlock = (props) => {\r\n  const { characterList } = props;\r\n  const characterblocks = characterList?.map((charSchema, index) => {\r\n    return (\r\n      <div key={index}>\r\n        <div\r\n          className=\"CharacterBlock\"\r\n          style={{ left: `${charSchema.posX}%` }}\r\n        >\r\n          <div\r\n            className=\"character__container\"\r\n            style={{\r\n              height: `${charSchema.size}%`,\r\n              top: `${charSchema.posY}%`\r\n            }}\r\n          >\r\n            <img\r\n              className=\"characterImg\"\r\n              src={charSchema.image}\r\n              alt=\"img\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  return <div className=\"CharacterBlocks\" >{characterblocks}</div>;\r\n};\r\n\r\nexport default GameCharacterBlock;","import { useEffect, useRef } from \"react\";\r\n\r\nfunction useKey(key, cb) {\r\n    const callbackRef = useRef(cb);\r\n\r\n    useEffect(() => {\r\n        callbackRef.current = cb;\r\n    });\r\n\r\n    useEffect(() => {\r\n        function handle(event) {\r\n            if (event.code === key && !event.shiftKey) {\r\n                callbackRef.current(event);\r\n            }\r\n        }\r\n        document.addEventListener(\"keypress\", handle);\r\n        return () => document.removeEventListener(\"keypress\", handle);\r\n    }, [key]);\r\n}\r\n\r\nexport default useKey;","import React, { memo } from \"react\";\r\nimport { Modal, Form, Input } from \"antd\";\r\nimport useKey from \"../../functions/useKey\";\r\n\r\nconst ModalFormComponent = ({ visible, onCancel, onCreate, setSceneTitle, remainTime }) => {\r\n  function handleEnter() {\r\n    onCreate();\r\n  }\r\n  const onSceneTitleChange = (event) =>{\r\n    setSceneTitle(event.currentTarget.value.substr(0, 30));\r\n  }\r\n  useKey(\"Enter\", handleEnter);\r\n\r\n  if (visible) {\r\n    return (\r\n      <Modal\r\n        visible={true}\r\n        title={`선택지 내용을 입력하세요 (${remainTime})`}\r\n        okText=\"제작 시작\"\r\n        cancelText=\"취소\"\r\n        onCancel={onCancel}\r\n        onOk={onCreate}\r\n        getContainer='.gamePlay__container'\r\n        centered={true}\r\n        closable={false}\r\n      >\r\n        <Form layout=\"vertical\">\r\n          <Form.Item label=\"Title\" name=\"title\" rules={[\r\n            {\r\n              required: true,\r\n              message: \"제목을 입력해주세요!\",\r\n            },\r\n          ]}>\r\n            <Input onChange={onSceneTitleChange} ref={(input) => input && input.focus()} />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst ModalForm = Form.create({ name: \"modal_form\" })(ModalFormComponent);\r\n\r\nexport default memo(ModalForm);\r\n","import { LOADINGPAGE_GAMEPLAY, PAUSE_GAMEPLAY } from \"./types\";\r\n\r\nexport function gameLoadingPage(loadingType) {\r\n  return {\r\n    type: LOADINGPAGE_GAMEPLAY,\r\n    payload: loadingType,\r\n  };\r\n}\r\n\r\nexport function gamePause(isPause) {\r\n  return {\r\n    type: PAUSE_GAMEPLAY,\r\n    payload: isPause,\r\n  };\r\n}\r\n","import React, { useState, useEffect, useCallback, useRef, memo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Button, message } from \"antd\";\r\nimport ModalForm from \"./InputModalForm\";\r\nimport { useHistory } from \"react-router\";\r\nimport { socket } from \"../../App\";\r\nimport axios from \"axios\";\r\nimport { gamePause } from \"../../../_actions/gamePlay_actions\";\r\nimport { SecurityScanTwoTone } from \"@ant-design/icons\";\r\n\r\nconst InputModal = ({ scene_id, scene_depth, game_id, scene_next_list, theme }) => {\r\n  const dispatch = useDispatch()\r\n  let history = useHistory();\r\n  const user = useSelector((state) => state.user);\r\n  const emptyNum = useSelector((state) => state.sync.emptyNum);\r\n  const [visible, setVisible] = useState(false);\r\n  const [sceneTitle, setSceneTitle] = useState(\"\");\r\n  const [remainTime, setRemainTime] = useState(0);\r\n  // const [decreaseTimer, setDecreaseTimer] = useState(null);\r\n  const [validated, setValidated] = useState(1)\r\n\r\n  const decreaseTimer = useRef(undefined)\r\n  const createFlag = useRef(false)\r\n\r\n  const tick = 30;\r\n\r\n\r\n  // const user_id = user.userData.isAuth ? user.userData._id.toString() : \"\";\r\n  const handleCreate = async () => {\r\n    clearTimeout(decreaseTimer.current);\r\n    if (createFlag.current || !visible) {\r\n      return;\r\n    }\r\n\r\n    createFlag.current = true;\r\n    const data = {\r\n      gameId: game_id,\r\n      prevSceneId: scene_id,\r\n      isFirst: 0,\r\n      sceneDepth: scene_depth + 1,\r\n      title: sceneTitle,\r\n    };\r\n    const res = await axios.post(\"/api/scene/create\", data);\r\n    //! socket 보내서 서버에서 scene Cache x exp 업데이트\r\n\r\n    socket.emit(\"created_choice\", { sceneId: scene_id, userId: user.userData._id, exp: res.data.exp })\r\n    // tmp scene create\r\n\r\n    setVisible(false);\r\n\r\n    //! 껍데기 넣을 때, 서버에서 exp 같이 넣기 (별개로 or 같이 해도됨 시간 동기화가 되는 좋은 방법이 있다면)\r\n    history.replace({\r\n      pathname: `/scene/make`,\r\n      state: {\r\n        gameId: game_id,\r\n        sceneId: res.data.sceneId\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  let decTimer;\r\n\r\n  const onClickHandler = () => {\r\n    if (user.userData.isAuth) {\r\n      dispatch(gamePause(true));\r\n      clearTimeout(decreaseTimer.current);\r\n      let tick = 30;\r\n\r\n      setRemainTime(tick);\r\n      decTimer = setInterval(() => {\r\n        tick--;\r\n\r\n        if (tick === 0) {\r\n          clearInterval(decTimer);\r\n          cancelHandler();\r\n          return;\r\n        }\r\n\r\n        setRemainTime(tick);\r\n      }, 970);\r\n      decreaseTimer.current = decTimer\r\n\r\n      socket.emit(\"empty_num_decrease\", { scene_id, user_id: user.userData._id});\r\n\r\n      setVisible(true);\r\n    }\r\n    else {\r\n      message.error(\"로그인이 필요합니다.\")\r\n    }\r\n  }\r\n\r\n  const cancelHandler = () => {\r\n    socket.emit(\"empty_num_increase\", { scene_id, user_id : user.userData._id });\r\n    clearTimeout(decreaseTimer.current);\r\n\r\n    setVisible(false);\r\n    dispatch(gamePause(false));\r\n  }\r\n\r\n  const createHandler = () => {\r\n    return handleCreate();\r\n  }\r\n\r\n  const [dino, setDino] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // socket.off(\"validated\");\r\n    // socket.on(\"validated\", (data) => {\r\n    //   console.log(\"SET VALIDATED\", scene_id)\r\n    //   // setValidated(validated * -1)\r\n    // })\r\n\r\n    socket.off(\"decrease_failed\");\r\n    socket.on(\"decrease_failed\", () => {\r\n\r\n      setVisible(false);\r\n      setDino(0);\r\n      setDino(1);\r\n    })\r\n\r\n    socket.emit(\"validate_empty_num\", { scene_id })\r\n  }, [scene_id])\r\n\r\n  useEffect(() => {\r\n    if (dino) {\r\n      clearTimeout(decreaseTimer.current);\r\n    }\r\n  }, [dino]);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        (scene_next_list?.length < 4) &&\r\n        <>\r\n          <div\r\n            className={`text_line_choice ${theme}`}\r\n            onClick={emptyNum > 0 ? onClickHandler : null}\r\n          >\r\n            선택지 추가 (+{emptyNum})\r\n            </div>\r\n        </>\r\n      }\r\n      <ModalForm\r\n        visible={visible}\r\n        onCancel={cancelHandler}\r\n        onCreate={createHandler}\r\n        remainTime={remainTime}\r\n        setSceneTitle={setSceneTitle}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(InputModal);\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nfunction useMouse(key, cb) {\r\n    const callbackRef = useRef(cb);\r\n\r\n    useEffect(() => {\r\n        callbackRef.current = cb;\r\n    });\r\n\r\n    useEffect(() => {\r\n        function handle(event) {\r\n            callbackRef.current(event);\r\n        }\r\n        document.addEventListener(key, handle);\r\n        return () => document.removeEventListener(key, handle);\r\n    }, []);\r\n}\r\nexport default useMouse;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useKey from \"../../functions/useKey\";\r\nimport { useWindupString } from \"windups\";\r\nimport useMouse from \"../../functions/useMouse\";\r\nimport { LOCAL_HOST } from \"../../Config\";\r\nconst config = require(\"../../../config/key\")\r\n\r\n\r\nconst voice = new Audio(`${config.STORAGE}/uploads/TYPING.mp3`);\r\nvoice.volume = 0.8\r\nfunction TextAnimation({ cut_script, setIsTyping }) {\r\n    const [flag, setFlag] = useState(false);\r\n    let i = 0;\r\n    const [text, { skip }] = useWindupString(\r\n        cut_script,\r\n        {\r\n            pace: () => 100,\r\n            onFinished: () => {\r\n                if(voice)\r\n                    voice.pause()\r\n                setFlag(true)\r\n            },\r\n            onChar: () => {\r\n                if ((i == 0 || cut_script[i] === ' ' || cut_script[i] === '.')) {\r\n                    if(voice)\r\n                        voice.pause()\r\n                } else {\r\n                    if(voice)\r\n                        voice.play()\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n    );\r\n\r\n    useKey(\"Enter\", handleEnter);\r\n    useKey(\"Space\", handleEnter);\r\n    useMouse(\"mouseup\", handleEnter);\r\n    function handleEnter(event) {\r\n        skip()\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setIsTyping(false)\r\n        }\r\n    }, [flag])\r\n\r\n    if (cut_script)\r\n        return <div>{text}</div>\r\n    else\r\n        return <div></div>\r\n}\r\n\r\n\r\nexport default TextAnimation;","\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { Button, Modal } from \"antd\";\r\n\r\nimport \"../SceneEndingPage/SceneEndingPage.css\";\r\n\r\n\r\n\r\nconst FirstSceneTeleport = ({ gameId, setScene }) => {\r\n    const history = useHistory();\r\n    const user = useSelector((state) => state.user);\r\n    const [isWarningVisible, setIsWarningVisible] = useState(false)\r\n\r\n    const playingListClear = () => {\r\n\r\n        if (user) {\r\n            //! auth를 통해서 쿠키에서 유저정보 갖고올 수 있다.\r\n            Axios.get(\"/api/users/playing-list/clear\").\r\n                then(response => {\r\n                    if (response.data.success) {\r\n                        setIsWarningVisible(false)\r\n                        setScene({})\r\n                        history.push({\r\n                            pathname: `/gameplay`,\r\n                            state: {\r\n                                sceneId: response.data.teleportSceneId,\r\n                                gameId: gameId,\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        setIsWarningVisible(false)\r\n\r\n                        alert(\"오류가 발생했습니다.\")\r\n                    }\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n    const cancelModal = () => {\r\n        setIsWarningVisible(false)\r\n    }\r\n    const openModal = () => {\r\n        setIsWarningVisible(true)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                onClick={openModal}\r\n                className=\"ending_button\"\r\n            >처음으로 돌아가기\r\n            </Button>\r\n            <Modal\r\n                title=\"⚠ 주의 ⚠\"\r\n                visible={isWarningVisible}\r\n                maskClosable={false}\r\n                closable={false}\r\n                centered={true}\r\n                footer={\r\n                    <React.Fragment>\r\n                        <Button key=\"ok\" type=\"primary\" onClick={playingListClear}>\r\n                            확인\r\n                        </Button>\r\n                        <Button key=\"cancel\" onClick={cancelModal}>\r\n                            취소\r\n                        </Button>\r\n                    </React.Fragment>\r\n                }\r\n                getContainer='.gamePlay__container'\r\n                centered={true}\r\n            >\r\n\r\n                <p>첫 화면으로 돌아갑니다.</p>\r\n                <p>이어하기로 돌아올 수 없습니다.</p>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default FirstSceneTeleport;\r\n","\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { Button } from \"antd\";\r\n\r\n\r\nconst PrevSceneTeleport = ({ gameId,setScene }) => {\r\n    const history = useHistory();\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const playingListPop = () => {\r\n\r\n        if (user) {\r\n            //! auth를 통해서 쿠키에서 유저정보 갖고올 수 있다.\r\n            Axios.get(\"/api/users/playing-list/pop\").\r\n                then(response => {\r\n                    if (response.data.success) {\r\n                        setScene({})\r\n                        history.push({\r\n                            pathname: `/gameplay`,\r\n                            state: {\r\n                                sceneId: response.data.teleportSceneId,\r\n                                gameId: gameId,\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        alert(\"오류가 발생했습니다.\")\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            alert(\"로그인 시 지원되는 기능입니다.\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Button\r\n                onClick={playingListPop}\r\n                className=\"ending_button\"\r\n        >이전으로 돌아가기\r\n        </Button>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PrevSceneTeleport;\r\n","import \"./SceneEndingPage.css\";\r\nimport React, { useState } from \"react\";\r\nimport FirstSceneTeleport from \"../SceneTeleport/FirstSceneTeleport\";\r\nimport PrevSceneTeleport from \"../SceneTeleport/PrevSceneTeleport\";\r\n\r\n\r\nconst SceneEndingPage = ({ gameId, setScene }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"ending_box\">\r\n            <div>\r\n                The End\r\n            </div>\r\n            <div className=\"ending_button_container\">\r\n                {/* <p>n개의 엔딩 중 1개를 발견하셨습니다. </p> */}\r\n                {/* <p>이 씬으로 온 당신은 1 n</p> */}\r\n\r\n                {/* <p>걸어왔던 길</p> -- 히스토리 맵 그 이상의.. 대사가 곁들여지고 멋진..*/}\r\n                <React.Fragment>\r\n\r\n                    <FirstSceneTeleport\r\n                        key={0}\r\n                        gameId={gameId}\r\n                        setScene={setScene}\r\n                    />\r\n                    <PrevSceneTeleport\r\n                        key={1}\r\n                        gameId={gameId}\r\n                        setScene={setScene}\r\n                    />\r\n                </React.Fragment>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SceneEndingPage;\r\n","import \"./TextBlock.css\";\r\nimport React, { useReducer, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\nimport InputModal from \"../Modal/InputModal\";\r\nimport TextAnimation from './TextAnimation'\r\nimport SceneEndingPage from \"../Scene/SceneEndingPage/SceneEndingPage\";\r\n\r\n// 일단 4 나중에 어떻게 할지 다시 결정..\r\nconst CHOICE_NUM = 4;\r\n\r\nexport const TextBlock = (props) => {\r\n    let { cut_name, cut_script, setIsTyping, isTyping, theme } = props;\r\n\r\n    theme = 'atorney';\r\n\r\n    return <>\r\n        {\r\n            cut_script ?\r\n                <div className={`text_window ${theme}`} >\r\n                    <div className={`text_container ${theme}`} >\r\n                        <div className={`name_block ${theme}`} >\r\n                            {cut_name}\r\n                        </div>\r\n                        <div className={`text_block ${theme}`} >\r\n                            <div className={`text_line ${theme}`} > {\r\n                                isTyping ? < TextAnimation\r\n                                    cut_script={cut_script}\r\n                                    setIsTyping={setIsTyping}\r\n                                /> : cut_script\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className={`text_line ${theme}`} > {\r\n                    isTyping ? < TextAnimation\r\n                        cut_script={\" \"}\r\n                        setIsTyping={setIsTyping}\r\n                    /> : cut_script\r\n                }\r\n                </div>\r\n        }\r\n    </>\r\n};\r\n \r\n// 선택지 display\r\nexport const TextBlockChoice = (props) => {\r\n\r\n    // 뭔가 한다..\r\n\r\n    let {\r\n        game_id,\r\n        cut_name,\r\n        cut_script,\r\n        scene_next_list,\r\n        scene_id,\r\n        scene_depth,\r\n        setIsTyping,\r\n        isTyping,\r\n        isEnding,\r\n        isLastMotion,\r\n        theme,\r\n        setScene\r\n    } = props;\r\n\r\n    theme = 'atorney';\r\n\r\n    const choices = scene_next_list.map((choice, index) => {\r\n        return (\r\n            <Link to={\r\n                {\r\n                    pathname: `/gameplay`,\r\n                    key: index,\r\n                    state: {\r\n                        gameId: game_id,\r\n                        sceneId: choice.sceneId\r\n                    }\r\n                }\r\n            } key={index}\r\n                style={{ textDecoration: 'none' }}\r\n                className={`text_line_choice ${theme}`}\r\n                onClick={() => setScene({})}\r\n            >\r\n                { choice.script}\r\n            </Link>\r\n        );\r\n    });\r\n    return (\r\n        <div className={`text_window ${theme}`} >\r\n            <TextBlock\r\n                cut_name={cut_name}\r\n                cut_script={cut_script}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n                theme={theme}\r\n            />\r\n            { isLastMotion &&\r\n                <div className={`choice_box ${isEnding} ${theme}`}>\r\n                    {isEnding === true ?\r\n                        <SceneEndingPage gameId={game_id} setScene={setScene} /> :\r\n                        <>\r\n                            {choices}\r\n                            {scene_next_list.length < CHOICE_NUM ?\r\n\r\n                                <InputModal scene_id={scene_id}\r\n                                    scene_depth={scene_depth}\r\n                                    game_id={game_id}\r\n                                    scene_next_list={scene_next_list}\r\n                                    theme={theme}\r\n                                />\r\n                                :\r\n                                (<div > </div>)\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import { message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Dislike.css\";\r\n\r\nfunction DislikePopup(props) {\r\n  const { gameId, sceneId, trigger, setTrigger } = props;\r\n\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [Title,setTitle] = useState(\"\");\r\n  const [Description,setDescription] = useState(\"\");\r\n\r\n  const onTitleChange = (event) => {\r\n    setTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const onDescriptionChange = (event) => {\r\n    setDescription(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const variable = {\r\n      title : Title,\r\n      description : Description,\r\n      user : user.userData._id,\r\n      sceneId : sceneId,\r\n      gameId : gameId,\r\n    }\r\n    Axios.post(\"/api/complaint/save\", variable).then((response) => {\r\n      if(!response.data.success) {\r\n        message.error(\"신고하는데 문제가 발생했습니다.\")\r\n      } else {\r\n        message.success(\"감사합니다. 신고가 접수되었습니다.\")\r\n        setTrigger(state => !state)\r\n      }\r\n    })\r\n  }\r\n\r\n  return trigger ? (\r\n    <div className=\"dislike_popup\">\r\n      <div className=\"dislike_inner\">\r\n        <button className=\"close_btn\" onClick={() => setTrigger(state => !state)}>\r\n          close\r\n        </button>\r\n        <label>Title</label>\r\n        <input onChange={onTitleChange} value={Title} />\r\n        <label>Description</label>\r\n        <textarea onChange={onDescriptionChange} value={Description} />\r\n        <button className=\"btn\" onClick={onSubmit}>\r\n          신고하기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default DislikePopup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./HistoryMap.css\";\r\nimport { message, Button, Modal } from \"antd\";\r\nimport { SVG } from \"../../svg/icon\";\r\n\r\nfunction MapToLeft() {\r\n  var map = document.getElementsByClassName(\"HistoryMap_inner\")[0];\r\n  var computedStyle = window.getComputedStyle(map);\r\n  var transform = computedStyle.getPropertyValue(\"transform\");\r\n  var new_position =\r\n    transform !== \"none\" ? parseInt(transform.split(\",\")[4]) : 0;\r\n\r\n  map.style.transform = `translate(${new_position + 250}px, 0px)`;\r\n}\r\n\r\nfunction MapToRight() {\r\n  var map = document.getElementsByClassName(\"HistoryMap_inner\")[0];\r\n  var computedStyle = window.getComputedStyle(map);\r\n  var transform = computedStyle.getPropertyValue(\"transform\");\r\n  var new_position =\r\n    transform !== \"none\" ? parseInt(transform.split(\",\")[4]) : 0;\r\n\r\n  map.style.transform = `translate(${new_position - 250}px, 0px)`;\r\n}\r\n\r\nfunction GoToScene(props) {\r\n  const { userhistory, gameId, sceneId, targetScene,setScene } = props;\r\n  const data = { data: { sceneIndex: targetScene - 1 } };\r\n  Axios.post(\"/api/game/refreshHistory\", data).then((response) => {\r\n    if (!response.data.success) {\r\n      message.error(\"Scene 변경 요청 실패\");\r\n    } else {\r\n      const close = document.getElementsByClassName(\"close_btn\");\r\n      for (let i = close.length - 1; i >= 0; i--) {\r\n        close[i].click();\r\n      }\r\n      setScene({});\r\n\r\n      userhistory.replace({\r\n        pathname: `/gameplay`,\r\n        state: {\r\n          sceneId: sceneId[targetScene - 1],\r\n          gameId: gameId,\r\n        },\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nlet sceneInfo = [];\r\nlet targetScene = 1;\r\n\r\nfunction HistoryMapPopup(props) {\r\n  const { userhistory, setTrigger, setScene } = props;\r\n  const { gameId, sceneId } = props.history;\r\n  const [SceneInfo, setSceneInfo] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = (target) => {\r\n    targetScene = target;\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    GoToScene({ userhistory, gameId, sceneId, targetScene, setScene });\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.trigger) {\r\n      Axios.get(\"/api/game/simple-scene-info\").then((response) => {\r\n        sceneInfo = response.data.sceneinfo;\r\n        setSceneInfo(sceneInfo);\r\n      });\r\n      return () => {\r\n        setSceneInfo([]);\r\n      };\r\n    }\r\n  }, [props.trigger]);\r\n\r\n  function close_button() {\r\n    setTrigger(false);\r\n  }\r\n\r\n  const HistoryMap_scenes = SceneInfo.map((scene, index) => {\r\n    if (index === SceneInfo.length - 1) {\r\n      return (\r\n        <div\r\n          className=\"HistoryMap_scene\"\r\n          key={index + 1}\r\n          style={{border:\"0.2em orange solid\"}}\r\n        >\r\n          <div className=\"HistoryMap_scene_num\"> #{index + 1}</div>\r\n          <img className=\"HistoryMap_scene_img\" src={scene.background} />\r\n          <div className=\"HistoryMap_scene_name\">{scene.name}:</div>\r\n          <div className=\"HistoryMap_scene_text\">\"{scene.script}\"</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className=\"HistoryMap_scene\"\r\n          key={index + 1}\r\n          onClick={() => showModal(index + 1)}\r\n        >\r\n          <div className=\"HistoryMap_scene_num\"> #{index + 1}</div>\r\n          <img className=\"HistoryMap_scene_img\" src={scene.background} />\r\n          <div className=\"HistoryMap_scene_name\">{scene.name}:</div>\r\n          <div className=\"HistoryMap_scene_text\">\"{scene.script}\"</div>\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n\r\n  return props.trigger ? (\r\n    <div className=\"HistoryMap_popup\">\r\n      <div className=\"close_btn\" onClick={() => close_button()}>\r\n        <SVG\r\n          className=\"close_btn\"\r\n          src=\"close_2\"\r\n          width=\"45\"\r\n          height=\"50\"\r\n          color=\"#F5F5F5\"\r\n        ></SVG>\r\n      </div>\r\n\r\n      <div className=\"HistoryMap-toleft_btn\" onClick={MapToLeft}>\r\n        <SVG\r\n          src=\"arrow_1\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          color=\"#F5F5F5\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"HistoryMap-toright_btn\" onClick={MapToRight}>\r\n        <SVG\r\n          src=\"arrow_1\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          color=\"#F5F5F5\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"HistoryMap_inner\"\r\n        style={{ width: sceneInfo.length * 15 + \"%\" }}\r\n      >\r\n        {HistoryMap_scenes}\r\n      </div>\r\n\r\n      <Modal\r\n        title=\"경고\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        getContainer='.gamePlay__container'\r\n        centered={true}\r\n      >\r\n        <p>\r\n          {targetScene} 번째 씬으로 돌아갑니다. 돌아가려는 씬까지의 기록은\r\n          삭제됩니다.\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default HistoryMapPopup;\r\n","import React, { useState } from \"react\";\r\nimport \"./LoadingPage.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { faSpinner, faTruckLoading } from \"@fortawesome/free-solid-svg-icons\";\r\nconst LOADING_TYPE = {\r\n  NONE: 0,\r\n  BASIC: 1,\r\n  SLIDELEFT: 2,\r\n  SLIDERIGHT: 3,\r\n  SLIDEUP: 4,\r\n  SLIDEDOWN: 5,\r\n  BLACKIN: 6,\r\n};\r\n\r\nconst LoadingPage = () => {\r\n  const loadingType = useSelector((state) => state.gameplay.loadingType);\r\n  switch (loadingType) {\r\n    case LOADING_TYPE.NONE:\r\n      return null;\r\n    case LOADING_TYPE.BASIC:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1.5s ease-out 0s 1 basic\" }}\r\n          className=\"loading_page\"\r\n        >\r\n          <FontAwesomeIcon\r\n              icon={faSpinner}\r\n              className=\"loading_icon\"\r\n            />\r\n        </div>\r\n      );\r\n    case LOADING_TYPE.SLIDELEFT:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideLeft\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDERIGHT:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideRight\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDEUP:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideUp\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDEDOWN:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideDown\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.BLACKIN:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 blackIn\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default LoadingPage;\r\n","import axios from 'axios';\r\nimport {\r\n    LOAD_EMPTY_NUM,\r\n    SAVE_PREV_SCENE\r\n} from './types';\r\n\r\nexport function loadEmptyNum(dataToSubmit){\r\n    const request = dataToSubmit.emptyNum !== undefined ? dataToSubmit.emptyNum : axios.get(`/api/game/getSceneInfo/${dataToSubmit.sceneId}`)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                const scene = response.data.scene;\r\n                return scene.sceneTmp.emptyNum;\r\n            }\r\n        });\r\n\r\n    return {\r\n        type: LOAD_EMPTY_NUM,\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function savePrevScene(dataToSubmit){\r\n    const request = dataToSubmit.prevSceneId;\r\n\r\n    return {\r\n        type: SAVE_PREV_SCENE,\r\n        payload: request\r\n    };\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function useFullscreenStatus(elRef) {\r\n  const [isFullscreen, setIsFullscreen] = React.useState(\r\n    document[getBrowserFullscreenElementProp()] != null\r\n  );\r\n\r\n  const setFullscreen = () => {\r\n    if (elRef.current == null) return;\r\n\r\n    elRef.current\r\n      .requestFullscreen()\r\n      .then(() => {\r\n        setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n      })\r\n      .catch(() => {\r\n        setIsFullscreen(false);\r\n      });\r\n  };\r\n\r\n  React.useLayoutEffect(() => {\r\n    document.onfullscreenchange = () =>\r\n      setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n\r\n    return () => (document.onfullscreenchange = undefined);\r\n  });\r\n\r\n  return [isFullscreen, setFullscreen];\r\n}\r\n\r\nfunction getBrowserFullscreenElementProp() {\r\n  if (typeof document.fullscreenElement !== \"undefined\") {\r\n    return \"fullscreenElement\";\r\n  } else if (typeof document.mozFullScreenElement !== \"undefined\") {\r\n    return \"mozFullScreenElement\";\r\n  } else if (typeof document.msFullscreenElement !== \"undefined\") {\r\n    return \"msFullscreenElement\";\r\n  } else if (typeof document.webkitFullscreenElement !== \"undefined\") {\r\n    return \"webkitFullscreenElement\";\r\n  } else {\r\n    throw new Error(\"fullscreenElement is not supported by this browser\");\r\n  }\r\n}\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./TreeMap.css\";\r\nimport { message } from \"antd\";\r\n\r\nfunction GoToScene(props) {\r\n  const { userhistory, gameId, sceneId, GoScene } = props;\r\n  const data = { data: { sceneIndex: GoScene - 1 } };\r\n  Axios.post(\"/api/game/refreshHistory\", data).then((response) => {\r\n    if (!response.data.success) {\r\n      message.error(\"Scene 변경 요청 실패\");\r\n    } else {\r\n      userhistory.push(`/gameplay/${gameId}/${sceneId[GoScene - 1]}`);\r\n      const close = document.getElementsByClassName(\"close_btn\");\r\n      for (let i = close.length - 1; i >= 0; i--) {\r\n        close[i].click();\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction GetSceneInfo(props) {\r\n  const { index, scene, setSceneInfo } = props;\r\n  Axios.get(`/api/game/getSceneInfo/${scene}`).then((response) => {\r\n    if (!response.data.success) {\r\n      alert(\"Scene 정보 없음...\");\r\n    } else {\r\n      const cutList = response.data.scene.cutList;\r\n      const lastcut = cutList[cutList.length - 1];\r\n      setSceneInfo({\r\n        sceneindex: index,\r\n        background: lastcut.background,\r\n        name: lastcut.name,\r\n        script: lastcut.script,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction useConstructor(callBack = () => {}) {\r\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\r\n  if (hasBeenCalled) return;\r\n  callBack();\r\n  setHasBeenCalled(true);\r\n}\r\n\r\n//* 나중에 스키마로 만들어야함\r\nconst SceneDepth = 4;\r\nconst sceneMap = [\r\n  { sceneId: 1, link: null },\r\n  { sceneId: 2, link: null },\r\n  { sceneId: 3, link: null },\r\n  { sceneId: 4, link: null },\r\n  { sceneId: null, link: null },\r\n  { sceneId: null, link: null },\r\n  { sceneId: 7, link: null },\r\n  { sceneId: 8, link: null },\r\n  { sceneId: 9, link: null },\r\n  { sceneId: 10, link: null },\r\n  { sceneId: 11, link: null },\r\n  { sceneId: 12, link: null },\r\n  { sceneId: 13, link: null },\r\n  { sceneId: 14, link: null },\r\n  { sceneId: 15, link: null },\r\n  { sceneId: 16, link: null },\r\n  { sceneId: 17, link: null },\r\n  { sceneId: 18, link: null },\r\n  { sceneId: 19, link: null },\r\n  { sceneId: 20, link: null },\r\n  { sceneId: 21, link: null },\r\n  { sceneId: 22, link: null },\r\n];\r\n\r\nconst nodeWidth = 10;\r\nconst nodeHeight = 5;\r\n\r\nlet pivot = [0, 0];\r\nlet position = [50, 0];\r\nlet drag = false;\r\n\r\nfunction TreeMapPopup(props) {\r\n  const { trigger, userhistory, setTrigger} = props;\r\n  const { gameId, sceneId } = props.history;\r\n\r\n  const [Position, setPosition] = useState();\r\n  \r\n  useConstructor(() => {\r\n    setPosition(position);\r\n  });\r\n\r\n  useEffect(() => {\r\n    var container = document.getElementsByClassName(\"TreeMap_popup\");\r\n    if (trigger) {\r\n      container[0].addEventListener(\"mousedown\", mouseDown);\r\n      container[0].addEventListener(\"mouseup\", mouseUp);\r\n      container[0].addEventListener(\"mousemove\", mouseMove);\r\n    } else {\r\n      if (container[0]) {\r\n        container[0].removeEventListener(\"mousedown\", mouseDown);\r\n        container[0].removeEventListener(\"mouseup\", mouseUp);\r\n        container[0].removeEventListener(\"mousemove\", mouseMove);\r\n      }\r\n    }\r\n  }, [trigger]);\r\n\r\n  function close_button() {\r\n    setTrigger(false);\r\n  }\r\n\r\n  function mouseDown(e) {\r\n    pivot = [e.pageX, e.pageY];\r\n    drag = true;\r\n    e.preventDefault();\r\n  }\r\n\r\n  function mouseUp(e) {\r\n    drag = false;\r\n    e.preventDefault();\r\n  }\r\n\r\n  function mouseMove(e) {\r\n    if (drag) {\r\n      if (pivot[0] !== e.pageX || pivot[1] !== e.pageY) {\r\n        position = [\r\n          position[0] - (pivot[0] - e.pageX),\r\n          position[1] - (pivot[1] - e.pageY),\r\n        ];\r\n        setPosition(position);\r\n        pivot = [e.pageX, e.pageY];\r\n      }\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  let depth = 1;\r\n  let cnt_limit = 1;\r\n  let cnt = 0;\r\n  const TreeMap_nodes = sceneMap.map((scene, index) => {\r\n    if (cnt === cnt_limit) {\r\n      depth += 1;\r\n      cnt = 0;\r\n      cnt_limit = cnt_limit * 4;\r\n    }\r\n    cnt += 1;\r\n\r\n    return (\r\n      <div\r\n        className=\"TreeMap_nodeContainer\"\r\n        style={{\r\n          width: (1 / SceneDepth) * 100 + \"%\",\r\n          height: (1 / cnt_limit) * 100 + \"%\",\r\n          left: ((depth - 1) / SceneDepth) * 100 + \"%\",\r\n          top: ((cnt - 1) / cnt_limit) * 100 + \"%\",\r\n        }}\r\n      >\r\n        {/* {index} */}\r\n        <div\r\n          className=\"TreeMap_node\"\r\n          style={{ width: 1 +\"rem\", height: 1+\"rem\" }}\r\n\r\n        />\r\n        {depth !== SceneDepth ? (\r\n          <Fragment>\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"12.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"37.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"62.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"87.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"50%\", top: \"50%\" }}\r\n            />\r\n            <hr className=\"TreeMap_nodeLine_vertical\" />\r\n          </Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return trigger ? (\r\n    <div className=\"TreeMap_popup\">\r\n      <button className=\"close_btn\" onClick={() => close_button()}>\r\n        close\r\n      </button>\r\n      <div\r\n        className=\"TreeMap_inner\"\r\n        style={{\r\n          width: nodeWidth * SceneDepth + \"%\",\r\n          height: nodeHeight * Math.pow(4, SceneDepth - 1) + \"%\",\r\n          left: Position[0],\r\n          top: Position[1],\r\n        }}\r\n      >\r\n        {TreeMap_nodes}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default TreeMapPopup;\r\n","import \"./GamePlayPage.css\";\r\nimport 'react-rangeslider/lib/index.css'\r\nimport \"./GamePlaySlider.css\";\r\nimport GameCharacterBlock from \"./GameCharacterBlock\";\r\nimport { TextBlock, TextBlockChoice } from \"./TextBlock.js\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport DislikePopup from \"./Dislike\";\r\nimport HistoryMapPopup from \"./HistoryMap\";\r\nimport LoadingPage from \"./LoadingPage\";\r\nimport { message } from \"antd\";\r\nimport { socket } from \"../../App\"\r\nimport { loadEmptyNum, savePrevScene } from \"../../../_actions/sync_actions\"\r\nimport useKey from \"../../functions/useKey\";\r\nimport { gameLoadingPage } from \"../../../_actions/gamePlay_actions\";\r\nimport { navbarControl } from \"../../../_actions/controlPage_actions\";\r\nimport useFullscreenStatus from \"../../../utils/useFullscreenStatus\";\r\nimport { useLocation } from \"react-router\";\r\nimport TreeMapPopup from \"./TreeMap\";\r\nimport { gamePause } from \"../../../_actions/gamePlay_actions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport Slider from 'react-rangeslider'\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport {\r\n  faCheckSquare,\r\n  faCompress,\r\n  faExpand,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst bgm_audio = new Audio();\r\nbgm_audio.volume = 0.5\r\nconst sound_audio = new Audio();\r\nsound_audio.volume = 0.5\r\n\r\nfunction useConstructor(callBack = () => { }) {\r\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\r\n  if (hasBeenCalled) return;\r\n  callBack();\r\n  setHasBeenCalled(true);\r\n}\r\n\r\n//! playscreen\r\nconst ProductScreen = (props) => {\r\n  const location = useLocation();\r\n\r\n  const { gameId, sceneId } = location.state;\r\n  const userHistory = props.history;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state.user);\r\n  const isPause = useSelector((state) => state.gameplay.isPause);\r\n\r\n  const ratio = 1080 / 1920;\r\n\r\n  const [windowWidth, setwindowWidth] = useState(window.innerWidth);\r\n  const [windowHeight, setwindowHeight] = useState(window.innerHeight);\r\n  const [i, setI] = useState(0);\r\n  const [Scene, setScene] = useState({});\r\n  const [Dislike, setDislike] = useState(false);\r\n  const [History, setHistory] = useState({});\r\n  const [HistoryMap, setHistoryMap] = useState(false);\r\n  // const [TreeMap, setTreeMap] = useState(false);\r\n  const [lastMotion, setLastMotion] = useState(false)\r\n  const [view, setView] = useState(0);\r\n  const [thumbsUp, setThumbsUp] = useState(0);\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const prevSceneId = useSelector(state => state.sync.prevSceneId);\r\n\r\n  const maximizableElement = useRef(null);\r\n\r\n  const handleExitFullscreen = () => document.exitFullscreen();\r\n\r\n  let isFullscreen, setIsFullscreen;\r\n  let errorMessage;\r\n\r\n  try {\r\n    [isFullscreen, setIsFullscreen] = useFullscreenStatus(maximizableElement);\r\n  } catch (e) {\r\n    errorMessage = \"Fullscreen not supported\";\r\n    isFullscreen = false;\r\n    setIsFullscreen = undefined;\r\n  }\r\n\r\n  useKey(\"Enter\", handleEnter);\r\n  useKey(\"Space\", handleEnter);\r\n  useKey(\"Digit1\", handleChoice);\r\n  useKey(\"Digit2\", handleChoice);\r\n  useKey(\"Digit3\", handleChoice);\r\n  useKey(\"Digit4\", handleChoice);\r\n\r\n\r\n  useEffect(() => {\r\n    socket.off(\"accept_final_change\");\r\n    socket.on(\"accept_final_change\", data => {\r\n      const { sceneId, title } = data;\r\n      let newNextList = Scene.nextList ? [...Scene.nextList] : [];\r\n      newNextList.push({ sceneId, script: title });\r\n      const newScene = { ...Scene, nextList: newNextList };\r\n      setScene(newScene);\r\n    })\r\n  }, [Scene])\r\n\r\n  const [volume, setVolume] = useState(0.5)\r\n  const [muted, setMuted] = useState(false)\r\n  const tempVolume = useRef(0.5)\r\n\r\n  const mute = () => {\r\n    if (muted) {\r\n      setMuted(false)\r\n      volumeControl(tempVolume.current)\r\n    } else {\r\n      tempVolume.current = volume\r\n      setMuted(true)\r\n      volumeControl(0)\r\n    }\r\n  }\r\n\r\n  const volumeControl = (volume) => {\r\n    setVolume(volume)\r\n    volume === 0 ? setMuted(true) : setMuted(false)\r\n    bgm_audio.volume = volume\r\n    sound_audio.volume = volume\r\n  }\r\n\r\n  const [isFirstCut, setIsFirstCut] = useState(true);\r\n  function playMusic(i) {\r\n    if (isFirstCut) setIsFirstCut(false);\r\n    if (Scene?.cutList[i]?.bgm.music) {\r\n      //이전 곡과 같은 bgm이 아니라면\r\n      if (\r\n        !(i > 0 && Scene.cutList[i - 1].bgm.music == Scene.cutList[i]?.bgm.music)\r\n      ) {\r\n        bgm_audio.pause();\r\n        bgm_audio.src = Scene.cutList[i]?.bgm.music;\r\n        bgm_audio.play();\r\n      }\r\n    }\r\n    if (Scene?.cutList[i]?.sound.music) {\r\n      sound_audio.pause();\r\n\r\n      sound_audio.src = Scene.cutList[i]?.sound.music;\r\n      sound_audio.play();\r\n    }\r\n  }\r\n\r\n  const [isTyping, setIsTyping] = useState(true);\r\n\r\n\r\n  function handleEnter(event) {\r\n    //! 타이핑 끝 & 미니맵 X\r\n    if (!isTyping && !isPause) {\r\n      if (i < Scene?.cutList?.length - 1) {\r\n        playMusic(i + 1);\r\n        setI(i + 1);\r\n        setIsTyping(true);\r\n      }\r\n      else if (i == Scene?.cutList?.length - 1) {\r\n        //! 엔딩자리\r\n        setLastMotion(true)\r\n        // setIsTyping(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleChoice(event) {\r\n    if (i === Scene.cutList.length - 1 && !isPause) {\r\n      if (Scene.nextList[parseInt(event.key) - 1]) {\r\n        userHistory.replace({\r\n          pathname: `/gameplay`,\r\n          state: {\r\n            sceneId: Scene.nextList[parseInt(event.key) - 1].sceneId,\r\n            gameId: gameId,\r\n          }\r\n        })\r\n      } else {\r\n        if (parseInt(event.key) - 1 === Scene.nextList.length) {\r\n          dispatch(gamePause(true));\r\n          event.preventDefault();\r\n          let choice = document.getElementById(\"choice\");\r\n          if (choice) {\r\n            choice.click();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function onClick_thumbsUp() {\r\n    if (user && user.userData) {\r\n      // setUpdate((state) => state+1);\r\n      const variable = {\r\n        userId: user.userData._id,\r\n        objectId: sceneId\r\n      }\r\n      Axios.post(\"/api/thumbsup/\", variable).then((response) => {\r\n        if (response.data.success) {\r\n          setIsClicked(response.data.isClicked);\r\n          setThumbsUp(response.data.thumbsup);\r\n        }\r\n      })\r\n    }\r\n    else{\r\n      message.error(\"로그인이 필요합니다.\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user && user.userData) {\r\n      const variable_thumbsup = {\r\n        objectId: sceneId,\r\n        userId: user.userData._id,\r\n      }\r\n      Axios.post(\"/api/thumbsup/count\", variable_thumbsup).then((response) => {\r\n        if (response.data.success) {\r\n          setIsClicked(response.data.isClicked);\r\n          setThumbsUp(response.data.thumbsup);\r\n        }\r\n      })\r\n      const variable_view = {\r\n        userId: user.userData._id,\r\n        objectId: sceneId\r\n      }\r\n      Axios.post(\"/api/view/\", variable_view).then((response) => {\r\n        if (response.data.success) {\r\n          setView(response.data.view);\r\n        }\r\n      })\r\n    }\r\n  }, [sceneId, user])\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"leave room\", { room: prevSceneId });\r\n    socket.emit(\"room\", { room: sceneId });\r\n    // socket.emit(\"exp_val\", {room: sceneId});\r\n    dispatch(savePrevScene({ prevSceneId: sceneId }));\r\n    socket.off(\"empty_num_changed\") //! 매번 열린다.\r\n    socket.on(\"empty_num_changed\", data => {\r\n      dispatch(loadEmptyNum({\r\n        sceneId,\r\n        emptyNum: data.emptyNum\r\n      }));\r\n    })\r\n    socket.emit(\"validate_empty_num\", { scene_id: sceneId })\r\n\r\n  }, [sceneId])\r\n\r\n  //* navigation bar control\r\n  useEffect(() => {\r\n    dispatch(navbarControl(false));\r\n  }, []);\r\n\r\n  //* game pause control\r\n  useEffect(() => {\r\n    // if (HistoryMap || Dislike || TreeMap) {\r\n    if (HistoryMap || Dislike) {\r\n      dispatch(gamePause(true));\r\n    } else {\r\n      dispatch(gamePause(false));\r\n    }\r\n  }, [HistoryMap, Dislike]);\r\n// }, [HistoryMap, Dislike, TreeMap]);\r\n\r\n  useEffect(() => {\r\n    setLastMotion(false)\r\n    Axios.get(`/api/game/getnextscene/${gameId}/${sceneId}`).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          const history = {\r\n            gameId: gameId,\r\n            sceneId: response.data.sceneIdList,\r\n          };\r\n          setIsTyping(true)\r\n          setHistory(history);\r\n          setI(0);\r\n          bgm_audio.pause();\r\n          sound_audio.pause();\r\n          setIsFirstCut(true);\r\n          setScene(response.data.scene);\r\n          dispatch(gamePause(false));\r\n          dispatch(gameLoadingPage(0));\r\n          dispatch(gameLoadingPage(6));\r\n        } else {\r\n          message.error(\"잘못된 접근입니다. 한 ID로는 하나의 스토리만을 진행해주세요.\");\r\n          props.history.replace(`/game/${gameId}`);\r\n        }\r\n      }\r\n    );\r\n  }, [sceneId]);\r\n\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setwindowWidth(window.innerWidth);\r\n      setwindowHeight(window.innerHeight);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n  }, [window.innerWidth, window.inner]);\r\n\r\n  const padding = isFullscreen ? 0.0 : 0.1;\r\n  const minSize = 300;\r\n\r\n  let newScreenSize;\r\n  if (windowWidth * ratio > windowHeight) {\r\n    newScreenSize = {\r\n      width: `${(windowHeight * (1 - 2 * padding)) / ratio}px`,\r\n      height: `${windowHeight * (1 - 2 * padding)}px`,\r\n      minWidth: `${minSize / ratio}px`,\r\n      minHeight: `${minSize}px`,\r\n    };\r\n  } else {\r\n    newScreenSize = {\r\n      width: `${windowWidth * (1 - 2 * padding)}px`,\r\n      height: `${windowWidth * (1 - 2 * padding) * ratio}px`,\r\n      minWidth: `${minSize}px`,\r\n      minHeight: `${minSize * ratio}px`,\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(loadEmptyNum({\r\n      sceneId,\r\n    }));\r\n\r\n    return () => {\r\n      bgm_audio.pause();\r\n      sound_audio.pause();\r\n    };\r\n  }, []);\r\n\r\n\r\n  if (Scene?.cutList !== undefined) {\r\n    if (i == 0 && isFirstCut) playMusic(0);\r\n    return (\r\n      <div\r\n        className={`${isFullscreen\r\n          ? \"gamePlay__container gamePlay__container_fullscreen\"\r\n          : \"gamePlay__container\"\r\n          }`}\r\n        ref={maximizableElement}\r\n      >\r\n        <div\r\n          className={`${isFullscreen\r\n            ? \"gamePlay__mainContainer_fullscreen\"\r\n            : \"gamePlay__mainContainer\"\r\n            }`}\r\n        >\r\n          <div\r\n            className={`${isFullscreen\r\n              ? \"backgroundImg_container_fullscreen\"\r\n              : \"backgroundImg_container\"\r\n              }`}\r\n            style={newScreenSize}\r\n            onClick={(event) => handleEnter(event)}\r\n          >\r\n            <LoadingPage />\r\n            {(Scene.cutList[i] && Scene.cutList[i]?.background) ?\r\n              <img\r\n                className=\"gamePlay_backgroundImg\"\r\n                src={Scene.cutList[i]?.background}\r\n                alt=\"Network Error\"\r\n              />\r\n              : (\r\n                <div></div>\r\n              )}\r\n            <GameCharacterBlock\r\n              characterList={Scene?.cutList[i]?.characterList}\r\n            />\r\n\r\n\r\n            {i === Scene.cutList.length - 1 ? (\r\n              <TextBlockChoice\r\n                game_id={gameId}\r\n                cut_name={Scene.cutList[i]?.name}\r\n                cut_script={Scene.cutList[i]?.script}\r\n                scene_depth={Scene.depth}\r\n                scene_id={Scene._id}\r\n                scene_next_list={Scene.nextList}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n                isEnding={Scene.isEnding}\r\n                isLastMotion={lastMotion}\r\n                theme={Scene.theme}\r\n                setScene={setScene}\r\n              />\r\n            ) :\r\n              <TextBlock\r\n                cut_name={Scene.cutList[i]?.name}\r\n                cut_script={Scene.cutList[i]?.script}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n                theme={Scene.theme}\r\n              />\r\n            }\r\n\r\n            <HistoryMapPopup\r\n              userhistory={userHistory}\r\n              history={History}\r\n              trigger={HistoryMap}\r\n              setTrigger={setHistoryMap}\r\n              setScene={setScene}\r\n            />\r\n            {/* <TreeMapPopup\r\n              userhistory={userHistory}\r\n              history={History}\r\n              trigger={TreeMap}\r\n              setTrigger={setTreeMap}\r\n            /> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"gamePlay__btn_container\">\r\n          <div\r\n            className=\"gamePlay__btn\"\r\n            onClick={mute}\r\n          >\r\n            {muted ? <VolumeOffIcon /> : <VolumeUpIcon />}\r\n          </div>\r\n          <div\r\n            style={{ width: \"80px\" }} //slider width\r\n          >\r\n            <Slider\r\n              min={0}\r\n              max={1}\r\n              step={0.02}\r\n              value={volume}\r\n              onChange={event => {\r\n                volumeControl(event)\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            {i === Scene.cutList.length - 1 &&\r\n              <>\r\n                <button\r\n                  className={isClicked ? \"gamePlay__btnClicked\" : \"gamePlay__btn\"}\r\n                  onClick={onClick_thumbsUp}\r\n                >\r\n                  좋아요: {thumbsUp}\r\n                </button>\r\n                <button\r\n                  className=\"gamePlay__btn\"\r\n                >\r\n                  조회수: {view}\r\n                </button>\r\n              </>\r\n            }\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => setHistoryMap((state) => !state)}\r\n            >\r\n              미니맵\r\n            </button>\r\n            {/* <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => {\r\n                setTreeMap((state) => !state);\r\n              }}\r\n            >\r\n              트리맵\r\n            </button> */}\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => setDislike((state) => !state)}\r\n            >\r\n              신고\r\n            </button>\r\n          </div>\r\n          {errorMessage ? (\r\n            <button\r\n              onClick={() =>\r\n                alert(\r\n                  \"Fullscreen is unsupported by this browser, please try another browser.\"\r\n                )\r\n              }\r\n              className=\"gamePlay__btn\"\r\n            >\r\n              {errorMessage}\r\n            </button>\r\n          ) : isFullscreen ? (\r\n            <button onClick={handleExitFullscreen} className=\"gamePlay__btn\">\r\n              <FontAwesomeIcon icon={faCompress} />\r\n            </button>\r\n          ) : (\r\n            <button onClick={setIsFullscreen} className=\"gamePlay__btn\">\r\n              <FontAwesomeIcon icon={faExpand} />\r\n            </button>\r\n          )}\r\n        </div>\r\n        <DislikePopup\r\n          sceneId={sceneId}\r\n          gameId={gameId}\r\n          trigger={Dislike}\r\n          setTrigger={setDislike}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    // dispatch(gameLoadingPage(0));\r\n    // dispatch(gameLoadingPage(1));\r\n\r\n    return (\r\n      <div className=\"loader_container\">\r\n        <div className=\"loader\">Loading...</div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default ProductScreen;\r\n","import React from 'react'\r\n\r\nfunction BackgroundImg({ imgUrl, setBackgroundImg }) {\r\n  const onClick_img = () => {\r\n    setBackgroundImg(imgUrl);\r\n  }\r\n  return (\r\n    <div\r\n      className=\"backSidebar_image_container\"\r\n      onClick={onClick_img}>\r\n      <img\r\n        src={imgUrl}\r\n        alt=\"img\"\r\n        className=\"backSidebar_image\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BackgroundImg\r\n","import { FileAddOutlined } from '@ant-design/icons';\r\nimport React, { memo } from 'react'\r\nimport './BackgroundSideBar.css'\r\nimport BackgroundImg from './BackgroundImg'\r\nimport './BackgroundSideBar.css'\r\n\r\nfunction BackgroundSideBar({ gameDetail, setBackgroundImg, onEssetModal, isFirstScene, isWriter }) {\r\n\r\n  const renderBackground = gameDetail.background.map((background, index) => {\r\n    return (\r\n      <div\r\n        className=\"backSidebar_box\"\r\n        key={`${index}`}>\r\n        <BackgroundImg imgUrl={background.image} setBackgroundImg={setBackgroundImg} />\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"backSidebar__container\">\r\n        {gameDetail?.background?.length === 0 &&\r\n          <div>\r\n            {(isFirstScene.current || isWriter) &&\r\n              <FileAddOutlined onClick={onEssetModal}\r\n                className=\"sidebar_add_esset_btn\" />\r\n            }\r\n            <div className=\"sidebar_line\" />\r\n          </div>\r\n        }\r\n        {renderBackground}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(BackgroundSideBar)\r\n","import { message } from \"antd\";\r\nimport {\r\n  SELECT_CHARACTER,\r\n  DETACH_CHARACTER,\r\n  PUSH_CHARACTER,\r\n  POP_CHARACTER,\r\n  UPDATE_CHARACTER,\r\n  SET_CHARACTER_LIST,\r\n  ORDER_CHARACTER\r\n} from \"./types\";\r\n\r\n\r\nexport function selectCharacter(character) {\r\n  return {\r\n    type: SELECT_CHARACTER,\r\n    payload: character,\r\n  };\r\n}\r\n\r\n\r\nexport function detachCharacter() {\r\n  return {\r\n    type: DETACH_CHARACTER,\r\n  };\r\n}\r\n\r\n\r\nexport function popCharacter(dataToSubmit) {\r\n  const { oldArray, index } = dataToSubmit;\r\n  let request;\r\n  for (let i = 0; i < oldArray.length; i++) {\r\n    if (oldArray[i].index === index) {\r\n      message.info(\"삭제되었습니다.\");\r\n      oldArray.splice(i, 1)\r\n      request = [...oldArray]\r\n      break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: POP_CHARACTER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\n\r\nexport function pushCharacter(dataToSubmit) {\r\n  const { oldArray, characterSchema } = dataToSubmit;\r\n  let request;\r\n  for (let i = 0; i < oldArray?.length; i++) {\r\n    if (oldArray[i].index === characterSchema.index) {\r\n      request = [\r\n        ...oldArray.slice(0, i),\r\n        {\r\n          ...oldArray[i],\r\n          image: characterSchema.image,\r\n        },\r\n        ...oldArray.slice(i + 1, 4)\r\n      ]\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (!request && oldArray?.length >= 3) {\r\n    message.info(\"인물은 최대 세명까지 추가 가능합니다.\");\r\n    request = oldArray;\r\n  }\r\n\r\n  request = request ? request : [...(oldArray ? oldArray : []), characterSchema]\r\n  return {\r\n    type: PUSH_CHARACTER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function updateCharacter(dataToSubmit) {\r\n  const { oldArray, data, index } = dataToSubmit;\r\n  const request = [\r\n    ...oldArray.slice(0, index),\r\n    {\r\n      ...oldArray[index],\r\n      ...data\r\n    },\r\n    ...oldArray.slice(index + 1, 4)\r\n  ]\r\n\r\n  return {\r\n    type: UPDATE_CHARACTER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function setCharacterList(dataToSubmit) {\r\n  const { CharacterList } = dataToSubmit;\r\n  const request = CharacterList\r\n\r\n  return {\r\n    type: SET_CHARACTER_LIST,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function orderCharacter(dataToSubmit) {\r\n  const { oldArray, index, num } = dataToSubmit;\r\n  const lastIndex = oldArray.length-1;\r\n  let request = [...oldArray]\r\n  for (let i = 0; i < lastIndex; i++) {\r\n    if (request[i].index === index) {\r\n      if(num === \"double\") {\r\n        [request[i], request[0]] = [request[0], request[i]]\r\n      } else if(num===\"pull\") {\r\n        const tmp = request[i];\r\n        request.splice(i, 1);\r\n        request.push(tmp)\r\n      }\r\n       else {\r\n        [request[i], request[i-1]] = [request[i-1], request[i]]\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: ORDER_CHARACTER,\r\n    payload: request,\r\n  };\r\n}","import React, { useState } from 'react'\r\nimport { message } from 'antd';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { pushCharacter, selectCharacter, popCharacter } from '../../../../../_actions/characterSelected_actions';\r\nimport { useConstructor } from '../../../../functions/useConstructor';\r\n\r\nfunction CharacterImg({ character, index, setName }) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList);\r\n  const characterSelected = useSelector(state => state.character.characterSelected)\r\n  const isIn = CharacterList?.some(item=>item.index===index);\r\n  const selected= isIn?\"selected\":\"\";\r\n  const onClick_selectCharacter = () => {\r\n    const characterSchema = {\r\n      index,\r\n      image: character.image_array[0],\r\n      posX: 30,\r\n      posY: 15,\r\n      reverse: 0,\r\n      size: 90,\r\n    }\r\n\r\n    const dataToSubmit = { \r\n      oldArray: CharacterList,\r\n      characterSchema\r\n    }\r\n\r\n    dispatch(selectCharacter({ ...character, index }));\r\n    if ( isIn && (characterSelected?.index === index) ){\r\n      dispatch(popCharacter({oldArray: CharacterList, index}))\r\n      setName(\"\")\r\n    }\r\n    else{\r\n      dispatch(pushCharacter(dataToSubmit))\r\n      setName(character?.name)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`characterSidebar_box ${selected}`} key={`${index}`}>\r\n    <div\r\n      className=\"characterSidebar_image_box\"\r\n      onClick={onClick_selectCharacter}>\r\n      <img\r\n        src={character.image_array[0]}\r\n        alt=\"img\"\r\n        className=\"characterSidebar_image\"\r\n      />\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterImg\r\n","import { FileAddOutlined } from '@ant-design/icons';\r\nimport React, { memo, useEffect } from 'react'\r\nimport CharacterImg from './CharacterImg'\r\nimport './CharacterSideBar.css'\r\n\r\n\r\nfunction CharacterSideBar({ gameDetail, setName, onEssetModal, isFirstScene, isWriter }) {\r\n\r\n  const renderCharacter = gameDetail.character.map((character, index) => {\r\n    return(\r\n      <CharacterImg\r\n        key={index}\r\n        character={character}\r\n        index={index}\r\n        setName={setName} />\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      {(isFirstScene.current || isWriter) &&\r\n        <FileAddOutlined onClick={onEssetModal}\r\n          className={gameDetail?.character?.length === 0 ? \"charSidebar_add_esset_btn\" : \"sidebar_add_esset_btn_side\"} />\r\n      }\r\n      <div className=\"characterSidebar__container\">\r\n        {renderCharacter}\r\n      </div>\r\n      <div className=\"characterSidebar_line\">\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CharacterSideBar)\r\n","import React from \"react\";\r\nimport { LOCAL_HOST } from \"../../../../Config\"\r\n\r\nfunction BgmFile({ bgm_audio, bgm, setBgmFile }) {\r\n    const onClick_music = () => {\r\n        setBgmFile(bgm);\r\n        bgm_audio.src = bgm.music;\r\n        bgm_audio.play();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"bgmSidebar_box\"\r\n            onClick={onClick_music}\r\n        >\r\n            {bgm.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BgmFile;\r\n","import { FileAddOutlined } from '@ant-design/icons';\r\nimport React, { memo } from \"react\";\r\nimport \"./BgmSideBar.css\";\r\n\r\nimport BgmFile from \"./BgmFile\";\r\n\r\nfunction BgmSideBar({ gameDetail, bgm_audio, setBgmFile, onEssetModal, isFirstScene, isWriter }) {\r\n\r\n    const renderBgm = gameDetail.bgm.map((bgm, index) => {\r\n        return (\r\n            <div\r\n                className=\"bgmSidebar_box\"\r\n                key={`${index}`}>\r\n                <BgmFile\r\n                    bgm_audio={bgm_audio}\r\n                    bgm={bgm}\r\n                    setBgmFile={setBgmFile}\r\n                />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"bgmSidebar__container\">\r\n                {gameDetail?.bgm?.length === 0 &&\r\n                    <div>\r\n                        {(isFirstScene.current || isWriter) &&\r\n                            <FileAddOutlined onClick={onEssetModal}\r\n                                className=\"sidebar_add_esset_btn\" />\r\n                        }\r\n                        <div className=\"sidebar_line\" />\r\n                    </div>\r\n                }\r\n                <div>{renderBgm}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(BgmSideBar);\r\n","import React from \"react\";\r\nimport { LOCAL_HOST } from \"../../../../Config\"\r\n\r\nfunction SoundFile({ sound_audio, sound, setSoundFile }) {\r\n    const onClick_music = () => {\r\n        setSoundFile(sound);\r\n        sound_audio.src = sound.music;\r\n        sound_audio.play();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"bgmSidebar_box\"\r\n            onClick={onClick_music}\r\n        >\r\n            {sound.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundFile;\r\n","import { FileAddOutlined } from '@ant-design/icons';\r\nimport React, { memo } from \"react\";\r\nimport \"./BgmSideBar.css\";\r\n\r\nimport SoundFile from \"./SoundFile\";\r\n\r\nfunction SoundSideBar({ gameDetail, sound_audio, setSoundFile, onEssetModal, isFirstScene, isWriter }) {\r\n    const renderSound = gameDetail.sound.map((sound, index) => {\r\n        return (\r\n            <div\r\n                className=\"bgmSidebar_box\"\r\n                key={`${index}`}>\r\n                <SoundFile\r\n                    sound_audio={sound_audio}\r\n                    sound={sound}\r\n                    setSoundFile={setSoundFile}\r\n                />\r\n                {/* <img src={`${sound.image}`} alt=\"img\"/> */}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"bgmSidebar__container\">\r\n                {gameDetail?.sound?.length === 0 &&\r\n                    <div>\r\n                        {(isFirstScene.current || isWriter) &&\r\n                            <FileAddOutlined onClick={onEssetModal}\r\n                                className=\"sidebar_add_esset_btn\" />\r\n                        }\r\n                        <div className=\"sidebar_line\" />\r\n                    </div>\r\n                }\r\n                <div>{renderSound}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(SoundSideBar);\r\n","import React from \"react\";\r\nimport \"../EssetModal.css\";\r\n\r\nconst EssetModalTab = ({ setTag, tag }) => {\r\n  return (\r\n    // <div className=\"sceenmake_modal_container2\">\r\n    <div className=\"tabs\">\r\n      <div\r\n        className={`${tag === 1 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(1)}>\r\n        캐릭터\r\n          </div>\r\n      <div\r\n        className={`${tag === 2 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(2)}>\r\n        배경\r\n          </div>\r\n      <div\r\n        className={`${tag === 3 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(3)}>\r\n        배경음악\r\n          </div>\r\n      <div\r\n        className={`${tag === 4 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(4)}>\r\n        효과음\r\n          </div>\r\n    </div>\r\n    // </div>\r\n  )\r\n}\r\nexport default EssetModalTab;\r\n","import React from \"react\";\r\nimport { FileAddOutlined, InstagramOutlined, PlayCircleOutlined } from '@ant-design/icons';\r\nimport Dropzone from \"react-dropzone\";\r\nimport \"./MyDropzone.css\";\r\n\r\n\r\nfunction MyDropzone({ onDrop, multiple, maxSize, accept, blobURL, type, icon }) {\r\n\r\n    let mention;\r\n    if (type === \"background\" || type === \"thumbnail\") {\r\n        mention = \"16 : 9 비율을 권장합니다.\"\r\n    }\r\n    else if (type === \"character\") {\r\n        mention = \"배경이 없는 사진을 권장합니다.\"\r\n    } else if (type === \"bgm\" || type === \"sound\") {\r\n        mention = \"음원을 업로드 해주세요.\"\r\n    }\r\n\r\n    return <Dropzone\r\n        onDrop={onDrop}\r\n        multiple={multiple}\r\n        maxSize={maxSize} // 10MB + 1\r\n\r\n        // accept=\"image/*,audio/*,video/*\"\r\n        accept={accept}\r\n    >\r\n\r\n        {({ getRootProps, getInputProps }) => (\r\n            <div className=\"dropzone\" {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                {blobURL ? (\r\n                    <div className=\"thumbnail__container\">\r\n                        <img\r\n                            className=\"thumbnail__img\"\r\n                            src={blobURL}\r\n                            alt=\"thumbnail\"\r\n                        />\r\n\r\n                    </div>\r\n                )\r\n                    :\r\n                    <>\r\n                        <div><p className=\"thumbnail__msg\"><b>파일 업로드</b></p>  </div>\r\n                        {icon === \"image\" &&\r\n                            <InstagramOutlined className=\"dropzone-icon\" />\r\n                        }\r\n                        {icon === \"audio\" &&\r\n                            <PlayCircleOutlined className=\"dropzone-icon\" />\r\n                        }\r\n                        {icon === \"file\" &&\r\n                            <FileAddOutlined className=\"dropzone-icon\" />\r\n                        }\r\n                        <div><p className=\"thumbnail__msg\"><b>{mention}</b></p></div>\r\n                    </>\r\n                }\r\n            </div>\r\n\r\n        )}\r\n    </Dropzone>\r\n\r\n}\r\n\r\nexport default MyDropzone;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { message, Form } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../EssetModal.css\";\r\nimport \"./CharacterTab.css\";\r\nimport { SVG } from \"../../../../svg/icon\";\r\nimport useMouse from \"../../../../functions/useMouse\";\r\n\r\nfunction CharacterTab({ blobGame, setBlobGame, charPageNum, setCharFileQueue, setCharBlobList }) {\r\n    const [characterProfile, setCharacterProfile] = useState(\"\");\r\n    const [characterCards, setCharacterCards] = useState(\"\");\r\n    const [isUpdate, setIsUpdate] = useState(0);\r\n    const indexNum = useRef(0);\r\n\r\n    const onNameChange = (event) => {\r\n        setBlobGame(game => {\r\n            game.character[charPageNum.current].name = event.currentTarget.value\r\n            return game\r\n        })\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setBlobGame(game => {\r\n            game.character[charPageNum.current].description = event.currentTarget.value\r\n            return game\r\n        })\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            let curURL = URL.createObjectURL(files[i])\r\n            setCharBlobList(oldArray => [...oldArray, curURL])\r\n\r\n            //new Character\r\n            if (indexNum.current === \"-1\") {\r\n                setBlobGame(game => {\r\n                    game.character = [...game.character, {\r\n                        name: \"\",\r\n                        description: \"\",\r\n                        image_array: [curURL],\r\n                    }]\r\n                    return game\r\n                })\r\n                indexNum.current = blobGame.character.length - 1\r\n            }\r\n            else {\r\n                setBlobGame(game => {\r\n                    game.character[indexNum.current].image_array = [...game.character[indexNum.current].image_array, curURL]\r\n                    return game\r\n                })\r\n            }\r\n        }\r\n        setCharFileQueue(oldArray => [...oldArray, { index: Number(indexNum.current), array: files }])\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (blobGame.character && charPageNum.current < blobGame.character.length) {\r\n            const profile = () => {\r\n                // const img = new Image()\r\n                // img.src = image;\r\n                const image = blobGame.character[charPageNum.current].image_array[0]\r\n                return (\r\n                    <div>\r\n                        <div className=\"characterTab_profile_image\">\r\n                            <img\r\n                                // className={img.width > img.height ?\r\n                                //     \"characterTab_image_width\" : \"characterTab_image_height\"}\r\n                                className=\"characterTab_image\"\r\n                                src={image}\r\n                                alt=\"img\"\r\n                            />\r\n                        </div>\r\n\r\n                        <Form>\r\n                            <input\r\n                                onChange={onNameChange}\r\n                                value={blobGame.character[charPageNum.current].name}\r\n                                className=\"characterTab_profile_name\"\r\n                                placeholder=\"이름을 입력해주세요.\" />\r\n                            <textarea\r\n                                onChange={onDescriptionChange}\r\n                                value={blobGame.character[charPageNum.current].description}\r\n                                className=\"characterTab_profile_text\"\r\n                                placeholder=\"설명을 입력해주세요.\" />\r\n                            {/* <label>(혈액형/좋아하는 것 등 이모지넣을 수 있는 공간?)</label> */}\r\n                        </Form>\r\n                    </div>\r\n                )\r\n            }\r\n            setCharacterProfile(profile);\r\n            const cards = blobGame.character[charPageNum.current].image_array.map((image, index) => {\r\n                // const img = new Image()\r\n                // img.src = image;\r\n                return (\r\n                    <div\r\n                        id={charPageNum.current}\r\n                        key={index}\r\n                        className=\"characterTab_cards\"\r\n                    >\r\n                        <img\r\n                            // className={img.width > img.height ?\r\n                            //     \"characterTab_image_width\" : \"characterTab_image_height\"}\r\n                            className=\"characterTab_image\"\r\n                            src={image}\r\n                            alt=\"img\"\r\n                        />\r\n                    </div>\r\n                )\r\n            })\r\n            setCharacterCards(cards)\r\n        } else {\r\n            setCharacterProfile(\"\");\r\n            setCharacterCards(\"\")\r\n        }\r\n\r\n    }, [isUpdate, blobGame]);\r\n\r\n    useMouse(\"mousedown\", handleMouse)\r\n    function handleMouse(event) {\r\n        for (var i = 0; i < event.path.length; i++) {\r\n            if (event.path[i].id) {\r\n                indexNum.current = event.path[i].id\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"characterTab-container\">\r\n            {blobGame.character?.length > 0 &&\r\n                blobGame.character?.length !== charPageNum.current &&\r\n                <div>\r\n                    <div>{characterProfile}</div>\r\n                    <div className=\"characterTab_cards_Box\">{characterCards}</div>\r\n                    <div className=\"characterTab_char_dropzone\"\r\n                        id={charPageNum.current}>\r\n                        <MyDropzone\r\n                            onDrop={onDrop}\r\n                            multiple={true}\r\n                            maxSize={10485761} // 10MB + 1\r\n                            accept=\"image/*\"\r\n                            type=\"character\"\r\n                            icon=\"image\"\r\n                        />\r\n                    </div>\r\n                    {blobGame.character &&\r\n                        <div\r\n                            className=\"characterTab_pagenum\"\r\n                        >\r\n                            {charPageNum.current + 1}/{blobGame.character.length}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n            {blobGame.character?.length === charPageNum.current &&\r\n                <div\r\n                    className=\"characterTab_empty_dropzone\"\r\n                    id={-1}>\r\n                    <MyDropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={10485761} // 10MB + 1\r\n                        accept=\"image/*\"\r\n                        type=\"character\"\r\n                        icon=\"image\"\r\n                    />\r\n                    <div className=\"characterTab_instruct\">\r\n                        캐릭터를 추가해주세요\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                charPageNum.current !== 0 &&\r\n                <div\r\n                    className=\"characterTab_leftarrow\"\r\n                    onClick={() => {\r\n                        charPageNum.current--\r\n                        setIsUpdate(num => num + 1)\r\n                    }}>\r\n                    <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color=\"#222831\" />\r\n                </div>\r\n            }\r\n            {blobGame.character?.length > 0 &&\r\n                blobGame?.character?.length !== charPageNum.current &&\r\n                <div\r\n                    className=\"characterTab_rightarrow\"\r\n                    onClick={() => {\r\n                        charPageNum.current++\r\n                        setIsUpdate(num => num + 1)\r\n                    }}>\r\n                    <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color=\"#222831\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CharacterTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../EssetModal.css\";\r\nimport \"./BackgroundTab.css\";\r\n\r\nfunction BackgroundTab({ gameDetail, setFileQueue, setTypeQueue, setBackBlobList, backBlobList, isInfo }) {\r\n    const [backgroundCards, setBackgroundCards] = useState(\"\");\r\n    const [blobCards, setBlobCards] = useState(\"\");\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 1])\r\n            setBackBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (gameDetail.background)\r\n            setBackgroundCards(gameDetail.background.map((element, index) => {\r\n                return <div className=\"backgroundTab_image_box\" key={index}>\r\n                    <img className=\"backgroundTab_image\"\r\n                        src={element.image}\r\n                        alt=\"img\"\r\n                    />\r\n                </div>\r\n            }))\r\n    }, [gameDetail]);\r\n\r\n    useEffect(() => {\r\n        if (backBlobList)\r\n            setBlobCards(backBlobList.map((element, index) => {\r\n                return <div className=\"backgroundTab_image_box\" key={index}>\r\n                    <img className=\"backgroundTab_image\"\r\n                        src={element}\r\n                        alt=\"img\"\r\n                    />\r\n                </div>\r\n            }))\r\n    }, [backBlobList]);\r\n\r\n    if (isInfo)\r\n        return (\r\n            <div className=\"backgroundTab_container_info\">\r\n                <div className=\"backgroundTab_Box_info\">\r\n                    <div>{backgroundCards} {blobCards}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div className=\"backgroundTab_container\">\r\n                <div className=\"backgroundTab_dropzone\">\r\n                    <MyDropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={10485761} // 10MB + 1\r\n                        accept=\"image/*\"\r\n                        type=\"background\"\r\n                        icon=\"image\"\r\n                    >\r\n                    </MyDropzone>\r\n                </div>\r\n                <div className=\"backgroundTab_Box\">\r\n                    <div>{backgroundCards} {blobCards}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default BackgroundTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../EssetModal.css\";\r\nimport \"./MusicTab.css\";\r\n\r\nfunction BgmTab({ gameDetail, setFileQueue, setTypeQueue, setBgmBlobList, bgmBlobList, setBgmBlobNames, bgmBlobNames }) {\r\n    const [bgmCards, setBgmCards] = useState([]);\r\n    const [blobCards, setBlobCards] = useState([]);\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 음원 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 2])\r\n            setBgmBlobNames(oldArray => [...oldArray, files[i]])\r\n            setBgmBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (gameDetail.bgm)\r\n            setBgmCards(gameDetail.bgm.map((element, index) => {\r\n                return (\r\n                    <div className=\"bgmTab_text_box\" key={index}>\r\n                        {element.name}\r\n                    </div>\r\n                )\r\n            }))\r\n    }, [gameDetail]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (bgmBlobList)\r\n            setBlobCards(bgmBlobList.map((element, index) => {\r\n                return (\r\n                    <div className=\"bgmTab_text_box\" key={index}>\r\n                        {bgmBlobNames[index].name}\r\n                    </div>\r\n                )\r\n            }))\r\n    }, [bgmBlobList]);\r\n\r\n    return (\r\n        <div className=\"bgmTab_container\">\r\n            <div className=\"bgmTab_dropzone\">\r\n                <MyDropzone\r\n                    onDrop={onDrop}\r\n                    multiple={true}\r\n                    maxSize={10485761} // 10MB + 1\r\n                    accept=\"audio/*\"\r\n                    type=\"bgm\"\r\n                    icon=\"audio\"\r\n                >\r\n                </MyDropzone>\r\n            </div>\r\n            <div className=\"bgmTab_Box\">\r\n                {bgmCards !== 0 && <div>{bgmCards}</div>}\r\n                {blobCards !== 0 && <div>{blobCards}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BgmTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../EssetModal.css\";\r\nimport \"./MusicTab.css\";\r\n\r\nfunction SoundTab({ gameDetail, setFileQueue, setTypeQueue, setSoundBlobList, soundBlobList, setSoundBlobNames, soundBlobNames }) {\r\n    const [soundCards, setSoundCards] = useState([]);\r\n    const [blobCards, setBlobCards] = useState([]);\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 음원 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 3])\r\n            setSoundBlobNames(oldArray => [...oldArray, files[i]])\r\n            setSoundBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (gameDetail.sound)\r\n            setSoundCards(gameDetail.sound.map((element, index) => {\r\n                return (\r\n                    <div className=\"bgmTab_text_box\" key={index}>\r\n                        {element.name}\r\n                    </div>\r\n                )\r\n            }))\r\n    }, [gameDetail]);\r\n\r\n    useEffect(() => {\r\n        if (soundBlobList)\r\n            setBlobCards(soundBlobList.map((element, index) => {\r\n                return (\r\n                    <div className=\"bgmTab_text_box\" key={index}>\r\n                        {soundBlobNames[index].name}\r\n                    </div>\r\n                )\r\n            }))\r\n    }, [soundBlobList]);\r\n\r\n    return (\r\n        <div className=\"bgmTab_container\">\r\n            <div className=\"bgmTab_dropzone\">\r\n                <MyDropzone\r\n                    onDrop={onDrop}\r\n                    multiple={true}\r\n                    maxSize={10485761} // 10MB + 1\r\n                    accept=\"audio/*\"\r\n                    type=\"sound\"\r\n                    icon=\"audio\"\r\n                >\r\n                </MyDropzone>\r\n            </div>\r\n            <div className=\"bgmTab_Box\">\r\n                {soundCards !== 0 && <div>{soundCards}</div>}\r\n                {blobCards !== 0 && <div>{blobCards}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundTab;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Modal, message } from \"antd\";\r\nimport Axios from \"axios\";\r\n\r\nimport EssetModalTab from \"./Tab/EssetModalTab\";\r\nimport CharacterTab from \"./Tab/CharacterTab\"\r\nimport BackgroundTab from \"./Tab/BackgroundTab\"\r\nimport BgmTab from \"./Tab/BgmTab\"\r\nimport SoundTab from \"./Tab/SoundTab\"\r\nimport { LOCAL_HOST } from \"../../../Config\";\r\nimport _ from \"lodash\";\r\nimport \"./EssetModal.css\";\r\n\r\nconst config = require('../../../../config/key');\r\n\r\nconst EssetModal = ({ gameDetail, gameId, visible, setTag, tag, setReload }) => {\r\n  const [fileQueue, setFileQueue] = useState([]);\r\n  const [typeQueue, setTypeQueue] = useState([]);\r\n\r\n  const [backBlobList, setBackBlobList] = useState([]);\r\n  const [bgmBlobList, setBgmBlobList] = useState([]);\r\n  const [bgmBlobNames, setBgmBlobNames] = useState([]);\r\n  const [soundBlobList, setSoundBlobList] = useState([]);\r\n  const [soundBlobNames, setSoundBlobNames] = useState([]);\r\n\r\n  const [blobGame, setBlobGame] = useState([]);\r\n  const charPageNum = useRef(0);\r\n  const [charFileQueue, setCharFileQueue] = useState([]);\r\n  const [charBlobList, setCharBlobList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (gameDetail)\r\n      setBlobGame(_.cloneDeep(gameDetail));\r\n  }, [gameDetail])\r\n\r\n  const revokeBlobList = () => {\r\n    charBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    backBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    bgmBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    soundBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n  }\r\n\r\n\r\n  const cancelUpload = () => {\r\n    revokeBlobList();\r\n    setTag(0)\r\n  }\r\n\r\n  let uploadFlag = false;\r\n  const upload = () => {\r\n    if (!uploadFlag) {\r\n      uploadFlag = true;\r\n      revokeBlobList();\r\n\r\n      uploadCharFiles()\r\n      if (fileQueue.length)\r\n        uploadFiles()\r\n    }\r\n  };\r\n\r\n  const uploadCharFiles = () => {\r\n    if (charFileQueue.length) {\r\n      let fileNum = Array.from({ length: blobGame.character.length }, () => 0);\r\n      let formData = new FormData();\r\n      for (var i = 0; i < blobGame.character.length; i++) {\r\n        //파일 합치기        \r\n        for (var j = 0; j < charFileQueue.length; j++) {\r\n          if (charFileQueue[j].index === i) {\r\n            fileNum[i] += charFileQueue[j].array.length\r\n            charFileQueue[j].array.forEach(function (value) {\r\n              formData.append('files', value);\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const config = {\r\n        header: { \"encrpyt\": \"multipart/form-data\" },\r\n      };\r\n\r\n\r\n      Axios.post(\"/api/game/uploadfile\", formData, config).then(\r\n        (response) => {\r\n          if (response.data.success) {\r\n            uploadCharDB(fileNum, response.data.files);\r\n          } else {\r\n            alert(\"캐릭터 DB 업로드 실패\");\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      uploadCharDB(null, null);\r\n    }\r\n  }\r\n\r\n  const uploadCharDB = (fileNum, files) => {\r\n    let cnt = 0\r\n    for (var i = 0; i < blobGame.character.length; i++) {\r\n      if (!gameDetail.character[i])\r\n        gameDetail.character.push({\r\n          name: \"\",\r\n          description: \"\",\r\n          image_array: [],\r\n        })\r\n      gameDetail.character[i].name = blobGame.character[i].name;\r\n      gameDetail.character[i].description = blobGame.character[i].description;\r\n\r\n      if (fileNum) {\r\n        for (var j = cnt; j < cnt + fileNum[i]; j++) {\r\n          gameDetail.character[i].image_array.push(process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[j].path}` : files[j].location)\r\n        }\r\n        cnt += fileNum[i]\r\n      }\r\n    }\r\n    const DBForm = {\r\n      gameId: gameId,\r\n      character: gameDetail.character\r\n    };\r\n    Axios.post(\r\n      \"/api/game/putCharDB\",\r\n      DBForm\r\n    ).then((response) => {\r\n      if (response.data.success) {\r\n        // character파일만 올리는 경우\r\n        if (!fileQueue.length) {\r\n          setReload(reload => reload + 1)\r\n          setTag(0)\r\n        }\r\n      } else {\r\n        message.error(\"DB 업데이트 실패\");\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  const uploadFiles = () => {\r\n    //upload file queue\r\n    let formData = new FormData();\r\n    fileQueue.forEach(value => {\r\n      formData.append('files', value);\r\n    })\r\n    const header = {\r\n      header: { \"encrpyt\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n    };\r\n\r\n    Axios.post(\"/api/game/uploadfile\", formData, header).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          uploadDB(response.data.files);\r\n        } else {\r\n          alert(\"업로드 실패\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  const uploadDB = (files) => {\r\n    const DBForm = { gameId: gameId, background: [], bgm: [], sound: [] };\r\n    for (var i = 0; i < files.length; i++) {\r\n      switch (typeQueue[i]) {\r\n        case 1: //background\r\n          DBForm.background.push({\r\n            name: files[i].originalname,\r\n            image: (process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        case 2:\r\n          DBForm.bgm.push({\r\n            name: files[i].originalname,\r\n            music: (process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        case 3:\r\n          DBForm.sound.push({\r\n            name: files[i].originalname,\r\n            music: (process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        default:\r\n          message.error(\"정의되지 않은 업로드 버튼입니다.\");\r\n          break;\r\n      }\r\n    }\r\n    Axios.post(\r\n      \"/api/game/putDB\",\r\n      DBForm\r\n    ).then((response) => {\r\n      if (response.data.success) {\r\n        setReload(reload => reload + 1)\r\n        setTag(0)\r\n      } else {\r\n        message.error(\"DB 업데이트 실패\");\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <Modal className=\"scenemake_modal\"\r\n      visible={visible}\r\n      okText=\"Upload\"\r\n      onCancel={cancelUpload}\r\n      onOk={upload}\r\n      width={1500}\r\n      closable={false}\r\n      keyboard={false}\r\n      maskClosable={false}\r\n      style={{ top: 50 }}\r\n    >\r\n      <div className=\"sceenmake_modal_container\">\r\n        <EssetModalTab setTag={setTag} tag={tag} />\r\n        {tag === 1 &&\r\n          <CharacterTab\r\n            blobGame={blobGame}\r\n            setBlobGame={setBlobGame}\r\n            charPageNum={charPageNum}\r\n            setCharFileQueue={setCharFileQueue}\r\n            setCharBlobList={setCharBlobList}\r\n          />\r\n        }\r\n        {tag === 2 &&\r\n          <BackgroundTab\r\n            gameDetail={gameDetail}\r\n            setFileQueue={setFileQueue}\r\n            setTypeQueue={setTypeQueue}\r\n            setBackBlobList={setBackBlobList}\r\n            backBlobList={backBlobList}\r\n          />\r\n        }\r\n        {tag === 3 &&\r\n          <BgmTab\r\n            gameDetail={gameDetail}\r\n            setFileQueue={setFileQueue}\r\n            setTypeQueue={setTypeQueue}\r\n            setBgmBlobList={setBgmBlobList}\r\n            bgmBlobList={bgmBlobList}\r\n            setBgmBlobNames={setBgmBlobNames}\r\n            bgmBlobNames={bgmBlobNames}\r\n          />\r\n        }\r\n        {tag === 4 &&\r\n          <SoundTab\r\n            gameDetail={gameDetail}\r\n            setFileQueue={setFileQueue}\r\n            setTypeQueue={setTypeQueue}\r\n            setSoundBlobList={setSoundBlobList}\r\n            soundBlobList={soundBlobList}\r\n            setSoundBlobNames={setSoundBlobNames}\r\n            soundBlobNames={soundBlobNames}\r\n          />\r\n        }\r\n      </div>\r\n    </Modal>\r\n\r\n  )\r\n}\r\nexport default EssetModal\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Form, message, Input } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MyDropzone from \"../../Dropzone/MyDropzone\";\r\nimport \"./UploadModal.css\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst PrivateOptions = [\r\n    { value: 0, label: \"Private\" },\r\n    { value: 1, label: \"Public\" },\r\n];\r\n\r\nconst CategoryOptions = [\r\n    { value: 0, label: \"살아남기\" },\r\n    { value: 1, label: \"로맨스\" },\r\n    { value: 2, label: \"스토리\" },\r\n    { value: 3, label: \"추리\" },\r\n    { value: 4, label: \"병맛\" },\r\n];\r\n\r\nconst UploadModal = ({ gameId, visible, setUploadModalState, onSubmit_saveScene, defaultTitle, defaultDescription }) => {\r\n    const user = useSelector((state) => state.user);\r\n    const [GameTitle, setGameTitle] = useState({ defaultTitle });\r\n    const [description, setDescription] = useState({ defaultDescription });\r\n    const [isPrivate, setIsPrivate] = useState(0);\r\n    const [category, setCategory] = useState(CategoryOptions[0].label);\r\n\r\n    const [blobURL, setBlobURL] = useState(\"\");\r\n    const [thumbFile, setThumbFile] = useState([]);\r\n\r\n    //! 렌더링의 타이밍으로 부득이하게..\r\n    useEffect(() => {\r\n        setGameTitle(defaultTitle)\r\n        setDescription(defaultDescription)\r\n    }, [defaultTitle, defaultDescription])\r\n\r\n\r\n    const onTitleChange = (event) => {\r\n        //최대 50자 제한\r\n        setGameTitle(event.currentTarget.value.substr(0, 50));\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescription(event.currentTarget.value);\r\n    };\r\n\r\n    const onPrivateChange = (event) => {\r\n        setIsPrivate(event.currentTarget.value);\r\n    };\r\n\r\n    const onCartegoryChange = (event) => {\r\n        let cat_idx = event.currentTarget.value;\r\n        setCategory(event.currentTarget[cat_idx].text);\r\n    };\r\n\r\n    const onDrop = (files) => {\r\n        if (!files[0]) {\r\n            message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n            return;\r\n        }\r\n        URL.revokeObjectURL(blobURL)\r\n\r\n        setBlobURL(URL.createObjectURL(files[0]))\r\n        setThumbFile(files)\r\n    };\r\n\r\n    const cancel = () => {\r\n        if (blobURL)\r\n            URL.revokeObjectURL(blobURL)\r\n        setUploadModalState(false)\r\n    }\r\n\r\n    const upload = async (event) => {\r\n        event.preventDefault();\r\n        if (GameTitle === \"\" || description === \"\" || blobURL === \"\") {\r\n            message.error(\"모든 정보를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        uploadThumb();\r\n        // setUploadModalState(false);\r\n        onSubmit_saveScene()\r\n    }\r\n\r\n    const uploadThumb = async () => {\r\n        //revoke blobURL\r\n        URL.revokeObjectURL(blobURL)\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { \"encrpyt\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n        };\r\n\r\n        thumbFile.forEach(value => {\r\n            formData.append('files', value);\r\n        })\r\n\r\n        await Axios.post(\"/api/game/uploadfile\", formData, config).then(\r\n            (response) => {\r\n                if (response.data.success) {\r\n                    uploadGame(process.env.NODE_ENV === 'development' ? response.data.files[0].path : response.data.files[0].location);\r\n                } else {\r\n                    message.error(\"업로드 실패\");\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const uploadGame = async (filePath) => {\r\n        const game_variables = {\r\n            gameId: gameId,\r\n            creator: user.userData._id,\r\n            title: GameTitle,\r\n            description: description,\r\n            thumbnail: filePath,\r\n            privacy: isPrivate,\r\n            category: category,\r\n            writer: [user.userData._id],\r\n        };\r\n\r\n        await Axios.post(\"/api/game/uploadgameInfo\", game_variables).then((response) => {\r\n            if (response.data.success) {\r\n\r\n            } else {\r\n                message.error(\"game제작 실패\");\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"scenemake_modal\"\r\n            visible={visible}\r\n            okText=\"업로드\"\r\n            cancelText=\"취소\"\r\n            onCancel={cancel}\r\n            onOk={upload}\r\n            width={1000}\r\n            centered={true}\r\n            closable={false}\r\n            style={{ top: 10 }}\r\n            bodyStyle={{ height: \"590px\" }}\r\n        >\r\n            <div className=\"scenemake_modal_form_container\">\r\n                <h4><b>게임 업로드</b></h4>\r\n                <Form onSubmit={upload}>\r\n\r\n                    <div className=\"scenemake_modal_form\">\r\n                        <div className=\"scenemake_dropzone_container\" >\r\n                            <MyDropzone\r\n                                onDrop={onDrop}\r\n                                multiple={false}\r\n                                maxSize={10485761} // 10MB + 1\r\n                                accept=\"image/*\"\r\n                                blobURL={blobURL}\r\n                                type=\"thumbnail\"\r\n                                icon=\"image\"\r\n                            >\r\n                            </MyDropzone>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"scenemake_modal_detail\">\r\n                        <div className=\"scenemake_modal_detail_title_container\">\r\n\r\n                            <h4><b>제목</b></h4>\r\n                            <textarea maxLength={30} className=\"scenemake_modal_detail_title\" onChange={onTitleChange} value={GameTitle} />\r\n                        </div>\r\n\r\n                        <div className=\"scenemake_modal_detail_description_container\">\r\n                            <h4><b>게임 설명</b></h4>\r\n                            <textarea maxLength={1000} className=\"scenemake_modal_detail_description\" rows=\"4\" onChange={onDescriptionChange} value={description} />\r\n                        </div>\r\n\r\n                        {/* <select onChange={onPrivateChange}>\r\n                            {PrivateOptions.map((item, index) => (\r\n                                <option key={index} value={item.value}>\r\n                                    {item.label}\r\n                                </option>\r\n                            ))}\r\n                        </select> */}\r\n                        <div className=\"scenemake_modal_detail_category_container\">\r\n                            <select className=\"scenemake_modal_category\" onChange={onCartegoryChange}>\r\n                                {CategoryOptions.map((item, index) => (\r\n                                    <option key={index} value={item.value}>\r\n                                        {item.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </Form>\r\n            </div>\r\n        </Modal>\r\n\r\n    )\r\n}\r\nexport default UploadModal;\r\n","import React, { useState } from \"react\";\r\nimport { Relay_Icon, Ending_Icon } from \"../../../svg/icon\";\r\nimport { Modal } from \"antd\";\r\nimport \"./EndingModal.css\";\r\n\r\nconst EndingModal = ({ isEnding, visible, setEndingModalState, onSubmit_saveScene }) => {\r\n    const [warning, setWarning] = useState(false);\r\n\r\n    const ending = (event) => {\r\n        event.preventDefault();\r\n        isEnding.current = true;\r\n        onSubmit_saveScene()\r\n        // setEndingModalState(false)\r\n    }\r\n\r\n    const choice = (event) => {\r\n        event.preventDefault();\r\n        isEnding.current = false;\r\n        onSubmit_saveScene()\r\n        setEndingModalState(false)\r\n    }\r\n\r\n    const cancel = () => {\r\n        setEndingModalState(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal className=\"scenemake_modal\"\r\n            title=\"진행 방식을 선택해주세요.\"\r\n            visible={visible}\r\n            width={900}\r\n            onCancel={cancel}\r\n            centered={true}\r\n            closable={false}\r\n            footer={null}\r\n            bodyStyle={{\r\n                height: \"370px\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n            }}\r\n        >\r\n            <div\r\n                className=\"ending_modal_cancel_btn\"\r\n                onClick={cancel}>\r\n                X\r\n            </div>\r\n            <div\r\n                className=\"ending_modal_choice_btn\"\r\n                onClick={choice}>\r\n                <Relay_Icon />\r\n                선택의 길\r\n            </div>\r\n            <div\r\n                className=\"ending_modal_ending_btn\"\r\n                onClick={() => setWarning(true)}>\r\n                <Ending_Icon />\r\n                엔딩\r\n            </div>\r\n            <Modal\r\n                visible={warning}\r\n                onOk={ending}\r\n                onCancel={() => setWarning(false)}\r\n                centered={true}\r\n                closable={false}\r\n                width={650}\r\n                bodyStyle={{\r\n                    height: \"170px\",\r\n                    display: \"flex\",\r\n                }}\r\n            >\r\n                <div className=\"ending_modal_warning_sign\"><svg color=\"#faad14\" viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"exclamation-circle\" width=\"20px\" height=\"20px\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"></path><path d=\"M464 688a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z\"></path></svg></div>\r\n                <div className=\"ending_modal_warning_textarea\">\r\n                    <h2>주의!</h2>\r\n                    <br></br>\r\n                    <h3>ENDING 체크 시, 이 게임의 엔딩으로 업로드 됩니다.</h3>\r\n                    <h3>따라서 이 씬에 연결되는 씬을 더이상 생성할 수 없습니다.</h3>\r\n                </div>\r\n            </Modal>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EndingModal;\r\n","var _eventHandlers = {}; // somewhere global\r\n\r\nexport const addEvent = (node, event, handler, capture) => {\r\n    if (!(node in _eventHandlers)) {\r\n        // _eventHandlers stores references to nodes\r\n        _eventHandlers[node] = {};\r\n    }\r\n    if (!(event in _eventHandlers[node])) {\r\n        // each entry contains another entry for each event type\r\n        _eventHandlers[node][event] = [];\r\n    }\r\n    // capture reference\r\n    _eventHandlers[node][event].push([handler, capture]);\r\n    node.addEventListener(event, handler, capture);\r\n}\r\n\r\nexport const removeAllEvents = (node, event) => {\r\n    if (node in _eventHandlers) {\r\n        var handlers = _eventHandlers[node];\r\n        if (event in handlers) {\r\n            var eventHandlers = handlers[event];\r\n            for (var i = eventHandlers.length; i--;) {\r\n                var handler = eventHandlers[i];\r\n                node.removeEventListener(event, handler[0], handler[1]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React, { useRef, memo, useState, useEffect, useMemo } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport './Character.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { popCharacter, selectCharacter, updateCharacter, orderCharacter } from '../../../_actions/characterSelected_actions';\r\nimport { addEvent, removeAllEvents } from '../handleEventListener';\r\nimport { faAngleDoubleDown, faAngleDown, faTimes, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { useConstructor } from '../useConstructor';\r\n\r\nfunction Character(props) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n  const { charSchema, GameCharacterList, index, setName } = props;\r\n  const element_X = useRef();\r\n  const element_Y = useRef();\r\n  const [clicked, setClicked] = useState(true);\r\n  const [moving, setMoving] = useState(true);\r\n  const [sizing, setSizing] = useState(false);\r\n  const [imgWidth, setImgWidth] = useState(0);\r\n  const [zIndex,setZIndex] = useState(96);\r\n\r\n  const background_element = document.getElementById(\"backgroundImg_container\");\r\n  let pivot = [0, 0];\r\n  let drag = false;\r\n  function mouseMove(e) {\r\n    const page = [e.pageX, e.pageY];\r\n    if (drag && clicked && moving) {\r\n      if (pivot[0] - e.pageX > 3 || pivot[1] - e.pageY > 3 || pivot[0] - e.pageX < -3 || pivot[1] - e.pageY < -3) {\r\n        const background_width = background_element.offsetWidth;\r\n        const background_height = background_element.offsetHeight;\r\n        const prev_posX = Number(element_X.current.style.left.replace(/%/g, ''));\r\n        const prev_posY = Number(element_Y.current.style.top.replace(/%/g, '').replace(/px/g, ''));\r\n        const next_posX = prev_posX + 100 * (e.pageX - pivot[0]) / background_width;\r\n        const next_posY = prev_posY + 100 * (e.pageY - pivot[1]) / background_height;\r\n        element_X.current.style.left = String(next_posX) + '%';\r\n        element_Y.current.style.top = String(next_posY) + '%';\r\n        pivot = page;\r\n      }\r\n    } else if (drag && clicked && sizing) {\r\n      if (pivot[0] - e.pageX > 7 || pivot[0] - e.pageX < -7) {\r\n        const image_width = document.getElementById(`${index}`).offsetWidth;\r\n        const prev_size = Number(element_Y.current.style.height.replace(/%/g, ''));\r\n        let next_size = 0;\r\n        if (pivot[0] - page[0] < 0) {\r\n          next_size = prev_size * (image_width - 1 * (pivot[0] - page[0])) / image_width;\r\n        } else {\r\n          next_size = prev_size * (image_width - 1 * (pivot[0] - page[0])) / image_width;\r\n        }\r\n        if (next_size > 20) {\r\n          element_Y.current.style.height = String(next_size) + '%';\r\n        }\r\n        pivot = page;\r\n      }\r\n    }\r\n    setImgWidth(document.getElementById(`${index}`).offsetWidth);\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!background_element) {\r\n      return;\r\n    }\r\n    // addEvent(background_element, \"mousemove\", mouseMove, false);\r\n    // addEvent(background_element, \"mouseup\", onMouseUp, false);\r\n    setImgWidth(document.getElementById(`${index}`).offsetWidth);\r\n    return () => {\r\n      removeAllEvents(background_element, \"mousemove\");\r\n      removeAllEvents(background_element, \"mouseup\");\r\n    }\r\n  }, [CharacterList])\r\n\r\n  const onMouseDown = (e) => {\r\n    if (!background_element) {\r\n      return;\r\n    }\r\n    addEvent(background_element, \"mousemove\", mouseMove, false);\r\n    addEvent(background_element, \"mouseup\", onMouseUp, false);\r\n    pivot = [e.pageX, e.pageY];\r\n    drag = true;\r\n    dispatch(selectCharacter({ ...GameCharacterList[charSchema.index], index: charSchema.index }));\r\n    setZIndex(97);\r\n    setName(GameCharacterList[charSchema.index]?.name);\r\n  }\r\n\r\n  const onMouseUp = (e) => {\r\n    removeAllEvents(background_element, \"mousemove\");\r\n    removeAllEvents(background_element, \"mouseup\");\r\n    const dataToSubmit = {\r\n      oldArray: CharacterList,\r\n      data: {\r\n        posX: Number(element_X.current.style.left.replace(/%/g, '')),\r\n        posY: Number(element_Y.current.style.top.replace(/%/g, '').replace(/px/g, '')),\r\n        size: Number(element_Y.current.style.height.replace(/%/g, ''))\r\n      },\r\n      index\r\n    };\r\n    dispatch(updateCharacter(dataToSubmit))\r\n    pivot = [e.pageX, e.pageY];\r\n    drag = false;\r\n    setSizing(false);\r\n    setMoving(true);\r\n    setZIndex(96)\r\n    dispatch(orderCharacter({ \r\n      oldArray: CharacterList ? updateCharacter(dataToSubmit).payload : null, \r\n      index: charSchema.index, \r\n      num: \"pull\" \r\n    }))\r\n  }\r\n\r\n  const onMouseOver = (e) => {\r\n    setMoving(false);\r\n    setSizing(true);\r\n  }\r\n\r\n  const onMouseOut = (e) => {\r\n    setMoving(true);\r\n    setSizing(false);\r\n  }\r\n\r\n  const onClickDelete = () => {\r\n    dispatch(popCharacter({ oldArray: CharacterList, index: charSchema.index }));\r\n  }\r\n\r\n  const onClickOrder = (num) => {\r\n    dispatch(orderCharacter({ oldArray: CharacterList, index: charSchema.index, num }));\r\n  }\r\n  return (\r\n    <div\r\n      ref={element_X}\r\n      key={index}\r\n      className=\"CharacterBlock\"\r\n      style={{ left: `${charSchema.posX}%`, zIndex: `${zIndex}` }}\r\n    >\r\n      <div\r\n        ref={element_Y}\r\n        className=\"character__container\"\r\n        style={{\r\n          height: `${charSchema.size}%`,\r\n          top: `${charSchema.posY}%`\r\n        }}\r\n      >\r\n        <img\r\n          onMouseDown={onMouseDown}\r\n          className={\"characterImg_clicked\"}\r\n          id={`${index}`}\r\n          src={charSchema.image}\r\n          alt=\"img\"\r\n        />\r\n        {imgWidth &&\r\n          <>\r\n            <FontAwesomeIcon\r\n              icon={faTimesCircle}\r\n              className=\"bttn btn_character_delete\"\r\n              style={{ left: `${imgWidth - 17}px` }}\r\n              onClick={onClickDelete}\r\n            />\r\n            <FontAwesomeIcon\r\n              icon={faAngleDoubleDown}\r\n              className=\"bttn btn_character_Doubledown\"\r\n              style={{ left: `${imgWidth - 34}px` }}\r\n              onClick={() => { onClickOrder(\"double\") }}\r\n            /> \r\n            <FontAwesomeIcon\r\n              icon={faAngleDown}\r\n              className=\"bttn btn_character_down\"\r\n              style={{ left: `${imgWidth - 51}px` }}\r\n              onClick={() => onClickOrder(\"\")}\r\n            />\r\n\r\n            <div\r\n              className={`${sizing ? \"bttn btn_sizing_clicked\" : \"bttn btn_sizing\"}`}\r\n              onMouseOver={onMouseOver}\r\n              onMouseOut={onMouseOut}\r\n              onMouseDown={onMouseDown}\r\n              style={{ left: `${imgWidth - 3}px` }}\r\n            ></div>\r\n          </>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Character)\r\n","import React, { memo, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport Character from \"../../functions/CharacterModal/Character\";\r\n\r\nimport \"./CharacterBlock.css\";\r\nconst CharacterBlock = (props) => {\r\n  const { GameCharacterList, setName } = props;\r\n\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n  const characterblocks = CharacterList?.map((charSchema, index) => {\r\n    return (\r\n      <div key={charSchema.index}>\r\n        <Character\r\n          GameCharacterList={GameCharacterList}\r\n          index={index}\r\n          charSchema={charSchema}\r\n          setName={setName}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    CharacterList?.length > 0 &&\r\n    <div className=\"CharacterBlocks\" id=\"CharacterBlocks\">\r\n      {characterblocks}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default memo(CharacterBlock);\r\n","import { message } from 'antd';\r\nimport React, { memo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { pushCharacter, selectCharacter } from '../../../../_actions/characterSelected_actions';\r\nimport './CharacterInfoDisplay.css';\r\n\r\nfunction CharacterInfoDisplay({ setName, character, GameCharacterList }) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n  const onClick_putCharacter = (index, url) => {\r\n    const characterSchema = {\r\n      index: character.index,\r\n      image: url,\r\n      posX: 30,\r\n      posY: 15,\r\n      reverse: 0,\r\n      size: 90,\r\n    }\r\n    dispatch(pushCharacter({ oldArray: CharacterList, characterSchema }))\r\n    setName(character?.name)\r\n  }\r\n\r\n  const onClick_selectCharacter = (index) => {\r\n    setName(GameCharacterList[index].name)\r\n    dispatch(selectCharacter({ ...GameCharacterList[index], index: index }));\r\n  }\r\n\r\n  const CharacterListImages = CharacterList?.map((character, index) => {\r\n    // const img = new Image();\r\n    // img.src = character.image;\r\n    return (\r\n      <div key={index}>\r\n        <div\r\n          className=\"characterList_Info\"\r\n          onClick={() => { onClick_selectCharacter(character.index) }}\r\n        >\r\n          <img\r\n            src={character?.image}\r\n            alt=\"\"\r\n            // className={img.height > img.width ?\r\n            //   \"characterList_image_height\" : \"characterList_image_width\"}\r\n            className=\"characterList_image_height\"\r\n          />\r\n          {/* <div className=\"characterList_Text\">\r\n        x: {character.posX} y: {character.posY} size: {character.size}\r\n      </div> */}\r\n        </div>\r\n        <div>{character?.name}이름 삭제</div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const characterDetailImages = character?.image_array?.map((url, index) => {\r\n    // const img = new Image();\r\n    // img.src = url;\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"image_array__box\"\r\n        onClick={() => { onClick_putCharacter(index, url) }}\r\n      >\r\n        <img\r\n          src={url}\r\n          alt=\"\"\r\n          // className={img.height > img.width ?\r\n          //   \"image_array_image_height\" : \"image_array_image_width\"}\r\n          className=\"image_array_image\"\r\n        />\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"image_array__container\">\r\n      {/* <div className=\"characterList__container\">\r\n        {CharacterListImages}\r\n      </div> */}\r\n      {characterDetailImages}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CharacterInfoDisplay)\r\n","import { message } from 'antd';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detachCharacter, selectCharacter } from '../../../_actions/characterSelected_actions';\r\nimport { useConstructor } from '../useConstructor';\r\nimport Character from './Character';\r\nimport CharacterInfoDisplay from './CharacterInfoDisplay/CharacterInfoDisplay';\r\nimport './CharacterModal.css';\r\n\r\nfunction CharacterModal({ GameCharacterList, setName }) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n  // const onClick_detachCharacter = () => {\r\n  //   dispatch(detachCharacter());\r\n  // }\r\n\r\n  const currentCharacter = useSelector((state) => state.character);\r\n  useConstructor(()=>{dispatch(detachCharacter())})\r\n  const onClick_removeCharacter = () => {\r\n    let index = currentCharacter.characterSelected.index;\r\n    dispatch({ oldArray: CharacterList, index })\r\n    setName(\"\")\r\n  }\r\n\r\n  const [isAdded, setIsAdded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let flag = 0;\r\n    for (let i = 0; i < CharacterList?.length; i++) {\r\n      if (CharacterList[i].index === currentCharacter.characterSelected.index) {\r\n        flag = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (flag === 1) {\r\n      setIsAdded(true);\r\n    } else {\r\n      setIsAdded(false);\r\n    }\r\n\r\n  }, [currentCharacter, CharacterList])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"modal\">\r\n        {/* <div onClick={onClick_detachCharacter}>캐릭터 선택 해제</div> */}\r\n        <CharacterInfoDisplay\r\n          setName={setName}\r\n          GameCharacterList={GameCharacterList}\r\n          character={currentCharacter.characterSelected}\r\n        />\r\n        {/* {isAdded && <div onClick={onClick_removeCharacter}>삭제</div>} */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CharacterModal)\r\n","import { Switch } from 'antd';\r\nimport React, { memo } from 'react';\r\nimport '../SceneMakePage.css';\r\nimport './SceneBox.css';\r\n\r\nfunction SceneBox(props) {\r\n    const { CutList, CutNumber, displayCut, setCutNumber,\r\n        Hover, setHover, EmptyCutList, saveCut } = props;\r\n\r\n    const onClick_GotoCut = (index) => {\r\n        if (CutNumber > 29) {\r\n            displayCut(index);\r\n            setCutNumber(index);\r\n            return;\r\n        }\r\n        if (CutNumber !== index) {\r\n            saveCut();\r\n            displayCut(index);\r\n            setCutNumber(index);\r\n        }\r\n    };\r\n\r\n    const display_SceneBox = CutList.map((Cut, index) => {\r\n        if (CutNumber === index) {\r\n            return (\r\n                (<div className=\"scene__CurrentSceneBox\" key={`${index}`}></div>)\r\n            );\r\n        } else {\r\n            if (Hover) {\r\n                return (\r\n                    <div\r\n                        className=\"scene__SceneBox_color\"\r\n                        key={`${index}`}\r\n                        onMouseOver={() => onClick_GotoCut(index)}\r\n                    ></div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div\r\n                        className=\"scene__SceneBox_color\"\r\n                        key={`${index}`}\r\n                        onClick={() => onClick_GotoCut(index)}\r\n                    ></div>\r\n                )\r\n            }\r\n        }\r\n    });\r\n\r\n    const display_EmptyBox = EmptyCutList.map((EmptyCut, index) => {\r\n        if (CutNumber - CutList.length === index) {\r\n            return (\r\n                <div className=\"scene__CurrentSceneBox\" key={`${index}`}></div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"scene__EmptySceneBox\" key={`${index}`}></div>\r\n            );\r\n        }\r\n    });\r\n    return (\r\n        <div className=\"box sceneBox\">\r\n            {display_SceneBox}\r\n            {display_EmptyBox}\r\n            {/* <Switch\r\n                checked={Hover}\r\n                checkedChildren={CutNumber}\r\n                unCheckedChildren={CutNumber}\r\n                onChange={() => { setHover((state) => !state) }}\r\n                size=\"small\"\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(SceneBox)\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BackgroundSideBar from \"./SideBar/BackgroundSideBar\";\r\nimport CharacterSideBar from \"./SideBar/CharacterSideBar\";\r\nimport BgmSideBar from \"./SideBar/BgmSideBar\";\r\nimport SoundSideBar from \"./SideBar/SoundSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useLocation } from \"react-router\";\r\nimport EssetModal from './EssetModal';\r\nimport UploadModal from './UploadModal';\r\nimport EndingModal from './EndingModal';\r\nimport useKey from \"../../../functions/useKey\";\r\nimport CharacterBlock from \"../../GamePlayPage/CharacterBlock\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LoadingPage from \"../../GamePlayPage/LoadingPage\";\r\nimport { gameLoadingPage } from \"../../../../_actions/gamePlay_actions\";\r\nimport { navbarControl } from \"../../../../_actions/controlPage_actions\";\r\nimport CharacterModal from \"../../../functions/CharacterModal/CharacterModal\";\r\nimport SceneBox from \"./SceneBox/SceneBox\";\r\nimport Clock from \"react-live-clock\"\r\nimport axios from \"axios\";\r\nimport { SVG } from \"../../../svg/icon\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { socket } from \"../../../App\";\r\nimport { PlayCircleOutlined, PauseCircleOutlined, StopOutlined } from '@ant-design/icons';\r\nimport { detachCharacter, popCharacter, setCharacterList } from \"../../../../_actions/characterSelected_actions\";\r\nimport \"./SceneMakePage.css\";\r\n\r\nimport { LOCAL_HOST } from \"../../../Config\";\r\nimport { TextBlock } from \"../../GamePlayPage/TextBlock\";\r\nimport { MS_PER_HR } from \"../../../App\"\r\nimport moment from \"moment\";\r\nimport SceneEndingPage from \"../SceneEndingPage/SceneEndingPage\";\r\n\r\nlet bgm_audio = new Audio();\r\nlet sound_audio = new Audio();\r\nconst config = require('../../../../config/key')\r\nconst SceneMakePage = (props) => {\r\n    // window.addEventListener('beforeunload', (event) => {\r\n    //     // 표준에 따라 기본 동작 방지\r\n    //     event.preventDefault();\r\n    //     // Chrome에서는 returnValue 설정이 필요함\r\n    //     event.returnValue = '';\r\n    // });\r\n    const TEXT_MAX_LENGTH = 50;\r\n    const LIMIT_HR = 1;\r\n    const LIMIT_TO_MS = (LIMIT_HR * 60) * 60 * 1000\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { gameId, sceneId } = location.state\r\n    let exp;\r\n    // const {gameId,sceneId} = location.state ;\r\n    if (location.state === undefined) {\r\n        window.history.back();\r\n        // return <div></div>;\r\n    }\r\n    message.config({ maxCount: 2 })\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const CharacterList = useSelector((state) => state.character.CharacterList);\r\n\r\n    const padding = 0.1;\r\n    const minSize = 300;\r\n    const ratio = 1080 / 1920;\r\n\r\n    const [windowWidth, setwindowWidth] = useState(window.innerWidth);\r\n    const [windowHeight, setwindowHeight] = useState(window.innerHeight);\r\n    const [newScreenSize, setNewScreenSize] = useState({});\r\n\r\n    //modal\r\n    const [essetModalState, setEssetModalState] = useState(0);\r\n    const [uploadModalState, setUploadModalState] = useState(false);\r\n    const [endingModalState, setEndingModalState] = useState(false);\r\n    const [reload, setReload] = useState(0);\r\n\r\n    const [SidBar_script, setSidBar_script] = useState(true);\r\n\r\n    const [BackgroundImg, setBackgroundImg] = useState(`${config.STORAGE}/uploads/defaultBackground.png`);\r\n    const [Script, setScript] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [writer, setWriter] = useState(null);\r\n    const [BgmFile, setBgmFile] = useState({\r\n        name: \"\",\r\n        music: \"\",\r\n    });\r\n    const [SoundFile, setSoundFile] = useState({\r\n        name: \"\",\r\n        music: \"\",\r\n    });\r\n\r\n    const isFirstScene = useRef(false);\r\n    const [expTime, setExpTime] = useState(0)\r\n    const [CutNumber, setCutNumber] = useState(0);\r\n    const [Hover, setHover] = useState(false);\r\n\r\n    const [CutList, setCutList] = useState([]);\r\n    const [EmptyCutList, setEmptyCutList] = useState(\r\n        Array.from({ length: 30 }, () => 0)\r\n    );\r\n\r\n    const useConstructor = (cb) => {\r\n        const [isInited, setInit] = useState(false);\r\n        if (isInited) return;\r\n        cb();\r\n        setInit(true);\r\n    }\r\n\r\n    useConstructor(() => {\r\n        dispatch(setCharacterList({ CharacterList: [] }));\r\n    });\r\n\r\n    let scene;\r\n    useEffect(() => {\r\n        dispatch(navbarControl(false));\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (user.userData) {\r\n            socket.emit(\"leave room\", { room: user.userData?._id?.toString() });\r\n            socket.emit(\"room\", { room: user.userData?._id?.toString() });\r\n        }\r\n        socket.off(\"timeout_making\")\r\n        socket.on(\"timeout_making\", data => {\r\n            // console.log(\"GO HOME\")\r\n            props.history.replace(\"/\")\r\n        })\r\n\r\n    }, [user])\r\n\r\n    //! scene save할 때 필요한 정보 갖고오기\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await axios.get(`/api/game/getSceneInfo/${sceneId}`)\r\n\r\n            const validation = await axios.post(`/api/game/scene/validate`, { sceneId, gameId, isMaking: true })\r\n            // console.log(res.data)\r\n            if (res.data.success && validation.data.success) { scene = res.data.scene; }\r\n            else {\r\n                // console.log(\"get scene ERROR\");\r\n                props.history.replace(\"/\");\r\n                return;\r\n            }\r\n            // 임시저장한 녀석\r\n\r\n            setWriter(scene.writer);\r\n            const tmpExpTime = new Date(scene.createdAt).getTime() + LIMIT_TO_MS\r\n            setExpTime(tmpExpTime)\r\n            if (scene.cutList.length) {\r\n\r\n                if (scene.isFirst) {\r\n                    isFirstScene.current = true;\r\n                }\r\n\r\n                // 임시저장된 녀석 불러오기\r\n                setCutList(scene.cutList);\r\n                const tmpFirstCut = scene.cutList[0]\r\n                dispatch(setCharacterList({ CharacterList: tmpFirstCut.characterList }));\r\n                setBackgroundImg(tmpFirstCut.background)\r\n                setName(tmpFirstCut.name);\r\n                setScript(tmpFirstCut.script);\r\n                setCutNumber(scene.cutList.length - 1);\r\n                dispatch(gameLoadingPage(0));\r\n                dispatch(gameLoadingPage(1));\r\n\r\n            }\r\n            // 껍데기\r\n            else {\r\n                if (!scene.isFirst) {\r\n                    const variable = { sceneId: scene.prevSceneId };\r\n                    Axios.post(\"/api/scene/scenedetail\", variable)\r\n                        .then((response) => {\r\n                            //! 이전 씬의 마지막 컷 설정 유지\r\n                            if (response.data.success) {\r\n                                const lastCut = response.data.lastCut;\r\n                                dispatch(setCharacterList({ CharacterList: lastCut.characterList }));\r\n                                setBackgroundImg(lastCut.background);\r\n                                setName(lastCut.name);\r\n                                dispatch(gameLoadingPage(0));\r\n                                dispatch(gameLoadingPage(1));\r\n                            } else {\r\n                                message.error(\"이전 Scene의 정보를 불러오는데 실패했습니다.\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    isFirstScene.current = true;\r\n                }\r\n            }\r\n            setReload(reload => reload + 1)\r\n        })();\r\n    }, [])\r\n\r\n    const onScriptChange = (event) => {\r\n        if (event.currentTarget.value.length === (TEXT_MAX_LENGTH + 1)) {\r\n            message.error({\r\n                content: '글자 수 제한을 초과하였습니다.',\r\n            });\r\n        }\r\n        else {\r\n            if (event.currentTarget.value[event.currentTarget.value.length - 1] !== '\\n') {\r\n                setScript(event.currentTarget.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onNameChange = (event) => {\r\n        setName(event.currentTarget.value);\r\n    };\r\n    const characterSidebarElement = useRef();\r\n    const backgroundSidebarElement = useRef();\r\n    const bgmSidebarElement = useRef();\r\n    const soundSidebarElement = useRef();\r\n    const scriptElement = useRef();\r\n    const nameElement = useRef();\r\n\r\n    const makeVisible = (element) => {\r\n        makeInvisible()\r\n        element.current.style.display = 'block'\r\n    }\r\n\r\n    const makeInvisible = () => {\r\n        characterSidebarElement.current.style.display = 'none'\r\n        backgroundSidebarElement.current.style.display = 'none'\r\n        bgmSidebarElement.current.style.display = 'none'\r\n        soundSidebarElement.current.style.display = 'none'\r\n    }\r\n    const sideTabIndex = useRef(1);\r\n    const onClick_character = () => {\r\n        if (characterSidebarElement.current.style.display === 'none') {\r\n            makeVisible(characterSidebarElement);\r\n            setReload(reload => reload + 1);\r\n            sideTabIndex.current = 1;\r\n        }\r\n    };\r\n\r\n    const onClick_background = () => {\r\n        if (backgroundSidebarElement.current.style.display === 'none') {\r\n            makeVisible(backgroundSidebarElement);\r\n            setReload(reload => reload + 1);\r\n            sideTabIndex.current = 2;\r\n        }\r\n    };\r\n\r\n\r\n    const onClick_bgm = () => {\r\n        if (bgmSidebarElement.current.style.display === 'none') {\r\n            makeVisible(bgmSidebarElement);\r\n            setReload(reload => reload + 1);\r\n            sideTabIndex.current = 3;\r\n        }\r\n    };\r\n\r\n    const onClick_sound = () => {\r\n        if (soundSidebarElement.current.style.display === 'none') {\r\n            makeVisible(soundSidebarElement);\r\n            setReload(reload => reload + 1);\r\n            sideTabIndex.current = 4;\r\n        }\r\n    };\r\n\r\n    const onClick_script = () => {\r\n        if (SidBar_script) {\r\n            setSidBar_script(false);\r\n        } else {\r\n            setSidBar_script(true);\r\n        }\r\n    };\r\n\r\n    const onClick_bgm_player = () => {\r\n        if (bgm_audio.paused) bgm_audio.play();\r\n        else bgm_audio.pause();\r\n        setReload(reload => reload + 1)\r\n    };\r\n\r\n    const onClick_sound_player = () => {\r\n        if (sound_audio.paused) sound_audio.play();\r\n        else sound_audio.pause();\r\n        setReload(reload => reload + 1)\r\n    };\r\n\r\n    function handleEnter(event) {\r\n        if (nameElement.current === document.activeElement)\r\n            scriptElement.current.focus();\r\n        else if (scriptElement.current === document.activeElement)\r\n            onSubmit_nextCut(event);\r\n    }\r\n\r\n    function handleTab(event) {\r\n        if (nameElement.current === document.activeElement)\r\n            scriptElement.current.focus();\r\n        else if (scriptElement.current === document.activeElement)\r\n            nameElement.current.focus();\r\n    }\r\n\r\n    useKey(\"Enter\", handleEnter);\r\n\r\n    const saveCut = () => {\r\n        const Cut = {\r\n            characterList: CharacterList,\r\n            background: BackgroundImg,\r\n            script: Script,\r\n            name: Name,\r\n            bgm: BgmFile,\r\n            sound: SoundFile,\r\n        };\r\n        setSoundFile({\r\n            name: \"\",\r\n            music: \"\",\r\n        });\r\n\r\n        setCutList((oldArray) => [\r\n            ...oldArray.slice(0, CutNumber),\r\n            Cut,\r\n            ...oldArray.slice(CutNumber + 1, 31),\r\n        ]);\r\n        if (CutList.length === CutNumber) {\r\n            setEmptyCutList((oldArray) => [\r\n                ...oldArray.slice(0, EmptyCutList.length - 1),\r\n            ]);\r\n        }\r\n    };\r\n\r\n    const displayCut = (index) => {\r\n        dispatch(setCharacterList({ CharacterList: CutList[index]?.characterList }));\r\n        setBackgroundImg(CutList[index]?.background);\r\n        setScript(CutList[index]?.script);\r\n        setName(CutList[index]?.name);\r\n        setBgmFile(CutList[index]?.bgm);\r\n        setSoundFile(CutList[index]?.sound);\r\n        if (CutList[index]?.bgm.music) {\r\n            bgm_audio.src = CutList[index]?.bgm.music;\r\n            bgm_audio.play();\r\n        } else {\r\n            bgm_audio.pause();\r\n        }\r\n        if (CutList[index]?.sound.music) {\r\n            sound_audio.src = CutList[index]?.sound.music;\r\n            sound_audio.play();\r\n        } else {\r\n            sound_audio.pause();\r\n        }\r\n    };\r\n\r\n    const onRemove_character = (index) => {\r\n        dispatch(popCharacter({\r\n            oldArray: CharacterList,\r\n            index\r\n        }))\r\n    };\r\n\r\n    const onSubmit_nextCut = (event) => {\r\n        event.preventDefault();\r\n        if (CutNumber >= 29) {\r\n            message.error(\"더이상 Cut을 생성할 수 없습니다.\");\r\n            return;\r\n        } else if (CutNumber === 24) {\r\n            message.warning(\"생성 가능한 Cut이 5개 남았습니다.\");\r\n        }\r\n\r\n        saveCut();\r\n\r\n        if (CutNumber < CutList.length - 1) {\r\n            displayCut(CutNumber + 1);\r\n        } else {\r\n            setScript(\"\");\r\n        }\r\n        setCutNumber((oldNumber) => oldNumber + 1);\r\n        scriptElement.current.focus()\r\n\r\n    };\r\n\r\n    const onRemove_cut = () => {\r\n        if (CutList.length <= 1) {\r\n            // setCutList([]);\r\n            // setEmptyCutList((oldArray) => [\r\n            //     0, ...oldArray\r\n            // ]);\r\n            // displayCut(0);\r\n            // setCutNumber(0);\r\n            message.info('첫번째 컷 입니다.');\r\n            return;\r\n        } else if (CutList.length - 1 <= CutNumber) {\r\n            if (CutList[CutNumber]) {\r\n                setCutList((oldArray) => [\r\n                    ...oldArray.slice(0, CutNumber)\r\n                ]);\r\n                setEmptyCutList((oldArray) => [\r\n                    0, ...oldArray\r\n                ]);\r\n            }\r\n            displayCut(CutNumber - 1);\r\n            setCutNumber(CutNumber - 1);\r\n            return;\r\n        }\r\n        message.success(`${CutNumber + 1}번째 컷이 삭제되었습니다.`);\r\n        setCutList((oldArray) => [\r\n            ...oldArray.slice(0, CutNumber),\r\n            ...oldArray.slice(CutNumber + 1, 31),\r\n        ]);\r\n        setEmptyCutList((oldArray) => [\r\n            0, ...oldArray\r\n        ]);\r\n        displayCut(CutNumber + 1);\r\n    }\r\n\r\n    const onSubmit_first = () => {\r\n        setUploadModalState(true)\r\n    }\r\n\r\n    const isEnding = useRef(false);\r\n    const onSubmit = () => {\r\n        setEndingModalState(true)\r\n    }\r\n\r\n    const onSubmit_saveScene = async (event, isTmp = 0) => {\r\n        if (CutList.length < 1 || (CutList.length === 1 && CutList[CutNumber])) {\r\n            message.error(\"최소 2개의 컷을 생성해주세요.\");\r\n            return;\r\n        }\r\n\r\n        bgm_audio.pause();\r\n        const submitCut = {\r\n            characterList: CharacterList,\r\n            background: BackgroundImg,\r\n            script: Script,\r\n            name: Name,\r\n            bgm: BgmFile,\r\n            sound: SoundFile,\r\n        };\r\n\r\n        const submitCutList = [\r\n            ...CutList.slice(0, CutNumber),\r\n            submitCut,\r\n            ...CutList.slice(CutNumber + 1, 31),\r\n        ];\r\n        if (isTmp || isEnding || window.confirm(\"게임 제작을 완료하시겠습니까?\")) {\r\n\r\n            const variable = {\r\n                cutList: submitCutList,\r\n                isEnding: isEnding.current,\r\n                gameId,\r\n                sceneId,\r\n                isTmp,\r\n            };\r\n\r\n            const response = await Axios.post(`/api/scene/save`, variable)\r\n\r\n            if (response.data.success) {\r\n                dispatch(detachCharacter());\r\n                message\r\n                    .loading(\"게임 업로드 중..\", 1.0)\r\n                    .then(() => {\r\n                        if (!isTmp) {\r\n                            message.success(\"게임 제작이 완료되었습니다.\", 1.0)\r\n                        }\r\n                        else {\r\n                            message.success(\"업로드 성공.\")\r\n                        }\r\n                    }\r\n                    ).then(() => {\r\n                        if (!isTmp && isFirstScene.current) {\r\n                            history.replace(\r\n                                `/game/${gameId}`\r\n                            );\r\n\r\n                        } else if (!isTmp) {\r\n                            socket.emit(\"final_submit\", {\r\n                                prevSceneId: response.data.scene.prevSceneId,\r\n                                sceneId: response.data.scene._id,\r\n                                title: response.data.scene.title,\r\n                                userId: user.userData._id.toString(),\r\n                            })\r\n                            history.replace({\r\n                                pathname: `/gameplay`,\r\n                                state: {\r\n                                    sceneId: response.data.scene._id,\r\n                                    gameId: gameId,\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n            } else if (response.data.msg === 'expired') {\r\n                message.error(\"제작 유효기간이 만료되었습니다..\", 1.0);\r\n                props.history.replace({\r\n                    pathname: `/gameplay`,\r\n                    state: {\r\n                        sceneId: response.data.prevSceneId,\r\n                        gameId: gameId,\r\n                    }\r\n                })\r\n                return;\r\n            }\r\n            else {\r\n                message.error(\"DB에 문제가 있습니다.\");\r\n            }\r\n\r\n        } else {\r\n            message.error(\"제출 취소\");\r\n        }\r\n    };\r\n    const onDeleteScene = () => {\r\n        if (window.confirm(\"게임 제작을 취소하시겠습니까?\")) {\r\n            Axios.delete('/api/scene', {\r\n                data: {\r\n                    gameId: gameId,\r\n                    sceneId: sceneId,\r\n                    isFirst: isFirstScene.current,\r\n                    userId: user.userData._id\r\n                }\r\n            })\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        //! 다 삭제되면 emptyNum 올려주기\r\n                        if (isFirstScene.current == false) {\r\n                            socket.emit(\"empty_num_increase\",\r\n                                {\r\n                                    scene_id: response.data.prevSceneId,\r\n                                    user_id: user.userData._id\r\n                                })\r\n                            //! 돌아가야할 곳 : game detail 로 가자\r\n                            props.history.push(`/game/${gameId}`)\r\n                        }\r\n                        else {\r\n                            //! 들어가야할 곳 : 홈화면\r\n                            props.history.push(`/`)\r\n                        }\r\n                    }\r\n                })\r\n\r\n        }\r\n    }\r\n    const onTmpSave = (event) => {\r\n        onSubmit_saveScene(event, 1);\r\n    }\r\n\r\n    const onEssetModal = () => {\r\n        setEssetModalState(sideTabIndex.current);\r\n    }\r\n\r\n    const onCompleteModal = () => {\r\n        if (!reload) //동시성 반창고\r\n            return;\r\n        if (isFirstScene.current)\r\n            setUploadModalState(true)\r\n        else\r\n            setEndingModalState(true)\r\n    }\r\n\r\n\r\n    const [gameDetail, setGameDetail] = useState([]);\r\n    const [sideBar, setSideBar] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/game/getgamedetail', { gameId: gameId })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setGameDetail(response.data.gameDetail)\r\n                } else {\r\n                    alert('게임 정보를 로딩하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }, [reload, gameId])\r\n\r\n    let isWriter = writer?.toString() === user.userData?._id.toString();\r\n    useEffect(() => {\r\n        if (gameDetail.character) {\r\n            const reload_Sidebar = (< div className=\"sideBar\">\r\n                <div ref={characterSidebarElement}>\r\n                    <CharacterModal\r\n                        reload={reload} //update용\r\n                        setName={setName}\r\n                        GameCharacterList={gameDetail.character}\r\n                    />\r\n                    <CharacterSideBar\r\n                        gameDetail={gameDetail}\r\n                        setName={setName}\r\n                        onEssetModal={onEssetModal}\r\n                        isFirstScene={isFirstScene}\r\n                        isWriter={isWriter}\r\n                    />\r\n                </div>\r\n                <div ref={backgroundSidebarElement} style={{ display: 'none' }}>\r\n                    <BackgroundSideBar\r\n                        gameDetail={gameDetail}\r\n                        setBackgroundImg={setBackgroundImg}\r\n                        onEssetModal={onEssetModal}\r\n                        isFirstScene={isFirstScene}\r\n                        isWriter={isWriter}\r\n                    />\r\n                </div>\r\n                <div ref={bgmSidebarElement} style={{ display: 'none' }}>\r\n                    <BgmSideBar\r\n                        gameDetail={gameDetail}\r\n                        bgm_audio={bgm_audio}\r\n                        setBgmFile={setBgmFile}\r\n                        onEssetModal={onEssetModal}\r\n                        isFirstScene={isFirstScene}\r\n                        isWriter={isWriter}\r\n                    />\r\n                </div>\r\n                <div ref={soundSidebarElement} style={{ display: 'none' }}>\r\n                    <SoundSideBar\r\n                        gameDetail={gameDetail}\r\n                        sound_audio={sound_audio}\r\n                        setSoundFile={setSoundFile}\r\n                        onEssetModal={onEssetModal}\r\n                        isFirstScene={isFirstScene}\r\n                        isWriter={isWriter}\r\n                    />\r\n                </div>\r\n            </div>)\r\n            setSideBar(reload_Sidebar)\r\n        }\r\n    }, [gameDetail, CharacterList, reload])\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setwindowWidth(window.innerWidth);\r\n            setwindowHeight(window.innerHeight);\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n        if (windowWidth * ratio > windowHeight) {\r\n            setNewScreenSize({\r\n                width: `${windowHeight * (1 - 2 * padding) / ratio}px`,\r\n                height: `${windowHeight * (1 - 2 * padding)}px`,\r\n                minWidth: `${minSize / ratio}px`,\r\n                minHeight: `${minSize}px`\r\n            })\r\n        } else {\r\n            setNewScreenSize({\r\n                width: `${windowWidth * (1 - 2 * padding)}px`,\r\n                height: `${windowWidth * (1 - 2 * padding) * ratio}px`,\r\n                minWidth: `${minSize}px`,\r\n                minHeight: `${minSize * ratio}px`\r\n            })\r\n        }\r\n    }, [window.innerWidth, window.innerHeight]);\r\n\r\n    const onLeft = () => {\r\n        if (CutNumber !== 0) {\r\n            saveCut();\r\n            displayCut(CutNumber - 1);\r\n            setCutNumber(CutNumber - 1);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        return () => {\r\n            bgm_audio.pause();\r\n            sound_audio.pause();\r\n        };\r\n    }, []);\r\n\r\n    const gameInfoIndex = useRef({ tab: 1, page: 0 })\r\n\r\n    if (gameDetail?.title) {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"title\">\r\n                    <div>\r\n                        <span>[{gameDetail?.title}]</span>\r\n                        <Clock format={`HH:mm:ss`} date={expTime} timezone={`Asia/Seoul`}></Clock>\r\n                    </div>\r\n                    {/* <span>제작 유효기간: 2020.01.02 {exp}</span> */}\r\n                    <div\r\n                        className=\"title-btn\"\r\n                        onClick={() => setEssetModalState(5)}>\r\n                        상세정보\r\n                    </div>\r\n                </div>\r\n                <SceneBox\r\n                    CutList={CutList}\r\n                    CutNumber={CutNumber}\r\n                    displayCut={displayCut}\r\n                    setCutNumber={setCutNumber}\r\n                    Hover={Hover}\r\n                    setHover={setHover}\r\n                    EmptyCutList={EmptyCutList}\r\n                    saveCut={saveCut}\r\n                />\r\n\r\n                <div className=\"scene\">\r\n                    <div className=\"scene left-arrow\"\r\n                        onClick={onLeft}>\r\n                        <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color=\"#F5F5F5\" />\r\n                    </div>\r\n                    <div\r\n                        className=\"backgroundImg\"\r\n                        id=\"backgroundImg_container\"\r\n                        style={{ overflow: \"hidden\" }}\r\n                    >\r\n\r\n                        <img\r\n                            className=\"backgroundImg\"\r\n                            // id=\"backgroundImg_container\"\r\n                            src={`${BackgroundImg}`}\r\n                            alt=\"img\"\r\n                        />\r\n                        <CharacterBlock\r\n                            GameCharacterList={gameDetail.character}\r\n                            onRemovech_aracter={onRemove_character}\r\n                            setName={setName}\r\n                        />\r\n                        {SidBar_script && Script && (\r\n                            <TextBlock\r\n                                cut_name={Name ? Name : \"이름을 입력해주세요.\"}\r\n                                cut_script={Script ? Script : \"대사를 입력해주세요.\"}\r\n                                setIsTyping={null}\r\n                                isTyping={null}\r\n                                theme={null}\r\n                            />\r\n                        )}\r\n                        <div className=\"scene__sound_container\">\r\n                            {BgmFile?.name ? (\r\n                                <div\r\n                                    onClick={onClick_bgm_player}\r\n                                >\r\n                                    {\r\n                                        BgmFile.name && bgm_audio.paused &&\r\n                                        <PlayCircleOutlined\r\n                                            style={{ fontSize: \"20px\" }} />\r\n                                    }\r\n                                    {\r\n                                        BgmFile.name && !bgm_audio.paused &&\r\n                                        <PauseCircleOutlined\r\n                                            style={{ fontSize: \"20px\" }} />\r\n                                    }\r\n                                    <div className=\"scene__sound_name\">{BgmFile.name}</div>\r\n                                </div>\r\n                            ) : (\r\n                                <div>\r\n                                    <StopOutlined\r\n                                        style={{ fontSize: \"20px\" }}\r\n                                    />\r\n                                    <div className=\"scene__sound_name\">BGM</div>\r\n                                </div>\r\n                            )}\r\n                            {SoundFile?.name ? (\r\n                                <div\r\n                                    onClick={onClick_sound_player}\r\n                                >\r\n                                    {\r\n                                        SoundFile.name && sound_audio.paused &&\r\n                                        <PlayCircleOutlined\r\n                                            style={{ fontSize: \"20px\" }} />\r\n                                    }\r\n                                    {\r\n                                        SoundFile.name && !sound_audio.paused &&\r\n                                        <PauseCircleOutlined\r\n                                            style={{ fontSize: \"20px\" }} />\r\n                                    }\r\n                                    <div className=\"scene__sound_name\">{SoundFile.name}</div>\r\n                                </div>\r\n                            ) : (\r\n                                <div>\r\n                                    <StopOutlined\r\n                                        style={{ fontSize: \"20px\" }}\r\n                                    />\r\n                                    <div className=\"scene__sound_name\">Sound</div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"scene right-arrow\"\r\n                        onClick={CutNumber < 29 && onSubmit_nextCut}>\r\n                        <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color={CutNumber < 29 ? \"#F5F5F5\" : \"black\"} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"scene__btn_top\">\r\n                    {(isFirstScene.current || isWriter) &&\r\n                        <div className=\"scene_btn scene_btn_red\"\r\n                            onClick={onEssetModal}>\r\n                            에셋 추가\r\n                        </div>\r\n                    }\r\n                    <div className=\"scene_btn\"\r\n                        onClick={onDeleteScene}>\r\n                        제작 취소\r\n                    </div>\r\n                    <div className=\"scene_btn\"\r\n                        onClick={onTmpSave}>\r\n                        임시 저장\r\n                    </div>\r\n                    <div className=\"scene_btn scene_btn_blue\"\r\n                        onClick={onCompleteModal}>\r\n                        완료\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"btn_side\">\r\n                    <div\r\n                        className={sideTabIndex.current === 1 ? \"scene_side_btn light\" : \"scene_side_btn\"}\r\n                        onClick={onClick_character}\r\n                    >캐릭터</div>\r\n                    <div\r\n                        className={sideTabIndex.current === 2 ? \"scene_side_btn light\" : \"scene_side_btn\"}\r\n                        onClick={onClick_background}\r\n                    >배경</div>\r\n\r\n                    <div\r\n                        className={sideTabIndex.current === 3 ? \"scene_side_btn light\" : \"scene_side_btn\"}\r\n                        onClick={onClick_bgm}>\r\n                        배경음\r\n                        </div>\r\n                    <div\r\n                        className={sideTabIndex.current === 4 ? \"scene_side_btn light\" : \"scene_side_btn\"}\r\n                        onClick={onClick_sound}>\r\n                        효과음\r\n                        </div>\r\n                </div>\r\n                {sideBar !== 0 && sideBar}\r\n                <div\r\n                    className=\"textbox_name\">\r\n                    <div className=\"textbox__name_block_btn\">\r\n                        <SVG src=\"arrow_1\" width=\"15\" height=\"25\" color=\"#FFFFFF\" />\r\n                    </div>\r\n                </div>\r\n                <input\r\n                    onChange={onNameChange}\r\n                    placeholder=\"이름\"\r\n                    value={Name}\r\n                    ref={nameElement}\r\n                    className=\"textbox_name\"\r\n                />\r\n                <div className=\"textbox_bottom\">\r\n                    <div className=\"enter\"\r\n                        onClick={onSubmit_nextCut}>\r\n                        Enter\r\n                        <br />\r\n                        {/* {CutNumber + 1}/30\r\n                        <br /> */}\r\n                        {Script.length}/{TEXT_MAX_LENGTH}\r\n                    </div>\r\n                    <textarea\r\n                        onChange={onScriptChange}\r\n                        value={Script}\r\n                        placeholder=\"대사가 없으면 스크립트 창이 표시되지 않습니다.\"\r\n                        className=\"textbox_script\"\r\n                        maxLength={TEXT_MAX_LENGTH + 1}\r\n                        ref={scriptElement}\r\n                    />\r\n                </div>\r\n                <div className=\"options\">\r\n                    <div className=\"scene_btn\"\r\n                        onClick={onRemove_cut}>\r\n                        컷 삭제\r\n                    </div>\r\n                    {/* <div className=\"scene_btn\"\r\n                        onClick={onClick_script}\r\n                    >On/Off</div>\r\n                    <div className=\"scene_btn\"\r\n                        onClick={onClick_script}\r\n                    >Preview</div> */}\r\n                    <div className=\"scene_btn\"\r\n                        onClick={onClick_script}\r\n                    >배경음 음소거</div>\r\n                    <div className=\"scene_btn\"\r\n                        onClick={onClick_script}\r\n                    >효과음 음소거</div>\r\n                    <div className=\"scene_btn\"\r\n                        onClick={onClick_script}\r\n                    >테마 선택</div>\r\n                </div>\r\n\r\n                <UploadModal\r\n                    gameId={gameId}\r\n                    visible={uploadModalState}\r\n                    setUploadModalState={setUploadModalState}\r\n                    onSubmit_saveScene={onSubmit_saveScene}\r\n                    defaultTitle={gameDetail.title}\r\n                    defaultDescription={gameDetail.description}\r\n                />\r\n                <EndingModal\r\n                    isEnding={isEnding}\r\n                    visible={endingModalState}\r\n                    setEndingModalState={setEndingModalState}\r\n                    onSubmit_saveScene={onSubmit_saveScene}\r\n                />\r\n                {\r\n                    essetModalState !== 0 && <EssetModal\r\n                        gameDetail={gameDetail}\r\n                        gameId={gameId}\r\n                        visible={Boolean(essetModalState)}\r\n                        tag={essetModalState}\r\n                        setTag={setEssetModalState}\r\n                        setReload={setReload}\r\n                        gameInfoIndex={gameInfoIndex}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <LoadingPage />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SceneMakePage;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { USER_SERVER } from \"../../../Config\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutUser } from \"../../../../_actions/user_actions\";\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n      if (response.status === 200) {\r\n        dispatch(logoutUser());\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert(\"Log Out Failed\");\r\n      }\r\n    });\r\n  };\r\n\r\n  if (!user.userData){\r\n    return null;\r\n  } else if (!user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"login\">\r\n          <Link to=\"/login\">로그인</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"register\">\r\n          <Link to=\"/register\">회원가입</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  } else if (user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"profile\">\r\n          {user?.userData?._id ? (\r\n            <Link to={`/profile/${user.userData._id}`}>프로필</Link>\r\n          ) : (\r\n            \"프로필\"\r\n          )}\r\n        </Menu.Item>\r\n        <Menu.Item key=\"logout\">\r\n          <Link to=\"/\" onClick={logoutHandler}>\r\n            로그아웃\r\n          </Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","import React, { memo, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RightMenu from \"./Sections/RightMenu\";\r\nimport { Drawer, Button, Icon } from \"antd\";\r\nimport \"./Sections/Navbar.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ninterface State_controlpage {\r\n  controlpage: {\r\n    navbarOn: boolean;\r\n  }\r\n}\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n  const navbarOn: boolean = useSelector((state: State_controlpage) => state.controlpage.navbarOn);\r\n  let style = {};\r\n\r\n  const showDrawer = ():void => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = ():void => {\r\n    setVisible(false);\r\n  };\r\n  \r\n  if (navbarOn) {\r\n    style = { position: \"fixed\", zIndex: 5, width: \"100%\" };\r\n  } else {\r\n    style = {\r\n      position: \"fixed\",\r\n      zIndex: 5,\r\n      width: \"100%\",\r\n      // transform: \"translate(0,-69px)\",\r\n      opacity: 0,\r\n      animation: \"0.8s ease-out 0s 1 hide\",\r\n    };\r\n  }\r\n  return (\r\n    <nav className=\"menu\" style={style}>\r\n      <div className=\"menu__logo\">\r\n        <Link to=\"/\">이어봐</Link>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"이어봐\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default memo(NavBar);\r\n","import React, { useState } from \"react\";\r\nimport ContactUs from \"./ContactUs\"\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <div className=\"footer-info\">\r\n        <p>\r\n          본 사이트는 SW정글사관학교에서의 교육적 목적으로 제작되었으며, 어떠한 상업적 이익도 취하지 않습니다.\r\n      </p>\r\n        <p>\r\n          저작권 등 기타 문의는 <a onClick={() => showModal()}>이곳</a>으로 문의 가능합니다.\r\n      </p>\r\n      <ContactUs isModalVisible={isModalVisible} setIsModalVisible={setIsModalVisible} />\r\n      </div>\r\n      <div className=\"footer-icons\">\r\n        <div className=\"jg-icon\" onClick={() => { window.open(\"https://swjungle.net/\") }}>\r\n          <img className=\"jg-img\" src=\"https://swjungle.net/static/image/logo.png\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Icon } from \"antd\";\r\n\r\nfunction PortraitWarning() {\r\n  return (\r\n    <div className=\"portraitWarning\">\r\n      <p>\r\n        가로 화면으로 즐겨주세요~ <Icon type=\"smile\" />\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PortraitWarning;\r\n","import React, { Suspense, useEffect, useState } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport io from 'socket.io-client';\r\n\r\nimport Auth from \"../hoc/auth\";\r\nimport Valid from \"../hoc/valid\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\n\r\nimport LoginPage from \"./views/LoginPage/LoginPage.tsx\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.tsx\";\r\nimport PassportRegisterPage from \"./views/RegisterPage/PassportRegisterPage.tsx\";\r\nimport Profile from './views/Profile/Profile.tsx';\r\n\r\nimport GameDetailPage from './views/GameDetailPage/GameDetailPage.js';\r\nimport GameUploadPage from \"./views/GameUploadPage/GameUploadPage.js\";\r\nimport GameBuildUpPage from \"./views/GameUploadPage/GameBuildUpPage.js\";\r\nimport GamePlayPage from \"./views/GamePlayPage/GamePlayPage.js\";\r\nimport SceneMakePage from \"./views/Scene/SceneMakePage/SceneMakePage\";\r\n\r\nimport NavBar from \"./views/NavBar/NavBar.tsx\";\r\nimport Footer from \"./views/Footer/Footer.tsx\"\r\nimport { LOCAL_HOST } from './Config';\r\nimport './App.css';\r\nimport PortraitWarning from './views/Etc/PortraitWarning';\r\nimport { useConstructor } from './functions/useConstructor';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../_actions/user_actions';\r\nimport LoadingPage from './views/GamePlayPage/LoadingPage';\r\n\r\nconst config = require('../config/key');\r\n// export let socket = io(`http://${LOCAL_HOST}:5000`, {transports : ['websocket']});\r\nexport let socket = io(config.SOCKET, { transports: ['websocket'] });\r\nexport const MS_PER_HR = 360000\r\n\r\nwindow.onpopstate = () => {\r\n  window.location.reload();\r\n};\r\n\r\nfunction App() {\r\n  const [loaded, setloaded] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [isPortrait, setIsPortrait] = useState(window.matchMedia('(orientation: portrait)').matches);\r\n  const handleResize = () => {\r\n    const newState = window.matchMedia('(orientation: portrait)').matches;\r\n    if (newState !== isPortrait)\r\n      setIsPortrait(window.matchMedia('(orientation: portrait)').matches);\r\n  }\r\n\r\n  useConstructor(async () => {\r\n    dispatch(auth()).then(()=>{\r\n      setloaded(true);\r\n    })\r\n  })\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    }\r\n  }, [isPortrait])\r\n  if (loaded) {\r\n    return (\r\n      <Suspense fallback={(<div>Loading...</div>)}>\r\n        <NavBar />\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n            <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n            <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n            <Route exact path=\"/passport/register\" component={Auth(PassportRegisterPage, false)} />\r\n            <Route exact path=\"/profile/:userId\" component={Auth(Profile, true)} />\r\n            <Route exact path=\"/game/upload\" component={Auth(GameUploadPage, true)} />\r\n            <Route path=\"/game/:gameId\" component={Auth(GameDetailPage, null)} />\r\n            <Route path=\"/gameplay\" component={isPortrait ? PortraitWarning : Valid(Auth(GamePlayPage, null))} />\r\n            <Route exact path=\"/scene/make\" component={isPortrait ? PortraitWarning : Valid(Auth(SceneMakePage, true))} />\r\n          </Switch>\r\n        </div>\r\n        <Footer />\r\n      </Suspense>\r\n    );\r\n  } else {\r\n    return <LoadingPage />\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { NAVBAR_CONTROL } from \"../_actions/types\";\r\n\r\nconst initialState = { navbarOn : true };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case NAVBAR_CONTROL:\r\n      return { ...state, navbarOn: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { LOADINGPAGE_GAMEPLAY, PAUSE_GAMEPLAY } from \"../_actions/types\";\r\n\r\nconst initialState = { loadingType: 1, isPause: false };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADINGPAGE_GAMEPLAY:\r\n      return { ...state, loadingType: action.payload };\r\n    case PAUSE_GAMEPLAY:\r\n      return { ...state, isPause: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SELECT_CHARACTER,\r\n  DETACH_CHARACTER,\r\n  PUSH_CHARACTER,\r\n  POP_CHARACTER,\r\n  UPDATE_CHARACTER,\r\n  SET_CHARACTER_LIST,\r\n  ORDER_CHARACTER\r\n} from '../_actions/types';\r\n\r\nconst initialState = {\r\n  description: \"\",\r\n  image: \"\",\r\n  image_array: [],\r\n  name: \"\",\r\n  _id: \"\",\r\n  index: -1\r\n}\r\n\r\nexport default function (state = { characterSelected: initialState, CharacterList: [] }, action) {\r\n\r\n  switch (action.type) {\r\n    case SELECT_CHARACTER:\r\n      return { ...state, characterSelected: action.payload }\r\n    case DETACH_CHARACTER:\r\n      return { ...state, characterSelected: initialState }\r\n    case PUSH_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    case POP_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    case UPDATE_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    case SET_CHARACTER_LIST:\r\n      return { ...state, CharacterList: action.payload }\r\n    case ORDER_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  SELECT_DISPLAYED\r\n} from '../_actions/types';\r\n\r\nconst initialState = {index: -1}\r\n                      \r\nexport default function(state={characterDisplayed : initialState},action){\r\n\r\n  switch(action.type){\r\n      case SELECT_DISPLAYED:\r\n          return {...state, characterDisplayed: action.payload }\r\n      default:\r\n          return state;\r\n  }\r\n}","import { \r\n  SELECT_MOVINGTARGET, DETACH_MOVINGTARGET \r\n} from \"../_actions/types\";\r\n\r\n\r\nconst initialState = { movingTarget: -1 };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SELECT_MOVINGTARGET:\r\n      return { ...state, movingTarget: action.payload };\r\n    case DETACH_MOVINGTARGET:\r\n      return { ...state, movingTarget: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user_reducer\";\r\nimport controlpage from \"./controlPage_reducer\";\r\nimport gameplay from \"./gamePlay_reducer\";\r\nimport sync from './sync_reducer';\r\nimport character from \"./characterSelected_reducer\";\r\nimport characterDisplayed from \"./characterDisplayed_reducer\";\r\nimport movingTarget from \"./movingTarget_reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  controlpage,\r\n  gameplay,\r\n  sync,\r\n  character,\r\n  characterDisplayed,\r\n  movingTarget,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess: action.payload }\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return {...state, loginSuccess: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    LOAD_EMPTY_NUM,\r\n    SAVE_PREV_SCENE\r\n} from '../_actions/types';\r\n\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case LOAD_EMPTY_NUM:\r\n            return { ...state, emptyNum: action.payload }\r\n        case SAVE_PREV_SCENE:\r\n            return { ...state, prevSceneId: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faTimesCircle);","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport ScrollToTop from './utils/scrollToTop';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport './FontAwsome';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <ScrollToTop/>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","if (process.env.NODE_ENV === 'production') {\r\n    module.exports = require('./prod');\r\n} else {\r\n    module.exports = require('./dev');\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 419;"],"sourceRoot":""}