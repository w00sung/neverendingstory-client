{"version":3,"sources":["components/views/Modal/TitleModalForm.js","config/prod.js","_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","hoc/valid.js","components/views/LandingPage/LandingPage_banners.tsx","components/views/LandingPage/LandingPage_buttons.tsx","components/svg/icon.js","components/views/LandingPage/LandingPage_gameLists.tsx","_actions/controlPage_actions.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.tsx","components/views/RegisterPage/RegisterPage.tsx","components/views/Profile/ContributedGame/ContributedGame.tsx","components/views/Profile/Profile.tsx","components/views/Comment/SingleReply.js","components/views/Comment/SingleComment.js","components/views/Comment/Comment.js","components/views/GameDetailPage/TopRatingContributer.js","components/views/GameDetailPage/GameDetailPage.js","components/views/GameUploadPage/GameUploadPage.js","components/views/GameUploadPage/GameBuildUpPage.js","components/views/GamePlayPage/GameCharacterBlock.js","components/functions/useKey.js","components/views/Modal/InputModalForm.js","_actions/gamePlay_actions.js","components/views/Modal/InputModal.js","components/functions/useMouse.js","components/views/GamePlayPage/TextAnimation.js","components/views/Scene/SceneTeleport/FirstSceneTeleport.js","components/views/Scene/SceneTeleport/PrevSceneTeleport.js","components/views/Scene/SceneEndingPage/SceneEndingPage.js","components/views/GamePlayPage/TextBlock.js","components/views/GamePlayPage/Dislike.js","components/views/GamePlayPage/HistoryMap.js","components/views/GamePlayPage/LoadingPage.js","_actions/sync_actions.js","utils/useFullscreenStatus.js","components/views/GamePlayPage/TreeMap.js","components/views/GamePlayPage/GamePlayPage.js","components/views/Scene/SceneMakePage/SideBar/BackgroundImg.js","components/views/Scene/SceneMakePage/SideBar/BackgroundSideBar.js","_actions/characterSelected_actions.js","components/views/Scene/SceneMakePage/SideBar/CharacterImg.js","components/views/Scene/SceneMakePage/SideBar/CharacterSideBar.js","components/views/Scene/SceneMakePage/SideBar/BgmFile.js","components/views/Scene/SceneMakePage/SideBar/BgmSideBar.js","components/views/Scene/SceneMakePage/SideBar/SoundFile.js","components/views/Scene/SceneMakePage/SideBar/SoundSideBar.js","components/views/Scene/SceneMakePage/Tab/SceneMakeModalTab.js","components/views/Dropzone/MyDropzone.js","components/views/Scene/SceneMakePage/Tab/CharacterTab.js","components/views/Scene/SceneMakePage/Tab/BackgroundTab.js","components/views/Scene/SceneMakePage/Tab/BgmTab.js","components/views/Scene/SceneMakePage/Tab/SoundTab.js","components/views/Scene/SceneMakePage/SceneMakeModal.js","components/views/Scene/SceneMakePage/UploadModal.js","components/views/Scene/SceneMakePage/EndingModal.js","components/functions/handleEventListener.js","components/functions/CharacterModal/Character.js","components/views/GamePlayPage/CharacterBlock.js","components/functions/CharacterModal/CharacterInfoDisplay/CharacterInfoDisplay.js","components/functions/CharacterModal/CharacterModal.js","components/views/Scene/SceneMakePage/SceneBox/SceneBox.js","components/views/Scene/SceneMakePage/SceneMakePage.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.tsx","components/views/Footer/Footer.tsx","components/App.js","serviceWorker.js","_reducers/controlPage_reducer.js","_reducers/gamePlay_reducer.js","_reducers/characterSelected_reducer.js","_reducers/characterDisplayed_reducer.js","_reducers/movingTarget_reducer.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/sync_reducer.js","index.js","config/key.js","../../node_modules/require_optional sync"],"names":["TitleModalForm","Form","create","name","visible","onCancel","onCreate","getFieldDecorator","form","title","okText","cancelText","onOk","c","closable","layout","Item","label","rules","required","message","type","module","exports","STORAGE","SERVER","CLIENT","SOCKET","registerUser","dataToSubmit","payload","axios","post","then","response","data","auth","get","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","replace","push","Validate","location","useLocation","undefined","Banner_main1","className","require","NewGameButton","useState","setVisible","formRef","setFormRef","uploadGameFrame","description","a","Axios","gameResponse","success","alert","firstScene","gameId","game","_id","prevSceneId","sceneDepth","isFirst","sceneResponse","setTimeout","pathname","sceneId","saveFormRef","useCallback","node","onClick","userData","error","ref","validateFields","err","values","resetFields","svg","arrow_1","playIcon_1","close_1","close_2","SVG","src","color","width","height","viewBox","fill","xmlns","d","Relay_Icon","xmlnsXlink","version","x","y","xmlSpace","cx","cy","r","Ending_Icon","enableBackground","rx","ry","BAR","SCENE_ICON","id","GameList","games","length","gameList","map","index","thumbnailPath","first_scene","thumbnail","key","to","alt","sceneCnt","category","limit","Math","round","bars","i","style","filter","onMouseEnter","target","bar","arrow","document","getElementById","pos","Error","display","String","transform","opacity","mouseOnEvent","onMouseLeave","mouseOffEvent","container","ContainerToLeft","ContainerToRight","navbarControl","navbarOn","ListContainer","recent_games","popular_games","LandingPage","setGames","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","min","onSubmit","setSubmitting","loginUser","loginSuccess","window","setItem","removeItem","catch","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","prefix","placeholder","value","onChange","onBlur","checked","disabled","RegisterPage","nickname","confirmPassword","oneOf","flag","usedEmail","image","errmsg","labelAlign","labelCol","span","wrapperCol","hasFeedback","validateStatus","ContributedGame","createdAt","gameDetail","setGameDetail","view","setView","like","isClick","thumbsUp","setThumbsUp","ObjectId","objectId","isClicked","thumbsup","slice","icon","faFile","marginLeft","faEye","faHeart","Profile","userId","match","params","currUserData","makingGameList","contributedSceneList","contributedGameList","setUser","gameContentsNumber","setGameContentsNumber","sceneContentsNumber","setSceneContentsNumber","totalSceneContribute","setTotalSceneContribute","totalGameContribute","setTotalGameContribute","tmp","onClick_tab","element","contributedScene","displayContributedScene","contributedGame","displayContributedGame","memo","comment","updateToggle_comment","user_id","isEdit","setIsEdit","editComment","setEditComment","setLike","update","setUpdate","updateToggle","like_variable","commentId","result","writer","event","currentTarget","e","preventDefault","content","reference","useRef","commentContent","setCommentContent","Replys","setReplys","writeReply","setWriteReply","showComment","setShowComment","comment_variable","responseTo","toString","mapReply","reply","current","variables","comments","setComments","fetching","setFetching","totalComment","setTotalComment","contentNumber","setContentNumber","fetchNextData","handleScroll","scrollHeight","documentElement","scrollTop","clientHeight","addEventListener","removeEventListener","mapComment","TopRatingContributer","contributerList","totalSceneCnt","creatorNickname","topRateContributer_SceneCnt","userSceneCnt","topContributer","contributer","contributeRatio","fakeRatio","substr","GameDetailPage","variable","setSceneId","isMaking","setIsMaking","thumbsUpClicked","setThumbsUpClicked","setTotalSceneCnt","ContributerCnt","setContributerCnt","setContributerList","isPlayed","setIsPlayed","playFirstScene","socket","emit","scene_id","prevOfLastScene","teleportSceneId","console","log","topRank","contributerCnt","gamePlaying","sceneIdList","creator","TextArea","Input","Title","Typography","PrivateOptions","CategoryOptions","GameUploadPage","GameTitle","setGameTitle","setDescription","isPrivate","setIsPrivate","setCategory","ratio","setRatio","filePath","setFilePath","onRatioChange","floatRatio","game_variables","privacy","character","background","bgm","sound","maxWidth","margin","textAlign","marginBottom","level","justifyContent","onDrop","files","formData","FormData","append","header","url","multiple","maxSize","getRootProps","getInputProps","border","alignItems","fontSize","item","cat_idx","text","size","GameBuildUpPage","GameCharacterBlock","characterList","characterblocks","charSchema","left","posX","top","posY","useKey","cb","callbackRef","handle","code","shiftKey","ModalForm","remainTime","input","focus","gameLoadingPage","loadingType","gamePause","isPause","decTimer","scene_depth","game_id","scene_next_list","theme","useHistory","emptyNum","sync","setRemainTime","decreaseTimer","setDecreaseTimer","validated","setValidated","createFlag","cancelHandler","clearTimeout","dino","setDino","off","on","tick","setInterval","clearInterval","res","us","exp","useMouse","voice","Audio","volume","TextAnimation","cut_script","setIsTyping","setFlag","useWindupString","pace","onFinished","pause","onChar","play","skip","handleEnter","FirstSceneTeleport","setScene","isWarningVisible","setIsWarningVisible","Fragment","maskClosable","centered","footer","PrevSceneTeleport","SceneEndingPage","TextBlock","cut_name","isTyping","TextBlockChoice","isEnding","isLastMotion","choices","choice","textDecoration","script","DislikePopup","trigger","setTrigger","setTitle","Description","MapToLeft","getElementsByClassName","getComputedStyle","getPropertyValue","new_position","parseInt","split","MapToRight","sceneInfo","targetScene","HistoryMapPopup","userhistory","SceneInfo","setSceneInfo","isModalVisible","setIsModalVisible","sceneinfo","HistoryMap_scenes","scene","sceneIndex","close","click","GoToScene","LOADING_TYPE","LoadingPage","gameplay","animation","loadEmptyNum","sceneTmp","getBrowserFullscreenElementProp","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","sceneMap","link","pivot","position","drag","TreeMapPopup","Position","setPosition","mouseDown","pageX","pageY","mouseUp","mouseMove","callBack","hasBeenCalled","setHasBeenCalled","useConstructor","depth","cnt_limit","cnt","TreeMap_nodes","nodeWidth","pow","SceneDepth","bgm_audio","sound_audio","ProductScreen","isFullscreen","setIsFullscreen","errorMessage","userHistory","innerWidth","windowWidth","setwindowWidth","innerHeight","windowHeight","setwindowHeight","setI","Scene","Dislike","setDislike","History","setHistory","HistoryMap","setHistoryMap","TreeMap","setTreeMap","lastMotion","setLastMotion","setIsClicked","maximizableElement","elRef","React","useLayoutEffect","onfullscreenchange","requestFullscreen","useFullscreenStatus","handleChoice","newNextList","nextList","newScene","setVolume","muted","setMuted","tempVolume","volumeControl","isFirstCut","setIsFirstCut","playMusic","cutList","music","variable_thumbsup","variable_view","room","inner","newScreenSize","padding","minWidth","minHeight","minSize","max","step","exitFullscreen","faCompress","faExpand","BackgroundImg","imgUrl","setBackgroundImg","onSetModal","renderBackground","FileAddOutlined","selectCharacter","popCharacter","request","oldArray","info","splice","pushCharacter","characterSchema","setCharacterList","CharacterList","CharacterImg","isIn","some","selected","image_array","reverse","setName","renderCharacter","BgmFile","setBgmFile","renderBgm","SoundFile","setSoundFile","renderSound","SceneMakeModalTab","setTag","tag","MyDropzone","mention","accept","blobURL","CharacterTab","blobGame","setBlobGame","charPageNum","setCharFileQueue","setCharBlobList","characterProfile","setCharacterProfile","characterCards","setCharacterCards","isUpdate","setIsUpdate","indexNum","onNameChange","num","onDescriptionChange","curURL","URL","createObjectURL","Number","array","cards","path","BackgroundTab","setFileQueue","setTypeQueue","setBackBlobList","backBlobList","backgroundCards","setBackgroundCards","blobCards","setBlobCards","BgmTab","setBgmBlobList","bgmBlobList","setBgmBlobNames","bgmBlobNames","bgmCards","setBgmCards","SoundTab","setSoundBlobList","soundBlobList","setSoundBlobNames","soundBlobNames","soundCards","setSoundCards","SceneMakeModal","setReload","setGame","fileQueue","typeQueue","charFileQueue","charBlobList","_","cloneDeep","revokeBlobList","forEach","revokeObjectURL","uploadFlag","uploadCharFiles","j","fileNum","Array","from","uploadCharDB","DBForm","reload","uploadFiles","uploadDB","originalname","keyboard","UploadModal","setUploadModalState","onSubmit_saveScene","defaultTitle","defaultDescription","setBlobURL","thumbFile","setThumbFile","upload","uploadThumb","config","uploadGame","maxLength","rows","EndingModal","setEndingModalState","cancel","bodyStyle","Modal","warning","_eventHandlers","addEvent","handler","capture","removeAllEvents","handlers","eventHandlers","GameCharacterList","element_X","element_Y","clicked","moving","setMoving","sizing","setSizing","imgWidth","setImgWidth","background_element","page","background_width","offsetWidth","background_height","offsetHeight","prev_posX","prev_posY","next_posX","next_posY","image_width","prev_size","next_size","stopPropagation","onMouseDown","onMouseUp","updateCharacter","onClickOrder","lastIndex","orderCharacter","faTimesCircle","faAngleDoubleDown","faAngleDown","onMouseOver","onMouseOut","characterDetailImages","onClick_selectCharacter","onClick_putCharacter","currentCharacter","setIsAdded","characterSelected","CutList","CutNumber","displayCut","setCutNumber","Hover","EmptyCutList","setHover","saveCut","onClick_GotoCut","display_SceneBox","Cut","display_EmptyBox","EmptyCut","SceneMakePage","back","maxCount","setNewScreenSize","makeModalState","setMakeModalState","uploadModalState","endingModalState","SidBar_script","setSidBar_script","Script","setScript","Name","isFirstScene","setIsFirstScene","setCutList","setEmptyCutList","isInited","setInit","validation","tmpFirstCut","lastCut","characterSidebarElement","backgroundSidebarElement","bgmSidebarElement","soundSidebarElement","scriptElement","nameElement","makeVisible","makeInvisible","sideTab","setSideTab","onClick_script","activeElement","onSubmit_nextCut","oldNumber","isTmp","submitCut","submitCutList","confirm","loading","msg","sideBar","setSideBar","reload_Sidebar","overflow","onRemovech_aracter","paused","PlayCircleOutlined","PauseCircleOutlined","StopOutlined","TEXT_MAX_LENGTH","Boolean","mode","status","controlpage","zIndex","placement","onClose","Footer","io","transports","onpopstate","App","fallback","exact","component","Auth","LoginPage","Valid","GamePlayPage","hostname","initialState","movingTarget","rootReducer","combineReducers","action","register","loginSucces","characterDisplayed","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","keys","resolve"],"mappings":"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","file":"static/js/main.c5124522.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Modal, Form, Input, Radio } from \"antd\";\r\nimport \"./TitleModalForm.css\"\r\n\r\nconst ModalFormComponent = ({ visible, onCancel, onCreate, form }) => {\r\n    const { getFieldDecorator } = form;\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"어떤 이야기를 만드실건가요?\"\r\n            okText=\"제작\"\r\n            cancelText=\"취소\"\r\n            onCancel={onCancel}\r\n            onOk={onCreate}c\r\n            closable = {false}\r\n        >\r\n            <Form layout=\"vertical\">\r\n                <Form.Item label=\"제목\">\r\n                    {getFieldDecorator(\"title\", {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: \"제목을 입력해주세요!\"\r\n                            }\r\n                        ]\r\n                    })(<Input />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"게임 설명\">\r\n                    {getFieldDecorator(\"description\")(<Input type=\"textarea\"/>)}\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst TitleModalForm = Form.create({ name: \"modal_form\" })(ModalFormComponent);\r\n\r\nexport  {TitleModalForm};\r\n","module.exports = {\r\n    STORAGE: 'https://iovar.s3.ap-northeast-2.amazonaws.com/original',\r\n    SERVER: 'http://54.180.24.213:80',\r\n    CLIENT: 'http://13.209.68.246:80',\r\n    SOCKET: 'https://www.iovar.co.kr'\r\n}","import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\r\n        .then(response => response.data);\r\n    \r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\n\r\nexport const LOAD_EMPTY_NUM = 'load_empty_num';\r\nexport const SAVE_PREV_SCENE = 'SAVE_PREV_SCENE';\r\n\r\nexport const LOADINGPAGE_GAMEPLAY = \"gameLoading_gamePlay\"\r\nexport const PAUSE_GAMEPLAY = \"pause_gamePlay\"\r\n\r\nexport const NAVBAR_CONTROL = \"navbar_control\";\r\n\r\nexport const SELECT_CHARACTER = \"select_character\";\r\nexport const DETACH_CHARACTER = \"detach_character\";\r\nexport const POP_CHARACTER = \"pop_character\";\r\nexport const PUSH_CHARACTER = \"push_character\";\r\nexport const UPDATE_CHARACTER = \"update_character\";\r\nexport const SET_CHARACTER_LIST = \"set_character_list\";\r\nexport const ORDER_CHARACTER = \"order_character\";\r\n\r\n\r\nexport const SELECT_MOVINGTARGET = \"select_movingtarget\";\r\nexport const DETACH_MOVINGTARGET = \"detach_movingtarget\"; \r\nexport const SELECT_DISPLAYED = \"select_displayed\";\r\n","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n// ip address ( please be careful... )\r\n// export const LOCAL_HOST = \"15.164.48.192\";\r\nexport const LOCAL_HOST = \"localhost\";\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.replace('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.replace('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nexport default function (SpecificComponent, adminRoute = null) {\r\n    function Validate(props) {\r\n        const location = useLocation();\r\n        useEffect(() => {\r\n            if (location.state === undefined) {\r\n                props.history.replace('/');\r\n            }\r\n        }, [])\r\n        if(location.state) {\r\n            return (\r\n                <SpecificComponent {...props}/>\r\n            )\r\n        }\r\n        else {\r\n            return <div>잘못된 접근입니다ㅋㅋ</div>\r\n        }\r\n    }\r\n    return Validate\r\n}\r\n\r\n\r\n","import React from \"react\"\r\nimport \"./LandingPage_banners.css\"\r\n\r\nexport function Banner_main1() {\r\n  return (<div className=\"banner-container banner-main1\">\r\n    <div className=\"banner-main1-slogan1\">NEVER ENDING</div>\r\n    <div className=\"banner-main1-slogan2\">함께 만드는 무한한 이야기</div>\r\n  </div>);\r\n}","import React, { useState, useCallback } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport \"./LandingPage_buttons.css\"\r\nimport \"antd/dist/antd.css\";\r\nimport Axios from \"axios\"\r\nimport { message } from \"antd\";\r\n\r\nconst {TitleModalForm}: any = require(\"../Modal/TitleModalForm\")\r\ninterface newGameButtonProps{\r\n    replace : Function;\r\n}\r\n\r\ninterface responseTypes{\r\n    data: {\r\n        game: {\r\n            _id:string;\r\n        }\r\n        sceneId: string;\r\n        success: boolean;\r\n    };\r\n}\r\n\r\nexport function NewGameButton({replace}:newGameButtonProps) {\r\n\r\n    const [visible, setVisible] = useState<any>(false);\r\n    const [formRef, setFormRef] = useState<any>(null);\r\n    // const [formRef, setFormRef] = useState<null | {validateFileds:any}></null>;\r\n    const user = useSelector<any, any>((state) => state.user);\r\n\r\n\r\n\r\n    const uploadGameFrame = async (title : String, description:any) => {\r\n        // tmp scene create\r\n        const gameResponse : responseTypes = await Axios.post(\"/api/game/uploadgameframe\", {title, description});\r\n\r\n        if (!gameResponse.data.success) {\r\n            alert(\"game Frame제작 실패\");\r\n            return;\r\n        }\r\n\r\n        const firstScene = {\r\n            gameId: gameResponse.data.game._id,\r\n            prevSceneId: null,\r\n            sceneDepth: 0,\r\n            isFirst: 1,\r\n            title: \"\",\r\n        };\r\n\r\n        const sceneResponse : responseTypes = await Axios.post(\"/api/scene/create\", firstScene);\r\n        if (!sceneResponse.data.success) {\r\n            alert(\"scene Frame제작 실패\");\r\n            return;\r\n        }\r\n\r\n        message.success(\r\n            \"첫 Scene을 생성해주세요. 오른쪽의 버튼을 활용해 이미지들을 추가할 수 있습니다.\"\r\n        );\r\n        \r\n        setTimeout(() => {\r\n            replace({\r\n                pathname: `/scene/make`,\r\n                state: {\r\n                    gameId: gameResponse.data.game._id,\r\n                    sceneId: sceneResponse.data.sceneId,\r\n                },\r\n            });\r\n        }, 1000);\r\n    };\r\n    \r\n    const handleClick = () =>{\r\n        if(user.userData?.isAuth){\r\n            setVisible(true)\r\n        }\r\n        else{\r\n            message.error(\"로그인이 필요합니다.\")\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n        formRef?.validateFields((err: Error, values: {title : String, description : any}) => {\r\n            if (err) {\r\n                return;\r\n            }\r\n\r\n            uploadGameFrame(values.title, values.description);\r\n            formRef?.resetFields();\r\n            setVisible(false);\r\n        });\r\n\r\n    }\r\n\r\n    const saveFormRef = useCallback(node => {\r\n        if (node !== null) {\r\n            setFormRef(node);\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <button className=\"button-newgame\" onClick ={uploadGameFrame}>\r\n                NEW 게임 만들기\r\n            </button> */}\r\n            <button className=\"button-newgame\" onClick={handleClick}>\r\n                NEW 게임 만들기\r\n            </button>\r\n        \r\n            <TitleModalForm \r\n                ref={saveFormRef}\r\n                visible={visible}\r\n                onCancel={() => setVisible(false)}\r\n                onCreate={() => handleCreate()}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nconst svg = {\r\n  arrow_1:\r\n    \"M-1.73589e-06 5.2875L16.6883 22.5L-2.31124e-07 39.7125L5.13765 45L27 22.5L5.13765 -2.24574e-07L-1.73589e-06 5.2875Z\",\r\n  playIcon_1:\r\n    \"M0.497437 0.796925V17.5524L15.8567 9.17468L0.497437 0.796925Z\",\r\n  close_1:\r\n    \"M11 0C4.917 0 0 4.917 0 11C0 17.083 4.917 22 11 22C17.083 22 22 17.083 22 11C22 4.917 17.083 0 11 0ZM16.5 14.949L14.949 16.5L11 12.551L7.051 16.5L5.5 14.949L9.449 11L5.5 7.051L7.051 5.5L11 9.449L14.949 5.5L16.5 7.051L12.551 11L16.5 14.949Z\",\r\n  close_2:\r\n    \"M10 0.600006C4.47 0.600006 0 5.07001 0 10.6C0 16.13 4.47 20.6 10 20.6C15.53 20.6 20 16.13 20 10.6C20 5.07001 15.53 0.600006 10 0.600006ZM15 14.19L13.59 15.6L10 12.01L6.41 15.6L5 14.19L8.59 10.6L5 7.01001L6.41 5.60001L10 9.19001L13.59 5.60001L15 7.01001L11.41 10.6L15 14.19Z\",\r\n};\r\n\r\nexport function SVG(props) {\r\n  const { src, color, width, height } = props;\r\n  return (\r\n    <svg\r\n      width={width ? width : \"auto\"}\r\n      height={height ? height : \"auto\"}\r\n      viewBox=\"0 0 27 45\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d={svg[src]} fill={color} />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function Relay_Icon() {\r\n  return (\r\n    <svg height='270px' width='270px' fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 96 96\" xmlSpace=\"preserve\"><g><g><circle cx=\"85\" cy=\"19.6\" r=\"6\"></circle><path d=\"M59,52.4c-0.1-0.2-0.4-0.1-0.5,0.1l-2.9,9.3c-0.1,0.4-0.5,0.8-0.9,0.8L45,63.9c-0.6,0.1-1,0.6-1,1.2v1c0,0.6,0.5,1,1,1.1    l12.2,0.4c0.8,0,1.6-0.4,2-1.1l4.4-7.6c0.1-0.2,0.1-0.5-0.1-0.7L59,52.4z\"></path><path d=\"M84.1,37.8c-0.3-0.3-0.4-0.6-0.4-1l0.2-5.9c0-0.7-0.1-1.4-0.4-2l-0.2-0.5c-0.1-0.1-0.1-0.3-0.2-0.4    c-1.4-1.7-3.4-2.9-5.6-3.4l-0.8-0.2c-0.4-0.1-0.9-0.1-1.3-0.1l-8.7,0.2c-1.2,0-2.3,0.6-3.1,1.5l-5.4,6.9c-0.6,0.8-0.5,1.9,0.3,2.5    l0.1,0.1c0.6,0.4,1.4,0.4,1.9-0.2l4.9-4.8c0.4-0.4,0.9-0.5,1.4-0.4l3.3,0.7c0.3,0.1,0.4,0.4,0.3,0.7L69.5,33c0,0-4.9,6.7-8.1,11.4    c-1.7,2.5-1.5,5.7,0.4,8l3.3,4l4.9,6.4c0.5,0.6,0.6,1.4,0.4,2.2l-2.9,10.7c-0.3,1,0.4,1.9,1.5,2l0.6,0c0.7,0,1.3-0.3,1.5-0.9    l5.8-12.5c0.5-1.1,0.5-2.4-0.1-3.4l-6.2-11.7c-0.5-0.9-0.4-2,0.3-2.8l4.9-6.2l1.1-0.4c0.9-0.3,1.6-0.9,2.1-1.6v1.1    c0,0.8,0.4,1.6,1,2l7.1,5c0.7,0.5,1.6,0.5,2.3,0c1.1-0.9,1.1-2.6,0.1-3.5L84.1,37.8z\"></path><circle cx=\"44.2\" cy=\"19.8\" r=\"6.3\"></circle><path d=\"M45,51.2l1-1.6c0.1-0.2,0.1-0.4-0.1-0.5l-2.4-1.4c-0.2-0.1-0.4,0-0.5,0.1l-0.9,1.4c-0.1,0.2-0.1,0.4,0.1,0.5l2.3,1.5    C44.7,51.4,44.9,51.4,45,51.2z\"></path><path d=\"M47.8,41.1l2.1,1.7c0.2,0.1,0.4,0.1,0.6-0.1l3.1-4.9c0.1-0.2,0.1-0.4-0.1-0.5l-2.3-1.5c-0.2-0.1-0.4-0.1-0.5,0.1l-3,4.7    C47.6,40.8,47.6,41,47.8,41.1z\"></path><path d=\"M28.6,53.7c-0.2-0.2-0.6-0.2-0.7,0.1l-3.5,6.5c-0.2,0.3-0.1,0.7,0.2,0.9l2.5,1.9c0.3,0.3,0.5,0.7,0.4,1.1l-2.9,10.5    c-0.3,1,0.5,2,1.5,2.1l0.7,0c0.7,0,1.3-0.4,1.6-1l5.8-12.4c0.7-1.5,0.4-3.3-0.7-4.5L28.6,53.7z\"></path><path d=\"M48.8,47.8c1.2-0.9,1.2-2.7,0.1-3.6L43.3,39c-0.3-0.3-0.4-0.6-0.4-1l0.2-6.2c0-0.7-0.1-1.5-0.4-2.1L42.5,29    c-0.1-0.1-0.1-0.3-0.2-0.4c-1.5-1.8-3.6-3.1-5.9-3.6l-0.8-0.2c-0.5-0.1-0.9-0.1-1.4-0.1L25,25c-1.3,0-2.5,0.6-3.2,1.6l-5.6,7.2    c-0.6,0.8-0.5,2,0.4,2.6l0.1,0.1c0.6,0.5,1.5,0.4,2-0.2l5.2-5c0.4-0.4,0.9-0.5,1.5-0.4l3.5,0.7c0.3,0.1,0.5,0.4,0.3,0.7l-1.1,1.6    l-7.9,10.4l0,0c-3,3.7-4.9,8.1-5.7,12.7l-1,5.9c-0.1,0.5-0.5,0.8-1,0.9l-10,1.5c-0.6,0.1-1.1,0.6-1.1,1.2v1.1    c0,0.6,0.5,1.1,1.1,1.1l12.8,0.5c0.8,0,1.6-0.4,2-1.1l9.5-16.3l7.1-9.2l0,0l1.6-0.5c1.1-0.4,2-1.2,2.5-2.3l0.1-0.2v0.9    c0,0.8,0.4,1.6,1.1,2.1l7.4,5.3C47.2,48.3,48.2,48.3,48.8,47.8z\"></path></g></g></svg>)\r\n}\r\n\r\nexport function Ending_Icon() {\r\n  return (\r\n    <svg height='270px' width='270px' fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 48 48\" enableBackground=\"new 0 0 48 48\" xmlSpace=\"preserve\"><g><ellipse fill=\"#000000\" cx=\"22.3\" cy=\"6.3\" rx=\"4.6\" ry=\"4.3\"></ellipse><path fill=\"#000000\" d=\"M46.8,23.7c-0.4-0.2-9.3-5.8-25.1-1.4c-14,3.9-18.6-0.7-18.7-0.8c-0.5-0.6-1.4-0.6-2-0.1   c-0.6,0.5-0.7,1.4-0.1,2c0.2,0.2,3,3.3,10.7,3.3c2.9,0,6.5-0.5,10.9-1.7c14.4-4.1,22.7,1,22.7,1c0.7,0.4,1.6,0.2,2-0.4   C47.7,25,47.5,24.1,46.8,23.7z\"></path><path fill=\"#000000\" d=\"M13,21.7c0.1,0,0.2,0,0.3,0c1.1-0.1,2-1.1,1.9-2.2c0.1-0.3,0.7-1,2.8-1.4V21c0,0,7.4-2.1,10.3-2.3l0-2.3   c5.4-2.3,7.1-8.2,7.5-11.6c0.1-1.1-0.7-2.2-1.9-2.3c-1.2-0.1-2.3,0.7-2.4,1.8c0,0.4-1.2,9.2-8.8,9.2c-0.1,0-0.1,0-0.2,0   c-5-0.1-8.4,0.8-10.3,2.7c-1.5,1.6-1.3,3.2-1.3,3.5C11,20.9,11.9,21.7,13,21.7z\"></path><path fill=\"#000000\" d=\"M28,25.8L18,28l-0.2,2.3c-0.1,0.9-0.5,2.2-0.8,2.3c0,0-1.1,0.1-3.8-2.7C12.3,29,10.9,29,10,29.7   c-0.9,0.8-1,2.1-0.1,2.9c1,1.1,3.9,4.1,7.1,4.1c0.5,0,1-0.1,1.5-0.2c2.9-1,4.8-5.4,4.9-6.6l4.1,7.1l-2,6.4   c-0.3,1.1,0.3,2.2,1.5,2.6c0.2,0.1,0.4,0.1,0.6,0.1c1,0,1.8-0.6,2.1-1.5l2.2-7.1c0.1-0.5,0.1-0.9-0.1-1.4L28,25.8z\"></path></g></svg>\r\n  )\r\n}\r\n\r\n\r\nexport function BAR(props) {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"3\"\r\n      viewBox=\"0 0 15 3\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <rect width=\"15\" height=\"3\" fill=\"white\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function SCENE_ICON(props) {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"15\"\r\n      id=\"fi_93839\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 348.462 348.462\"\r\n    >\r\n      <g>\r\n        <path fill={\"white\"}\r\n          d=\"M330.725,112.541H83.178l238.875-64.006c0.038-0.01,0.074-0.025,0.111-0.036c0.035-0.009,0.07-0.013,0.105-0.023\r\n\t\tc4.001-1.072,6.375-5.185,5.304-9.186l-9.038-33.731c-0.515-1.921-1.772-3.559-3.495-4.554c-1.723-0.995-3.771-1.264-5.691-0.749\r\n\t\tL15.798,78.913c-4.001,1.072-6.375,5.185-5.304,9.185l8.824,32.931v219.932c0,4.142,3.358,7.5,7.5,7.5h303.907\r\n\t\tc4.142,0,7.5-3.358,7.5-7.5V120.041C338.225,115.898,334.867,112.541,330.725,112.541z M323.225,147.305h-31.319l19.764-19.764\r\n\t\th11.555V147.305z M34.318,147.305v-19.764h33.354l-19.764,19.764H34.318z M88.885,127.541h33.858l-19.616,19.616\r\n\t\tc-0.048,0.048-0.088,0.099-0.134,0.148H69.121L88.885,127.541z M143.956,127.541h35.859l-19.764,19.764h-35.859L143.956,127.541z\r\n\t\t M201.028,127.541h34.359l-19.764,19.764h-34.359L201.028,127.541z M256.305,127.835c0.095-0.095,0.178-0.196,0.266-0.294h33.886\r\n\t\tl-19.764,19.764h-33.858L256.305,127.835z M93.614,73.591c0.111,0.072,0.218,0.149,0.334,0.216l24.038,13.878l-33.67,9.022\r\n\t\tL59.917,82.62L93.614,73.591z M147.748,59.086l24.399,14.087l-33.67,9.022l-24.4-14.087L147.748,59.086z M201.91,44.573\r\n\t\tl24.399,14.087l-33.671,9.022l-24.399-14.087L201.91,44.573z M256.069,30.061l24.399,14.087l-33.698,9.029\r\n\t\tc-0.115-0.075-0.225-0.154-0.345-0.223L222.4,39.083L256.069,30.061z M311.143,35.929l-10.185,2.729l-24.399-14.087l29.428-7.885\r\n\t\tL311.143,35.929z M39.427,88.111l24.399,14.087l-31.745,8.506L26.924,91.46L39.427,88.111z M34.318,333.462V162.305h288.907\r\n\t\tv171.157H34.318z\"\r\n        ></path>\r\n        <path fill={\"white\"}\r\n          d=\"M290.354,207.162c4.142,0,7.5-3.358,7.5-7.5c0-4.142-3.358-7.5-7.5-7.5H63.825c-4.142,0-7.5,3.358-7.5,7.5\r\n\t\tc0,4.142,3.358,7.5,7.5,7.5h56.421v53.321H63.825c-4.142,0-7.5,3.358-7.5,7.5c0,4.142,3.358,7.5,7.5,7.5h226.528\r\n\t\tc4.142,0,7.5-3.358,7.5-7.5c0-4.142-3.358-7.5-7.5-7.5H239.54v-53.321H290.354z M224.54,260.483h-89.293v-53.321h89.293V260.483z\"\r\n        ></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { SVG, BAR, SCENE_ICON } from \"../../svg/icon\";\r\nimport \"./LandingPage_gameLists.css\"\r\nimport { LOCAL_HOST } from \"../../Config\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst config = require('../../../config/key')\r\ninterface Data {\r\n    category: string;\r\n    id: string;\r\n    length: 0,\r\n    pos: number;\r\n    limit: number;\r\n}\r\n\r\ninterface Game {\r\n    title: string;\r\n    _id: string;\r\n    thumbnail: string;\r\n    category: string;\r\n    first_scene: string;\r\n    sceneCnt:number;\r\n}\r\n\r\ninterface ContainerProps {\r\n    data: Data;\r\n    games: Game[];\r\n}\r\n\r\nfunction ContainerToRight(target: Data) {\r\n    if (target.pos < target.limit - 1) {\r\n        //* bar\r\n        var bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(50%)\";\r\n        }\r\n\r\n        //* change location\r\n        target.pos += 1;\r\n\r\n        //* container\r\n        var container = document.getElementById(target.id + \"_gameList\");\r\n        if (container === null) {\r\n            throw Error(\"can not find target container\")\r\n        } else {\r\n            container.style.transform = `translate(${-1336 * target.pos}px, 0px)`;\r\n        }\r\n        //* bar\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(100%)\";\r\n        }\r\n        //* arrows\r\n        if (target.pos == target.limit - 1) {\r\n            var arrow = document.getElementById(\r\n                target.id + \"_right_arrow\"\r\n            );\r\n            if (arrow === null) {\r\n                throw Error(\"can not find target arrow\")\r\n            } else {\r\n                arrow.style.display = \"none\";\r\n            }\r\n        }\r\n        arrow = document.getElementById(target.id + \"_left_arrow\");\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction ContainerToLeft(target: Data) {\r\n    if (target.pos > 0) {\r\n        //* bar\r\n        var bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(50%)\";\r\n        }\r\n\r\n        //* change location\r\n        target.pos -= 1;\r\n\r\n        //* container\r\n        var container = document.getElementById(target.id + \"_gameList\");\r\n        if (container === null) {\r\n            throw Error(\"can not find target container\")\r\n        } else {\r\n            container.style.transform = `translate(${-1336 * target.pos}px, 0px)`;\r\n        }\r\n        //* bar\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(target.pos)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.filter = \"brightness(100%)\";\r\n        }\r\n        //* arrows\r\n        if (target.pos == 0) {\r\n            var arrow = document.getElementById(\r\n                target.id + \"_left_arrow\"\r\n            );\r\n            if (arrow === null) {\r\n                throw Error(\"can not find target arrow\")\r\n            } else {\r\n                arrow.style.display = \"none\";\r\n            }\r\n        }\r\n        arrow = document.getElementById(target.id + \"_right_arrow\");\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction mouseOnEvent(target: Data) {\r\n    //* arrow right\r\n    let arrow = document.getElementById(\r\n        target.id + \"_right_arrow\"\r\n    );\r\n    if (target.pos < target.limit - 1) {\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n    //* arrow left\r\n    arrow = document.getElementById(\r\n        target.id + \"_left_arrow\"\r\n    );\r\n    if (target.pos > 0) {\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"block\";\r\n        }\r\n    }\r\n    //* bar\r\n    let bar\r\n    for (let i = 0; i < target.limit; i++) {\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(i)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.transform = \"opacity(1)\";\r\n            bar.style.opacity = \"1\";\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction mouseOffEvent(target: Data) {\r\n    //* arrow right\r\n    let arrow = document.getElementById(\r\n        target.id + \"_right_arrow\"\r\n    );\r\n    if (arrow === null) {\r\n        throw Error(\"can not find target arrow\")\r\n    } else {\r\n        arrow.style.display = \"none\";\r\n    }\r\n    //* arrow left\r\n    arrow = document.getElementById(\r\n        target.id + \"_left_arrow\"\r\n    );\r\n    if (target.pos > 0) {\r\n        if (arrow === null) {\r\n            throw Error(\"can not find target arrow\")\r\n        } else {\r\n            arrow.style.display = \"none\";\r\n            \r\n        }\r\n    }\r\n    //* bar\r\n    let bar\r\n    for (let i = 0; i < target.limit; i++) {\r\n        bar = document.getElementById(\r\n            target.id + \"_bar\" + String(i)\r\n        );\r\n        if (bar === null) {\r\n            throw Error(\"can not find target bar\")\r\n        } else {\r\n            bar.style.transform = \"opacity(0)\";\r\n            bar.style.opacity = \"0\";\r\n        }\r\n    }\r\n}\r\n\r\nexport function GameList(props: ContainerProps) {\r\n    const { data, games } = props;\r\n    //* game list\r\n    data.length = 0;\r\n    const gameList = games.map((game: Game, index: number) => {\r\n        if (game.first_scene) {\r\n            data.length += 1;\r\n            let thumbnailPath;\r\n            \r\n            if(process.env.NODE_ENV === \"production\")\r\n                thumbnailPath = game.thumbnail\r\n            else\r\n                thumbnailPath = `${config.STORAGE}/${game.thumbnail}`\r\n            return (\r\n                <div className=\"gamelist-game\" key={index}>\r\n                    <Link to={`/game/${game._id}`}>\r\n                        <img\r\n                            className=\"game-image\"\r\n                            src={thumbnailPath}\r\n                            alt={game.title}\r\n                        />\r\n                        <div className=\"game-title\">{game.title}</div>\r\n                    </Link>\r\n                    <div className=\"game-sceneNum\">{game.sceneCnt}</div>\r\n                    <div className=\"game-sceneIcon\"><SCENE_ICON/></div>\r\n                    <div className=\"game-category\">{game.category}</div>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    });\r\n\r\n    data.limit = Math.round((data.length/ 4)+0.49)\r\n\r\n    //* bars\r\n    const bars = [];\r\n    for (let i = data.limit - 1; i > 0; i--) {\r\n        bars.push(\r\n            <div id={`${data.id}_bar${i}`} className=\"bar\" key={`${i}`}>\r\n                <BAR />\r\n            </div>\r\n        )\r\n    }\r\n    bars.push(<div\r\n        id={`${data.id}_bar0`}\r\n        className=\"bar\"\r\n        style={{ filter: \"brightness(100%)\" }}\r\n        key={0}\r\n    >\r\n        <BAR />\r\n    </div>)\r\n\r\n    //* return component\r\n    return (\r\n        <div className=\"box-container game-box\">\r\n            <div className=\"box-title\">{data.category}</div>\r\n            <div className=\"box-positionBar\">\r\n                {bars}\r\n            </div>\r\n            <div className=\"box-gameList\"\r\n                onMouseEnter={() => { mouseOnEvent(data) }}\r\n                onMouseLeave={() => { mouseOffEvent(data) }}\r\n            >\r\n                <div\r\n                    id={`${data.id}_gameList`}\r\n                    className=\"gamelist-container\"\r\n                    style={{ width: data.length * 335 + \"px\" }}\r\n                >\r\n                    {gameList}\r\n                </div>\r\n                <div\r\n                    id={`${data.id}_left_arrow`}\r\n                    className=\"gamelist-left-arrow\"\r\n                    onClick={() => {\r\n                        ContainerToLeft(data);\r\n                    }}\r\n                >\r\n                    <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\r\n                </div>\r\n                <div\r\n                    id={`${data.id}_right_arrow`}\r\n                    className=\"gamelist-right-arrow\"\r\n                    onClick={() => {\r\n                        ContainerToRight(data);\r\n                    }}\r\n                >\r\n                    <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { NAVBAR_CONTROL } from \"./types\";\r\n\r\nexport function navbarControl(navbarOn) {\r\n  return {\r\n    type: NAVBAR_CONTROL,\r\n    payload: navbarOn,\r\n  };\r\n}\r\n","import React, { useEffect, useState} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport \"./LandingPage.css\";\r\nimport { Banner_main1 } from \"./LandingPage_banners\";\r\nimport { NewGameButton } from \"./LandingPage_buttons\";\r\nimport { GameList } from \"./LandingPage_gameLists\";\r\nimport { navbarControl } from \"../../../_actions/controlPage_actions\"\r\n\r\nconst ListContainer = {\r\n  recent_games: {\r\n    category: \"최근 플레이한 게임\",\r\n    id: \"recent\",\r\n    length: 0,\r\n    pos: 0,\r\n    limit: 0,\r\n  },\r\n  popular_games: {\r\n    category: \"인기 게임\",\r\n    id: \"popular\",\r\n    length: 0,\r\n    pos: 0,\r\n    limit: 0,\r\n  },\r\n};\r\n\r\nfunction LandingPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //* navigation bar control\r\n    dispatch(navbarControl(true));\r\n    \r\n    Axios.get(\"/api/game/getgames\").then((response) => {\r\n      if (response.data.success) {\r\n        setGames(response.data.games);\r\n      } else {\r\n        alert(\"game load에 실패했습니다.\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mainPage_container\">\r\n      <div className=\"box-container\">\r\n        <Banner_main1 />\r\n        <NewGameButton replace={props.history.replace} />\r\n      </div>\r\n      <GameList data={ListContainer.recent_games} games={games} />\r\n      <GameList data={ListContainer.popular_games} games={games} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./LoginPage.css\";\r\n\r\ninterface LoginPageProps {\r\n  history: {\r\n    replace: Function;\r\n  }\r\n}\r\n\r\ninterface LoginUser {\r\n  payload: {\r\n    loginSuccess: boolean;\r\n    userId?: string | undefined;\r\n    message?: string;\r\n  }\r\n  type: string;\r\n}\r\n\r\nfunction LoginPage(props: LoginPageProps) {\r\n  const dispatch:any = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe);\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\")\r\n    ? localStorage.getItem(\"rememberMe\")!\r\n    : undefined;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"이메일 주소를 입력해 주세요.\")\r\n          .required(\"이메일 주소를 입력해 주세요.\"),\r\n        password: Yup.string()\r\n          .min(6, \"비밀번호는 최소 6글자 이상이어야 합니다.\")\r\n          .required(\"비밀번호를 입력해 주세요.\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then((response: LoginUser) => {\r\n              if (response.payload.loginSuccess) {\r\n                if (rememberMe === true && values.email) {\r\n                  window.localStorage.setItem(\"rememberMe\", values.email);\r\n                } else {\r\n                  localStorage.removeItem(\"rememberMe\");\r\n                }\r\n                props.history.replace(\"/\");\r\n              } else {\r\n                setFormErrorMessage(\"아이디와 비밀번호를 확인해 주세요.\");\r\n              }\r\n            })\r\n            .catch((err: boolean) => {\r\n              setFormErrorMessage(\"아이디와 비밀번호를 확인해 주세요.\");\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\");\r\n              }, 3000);\r\n            });\r\n\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"loginPage-container\">\r\n            <div className=\"loginDiv-container\">\r\n              <div className=\"login-Title\">로그인</div>\r\n              <div className=\"login-newUser\">신규 사용자이신가요? <Link className=\"login-register\" to=\"/register\">계정만들기</Link></div>\r\n              <form onSubmit={handleSubmit} style={{ width: \"600px\" }}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    id=\"email\"\r\n                    prefix={\r\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                    }\r\n                    placeholder=\"이메일 주소\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.email}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required>\r\n                  <Input\r\n                    id=\"password\"\r\n                    prefix={\r\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                    }\r\n                    placeholder=\"비밀번호\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.password && touched.password\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.password}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                {formErrorMessage && (\r\n                  <label>\r\n                    <p className=\"login-error\">\r\n                      {formErrorMessage}\r\n                    </p>\r\n                  </label>\r\n                )}\r\n\r\n                <Form.Item>\r\n                  <Checkbox\r\n                    className=\"rememberMe\"\r\n                    onChange={handleRememberMe}\r\n                    checked={rememberMe}\r\n                    style={{ color: \"white\" }}\r\n                  >\r\n                    아이디 기억하기\r\n                  </Checkbox>\r\n                  {/* <a\r\n                    className=\"login-form-forgot\"\r\n                    href=\"/reset_user\"\r\n                    style={{ float: \"right\" }}\r\n                  >\r\n                    forgot password\r\n                  </a> */}\r\n                  <div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"login-button\"\r\n                      disabled={isSubmitting}\r\n                      onSubmit={() => handleSubmit()}\r\n                    >\r\n                      로그인\r\n                    </button>\r\n                  </div>\r\n\r\n                </Form.Item>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import * as React from \"react\";\r\nimport * as Yup from 'yup';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport { Form, Input } from 'antd';\r\nimport \"./RegisterPage.css\"\r\nimport Axios from \"axios\"\r\n\r\ninterface RegisterPageProps {\r\n  history: {\r\n    push: Function;\r\n  }\r\n}\r\n\r\ninterface RegisterUser {\r\n  payload: {\r\n    success: boolean;\r\n    err: {\r\n      errmsg: string;\r\n    }\r\n  }\r\n}\r\n\r\ninterface FormType {\r\n  email: string;\r\n  nickname: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n}\r\n\r\nfunction RegisterPage(props: RegisterPageProps) {\r\n  const dispatch: any = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        nickname: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        nickname: Yup.string()\r\n          .required('필수 정보입니다.'),\r\n        email: Yup.string()\r\n          .email('이메일 형식이 아닙니다.')\r\n          .required('필수 정보입니다.'),\r\n        password: Yup.string()\r\n          .min(6, '패스워드는 최소 6글자 이상이어야합니다.')\r\n          .required('필수 정보입니다.'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), undefined], '패스워드가 틀립니다.')\r\n          .required('패스워드를 다시 입력해주세요.')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(async () => {\r\n          let flag\r\n          await Axios.post(\"api/users/email-check\", { email: values.email }).then((response) => {\r\n            flag = response.data.usedEmail\r\n          })\r\n\r\n          if (flag) {\r\n            alert(\"이미 사용 중인 아이디 입니다.\")\r\n            setSubmitting(false);\r\n            return\r\n          }\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            nickname: values.nickname,\r\n            image: \"https://i.imgur.com/rF80MBo.png\",\r\n            // image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n          };\r\n\r\n          await dispatch(registerUser(dataToSubmit)).then((response: RegisterUser) => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"registerPage-container\">\r\n            <div className=\"registerDiv-container\">\r\n              <div className=\"register-Title\">회원가입</div>\r\n              <div className=\"register-oldUser\">기존 사용자이신가요? <Link className=\"register-login\" to=\"/login\">로그인하기</Link></div>\r\n\r\n              <Form onSubmit={handleSubmit} labelAlign=\"left\"\r\n                labelCol={{ span: 5 }} wrapperCol={{ span: 19 }}>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 닉네임</label>}>\r\n                  <Input\r\n                    id=\"nickname\"\r\n                    placeholder=\"닉네임을 입력하세요\"\r\n                    type=\"text\"\r\n                    value={values.nickname}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.nickname && touched.nickname ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.nickname && touched.nickname && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.nickname}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 이메일</label>}\r\n                  hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                  <Input\r\n                    id=\"email\"\r\n                    placeholder=\"이메일을 입력하세요.\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.email}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 비밀번호</label>}\r\n                  hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                  <Input\r\n                    id=\"password\"\r\n                    placeholder=\"비밀번호를 입력하세요\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.password}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required label={<label style={{ color: \"white\" }}> 비밀번호 재확인</label>} hasFeedback>\r\n                  <Input\r\n                    id=\"confirmPassword\"\r\n                    placeholder=\"비밀번호를 재입력하세요\"\r\n                    type=\"password\"\r\n                    value={values.confirmPassword}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.confirmPassword && touched.confirmPassword && (\r\n                    <div className=\"input-feedback\" style={{ color: \"rgb(255, 60, 60)\" }}>{errors.confirmPassword}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"register-button\"\r\n                      disabled={isSubmitting}\r\n                      onSubmit={() => handleSubmit()}\r\n                    >\r\n                      회원가입\r\n                    </button>\r\n                  </div>\r\n                </Form.Item>\r\n\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import { message } from 'antd';\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport {LOCAL_HOST} from \"../../../Config\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport './ContributedGame.css';\r\n\r\nimport { ObjectId } from \"mongodb\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faFile, faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { SCENE_ICON } from '../../../svg/icon';\r\n\r\ninterface ContributedGame {\r\n  gameId: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  _id: string;\r\n}\r\n\r\ninterface GameDetail {\r\n  createdAt: string;\r\n  description: string;\r\n  sceneCnt: number;\r\n  thumbnail: string;\r\n  title: string;\r\n}\r\n\r\ninterface ThumbsUp {\r\n  like: number;\r\n  isClick: boolean;\r\n}\r\n\r\nfunction ContributedGame(props: any) {\r\n  const gameId: string = props.gameId;\r\n  const sceneCnt: number = props.sceneCnt;\r\n\r\n  const [gameDetail, setGameDetail] = useState<GameDetail>({\r\n    createdAt: \"\",\r\n    description: \"\",\r\n    sceneCnt: 0,\r\n    thumbnail: \"\",\r\n    title: \"\",\r\n  });\r\n  const [view, setView] = useState<number>(0);\r\n  const [thumbsUp, setThumbsUp] = useState<ThumbsUp>({\r\n    like: 0,\r\n    isClick: false,\r\n  });\r\n  \r\n  useEffect(() => {\r\n    Axios.post(\"/api/game/getgamedetail\", {gameId: new ObjectId(gameId)}).then((response) => {\r\n      setGameDetail(response.data.gameDetail)\r\n    })\r\n    Axios.post(\"/api/view/\", {objectId: new ObjectId(gameId)}).then((response) => {\r\n      setView(response.data.view)\r\n    })\r\n    Axios.post(\"/api/thumbsup/count\", {objectId: new ObjectId(gameId)}).then((response) => {\r\n      setThumbsUp({\r\n        isClick: response.data.isClicked,\r\n        like: response.data.thumbsup\r\n      });\r\n    })\r\n  },[])\r\n\r\n  if(gameDetail.title === \"\"){\r\n    return <div></div>\r\n  }\r\n\r\n  const description = gameDetail.description.length > 300 ? gameDetail.description.slice(0,300)+'...' : gameDetail.description;\r\n  return (\r\n    <div className=\"contribute__container\">\r\n      <Link to={`/game/${gameId}`}>\r\n        <img\r\n          className=\"contribute__img\"\r\n          src={`http://${LOCAL_HOST}:5000/${gameDetail.thumbnail}`}\r\n          alt=\"https://cdn.crowdpic.net/list-thumb/thumb_l_110F2464CA8958D839ECCBA33E453FDF.jpg\"\r\n        />\r\n        <div className=\"contribute__icon\">\r\n          <div>\r\n            {gameDetail.sceneCnt}\r\n            <FontAwesomeIcon icon={faFile} style={{ marginLeft: \"10px\" }} /> \r\n          </div>\r\n          <div>\r\n            {view}\r\n            <FontAwesomeIcon icon={faEye} style={{ marginLeft: \"10px\" }} />\r\n          </div>\r\n          <div>\r\n            {thumbsUp.like} \r\n            <FontAwesomeIcon style={{ marginLeft: \"10px\" }} icon={faHeart} />\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <div className=\"contribute__info\">\r\n        <div className=\"contribute__title\">{gameDetail.title}</div>\r\n        <div className=\"contribute__text\">{description}</div>\r\n        {sceneCnt >= 0 ?\r\n          <div className=\"contribute__contributeCntText\">\r\n            기여한 스토리 개수: \r\n            <div className=\"contribute__cnt\">\r\n              {sceneCnt}\r\n            </div>\r\n          </div>\r\n          :\r\n          <div></div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ContributedGame\r\n","import { message } from 'antd';\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport {LOCAL_HOST} from \"../../Config\";\r\nimport ContributedGame from './ContributedGame/ContributedGame';\r\n\r\nimport './Profile.css';\r\n\r\ninterface Game {\r\n  gameId: string;\r\n  sceneId: string;\r\n}\r\n\r\ninterface SceneInfo {\r\n  sceneId: string;\r\n  depth: number;\r\n}\r\n\r\ninterface ContributedScene_type {\r\n  sceneCnt: number;\r\n  gameId: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  sceneList: SceneInfo[];\r\n}\r\n\r\ninterface ContributedGame_type {\r\n  gameId: string;\r\n  title: string;\r\n  thumbnail: string;\r\n}\r\n\r\ninterface UserData {\r\n  makingGameList: Game[];\r\n  image: string;\r\n  email: string;\r\n  nickname: string;\r\n  _id: string;\r\n  contributedSceneList: ContributedScene_type[];\r\n  contributedGameList: ContributedGame_type[];\r\n}\r\n\r\ninterface State_user {\r\n  user: {\r\n    userData: UserData;\r\n  }\r\n}\r\n\r\nfunction Profile(props: any) {\r\n  const userId: string = props.match.params.userId;\r\n  const currUserData: UserData = useSelector((state: State_user) => state.user.userData);\r\n  let isUser: boolean = false;\r\n  const FETCHNIG_CNT: number = 5;\r\n\r\n  const [user, setUser] = useState<UserData>({\r\n    makingGameList: [],\r\n    image: \"\",\r\n    email: \"\",\r\n    nickname: \"\",\r\n    _id: \"\",\r\n    contributedSceneList: [],\r\n    contributedGameList: [],\r\n  });\r\n  const [fetching, setFetching] = useState(false);\r\n  const [gameContentsNumber, setGameContentsNumber] = useState<number>(FETCHNIG_CNT);\r\n  const [sceneContentsNumber, setSceneContentsNumber] = useState<number>(FETCHNIG_CNT);\r\n  const [totalSceneContribute, setTotalSceneContribute] = useState<number>(0);\r\n  const [totalGameContribute, setTotalGameContribute] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    Axios.post(\"/api/users/profile\", {userId: userId}).then((response) => {\r\n      if (response.data.success) {\r\n        setUser(response.data.user);\r\n        let tmp: number = 0;\r\n        for (let i=0; i<response.data.user.contributedSceneList.length; i++){\r\n          tmp += response.data.user.contributedSceneList[i].sceneCnt;\r\n        }\r\n        setTotalSceneContribute(tmp);\r\n        setTotalGameContribute(response.data.user.contributedGameList.length);\r\n      } else {\r\n          message.error(\"사용자 정보를 불러오는데 실패했습니다.\");\r\n      }\r\n    })\r\n  },[])\r\n  \r\n  if(currUserData?._id === userId){\r\n    isUser = true;\r\n  }\r\n\r\n  const displayContributedScene = (user: UserData) => {\r\n    const contributedSceneList: ContributedScene_type[] = user.contributedSceneList.slice(0,sceneContentsNumber);\r\n    if(contributedSceneList){\r\n      const contributedScene =  contributedSceneList.map((\r\n        game: ContributedScene_type\r\n      ) => {\r\n        return (\r\n          <div key={game.gameId}>\r\n            <ContributedGame \r\n              gameId={game.gameId}\r\n              sceneCnt={game.sceneCnt}\r\n            />\r\n          </div>\r\n        )\r\n      })\r\n      return (\r\n        <>\r\n        {contributedScene}\r\n        {user.contributedSceneList.length > sceneContentsNumber?\r\n          <div\r\n            className=\"displayMore\" \r\n            onClick={()=>setSceneContentsNumber((state)=>state+FETCHNIG_CNT)}\r\n          >\r\n            더보기\r\n          </div>\r\n          :\r\n          <div></div>\r\n        }\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const displayContributedGame = (user: UserData) => {\r\n    const contributedGameList: ContributedGame_type[] = user.contributedGameList.slice(0,gameContentsNumber);;\r\n    if(contributedGameList){\r\n      const contributedGame =  contributedGameList.map((\r\n        game: ContributedGame_type\r\n      ) => {\r\n        return (\r\n          <div key={game.gameId}>\r\n            <ContributedGame \r\n              gameId={game.gameId}\r\n              sceneCnt={-1}\r\n            />\r\n          </div>\r\n        )\r\n      })\r\n      return (\r\n        <>\r\n        {contributedGame}\r\n        {user.contributedGameList.length > gameContentsNumber?\r\n          <div\r\n            className=\"displayMore\" \r\n            onClick={()=>setGameContentsNumber((state)=>state+FETCHNIG_CNT)}\r\n          >\r\n            더보기\r\n          </div>\r\n          :\r\n          <div></div>\r\n        }\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  // const displayMakingGame = (currUserData: UserData) => {\r\n  //   const makingGameList: Game[] = currUserData.makingGameList;\r\n  //   if (makingGameList){\r\n  //     return makingGameList.map((game: Game, index: number) => {\r\n  //       return (\r\n  //         <div key={index}>\r\n  //           <div>\r\n  //             {game.gameId}\r\n  //           </div>\r\n  //           <Link to={\r\n  //             {\r\n  //               pathname: `/scene/make`,\r\n  //               state: {\r\n  //                 gameId: game.gameId,\r\n  //                 sceneId: game.sceneId\r\n  //               }\r\n  //             }\r\n  //           } key = {index}>\r\n  //             게임 만들러가기..\r\n  //           </Link>\r\n  //         </div>\r\n  //       )\r\n  //     })\r\n  //   } else{\r\n  //     return <div>만드는 중인 게임이 없습니다..</div>\r\n  //   }\r\n  // }\r\n\r\n  const onClick_tab = (name: string): void => {\r\n    const element: HTMLElement | null = document.getElementById(name);\r\n    document.getElementById(\"contributedGame\")!.style.display = \"none\";\r\n    document.getElementById(\"contributedScene\")!.style.display = \"none\";\r\n    // if(isUser)\r\n    //   document.getElementById(\"makingGame\")!.style.display = \"none\";\r\n    element!.style.display = \"block\";\r\n  }\r\n\r\n  if (currUserData){\r\n    return (\r\n      <div className=\"profile__container\">\r\n        \r\n        <div className=\"profile__thumbnail_container\">\r\n          <img\r\n              className=\"profile__thumbnail\"\r\n              src={`https://i.imgur.com/UwPKBqQ.jpg`}\r\n              alt=\"\"\r\n          />\r\n          <div className=\"profile__gradation\"></div>\r\n          <div className=\"profile__userInfo\">\r\n            <img \r\n              src={user.image} alt=\"\" \r\n              className=\"profile__img\"\r\n            />\r\n            <div className=\"profile__text\">\r\n              <div>{user.nickname}</div>\r\n              <div>{user.email}</div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        \r\n        <div className=\"profile__btn_container\">\r\n          <div \r\n            className=\"profile__btn\"\r\n            onClick={() => onClick_tab(\"contributedScene\")}\r\n          >\r\n            내가 만든 스토리 \r\n          </div>\r\n          <div \r\n            className=\"profile__btn\"\r\n            onClick={() => onClick_tab(\"contributedGame\")}\r\n          >\r\n            내가 만든 게임 \r\n          </div>\r\n          \r\n          {/* {isUser &&\r\n          <div onClick={() => onClick_tab(\"makingGame\")}>만들던 게임</div>\r\n          } */}\r\n        </div>\r\n        <div \r\n          id=\"contributedScene\"\r\n          style={{display:\"block\"}}\r\n        >\r\n          <div className=\"profile__title\">\r\n            기여한 스토리 {totalSceneContribute} 개\r\n          </div>\r\n          {displayContributedScene(user)}\r\n        </div>\r\n        <div \r\n          id=\"contributedGame\"\r\n          style={{display:\"none\"}}\r\n        >\r\n          <div className=\"profile__title\">\r\n            기여한 게임 {totalGameContribute} 개\r\n          </div>\r\n          {displayContributedGame(user)}\r\n        </div>\r\n        \r\n        {/* {isUser &&\r\n        <div \r\n          id=\"makingGame\"\r\n          style={{display:\"none\"}}\r\n        >\r\n          만들던 게임\r\n          {displayMakingGame(currUserData)}\r\n        </div>\r\n        }\r\n        {isUser ? \r\n        <div>isuser</div>\r\n        :\r\n        <div>isnt user</div>\r\n        } */}\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        loading...\r\n      </div>)\r\n  }\r\n}\r\n\r\nexport default Profile\r\n","import axios from 'axios';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport { Input, message } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport './SingleReply.css';\r\n\r\nfunction SingleReply({comment, updateToggle_comment, gameId}) {\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  const user_id = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData._id;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editComment, setEditComment] = useState(\"\");\r\n  const [like, setLike] = useState(0);\r\n  const [update, setUpdate] = useState(true);\r\n\r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        setLike(response.data.result.length);\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onClick_removeComment = () => {\r\n    setIsEdit(false);\r\n    axios.post('/api/comment/remove-comment', {commentId: comment._id}).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 삭제되었습니다.');\r\n        updateToggle_comment();\r\n      } else {\r\n        message.error('댓글 삭제에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClick_toggleEdit = () => {\r\n    setIsEdit((state) => !state);\r\n    setEditComment(comment.content);\r\n  }\r\n\r\n  const onChange_editcomment = (event) => {\r\n    setEditComment(event.currentTarget.value);\r\n  }\r\n\r\n  const onClick_editComment = (e) => {\r\n    e.preventDefault();\r\n    axios.post('/api/comment/edit-comment', \r\n      {commentId: comment._id, comment: editComment}\r\n    ).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 수정되었습니다.');\r\n        updateToggle();\r\n      } else {\r\n        message.error('댓글 수정에 실패했습니다.');\r\n      }\r\n    })\r\n    setIsEdit((state) => !state);\r\n  }\r\n\r\n  const onClick_like = () => {\r\n    if(isAuth === false){\r\n      return\r\n    }\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/setlike', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        updateToggle();\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"container_box\" id={comment._id}>\r\n      <div className=\"comment_container\">\r\n        <img src={comment.writer.image} alt=\"img\" className=\"SingleReply__img\"/>\r\n        <div className=\"comment_contents\">\r\n          <div className=\"SingleReply__nickname\">{comment.writer.nickname}</div>\r\n          {isAuth &isEdit ? \r\n          <div className=\"edit_container\">\r\n          <textarea className=\"comment_input\" onChange={onChange_editcomment} value={editComment} />\r\n          <button className=\"comment__btn\" onClick={onClick_editComment}>수정</button>\r\n          </div>\r\n          :\r\n          <div className=\"SingleReply__content\">{comment.content}</div>\r\n          }\r\n          <div className=\"SingleReply__comment_info\">\r\n          <div onClick={onClick_like} className=\"comment_like\">좋아요 : {like}</div>\r\n            { comment.writer._id === user_id&&\r\n            <>\r\n            <div onClick={onClick_toggleEdit} className=\"comment_option\">{isEdit ? \"수정 취소\" : \"댓글 수정\"}</div>\r\n            <div onClick={onClick_removeComment} className=\"comment_option\">댓글 삭제</div>\r\n            </>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(SingleReply)","import { Input, message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { memo, useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport SingleReply from './SingleReply';\r\nimport './SingleComment.css';\r\n\r\n//Todo : 댓글이 밀린다,,,!\r\n\r\nfunction SingleComment({gameId, comment, updateToggle_comment}) {\r\n  const user = useSelector((state) => state.user);\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  const user_id = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData._id;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const reference = useRef();\r\n\r\n  const [update, setUpdate] = useState(true);\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n  const [Replys, setReplys] = useState([]);\r\n  const [writeReply, setWriteReply] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editComment, setEditComment] = useState(\"\");\r\n  const [showComment, setShowComment] = useState(false);\r\n  const [like, setLike] = useState(0);\r\n\r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    const comment_variable = {\r\n      gameId: gameId,\r\n      responseTo: comment._id.toString()\r\n    }\r\n    axios.post('/api/comment/get-reply', comment_variable).then(response => {\r\n      if (response.data.success) {\r\n        setReplys(response.data.result);\r\n      } else {\r\n        message.error('대댓글을 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        setLike(response.data.result.length);\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onClick_writeReply = () => {\r\n    setWriteReply((state) => !state);\r\n  }\r\n\r\n  const onClick_displayReply = () => {\r\n    if (reference.current.style.display === 'block') {\r\n      reference.current.style.display = 'none';\r\n      setShowComment(false);\r\n      setWriteReply(false);\r\n    } else {\r\n      reference.current.style.display = 'block'\r\n      setShowComment(true);\r\n    }\r\n  }\r\n  \r\n  const onChange_comment = (event) => {\r\n    setCommentContent(event.currentTarget.value);\r\n  }\r\n\r\n  const onSubmit_response = (event) => {\r\n    event.preventDefault();\r\n    if(commentContent === \"\"){\r\n      return;\r\n    }\r\n    const variables = {\r\n      content: commentContent,\r\n      writer: user.userData._id,\r\n      gameId: gameId,\r\n      responseTo: comment._id.toString()\r\n    };\r\n\r\n    axios.post('/api/comment/save-comment', variables).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글 감사합니다!');\r\n        updateToggle();\r\n        setCommentContent(\"\");\r\n        if (reference.current.style.display !== 'block') {\r\n          reference.current.style.display = 'block'\r\n          setShowComment(true);\r\n        } \r\n      } else {\r\n        message.error('댓글 저장에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClick_removeComment = () => {\r\n    setIsEdit(false);\r\n    axios.post('/api/comment/remove-comment', {commentId: comment._id}).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 삭제되었습니다.');\r\n        updateToggle_comment();\r\n      } else {\r\n        message.error('댓글 삭제에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClick_toggleEdit = () => {\r\n    setIsEdit((state) => !state);\r\n    setEditComment(comment.content);\r\n  }\r\n\r\n  const onChange_editcomment = (event) => {\r\n    setEditComment(event.currentTarget.value);\r\n  }\r\n\r\n  const onClick_editComment = (e) => {\r\n    e.preventDefault();\r\n    axios.post('/api/comment/edit-comment', \r\n      {commentId: comment._id, comment: editComment}\r\n    ).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 수정되었습니다.');\r\n        updateToggle_comment();\r\n      } else {\r\n        message.error('댓글 수정에 실패했습니다.');\r\n      }\r\n    })\r\n    setIsEdit((state) => !state);\r\n  }\r\n\r\n  const onClick_like = () => {\r\n    if(isAuth === false){\r\n      return\r\n    }\r\n    const like_variable = {\r\n      gameId: gameId,\r\n      userId: user_id,\r\n      commentId: comment._id\r\n    }\r\n    axios.post('/api/like/setlike', like_variable).then(response => {\r\n      if (response.data.success) {\r\n        updateToggle();\r\n      } else {\r\n        message.error('좋아요를 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }\r\n\r\n  const mapReply = Replys.map((reply, index) => {\r\n    return (\r\n      <div key={reply._id} style={{marginLeft:'10px'}}>\r\n        {reply &&\r\n          <SingleReply\r\n            updateToggle_comment={updateToggle}\r\n            gameId={gameId} \r\n            comment={reply}/>\r\n        }\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"container_box\" id={comment._id}>\r\n      <div className=\"comment_container\">\r\n        <img src={comment.writer.image} alt=\"img\" className=\"img\"/>\r\n        <div className=\"comment_contents\">\r\n          <div className=\"nickname\">{comment.writer.nickname}</div>\r\n          {isEdit ? \r\n          <div className=\"edit_container\">\r\n            <textarea className=\"singleComment_input\" onChange={onChange_editcomment} value={editComment} />\r\n            <button className=\"comment__btn\" onClick={onClick_editComment}>수정</button>\r\n          </div>\r\n          :\r\n          <div className=\"content\">{comment.content}</div>\r\n          }\r\n          <div className=\"comment_info\">\r\n            <div onClick={onClick_like} className=\"comment_like\">좋아요 : {like}</div>\r\n            { Replys.length ? \r\n            <>\r\n            <div onClick={onClick_displayReply} className=\"comment_displayReplyToggle\">\r\n            { showComment ?\r\n              <div>\r\n                댓글 닫기\r\n              </div>\r\n              :\r\n              <div>\r\n                댓글 {Replys.length}개 보기\r\n              </div>\r\n            }\r\n            </div>\r\n            </>\r\n            :\r\n            <div></div>\r\n            }\r\n            <div onClick={onClick_writeReply} className=\"comment_option\">{writeReply? \"작성 취소\" :\"댓글 작성\"}</div>\r\n            { comment.writer._id === user_id&&\r\n            <>\r\n            <div onClick={onClick_toggleEdit} className=\"comment_option\">{isEdit ? \"수정 취소\" : \"댓글 수정\"}</div>\r\n            <div onClick={onClick_removeComment} className=\"comment_option\">댓글 삭제</div>\r\n            </>\r\n            }\r\n          </div>\r\n          {(isAuth & writeReply) ?\r\n          <form className=\"comment__form\">\r\n            <textarea\r\n              className=\"singleComment__textarea\"\r\n              onChange={onChange_comment}\r\n              value={commentContent}\r\n              placeholder=\"코멘트를 작성해 주세요.\"\r\n              />\r\n            <button className=\"comment__btn\" onClick={onSubmit_response}>댓글</button>\r\n          </form> \r\n          :\r\n          <div></div>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div ref={reference} className=\"reply_container\">\r\n        {mapReply}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(SingleComment)","import { message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { memo, useEffect, useState } from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport './Comment.css';\r\nimport SingleComment from './SingleComment';\r\n\r\nfunction Comment({gameId}) {\r\n  const user = useSelector((state) => state.user);\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  \r\n  const [update, setUpdate] = useState(true);\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const FETCHNIG_CNT = 8;\r\n  const [fetching, setFetching] = useState(false);\r\n  const [totalComment, setTotalComment] = useState([]);\r\n  const [contentNumber, setContentNumber] = useState(0);\r\n\r\n  const fetchNextData = async () => {\r\n    setFetching(true);\r\n    \r\n    setComments(totalComment.slice(0,contentNumber+FETCHNIG_CNT));\r\n    setContentNumber((state) => state+FETCHNIG_CNT);\r\n\r\n    setFetching(false);\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n    if (scrollTop + clientHeight*(3/2) >= scrollHeight && fetching === false) {\r\n      fetchNextData();\r\n    }\r\n   };\r\n\r\n   useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  });\r\n \r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.post('/api/comment/get-comment', {gameId: gameId}).then(response => {\r\n      if (response.data.success) {\r\n        setTotalComment(response.data.result);\r\n        setComments(response.data.result.slice(0,contentNumber));\r\n      } else {\r\n        message.error('댓글을 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onChange_comment = (event) => {\r\n    setCommentContent(event.currentTarget.value);\r\n  }\r\n\r\n  const onSubmit_comment = (event) => {\r\n    event.preventDefault();\r\n    if(commentContent === \"\"){\r\n      return;\r\n    }\r\n\r\n    const variables = {\r\n      content: commentContent,\r\n      writer: user.userData._id,\r\n      gameId: gameId,\r\n      responseTo : \"\"\r\n    };\r\n\r\n    axios.post('/api/comment/save-comment', variables).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글 감사합니다!');\r\n        updateToggle();\r\n        setCommentContent(\"\");\r\n      } else {\r\n        message.error('댓글 저장에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const mapComment = comments.map((comment, index) => {\r\n    return (\r\n      <div key={comment._id}>\r\n        {comment &&\r\n          <SingleComment \r\n            updateToggle_comment={updateToggle}\r\n            gameId={gameId} \r\n            comment={comment}/>\r\n        }\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"comment__container\">\r\n      <div className=\"comment__commentCnt\">\r\n        댓글 {totalComment.length}개\r\n      </div>\r\n      <hr/>\r\n      <br />\r\n      {isAuth &&\r\n      <form className=\"comment__form\">\r\n        <textarea\r\n          className=\"comment__textarea\"\r\n          onChange={onChange_comment}\r\n          value={commentContent}\r\n        />\r\n        <button className=\"comment__btn\" onClick={onSubmit_comment}>댓글</button>\r\n      </form>\r\n      }\r\n      {mapComment}\r\n      <br />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Comment)","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction TopRatingContributer(props) {\r\n  const contributerList = props.contributerList;\r\n  const totalSceneCnt = props.totalSceneCnt;\r\n  const creatorNickname = props.creatorNickname;\r\n\r\n  const topRateContributer_SceneCnt = contributerList[0]?.userSceneCnt;\r\n\r\n  const topContributer = contributerList.map((contributer, index) => {\r\n      const contributeRatio = Math.round(contributer.userSceneCnt/totalSceneCnt*100);\r\n      const fakeRatio = Math.round(contributer.userSceneCnt/topRateContributer_SceneCnt*100);\r\n      return (\r\n          <div \r\n              key={contributer.userId}\r\n              className=\"detailPage__contributer\"\r\n          >\r\n              <div className={`detailPage__contributer_rankNum ${index}`}>\r\n                  {index+1}위\r\n              </div>\r\n              <img \r\n                  className=\"detailPage__contributer_img\"   \r\n                  src={contributer.image} \r\n                  alt=\"image\"\r\n              />\r\n              <div className=\"detailPage__contributer_info\">\r\n                  <Link to={`/profile/${contributer.userId}`}\r\n                      className={\r\n                      creatorNickname === contributer.nickname ? \r\n                      \"detailPage__creater_nickname\" : \r\n                      \"detailPage__contributer_nickname\"\r\n                      }>\r\n                      {contributer.nickname.substr(0,11)}\r\n                  </Link>\r\n                  <div className=\"detailPage__contributer_graph\">\r\n                      <div \r\n                          className=\"detailPage__graph_wrapper\"\r\n                          style={{width: `${fakeRatio}%`}}\r\n                      >\r\n                          <div \r\n                              className=\"detailPage__graph\">\r\n                              {contributeRatio}%\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      )\r\n  })  \r\n  return (\r\n    <div>\r\n      {topContributer}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopRatingContributer\r\n","import { Button, message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./GameDetailPage.css\";\r\nimport { LOCAL_HOST } from \"../../Config\"\r\nimport Comment from '../Comment/Comment.js';\r\nimport { socket } from \"../../App\";\r\nimport { SVG } from \"../../svg/icon\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport TopRatingContributer from \"./TopRatingContributer\";\r\nimport \"./GameDetailPage.css\";\r\n\r\nconst config = require('../../../config/key')\r\n\r\nfunction GameDetailPage(props) {\r\n    const gameId = props.match.params.gameId;\r\n    const variable = { gameId: gameId };\r\n\r\n    const [gameDetail, setGameDetail] = useState([]);\r\n    const [sceneId, setSceneId] = useState([]);\r\n    const [isMaking, setIsMaking] = useState(false);\r\n    const [view, setView] = useState(0);\r\n    const [thumbsUp, setThumbsUp] = useState(0);\r\n    const [thumbsUpClicked, setThumbsUpClicked] = useState(false);\r\n    const [totalSceneCnt, setTotalSceneCnt] = useState(0);\r\n    const [ContributerCnt, setContributerCnt] = useState(0);\r\n    const [contributerList, setContributerList] = useState([]);\r\n    const [isPlayed, setIsPlayed] = useState(false);\r\n\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const playFirstScene = async (isFirst) => {\r\n        try {\r\n            let response;\r\n            if(isFirst){\r\n                response = await Axios.get(\"/api/users/playing-list/clear\");\r\n                // Not Yet Tested\r\n                if (user.userData.isAuth && isMaking){\r\n                    socket.emit(\"empty_num_increase\", {user_id: user.userData._id.toString(), scene_id: response.data.prevOfLastScene.toString()});\r\n                }\r\n            }\r\n            props.history.replace({\r\n                pathname: (!isFirst && isMaking) ? `/scene/make` : `/gameplay`,\r\n                state: {\r\n                    sceneId: isFirst ? response.data.teleportSceneId : sceneId,\r\n                    gameId: gameId,\r\n                }\r\n            })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.post(\"/api/game/getgamedetail\", variable).then((response) => {\r\n            if (response.data.success) {\r\n                setGameDetail(response.data.gameDetail);\r\n            } else {\r\n                message.error(\"게임 정보를 로딩하는데 실패했습니다.\");\r\n            }\r\n        });\r\n        Axios.post(\"/api/game/rank\", variable).then((response) => {\r\n            if (response.data.success) {\r\n                setContributerList(response.data.topRank);\r\n                setContributerCnt(response.data.contributerCnt);\r\n                setTotalSceneCnt(response.data.totalSceneCnt);\r\n            } else {\r\n                message.error(\"게임 정보를 로딩하는데 실패했습니다.\");\r\n            }\r\n        });\r\n        Axios.get(`/api/game/gamestart/${gameId}`).then((response) => {\r\n            if (response.data.success) {\r\n                setSceneId(response.data.sceneId);\r\n                setIsMaking(response.data.isMaking);\r\n            } else {\r\n                message.error(\"로그인 해주세요.\");\r\n            }\r\n        });\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user && user.userData) {\r\n            const variable = {\r\n                userId: user.userData._id,\r\n                objectId: gameId\r\n            }\r\n            Axios.post(\"/api/view/\", variable).then((response) => {\r\n                if (response.data.success) {\r\n                    setView(response.data.view);\r\n                }\r\n            })\r\n        }\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        if (user && user.userData) {\r\n            const variable = {\r\n                objectId: gameId,\r\n                userId: user.userData._id,\r\n            }\r\n            Axios.post(\"/api/thumbsup/count\", variable).then((response) => {\r\n                if (response.data.success) {\r\n                    setThumbsUp(response.data.thumbsup);\r\n                    setThumbsUpClicked(response.data.isClicked);\r\n                }\r\n            })\r\n            Axios.post(\"/api/users/game-visit\", {userId: user.userData._id}).then((response) => {\r\n                if (response.data.success) {\r\n                    const sceneIdLength = response.data.gamePlaying?.sceneIdList.length;\r\n                    if(sceneIdLength > 1)\r\n                        setIsPlayed(true);\r\n                }\r\n            })\r\n        }\r\n    }, [user])\r\n\r\n    function onClick_thumbsUp() {\r\n        if (user && user.userData) {\r\n            // ((state) => state+1);\r\n            const variable = {\r\n                userId: user.userData._id,\r\n                objectId: gameId\r\n            }\r\n            Axios.post(\"/api/thumbsup/\", variable).then((response) => {\r\n                if (response.data.success) {\r\n                    setThumbsUp(response.data.thumbsup);\r\n                    setThumbsUpClicked(response.data.isClicked);\r\n                }\r\n            })\r\n        }\r\n    }\r\n    if(totalSceneCnt){\r\n        \r\n        return (\r\n            <div className=\"detailPage__container\">\r\n    \r\n                {/* 이미지 불러오는게 늦음 디버깅 필요 */}\r\n                <div className=\"detailPage__thumbnail_container\">\r\n                    <img\r\n                        className=\"detailPage__thumbnail\"\r\n                        src={\r\n                            process.env.NODE_ENV === 'production' ?\r\n                                gameDetail.thumbnail\r\n                                :\r\n                                `${config.SERVER}/${gameDetail?.thumbnail}`}\r\n                        alt=\"thumbnail\"\r\n                    />\r\n                    <div className=\"detailPage__contributer_container\">\r\n                        <div className=\"detailPage__contributer_title\"> {ContributerCnt}명이 함께하는 이야기</div>\r\n                        <TopRatingContributer\r\n                            contributerList={contributerList}\r\n                            creatorNickname={gameDetail?.creator?.nickname}\r\n                            totalSceneCnt={totalSceneCnt}\r\n                        />\r\n                    </div>\r\n                    <div className=\"detailPage__gamePlay\">\r\n                        <div className=\"detailPage__gamePlay_container\">\r\n                            <div className=\"detailPage__gamePlay_text\">\r\n                                현재 스토리\r\n                            </div>\r\n                            <div className=\"detailPage__gamePlay_sceneCntContainer\">\r\n                                <div className=\"detailPage__gamePlay_sceneCnt\">\r\n                                    {totalSceneCnt}\r\n                                </div>\r\n                                <div className=\"detailPage__gamePlay_cntText\">\r\n                                    개\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n    \r\n                        {/* <Link\r\n                            className=\"detailPage__gamePlay_link\"\r\n                            style={{ color: \"#f05454\" }}\r\n                            to={\r\n                                {\r\n                                    pathname: isMaking ? `/scene/make` : `/gameplay`,\r\n                                    state: {\r\n                                        gameId: gameId,\r\n                                        sceneId: sceneId\r\n                                    },\r\n                                }\r\n                            }>\r\n                            <div className=\"icon\">\r\n                                <SVG\r\n                                    src=\"playIcon_1\"\r\n                                    width=\"30\"\r\n                                    height=\"30\"\r\n                                    color=\"#FFF\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"text\">시작하기</div>\r\n                        </Link> */}\r\n                        {/* 게임 시작하기 or 이어 만들기 */}\r\n                        <div \r\n                            className=\"detailPage__gamePlay_link\"\r\n                            onClick={() => playFirstScene(false)}\r\n                        >\r\n                            <div className=\"icon\">\r\n                                <SVG\r\n                                    src=\"playIcon_1\"\r\n                                    width=\"30\"\r\n                                    height=\"30\"\r\n                                    color=\"#FFF\"\r\n                                />\r\n                            </div>\r\n                            {isPlayed ? \"이어하기\" : \"시작하기\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"detailPage__gradation\"></div>\r\n                    <div className=\"detailPage__UPTitle\">\r\n                        {gameDetail?.title}\r\n                    </div>\r\n                    <div className=\"detailPage__interaction\">\r\n                        <div\r\n                            onClick={onClick_thumbsUp}\r\n                            className=\"detailPage__like\"\r\n                        >\r\n                            {thumbsUp}\r\n                            {thumbsUpClicked ?\r\n                                <FontAwesomeIcon style={{ color: \"red\", marginLeft: \"10px\" }} icon={faHeart} />\r\n                                :\r\n                                <FontAwesomeIcon icon={faHeart} style={{ marginLeft: \"10px\" }} />\r\n                            }\r\n                        </div>\r\n                        <div className=\"detailPage__view\">\r\n                            {view}\r\n                            <FontAwesomeIcon icon={faEye} style={{ marginLeft: \"10px\" }} />\r\n                        </div>\r\n                    </div>\r\n                    {isPlayed &&\r\n                        <div \r\n                            className=\"detailPage__gamePlayFromStart_link\"\r\n                            onClick={() => playFirstScene(true)}\r\n                        >\r\n                            처음부터 하기\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"detailPage__info_container\">\r\n                    <div className=\"detailPage__title\">\r\n                        {/* {gameDetail.title} */}\r\n    \r\n                    </div>\r\n                    <div className=\"detailPage__genre\">\r\n                        장르:\r\n                        <div className=\"bold_text\">\r\n                            {gameDetail.category}\r\n                        </div>\r\n                        작가:\r\n                        <div className=\"bold_text\">\r\n                            {gameDetail?.creator?.nickname.substr(0, 20)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"detailPage__description\">\r\n                        {gameDetail.description}\r\n                    </div>\r\n    \r\n                    <Comment gameId={gameId} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div className=\"loader_container\">\r\n                <div className=\"loader\">Loading...</div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default GameDetailPage;\r\n","import React, { useState } from \"react\";\r\nimport { Typography, Button, Form, message, Input, Icon } from \"antd\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./GameUploadPage.css\";\r\nimport {LOCAL_HOST} from\"../../Config\"\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst PrivateOptions = [\r\n    { value: 0, label: \"Private\" },\r\n    { value: 1, label: \"Public\" },\r\n];\r\n\r\nconst CategoryOptions = [\r\n    { value: 0, label: \"살아남기\" },\r\n    { value: 1, label: \"로맨스\" },\r\n    { value: 2, label: \"스토리\" },\r\n    { value: 3, label: \"추리\" },\r\n    { value: 4, label: \"병맛\" },\r\n];\r\n\r\nconst RatioOptions = [\r\n    { value: `${9/16}`, label: \"16:9\"}, \r\n    { value: `${16/9}`, label: \"9:16(스마트폰)\"}, \r\n]\r\n\r\nfunction GameUploadPage(props) {\r\n    const user = useSelector((state) => state.user);\r\n    const [GameTitle, setGameTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [isPrivate, setIsPrivate] = useState(0);\r\n    const [category, setCategory] = useState(\"살아남기\");\r\n    const [ratio, setRatio] = useState(true);\r\n\r\n    const [filePath, setFilePath] = useState(\"\");\r\n    // const [duration, setDuration] = useState(\"\")\r\n    // const [thumbnailPath, setThumbnailPath] = useState(\"\")\r\n\r\n    const onTitleChange = (event) => {\r\n        setGameTitle(event.currentTarget.value);\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescription(event.currentTarget.value);\r\n    };\r\n\r\n    const onPrivateChange = (event) => {\r\n        setIsPrivate(event.currentTarget.value);\r\n    };\r\n\r\n    const onCartegoryChange = (event) => {\r\n        let cat_idx = event.currentTarget.value;\r\n        setCategory(event.currentTarget[cat_idx].text);\r\n    };\r\n\r\n    const onRatioChange = (event) => {\r\n        setRatio(state => !state);\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        if (!files[0]) {\r\n            alert(\"손상된 파일입니다.\");\r\n            return;\r\n        }\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { \"content-type\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n        };\r\n        formData.append(\"file\", files[0]);\r\n\r\n        Axios.post(\"/api/game/uploadfiles\", formData, config).then(\r\n            (response) => {\r\n                if (response.data.success) {\r\n                    setFilePath(response.data.url);\r\n                } else {\r\n                    alert(\"업로드 실패\");\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (GameTitle === \"\" || description === \"\" || filePath === \"\") {\r\n            alert(\"모든 정보를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        let floatRatio;\r\n        if (ratio) {\r\n            floatRatio = 9/16;\r\n        } else {\r\n            floatRatio = 16/9;\r\n        }\r\n        const game_variables = {\r\n            creator: user.userData._id,\r\n            title: GameTitle,\r\n            description: description,\r\n            thumbnail: filePath,\r\n            privacy: isPrivate,\r\n            category: category,\r\n            ratio: floatRatio,\r\n            writer: [user.userData._id],\r\n            character: [],\r\n            background: [],\r\n            bgm: [],\r\n            sound: [],\r\n        };\r\n        \r\n        Axios.post(\"/api/game/uploadgame\", game_variables).then((response) => {\r\n            if (response.data.success) {\r\n                message.success(\r\n                    \"첫 Scene을 생성해주세요. 오른쪽의 +버튼을 활용해 이미지들을 추가할 수 있습니다.\"\r\n                );\r\n                setTimeout(() => {\r\n                    props.history.replace(\r\n                        `/game/upload/${response.data.game._id}`\r\n                    );\r\n                }, 1000);\r\n            } else {\r\n                alert(\"game제작 실패\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n            <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n                <Title level={2}>Upload Game</Title>\r\n            </div>\r\n            <Form onSubmit={onSubmit}>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"300px\",\r\n                                    height: \"240px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    {/* thunb nail */}\r\n                    {filePath && (\r\n                        <div>\r\n                            <img\r\n                                className=\"thumbnail__img\"\r\n                                src={`http://${LOCAL_HOST}:5000/${filePath}`}\r\n                                alt=\"thumbnail\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <label>Title</label>\r\n                <Input onChange={onTitleChange} value={GameTitle} />\r\n                <br />\r\n                <br />\r\n                <label>Description</label>\r\n                <TextArea onChange={onDescriptionChange} value={description} />\r\n                <br />\r\n                <br />\r\n                <select onChange={onPrivateChange}>\r\n                    {PrivateOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <select onChange={onCartegoryChange}>\r\n                    {CategoryOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <label><input type=\"radio\" name=\"ratio\" checked={ratio} onChange={onRatioChange}/>컴퓨터</label>\r\n                <br />\r\n                <label><input type=\"radio\" name=\"ratio\" checked={!ratio} onChange={onRatioChange}/>스마트폰</label>\r\n                    \r\n                {/* <select onChange={onRatioChange}>\r\n                    {RatioOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select> */}\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Next Step\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameUploadPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row, Typography, Button, Form, Icon, message } from \"antd\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Axios from \"axios\";\r\nimport \"./GameBuildUpPage\";\r\nimport { LOCAL_HOST } from \"../../Config\"\r\n\r\nconst { Title } = Typography;\r\n\r\nconst config = require('../../../config/key')\r\n\r\nconst extension = {\r\n    image: [\".jpg\", \".png\", \".jpeg\", \".gif\"],\r\n    music: [\".mp3\", \".wav\", \".wmv\", \".wma\", \".flac\"],\r\n};\r\n\r\nfunction GameBuildUpPage(props) {\r\n    const [filePath, setFilePath] = useState(\"\");\r\n    const [fileState, setFileState] = useState(\"\");\r\n    const [cur_game, setGame] = useState([]);\r\n    const [characterCards, setCharacterCards] = useState([]);\r\n    const [backgroundCards, setBackgroundCards] = useState([]);\r\n    const [bgmCards, setBgmCards] = useState([]);\r\n    const [soundCards, setSoundCards] = useState([]);\r\n    const gameId = props.match.params.gameId;\r\n\r\n    const game_form = {\r\n        gameId: gameId,\r\n    };\r\n\r\n    useEffect(() => {\r\n        Axios.post(\"/api/game/getgamedetail\", game_form).then((response) => {\r\n            if (response.data.success) {\r\n                setGame(response.data.gameDetail);\r\n            } else {\r\n                message.error(\"game load에 실패했습니다.\");\r\n            }\r\n        });\r\n    }, [filePath]);\r\n\r\n    useEffect(() => {\r\n        //character\r\n        if (cur_game.character) {\r\n            const tempCharacterCards = cur_game.character.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"50px\", height: \"50px\" }}\r\n                                src={`${cur_game.character[index].image}`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setCharacterCards(tempCharacterCards);\r\n        }\r\n        //background\r\n        if (cur_game.background) {\r\n            const backgroundCards = cur_game.background.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"50px\", height: \"50px\" }}\r\n                                src={`${cur_game.background[index].image}`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setBackgroundCards(backgroundCards);\r\n        }\r\n        //bgm\r\n        if (cur_game.bgm) {\r\n            const bgmCards = cur_game.bgm.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"20px\", height: \"20px\" }}\r\n                                src={`${config.STORAGE}/music_icon.jpg`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                            {cur_game.bgm[index].name}\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setBgmCards(bgmCards);\r\n        }\r\n        //sound\r\n        if (cur_game.sound) {\r\n            const soundCards = cur_game.sound.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"20px\", height: \"20px\" }}\r\n                                src={`${config.STORAGE}/music_icon.jpg`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                            {cur_game.sound[index].name}\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setSoundCards(soundCards);\r\n        }\r\n    }, [cur_game]);\r\n\r\n    const onDrop = (files) => {\r\n        //check is_file ok\r\n        for (let i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n\r\n            let dotIdx = files[i].name.lastIndexOf(\".\");\r\n            if (dotIdx === -1) {\r\n                message.error(files[i].name + \"은 확장자가 없는 파일입니다.\");\r\n                return;\r\n            }\r\n\r\n            let cur_extension = files[i].name.substr(dotIdx, 10000);\r\n            if (\r\n                //image check\r\n                (fileState === 1 || fileState === 2) &&\r\n                extension.image.indexOf(cur_extension) == -1\r\n            ) {\r\n                message.error(\r\n                    files[i].name + \"은 지원하지 않는 이미지 확장자 파일입니다.\"\r\n                );\r\n                return;\r\n            }\r\n\r\n            if (\r\n                //sound check\r\n                (fileState === 3 || fileState === 4) &&\r\n                extension.music.indexOf(cur_extension) == -1\r\n            ) {\r\n                message.error(\r\n                    files[i].name + \"은 지원하지 않는 음원 확장자 파일입니다.\"\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            let formData = new FormData();\r\n            const header = {\r\n                header: { \"content-type\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n            };\r\n            formData.append(\"file\", files[i]);\r\n            let file_name = files[i].name;\r\n            Axios.post(\"/api/game/uploadfile\", formData, header).then(\r\n                (response) => {\r\n                    if (response.data.success) {\r\n                        setFilePath(response.data.url);\r\n\r\n                        switch (fileState) {\r\n                            case 1:\r\n                                const characterForm = {\r\n                                    gameId: gameId,\r\n                                    character: {\r\n                                        name: file_name,\r\n                                        image: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putCharacterImg\",\r\n                                    characterForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"캐릭터 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            case 2: //background\r\n                                const backgroundForm = {\r\n                                    gameId: gameId,\r\n                                    background: {\r\n                                        name: file_name,\r\n                                        image: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putBackgroundImg\",\r\n                                    backgroundForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"배경 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            case 3:\r\n                                const bgmForm = {\r\n                                    gameId: gameId,\r\n                                    bgm: {\r\n                                        name: file_name,\r\n                                        music: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\"/api/game/putBgm\", bgmForm).then(\r\n                                    (response) => {\r\n                                        if (response.data.success) {\r\n                                            setFilePath(response.data.url);\r\n                                        } else {\r\n                                            message.error(\"배경음 업데이트 실패\");\r\n                                        }\r\n                                    }\r\n                                );\r\n                                return;\r\n\r\n                            case 4:\r\n                                const soundForm = {\r\n                                    gameId: gameId,\r\n                                    sound: {\r\n                                        name: file_name,\r\n                                        music: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putSound\",\r\n                                    soundForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"효과음 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            default:\r\n                                message.error(\"정의되지 않은 업로드 버튼입니다.\");\r\n                                return;\r\n                        }\r\n                    } else {\r\n                        message.error(\"업로드 실패\");\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.history.push(`/scene/make/`);\r\n    };\r\n\r\n    const onCharacter = () => {\r\n        setFileState(1);\r\n    };\r\n    const onBackground = () => {\r\n        setFileState(2);\r\n    };\r\n    const onBgm = () => {\r\n        setFileState(3);\r\n    };\r\n    const onSound = () => {\r\n        setFileState(4);\r\n    };\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 캐릭터를 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"flex-start\" }}\r\n                    onClick={onCharacter}\r\n                >\r\n                    {/* Set click handler */}\r\n                    {/* <button onClick={onBackground}> </button> */}\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{characterCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 배경을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    // style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    style={{ display: \"flex\", justifyContent: \"flex-start\" }}\r\n                    onClick={onBackground}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{backgroundCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 음악을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    onClick={onBgm}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{bgmCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 효과음을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    onClick={onSound}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{soundCards}</Row>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Go to Last Step!!\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameBuildUpPage;\r\n","import \"./GameCharacterBlock.css\";\r\nimport React from \"react\";\r\nconst GameCharacterBlock = (props) => {\r\n  const { characterList } = props;\r\n  const characterblocks = characterList?.map((charSchema, index) => {\r\n    return (\r\n      <div key={index}>\r\n        <div\r\n          className=\"CharacterBlock\"\r\n          style={{ left: `${charSchema.posX}%` }}\r\n        >\r\n          <div\r\n            className=\"character__container\"\r\n            style={{\r\n              height: `${charSchema.size}%`,\r\n              top: `${charSchema.posY}%`\r\n            }}\r\n          >\r\n            <img\r\n              className=\"characterImg\"\r\n              src={charSchema.image}\r\n              alt=\"img\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  return <div className=\"CharacterBlocks\" >{characterblocks}</div>;\r\n};\r\n\r\nexport default GameCharacterBlock;","import { useEffect, useRef } from \"react\";\r\n\r\nfunction useKey(key, cb) {\r\n    const callbackRef = useRef(cb);\r\n\r\n    useEffect(() => {\r\n        callbackRef.current = cb;\r\n    });\r\n\r\n    useEffect(() => {\r\n        function handle(event) {\r\n            if (event.code === key && !event.shiftKey) {\r\n                callbackRef.current(event);\r\n            }\r\n        }\r\n        document.addEventListener(\"keypress\", handle);\r\n        return () => document.removeEventListener(\"keypress\", handle);\r\n    }, [key]);\r\n}\r\n\r\nexport default useKey;","import React, { memo } from \"react\";\r\nimport { Modal, Form, Input } from \"antd\";\r\nimport useKey from \"../../functions/useKey\";\r\n\r\nconst ModalFormComponent = ({ visible, onCancel, onCreate, form, remainTime }) => {\r\n  const { getFieldDecorator } = form;\r\n\r\n  function handleEnter() {\r\n    onCreate();\r\n  }\r\n\r\n  useKey(\"Enter\", handleEnter);\r\n\r\n  if (visible) {\r\n    return (\r\n      <Modal\r\n        visible={true}\r\n        title={`선택지 내용을 입력하세요 (${remainTime})`}\r\n        okText=\"제작 시작\"\r\n        cancelText=\"취소\"\r\n        onCancel={onCancel}\r\n        onOk={onCreate}\r\n      >\r\n        <Form layout=\"vertical\">\r\n          <Form.Item label=\"Title\">\r\n            {getFieldDecorator(\"title\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"제목을 입력해주세요!\",\r\n                },\r\n              ],\r\n            })(<Input ref={(input) => input && input.focus()} />)}\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst ModalForm = Form.create({ name: \"modal_form\" })(ModalFormComponent);\r\n\r\nexport default memo(ModalForm);\r\n","import { LOADINGPAGE_GAMEPLAY, PAUSE_GAMEPLAY } from \"./types\";\r\n\r\nexport function gameLoadingPage(loadingType) {\r\n  return {\r\n    type: LOADINGPAGE_GAMEPLAY,\r\n    payload: loadingType,\r\n  };\r\n}\r\n\r\nexport function gamePause(isPause) {\r\n  return {\r\n    type: PAUSE_GAMEPLAY,\r\n    payload: isPause,\r\n  };\r\n}\r\n","import React, { useState, useEffect, useCallback, useRef, memo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Button, message } from \"antd\";\r\nimport ModalForm from \"./InputModalForm\";\r\nimport { useHistory } from \"react-router\";\r\nimport { socket } from \"../../App\";\r\nimport axios from \"axios\";\r\nimport { gamePause } from \"../../../_actions/gamePlay_actions\";\r\nimport { SecurityScanTwoTone } from \"@ant-design/icons\";\r\n\r\nconst InputModal = ({ scene_id, scene_depth, game_id, scene_next_list, theme }) => {\r\n  const dispatch = useDispatch()\r\n  let history = useHistory();\r\n  const user = useSelector((state) => state.user);\r\n  const emptyNum = useSelector((state) => state.sync.emptyNum);\r\n  const [visible, setVisible] = useState(false);\r\n  const [formRef, setFormRef] = useState(null);\r\n  const [remainTime, setRemainTime] = useState(0);\r\n  const [decreaseTimer, setDecreaseTimer] = useState(null);\r\n  const [validated, setValidated] = useState(1)\r\n\r\n  const createFlag = useRef(false)\r\n\r\n  const tick = 30;\r\n\r\n\r\n  // const user_id = user.userData.isAuth ? user.userData._id.toString() : \"\";\r\n  let user_id;\r\n  const handleCreate = () => {\r\n    formRef.validateFields(async (err, values) => {\r\n      clearTimeout(decreaseTimer);\r\n      if (createFlag.current || err || !visible) {\r\n        return;\r\n      }\r\n\r\n      createFlag.current = true;\r\n      const data = {\r\n        gameId: game_id,\r\n        prevSceneId: scene_id,\r\n        isFirst: 0,\r\n        sceneDepth: scene_depth + 1,\r\n        title: values.title,\r\n      };\r\n      const res = await axios.post(\"/api/scene/create\", data);\r\n      //! socket 보내서 서버에서 scene Cache x exp 업데이트\r\n\r\n      socket.emit(\"created_choice\", { sceneId: scene_id, userId: user.us, exp: res.data.exp })\r\n      // tmp scene create\r\n\r\n      formRef.resetFields();\r\n      setVisible(false);\r\n\r\n      //! 껍데기 넣을 때, 서버에서 exp 같이 넣기 (별개로 or 같이 해도됨 시간 동기화가 되는 좋은 방법이 있다면)\r\n      history.replace({\r\n        pathname: `/scene/make`,\r\n        state: {\r\n          gameId: game_id,\r\n          sceneId: res.data.sceneId\r\n        }\r\n      });\r\n\r\n    });\r\n  };\r\n\r\n  const saveFormRef = useCallback((node) => {\r\n    if (node !== null) {\r\n      setFormRef(node);\r\n    }\r\n  }, []);\r\n  let decTimer;\r\n\r\n  const onClickHandler = () => {\r\n    if (user.userData.isAuth) {\r\n      dispatch(gamePause(true));\r\n      clearTimeout(decreaseTimer);\r\n      let tick = 30;\r\n      setRemainTime(tick);\r\n      decTimer = setInterval(() => {\r\n        tick--;\r\n        if (tick === 0) {\r\n          clearInterval(decTimer);\r\n          cancelHandler();\r\n          return;\r\n        }\r\n        setRemainTime(tick);\r\n      }, 970);\r\n      setDecreaseTimer(decTimer);\r\n\r\n      socket.emit(\"empty_num_decrease\", { scene_id, user_id });\r\n      setVisible(true);\r\n    }\r\n    else {\r\n      message.error(\"로그인이 필요합니다.\")\r\n    }\r\n  }\r\n\r\n  const cancelHandler = () => {\r\n    socket.emit(\"empty_num_increase\", { scene_id, user_id });\r\n    clearTimeout(decreaseTimer);\r\n    setVisible(false);\r\n    dispatch(gamePause(false));\r\n  }\r\n\r\n  const createHandler = () => {\r\n    return handleCreate();\r\n  }\r\n\r\n  const [dino, setDino] = useState(0);\r\n\r\n  useEffect(() => {\r\n    socket.off(\"validated\");\r\n    socket.on(\"validated\", (data) => {\r\n      setValidated(validated * -1)\r\n    })\r\n\r\n    socket.off(\"decrease_failed\");\r\n    socket.on(\"decrease_failed\", () => {\r\n      setVisible(false);\r\n      setDino(0);\r\n      setDino(1);\r\n    })\r\n\r\n    socket.emit(\"validate_empty_num\", { scene_id })\r\n  }, [scene_id])\r\n\r\n  useEffect(() => {\r\n    if (dino) {\r\n      clearTimeout(decreaseTimer);\r\n    }\r\n  }, [dino]);\r\n  return (\r\n    <>\r\n      {\r\n        (scene_next_list?.length < 4) &&\r\n        <>\r\n          <div\r\n            className={`text_line_choice ${theme}`}\r\n            onClick={emptyNum > 0 ? onClickHandler : null}\r\n          >\r\n            선택지 추가 (+{emptyNum})\r\n            </div>\r\n        </>\r\n      }\r\n      <ModalForm\r\n        ref={saveFormRef}\r\n        visible={visible}\r\n        onCancel={cancelHandler}\r\n        onCreate={createHandler}\r\n        remainTime={remainTime}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(InputModal);\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nfunction useMouse(key, cb) {\r\n    const callbackRef = useRef(cb);\r\n\r\n    useEffect(() => {\r\n        callbackRef.current = cb;\r\n    });\r\n\r\n    useEffect(() => {\r\n        function handle(event) {\r\n            callbackRef.current(event);\r\n        }\r\n        document.addEventListener(key, handle);\r\n        return () => document.removeEventListener(key, handle);\r\n    }, []);\r\n}\r\nexport default useMouse;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useKey from \"../../functions/useKey\";\r\nimport { useWindupString } from \"windups\";\r\nimport useMouse from \"../../functions/useMouse\";\r\nimport { LOCAL_HOST } from \"../../Config\";\r\n\r\nconst voice = new Audio(`http://${LOCAL_HOST}:5000/uploads/TYPING.mp3`);\r\nvoice.volume = 0.8\r\nfunction TextAnimation({ cut_script, setIsTyping }) {\r\n    const [flag, setFlag] = useState(false);\r\n    let i = 0;\r\n    const [text, { skip }] = useWindupString(\r\n        cut_script,\r\n        {\r\n            pace: () => 50,\r\n            onFinished: () => {\r\n                voice.pause()\r\n                setFlag(true)\r\n            },\r\n            onChar: () => {\r\n                if ((i == 0 || cut_script[i] === ' ' || cut_script[i] === '.')) {\r\n                    voice.pause()\r\n                } else {\r\n                    voice.play()\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n    );\r\n\r\n    useKey(\"Enter\", handleEnter);\r\n    useKey(\"Space\", handleEnter);\r\n    useMouse(\"mouseup\", handleEnter);\r\n    function handleEnter(event) {\r\n        skip()\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setIsTyping(false)\r\n        }\r\n    }, [flag])\r\n\r\n    if (cut_script)\r\n        return <div>{text}</div>\r\n    else\r\n        return <div></div>\r\n}\r\n\r\n\r\nexport default TextAnimation;","\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { Button, Modal } from \"antd\";\r\n\r\nimport \"../SceneEndingPage/SceneEndingPage.css\";\r\n\r\n\r\n\r\nconst FirstSceneTeleport = ({ gameId, setScene }) => {\r\n    const history = useHistory();\r\n    const user = useSelector((state) => state.user);\r\n    const [isWarningVisible, setIsWarningVisible] = useState(false)\r\n\r\n    const playingListClear = () => {\r\n\r\n        if (user) {\r\n            //! auth를 통해서 쿠키에서 유저정보 갖고올 수 있다.\r\n            Axios.get(\"/api/users/playing-list/clear\").\r\n                then(response => {\r\n                    if (response.data.success) {\r\n                        setIsWarningVisible(false)\r\n                        setScene({})\r\n                        history.push({\r\n                            pathname: `/gameplay`,\r\n                            state: {\r\n                                sceneId: response.data.teleportSceneId,\r\n                                gameId: gameId,\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        setIsWarningVisible(false)\r\n\r\n                        alert(\"오류가 발생했습니다.\")\r\n                    }\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n    const cancelModal = () => {\r\n        setIsWarningVisible(false)\r\n    }\r\n    const openModal = () => {\r\n        setIsWarningVisible(true)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                onClick={openModal}\r\n                className=\"ending_button\"\r\n            >처음으로 돌아가기\r\n            </Button>\r\n            <Modal\r\n                title=\"⚠ 주의 ⚠\"\r\n                visible={isWarningVisible}\r\n                maskClosable={false}\r\n                closable={false}\r\n                centered = {true}\r\n                footer={\r\n                    <React.Fragment>\r\n                        <Button key = \"ok\" type= \"primary\" onClick={playingListClear}>\r\n                            확인\r\n                        </Button>\r\n                        <Button key = \"cancel\" onClick={cancelModal}>\r\n                            취소\r\n                        </Button>\r\n                    </React.Fragment>\r\n                }\r\n            >\r\n\r\n                <p>첫 화면으로 돌아갑니다.</p>\r\n                <p>이어하기로 돌아올 수 없습니다.</p>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default FirstSceneTeleport;\r\n","\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { Button } from \"antd\";\r\n\r\n\r\nconst PrevSceneTeleport = ({ gameId,setScene }) => {\r\n    const history = useHistory();\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const playingListPop = () => {\r\n\r\n        if (user) {\r\n            //! auth를 통해서 쿠키에서 유저정보 갖고올 수 있다.\r\n            Axios.get(\"/api/users/playing-list/pop\").\r\n                then(response => {\r\n                    if (response.data.success) {\r\n                        setScene({})\r\n                        history.push({\r\n                            pathname: `/gameplay`,\r\n                            state: {\r\n                                sceneId: response.data.teleportSceneId,\r\n                                gameId: gameId,\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        alert(\"오류가 발생했습니다.\")\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            alert(\"로그인 시 지원되는 기능입니다.\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Button\r\n                onClick={playingListPop}\r\n                className=\"ending_button\"\r\n        >이전으로 돌아가기\r\n        </Button>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PrevSceneTeleport;\r\n","import \"./SceneEndingPage.css\";\r\nimport React, { useState } from \"react\";\r\nimport FirstSceneTeleport from \"../SceneTeleport/FirstSceneTeleport\";\r\nimport PrevSceneTeleport from \"../SceneTeleport/PrevSceneTeleport\";\r\n\r\n\r\nconst SceneEndingPage = ({ gameId, setScene }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"ending_box\">\r\n            <div>\r\n                The End\r\n            </div>\r\n            <div className=\"ending_button_container\">\r\n                {/* <p>n개의 엔딩 중 1개를 발견하셨습니다. </p> */}\r\n                {/* <p>이 씬으로 온 당신은 1 n</p> */}\r\n\r\n                {/* <p>걸어왔던 길</p> -- 히스토리 맵 그 이상의.. 대사가 곁들여지고 멋진..*/}\r\n                <React.Fragment>\r\n\r\n                    <FirstSceneTeleport\r\n                        key={0}\r\n                        gameId={gameId}\r\n                        setScene={setScene}\r\n                    />\r\n                    <PrevSceneTeleport\r\n                        key={1}\r\n                        gameId={gameId}\r\n                        setScene={setScene}\r\n                    />\r\n                </React.Fragment>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SceneEndingPage;\r\n","import \"./TextBlock.css\";\r\nimport React, { useReducer } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\nimport InputModal from \"../Modal/InputModal\";\r\nimport TextAnimation from './TextAnimation'\r\nimport SceneEndingPage from \"../Scene/SceneEndingPage/SceneEndingPage\";\r\n\r\n// 일단 4 나중에 어떻게 할지 다시 결정..\r\nconst CHOICE_NUM = 4;\r\n\r\nexport const TextBlock = (props) => {\r\n    let { cut_name, cut_script, setIsTyping, isTyping, theme } = props;\r\n\r\n    theme = 'atorney';\r\n\r\n    return <>\r\n        {\r\n            cut_script ?\r\n                <div className={`text_window ${theme}`} >\r\n                    <div className={`text_container ${theme}`} >\r\n                        <div className={`name_block ${theme}`} >\r\n                            {cut_name}\r\n                        </div>\r\n                        <div className={`text_block ${theme}`} >\r\n                            <div className={`text_line ${theme}`} > {\r\n                                isTyping ? < TextAnimation\r\n                                    cut_script={cut_script}\r\n                                    setIsTyping={setIsTyping}\r\n                                /> : cut_script\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className={`text_line ${theme}`} > {\r\n                    isTyping ? < TextAnimation\r\n                        cut_script={\" \"}\r\n                        setIsTyping={setIsTyping}\r\n                    /> : cut_script\r\n                }\r\n                </div>\r\n        }\r\n    </>\r\n};\r\n \r\n// 선택지 display\r\nexport const TextBlockChoice = (props) => {\r\n\r\n    // 뭔가 한다..\r\n\r\n    let {\r\n        game_id,\r\n        cut_name,\r\n        cut_script,\r\n        scene_next_list,\r\n        scene_id,\r\n        scene_depth,\r\n        setIsTyping,\r\n        isTyping,\r\n        isEnding,\r\n        isLastMotion,\r\n        theme,\r\n        setScene\r\n    } = props;\r\n\r\n    theme = 'atorney';\r\n\r\n    const choices = scene_next_list.map((choice, index) => {\r\n        return (\r\n            <Link to={\r\n                {\r\n                    pathname: `/gameplay`,\r\n                    key: index,\r\n                    state: {\r\n                        gameId: game_id,\r\n                        sceneId: choice.sceneId\r\n                    }\r\n                }\r\n            } key={index}\r\n                style={{ textDecoration: 'none' }}\r\n                className={`text_line_choice ${theme}`}\r\n                onClick={() => setScene({})}\r\n            >\r\n                { choice.script}\r\n            </Link>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={`text_window ${theme}`} >\r\n            <TextBlock\r\n                cut_name={cut_name}\r\n                cut_script={cut_script}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n                theme={theme}\r\n            />\r\n            { isLastMotion &&\r\n                <div className={`choice_box ${isEnding} ${theme}`}>\r\n                    {isEnding === true ?\r\n                        <SceneEndingPage gameId={game_id} setScene={setScene} /> :\r\n                        <>\r\n                            {choices}\r\n                            {scene_next_list.length < CHOICE_NUM ?\r\n\r\n                                <InputModal scene_id={scene_id}\r\n                                    scene_depth={scene_depth}\r\n                                    game_id={game_id}\r\n                                    scene_next_list={scene_next_list}\r\n                                    theme={theme}\r\n                                />\r\n                                :\r\n                                (<div > </div>)\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import { message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Dislike.css\";\r\n\r\nfunction DislikePopup(props) {\r\n  const { gameId, sceneId, trigger, setTrigger } = props;\r\n\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [Title,setTitle] = useState(\"\");\r\n  const [Description,setDescription] = useState(\"\");\r\n\r\n  const onTitleChange = (event) => {\r\n    setTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const onDescriptionChange = (event) => {\r\n    setDescription(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const variable = {\r\n      title : Title,\r\n      description : Description,\r\n      user : user.userData._id,\r\n      sceneId : sceneId,\r\n      gameId : gameId,\r\n    }\r\n    Axios.post(\"/api/complaint/save\", variable).then((response) => {\r\n      if(!response.data.success) {\r\n        message.error(\"신고하는데 문제가 발생했습니다.\")\r\n      } else {\r\n        message.success(\"감사합니다. 신고가 접수되었습니다.\")\r\n        setTrigger(state => !state)\r\n      }\r\n    })\r\n  }\r\n\r\n  return trigger ? (\r\n    <div className=\"dislike_popup\">\r\n      <div className=\"dislike_inner\">\r\n        <button className=\"close_btn\" onClick={() => setTrigger(state => !state)}>\r\n          close\r\n        </button>\r\n        <label>Title</label>\r\n        <input onChange={onTitleChange} value={Title} />\r\n        <label>Description</label>\r\n        <textarea onChange={onDescriptionChange} value={Description} />\r\n        <button className=\"btn\" onClick={onSubmit}>\r\n          신고하기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default DislikePopup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./HistoryMap.css\";\r\nimport { message, Button, Modal } from \"antd\";\r\nimport { SVG } from \"../../svg/icon\";\r\n\r\nfunction MapToLeft() {\r\n  var map = document.getElementsByClassName(\"HistoryMap_inner\")[0];\r\n  var computedStyle = window.getComputedStyle(map);\r\n  var transform = computedStyle.getPropertyValue(\"transform\");\r\n  var new_position =\r\n    transform !== \"none\" ? parseInt(transform.split(\",\")[4]) : 0;\r\n\r\n  map.style.transform = `translate(${new_position + 250}px, 0px)`;\r\n}\r\n\r\nfunction MapToRight() {\r\n  var map = document.getElementsByClassName(\"HistoryMap_inner\")[0];\r\n  var computedStyle = window.getComputedStyle(map);\r\n  var transform = computedStyle.getPropertyValue(\"transform\");\r\n  var new_position =\r\n    transform !== \"none\" ? parseInt(transform.split(\",\")[4]) : 0;\r\n\r\n  map.style.transform = `translate(${new_position - 250}px, 0px)`;\r\n}\r\n\r\nfunction GoToScene(props) {\r\n  const { userhistory, gameId, sceneId, targetScene,setScene } = props;\r\n  const data = { data: { sceneIndex: targetScene - 1 } };\r\n  Axios.post(\"/api/game/refreshHistory\", data).then((response) => {\r\n    if (!response.data.success) {\r\n      message.error(\"Scene 변경 요청 실패\");\r\n    } else {\r\n      const close = document.getElementsByClassName(\"close_btn\");\r\n      for (let i = close.length - 1; i >= 0; i--) {\r\n        close[i].click();\r\n      }\r\n      setScene({});\r\n\r\n      userhistory.replace({\r\n        pathname: `/gameplay`,\r\n        state: {\r\n          sceneId: sceneId[targetScene - 1],\r\n          gameId: gameId,\r\n        },\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nlet sceneInfo = [];\r\nlet targetScene = 1;\r\n\r\nfunction HistoryMapPopup(props) {\r\n  const { userhistory, setTrigger, setScene } = props;\r\n  const { gameId, sceneId } = props.history;\r\n  const [SceneInfo, setSceneInfo] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = (target) => {\r\n    targetScene = target;\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    GoToScene({ userhistory, gameId, sceneId, targetScene, setScene });\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.trigger) {\r\n      Axios.get(\"api/game/simple-scene-info\").then((response) => {\r\n        sceneInfo = response.data.sceneinfo;\r\n        setSceneInfo(sceneInfo);\r\n      });\r\n      return () => {\r\n        setSceneInfo([]);\r\n      };\r\n    }\r\n  }, [props.trigger]);\r\n\r\n  function close_button() {\r\n    setTrigger(false);\r\n  }\r\n\r\n  const HistoryMap_scenes = SceneInfo.map((scene, index) => {\r\n    if (index === SceneInfo.length - 1) {\r\n      return (\r\n        <div\r\n          className=\"HistoryMap_scene\"\r\n          key={index + 1}\r\n          style={{border:\"0.2em orange solid\"}}\r\n        >\r\n          <div className=\"HistoryMap_scene_num\"> #{index + 1}</div>\r\n          <img className=\"HistoryMap_scene_img\" src={scene.background} />\r\n          <div className=\"HistoryMap_scene_name\">{scene.name}:</div>\r\n          <div className=\"HistoryMap_scene_text\">\"{scene.script}\"</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className=\"HistoryMap_scene\"\r\n          key={index + 1}\r\n          onClick={() => showModal(index + 1)}\r\n        >\r\n          <div className=\"HistoryMap_scene_num\"> #{index + 1}</div>\r\n          <img className=\"HistoryMap_scene_img\" src={scene.background} />\r\n          <div className=\"HistoryMap_scene_name\">{scene.name}:</div>\r\n          <div className=\"HistoryMap_scene_text\">\"{scene.script}\"</div>\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n\r\n  return props.trigger ? (\r\n    <div className=\"HistoryMap_popup\">\r\n      <div className=\"close_btn\" onClick={() => close_button()}>\r\n        <SVG\r\n          className=\"close_btn\"\r\n          src=\"close_2\"\r\n          width=\"45\"\r\n          height=\"50\"\r\n          color=\"#F5F5F5\"\r\n        ></SVG>\r\n      </div>\r\n\r\n      <div className=\"HistoryMap-toleft_btn\" onClick={MapToLeft}>\r\n        <SVG\r\n          src=\"arrow_1\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          color=\"#F5F5F5\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"HistoryMap-toright_btn\" onClick={MapToRight}>\r\n        <SVG\r\n          src=\"arrow_1\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          color=\"#F5F5F5\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"HistoryMap_inner\"\r\n        style={{ width: sceneInfo.length * 15 + \"%\" }}\r\n      >\r\n        {HistoryMap_scenes}\r\n      </div>\r\n\r\n      <Modal\r\n        title=\"경고\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <p>\r\n          {targetScene} 번째 씬으로 돌아갑니다. 돌아가려는 씬까지의 기록은\r\n          삭제됩니다.\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default HistoryMapPopup;\r\n","import React, { useState } from \"react\";\r\nimport \"./LoadingPage.css\";\r\nimport { useSelector } from \"react-redux\";\r\nconst LOADING_TYPE = {\r\n  NONE: 0,\r\n  BASIC: 1,\r\n  SLIDELEFT: 2,\r\n  SLIDERIGHT: 3,\r\n  SLIDEUP: 4,\r\n  SLIDEDOWN: 5,\r\n  BLACKIN: 6,\r\n};\r\n\r\nconst LoadingPage = () => {\r\n  const loadingType = useSelector((state) => state.gameplay.loadingType);\r\n  switch (loadingType) {\r\n    case LOADING_TYPE.NONE:\r\n      return null;\r\n    case LOADING_TYPE.BASIC:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1.5s ease-out 0s 1 basic\" }}\r\n          className=\"loading_page\"\r\n        >\r\n          <div className=\"loading_icon\">loading.....</div>\r\n        </div>\r\n      );\r\n    case LOADING_TYPE.SLIDELEFT:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideLeft\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDERIGHT:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideRight\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDEUP:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideUp\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDEDOWN:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideDown\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.BLACKIN:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 blackIn\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default LoadingPage;\r\n","import axios from 'axios';\r\nimport {\r\n    LOAD_EMPTY_NUM,\r\n    SAVE_PREV_SCENE\r\n} from './types';\r\n\r\nexport function loadEmptyNum(dataToSubmit){\r\n    const request = dataToSubmit.emptyNum !== undefined ? dataToSubmit.emptyNum : axios.get(`/api/game/getSceneInfo/${dataToSubmit.sceneId}`)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                const scene = response.data.scene;\r\n                return scene.sceneTmp.emptyNum;\r\n            }\r\n        });\r\n\r\n    return {\r\n        type: LOAD_EMPTY_NUM,\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function savePrevScene(dataToSubmit){\r\n    const request = dataToSubmit.prevSceneId;\r\n\r\n    return {\r\n        type: SAVE_PREV_SCENE,\r\n        payload: request\r\n    };\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function useFullscreenStatus(elRef) {\r\n  const [isFullscreen, setIsFullscreen] = React.useState(\r\n    document[getBrowserFullscreenElementProp()] != null\r\n  );\r\n\r\n  const setFullscreen = () => {\r\n    if (elRef.current == null) return;\r\n\r\n    elRef.current\r\n      .requestFullscreen()\r\n      .then(() => {\r\n        setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n      })\r\n      .catch(() => {\r\n        setIsFullscreen(false);\r\n      });\r\n  };\r\n\r\n  React.useLayoutEffect(() => {\r\n    document.onfullscreenchange = () =>\r\n      setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n\r\n    return () => (document.onfullscreenchange = undefined);\r\n  });\r\n\r\n  return [isFullscreen, setFullscreen];\r\n}\r\n\r\nfunction getBrowserFullscreenElementProp() {\r\n  if (typeof document.fullscreenElement !== \"undefined\") {\r\n    return \"fullscreenElement\";\r\n  } else if (typeof document.mozFullScreenElement !== \"undefined\") {\r\n    return \"mozFullScreenElement\";\r\n  } else if (typeof document.msFullscreenElement !== \"undefined\") {\r\n    return \"msFullscreenElement\";\r\n  } else if (typeof document.webkitFullscreenElement !== \"undefined\") {\r\n    return \"webkitFullscreenElement\";\r\n  } else {\r\n    throw new Error(\"fullscreenElement is not supported by this browser\");\r\n  }\r\n}\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./TreeMap.css\";\r\nimport { message } from \"antd\";\r\n\r\nfunction GoToScene(props) {\r\n  const { userhistory, gameId, sceneId, GoScene } = props;\r\n  const data = { data: { sceneIndex: GoScene - 1 } };\r\n  Axios.post(\"/api/game/refreshHistory\", data).then((response) => {\r\n    if (!response.data.success) {\r\n      message.error(\"Scene 변경 요청 실패\");\r\n    } else {\r\n      userhistory.push(`/gameplay/${gameId}/${sceneId[GoScene - 1]}`);\r\n      const close = document.getElementsByClassName(\"close_btn\");\r\n      for (let i = close.length - 1; i >= 0; i--) {\r\n        close[i].click();\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction GetSceneInfo(props) {\r\n  const { index, scene, setSceneInfo } = props;\r\n  Axios.get(`/api/game/getSceneInfo/${scene}`).then((response) => {\r\n    if (!response.data.success) {\r\n      alert(\"Scene 정보 없음...\");\r\n    } else {\r\n      const cutList = response.data.scene.cutList;\r\n      const lastcut = cutList[cutList.length - 1];\r\n      setSceneInfo({\r\n        sceneindex: index,\r\n        background: lastcut.background,\r\n        name: lastcut.name,\r\n        script: lastcut.script,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction useConstructor(callBack = () => {}) {\r\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\r\n  if (hasBeenCalled) return;\r\n  callBack();\r\n  setHasBeenCalled(true);\r\n}\r\n\r\n//* 나중에 스키마로 만들어야함\r\nconst SceneDepth = 4;\r\nconst sceneMap = [\r\n  { sceneId: 1, link: null },\r\n  { sceneId: 2, link: null },\r\n  { sceneId: 3, link: null },\r\n  { sceneId: 4, link: null },\r\n  { sceneId: null, link: null },\r\n  { sceneId: null, link: null },\r\n  { sceneId: 7, link: null },\r\n  { sceneId: 8, link: null },\r\n  { sceneId: 9, link: null },\r\n  { sceneId: 10, link: null },\r\n  { sceneId: 11, link: null },\r\n  { sceneId: 12, link: null },\r\n  { sceneId: 13, link: null },\r\n  { sceneId: 14, link: null },\r\n  { sceneId: 15, link: null },\r\n  { sceneId: 16, link: null },\r\n  { sceneId: 17, link: null },\r\n  { sceneId: 18, link: null },\r\n  { sceneId: 19, link: null },\r\n  { sceneId: 20, link: null },\r\n  { sceneId: 21, link: null },\r\n  { sceneId: 22, link: null },\r\n];\r\n\r\nconst nodeWidth = 10;\r\nconst nodeHeight = 5;\r\n\r\nlet pivot = [0, 0];\r\nlet position = [50, 0];\r\nlet drag = false;\r\n\r\nfunction TreeMapPopup(props) {\r\n  const { trigger, userhistory, setTrigger} = props;\r\n  const { gameId, sceneId } = props.history;\r\n\r\n  const [Position, setPosition] = useState();\r\n  \r\n  useConstructor(() => {\r\n    setPosition(position);\r\n  });\r\n\r\n  useEffect(() => {\r\n    var container = document.getElementsByClassName(\"TreeMap_popup\");\r\n    if (trigger) {\r\n      container[0].addEventListener(\"mousedown\", mouseDown);\r\n      container[0].addEventListener(\"mouseup\", mouseUp);\r\n      container[0].addEventListener(\"mousemove\", mouseMove);\r\n    } else {\r\n      if (container[0]) {\r\n        container[0].removeEventListener(\"mousedown\", mouseDown);\r\n        container[0].removeEventListener(\"mouseup\", mouseUp);\r\n        container[0].removeEventListener(\"mousemove\", mouseMove);\r\n      }\r\n    }\r\n  }, [trigger]);\r\n\r\n  function close_button() {\r\n    setTrigger(false);\r\n  }\r\n\r\n  function mouseDown(e) {\r\n    pivot = [e.pageX, e.pageY];\r\n    drag = true;\r\n    e.preventDefault();\r\n  }\r\n\r\n  function mouseUp(e) {\r\n    drag = false;\r\n    e.preventDefault();\r\n  }\r\n\r\n  function mouseMove(e) {\r\n    if (drag) {\r\n      if (pivot[0] !== e.pageX || pivot[1] !== e.pageY) {\r\n        position = [\r\n          position[0] - (pivot[0] - e.pageX),\r\n          position[1] - (pivot[1] - e.pageY),\r\n        ];\r\n        setPosition(position);\r\n        pivot = [e.pageX, e.pageY];\r\n      }\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  let depth = 1;\r\n  let cnt_limit = 1;\r\n  let cnt = 0;\r\n  const TreeMap_nodes = sceneMap.map((scene, index) => {\r\n    if (cnt === cnt_limit) {\r\n      depth += 1;\r\n      cnt = 0;\r\n      cnt_limit = cnt_limit * 4;\r\n    }\r\n    cnt += 1;\r\n\r\n    return (\r\n      <div\r\n        className=\"TreeMap_nodeContainer\"\r\n        style={{\r\n          width: (1 / SceneDepth) * 100 + \"%\",\r\n          height: (1 / cnt_limit) * 100 + \"%\",\r\n          left: ((depth - 1) / SceneDepth) * 100 + \"%\",\r\n          top: ((cnt - 1) / cnt_limit) * 100 + \"%\",\r\n        }}\r\n      >\r\n        {/* {index} */}\r\n        <div\r\n          className=\"TreeMap_node\"\r\n          style={{ width: 1 +\"rem\", height: 1+\"rem\" }}\r\n\r\n        />\r\n        {depth !== SceneDepth ? (\r\n          <Fragment>\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"12.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"37.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"62.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"87.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"50%\", top: \"50%\" }}\r\n            />\r\n            <hr className=\"TreeMap_nodeLine_vertical\" />\r\n          </Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return trigger ? (\r\n    <div className=\"TreeMap_popup\">\r\n      <button className=\"close_btn\" onClick={() => close_button()}>\r\n        close\r\n      </button>\r\n      <div\r\n        className=\"TreeMap_inner\"\r\n        style={{\r\n          width: nodeWidth * SceneDepth + \"%\",\r\n          height: nodeHeight * Math.pow(4, SceneDepth - 1) + \"%\",\r\n          left: Position[0],\r\n          top: Position[1],\r\n        }}\r\n      >\r\n        {TreeMap_nodes}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default TreeMapPopup;\r\n","import \"./GamePlayPage.css\";\r\nimport 'react-rangeslider/lib/index.css'\r\nimport \"./GamePlaySlider.css\";\r\nimport GameCharacterBlock from \"./GameCharacterBlock\";\r\nimport { TextBlock, TextBlockChoice } from \"./TextBlock.js\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport DislikePopup from \"./Dislike\";\r\nimport HistoryMapPopup from \"./HistoryMap\";\r\nimport LoadingPage from \"./LoadingPage\";\r\nimport { message } from \"antd\";\r\nimport { socket } from \"../../App\"\r\nimport { loadEmptyNum, savePrevScene } from \"../../../_actions/sync_actions\"\r\nimport useKey from \"../../functions/useKey\";\r\nimport { gameLoadingPage } from \"../../../_actions/gamePlay_actions\";\r\nimport { navbarControl } from \"../../../_actions/controlPage_actions\";\r\nimport useFullscreenStatus from \"../../../utils/useFullscreenStatus\";\r\nimport { useLocation } from \"react-router\";\r\nimport TreeMapPopup from \"./TreeMap\";\r\nimport { gamePause } from \"../../../_actions/gamePlay_actions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport Slider from 'react-rangeslider'\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport {\r\n  faCheckSquare,\r\n  faCompress,\r\n  faExpand,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst bgm_audio = new Audio();\r\nbgm_audio.volume = 0.5\r\nconst sound_audio = new Audio();\r\nsound_audio.volume = 0.5\r\n\r\nfunction useConstructor(callBack = () => { }) {\r\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\r\n  if (hasBeenCalled) return;\r\n  callBack();\r\n  setHasBeenCalled(true);\r\n}\r\n\r\n//! playscreen\r\nconst ProductScreen = (props) => {\r\n  const location = useLocation();\r\n\r\n  const { gameId, sceneId } = location.state;\r\n  const userHistory = props.history;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state.user);\r\n  const isPause = useSelector((state) => state.gameplay.isPause);\r\n\r\n  const ratio = 1080 / 1920;\r\n\r\n  const [windowWidth, setwindowWidth] = useState(window.innerWidth);\r\n  const [windowHeight, setwindowHeight] = useState(window.innerHeight);\r\n  const [i, setI] = useState(0);\r\n  const [Scene, setScene] = useState({});\r\n  const [Dislike, setDislike] = useState(false);\r\n  const [History, setHistory] = useState({});\r\n  const [HistoryMap, setHistoryMap] = useState(false);\r\n  const [TreeMap, setTreeMap] = useState(false);\r\n  const [lastMotion, setLastMotion] = useState(false)\r\n  const [view, setView] = useState(0);\r\n  const [thumbsUp, setThumbsUp] = useState(0);\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const prevSceneId = useSelector(state => state.sync.prevSceneId);\r\n\r\n  const maximizableElement = useRef(null);\r\n\r\n  const handleExitFullscreen = () => document.exitFullscreen();\r\n\r\n  let isFullscreen, setIsFullscreen;\r\n  let errorMessage;\r\n\r\n  try {\r\n    [isFullscreen, setIsFullscreen] = useFullscreenStatus(maximizableElement);\r\n  } catch (e) {\r\n    errorMessage = \"Fullscreen not supported\";\r\n    isFullscreen = false;\r\n    setIsFullscreen = undefined;\r\n  }\r\n\r\n  useKey(\"Enter\", handleEnter);\r\n  useKey(\"Space\", handleEnter);\r\n  useKey(\"Digit1\", handleChoice);\r\n  useKey(\"Digit2\", handleChoice);\r\n  useKey(\"Digit3\", handleChoice);\r\n  useKey(\"Digit4\", handleChoice);\r\n\r\n\r\n  useEffect(() => {\r\n    socket.off(\"accept_final_change\");\r\n    socket.on(\"accept_final_change\", data => {\r\n      const { sceneId, title } = data;\r\n      let newNextList = Scene.nextList ? [...Scene.nextList] : [];\r\n      newNextList.push({ sceneId, script: title });\r\n      const newScene = { ...Scene, nextList: newNextList };\r\n      setScene(newScene);\r\n    })\r\n  }, [Scene])\r\n\r\n  const [volume, setVolume] = useState(0.5)\r\n  const [muted, setMuted] = useState(false)\r\n  const tempVolume = useRef(0.5)\r\n\r\n  const mute = () => {\r\n    if (muted) {\r\n      setMuted(false)\r\n      volumeControl(tempVolume.current)\r\n    } else {\r\n      tempVolume.current = volume\r\n      setMuted(true)\r\n      volumeControl(0)\r\n    }\r\n  }\r\n\r\n  const volumeControl = (volume) => {\r\n    setVolume(volume)\r\n    volume === 0 ? setMuted(true) : setMuted(false)\r\n    bgm_audio.volume = volume\r\n    sound_audio.volume = volume\r\n  }\r\n\r\n  const [isFirstCut, setIsFirstCut] = useState(true);\r\n  function playMusic(i) {\r\n    if (isFirstCut) setIsFirstCut(false);\r\n    if (Scene?.cutList[i]?.bgm.music) {\r\n      //이전 곡과 같은 bgm이 아니라면\r\n      if (\r\n        !(i > 0 && Scene.cutList[i - 1].bgm.music == Scene.cutList[i]?.bgm.music)\r\n      ) {\r\n        bgm_audio.pause();\r\n        bgm_audio.src = Scene.cutList[i]?.bgm.music;\r\n        bgm_audio.play();\r\n      }\r\n    }\r\n    if (Scene?.cutList[i]?.sound.music) {\r\n      sound_audio.pause();\r\n\r\n      sound_audio.src = Scene.cutList[i]?.sound.music;\r\n      sound_audio.play();\r\n    }\r\n  }\r\n\r\n  const [isTyping, setIsTyping] = useState(true);\r\n\r\n\r\n  function handleEnter(event) {\r\n    //! 타이핑 끝 & 미니맵 X\r\n    if (!isTyping && !isPause) {\r\n      if (i < Scene?.cutList?.length - 1) {\r\n        playMusic(i + 1);\r\n        setI(i + 1);\r\n        setIsTyping(true);\r\n      }\r\n      else if (i == Scene?.cutList?.length - 1) {\r\n        //! 엔딩자리\r\n        setLastMotion(true)\r\n        // setIsTyping(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleChoice(event) {\r\n    if (i === Scene.cutList.length - 1 && !isPause) {\r\n      if (Scene.nextList[parseInt(event.key) - 1]) {\r\n        userHistory.replace({\r\n          pathname: `/gameplay`,\r\n          state: {\r\n            sceneId: Scene.nextList[parseInt(event.key) - 1].sceneId,\r\n            gameId: gameId,\r\n          }\r\n        })\r\n      } else {\r\n        if (parseInt(event.key) - 1 === Scene.nextList.length) {\r\n          dispatch(gamePause(true));\r\n          event.preventDefault();\r\n          let choice = document.getElementById(\"choice\");\r\n          if (choice) {\r\n            choice.click();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function onClick_thumbsUp() {\r\n    if (user && user.userData) {\r\n      // setUpdate((state) => state+1);\r\n      const variable = {\r\n        userId: user.userData._id,\r\n        objectId: sceneId\r\n      }\r\n      Axios.post(\"/api/thumbsup/\", variable).then((response) => {\r\n        if (response.data.success) {\r\n          setIsClicked(response.data.isClicked);\r\n          setThumbsUp(response.data.thumbsup);\r\n        }\r\n      })\r\n    }\r\n    else{\r\n      message.error(\"로그인이 필요합니다.\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user && user.userData) {\r\n      const variable_thumbsup = {\r\n        objectId: sceneId,\r\n        userId: user.userData._id,\r\n      }\r\n      Axios.post(\"/api/thumbsup/count\", variable_thumbsup).then((response) => {\r\n        if (response.data.success) {\r\n          setIsClicked(response.data.isClicked);\r\n          setThumbsUp(response.data.thumbsup);\r\n        }\r\n      })\r\n      const variable_view = {\r\n        userId: user.userData._id,\r\n        objectId: sceneId\r\n      }\r\n      Axios.post(\"/api/view/\", variable_view).then((response) => {\r\n        if (response.data.success) {\r\n          setView(response.data.view);\r\n        }\r\n      })\r\n    }\r\n  }, [sceneId, user])\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"leave room\", { room: prevSceneId });\r\n    socket.emit(\"room\", { room: sceneId });\r\n    // socket.emit(\"exp_val\", {room: sceneId});\r\n    dispatch(savePrevScene({ prevSceneId: sceneId }));\r\n    socket.off(\"empty_num_changed\") //! 매번 열린다.\r\n    socket.on(\"empty_num_changed\", data => {\r\n      dispatch(loadEmptyNum({\r\n        sceneId,\r\n        emptyNum: data.emptyNum\r\n      }));\r\n    })\r\n    socket.emit(\"validate_empty_num\", { scene_id: sceneId })\r\n\r\n  }, [sceneId])\r\n\r\n  //* navigation bar control\r\n  useEffect(() => {\r\n    dispatch(navbarControl(false));\r\n  }, []);\r\n\r\n  //* game pause control\r\n  useEffect(() => {\r\n    if (HistoryMap || Dislike || TreeMap) {\r\n      dispatch(gamePause(true));\r\n    } else {\r\n      dispatch(gamePause(false));\r\n    }\r\n  }, [HistoryMap, Dislike, TreeMap]);\r\n\r\n  useEffect(() => {\r\n    setLastMotion(false)\r\n    Axios.get(`/api/game/getnextscene/${gameId}/${sceneId}`).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          const history = {\r\n            gameId: gameId,\r\n            sceneId: response.data.sceneIdList,\r\n          };\r\n          setIsTyping(true)\r\n          setHistory(history);\r\n          setI(0);\r\n          bgm_audio.pause();\r\n          sound_audio.pause();\r\n          setIsFirstCut(true);\r\n          setScene(response.data.scene);\r\n          dispatch(gamePause(false));\r\n          dispatch(gameLoadingPage(0));\r\n          dispatch(gameLoadingPage(6));\r\n        } else {\r\n          message.error(\"Scene 정보가 없습니다.\");\r\n          props.history.replace(`/game/${gameId}`);\r\n        }\r\n      }\r\n    );\r\n  }, [sceneId]);\r\n\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setwindowWidth(window.innerWidth);\r\n      setwindowHeight(window.innerHeight);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n  }, [window.innerWidth, window.inner]);\r\n\r\n  const padding = isFullscreen ? 0.0 : 0.1;\r\n  const minSize = 300;\r\n\r\n  let newScreenSize;\r\n  if (windowWidth * ratio > windowHeight) {\r\n    newScreenSize = {\r\n      width: `${(windowHeight * (1 - 2 * padding)) / ratio}px`,\r\n      height: `${windowHeight * (1 - 2 * padding)}px`,\r\n      minWidth: `${minSize / ratio}px`,\r\n      minHeight: `${minSize}px`,\r\n    };\r\n  } else {\r\n    newScreenSize = {\r\n      width: `${windowWidth * (1 - 2 * padding)}px`,\r\n      height: `${windowWidth * (1 - 2 * padding) * ratio}px`,\r\n      minWidth: `${minSize}px`,\r\n      minHeight: `${minSize * ratio}px`,\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(loadEmptyNum({\r\n      sceneId,\r\n    }));\r\n\r\n    return () => {\r\n      bgm_audio.pause();\r\n      sound_audio.pause();\r\n    };\r\n  }, []);\r\n\r\n\r\n  if (Scene?.cutList !== undefined) {\r\n    if (i == 0 && isFirstCut) playMusic(0);\r\n    return (\r\n      <div\r\n        className={`${isFullscreen\r\n          ? \"gamePlay__container_fullscreen\"\r\n          : \"gamePlay__container\"\r\n          }`}\r\n        ref={maximizableElement}\r\n      >\r\n        <div\r\n          className={`${isFullscreen\r\n            ? \"gamePlay__mainContainer_fullscreen\"\r\n            : \"gamePlay__mainContainer\"\r\n            }`}\r\n        >\r\n          <div\r\n            className={`${isFullscreen\r\n              ? \"backgroundImg_container_fullscreen\"\r\n              : \"backgroundImg_container\"\r\n              }`}\r\n            style={newScreenSize}\r\n            onClick={(event) => handleEnter(event)}\r\n          >\r\n            <LoadingPage />\r\n            {(Scene.cutList[i] && Scene.cutList[i]?.background) ?\r\n              <img\r\n                className=\"gamePlay_backgroundImg\"\r\n                src={Scene.cutList[i]?.background}\r\n                alt=\"Network Error\"\r\n              />\r\n              : (\r\n                <div></div>\r\n              )}\r\n            <GameCharacterBlock\r\n              characterList={Scene?.cutList[i]?.characterList}\r\n            />\r\n\r\n\r\n            {i === Scene.cutList.length - 1 ? (\r\n              <TextBlockChoice\r\n                game_id={gameId}\r\n                cut_name={Scene.cutList[i]?.name}\r\n                cut_script={Scene.cutList[i]?.script}\r\n                scene_depth={Scene.depth}\r\n                scene_id={Scene._id}\r\n                scene_next_list={Scene.nextList}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n                isEnding={Scene.isEnding}\r\n                isLastMotion={lastMotion}\r\n                theme={Scene.theme}\r\n                setScene={setScene}\r\n              />\r\n            ) :\r\n              <TextBlock\r\n                cut_name={Scene.cutList[i]?.name}\r\n                cut_script={Scene.cutList[i]?.script}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n                theme={Scene.theme}\r\n              />\r\n            }\r\n\r\n            <HistoryMapPopup\r\n              userhistory={userHistory}\r\n              history={History}\r\n              trigger={HistoryMap}\r\n              setTrigger={setHistoryMap}\r\n              setScene={setScene}\r\n            />\r\n            <TreeMapPopup\r\n              userhistory={userHistory}\r\n              history={History}\r\n              trigger={TreeMap}\r\n              setTrigger={setTreeMap}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"gamePlay__btn_container\">\r\n          <div\r\n            className=\"gamePlay__btn\"\r\n            onClick={mute}\r\n          >\r\n            {muted ? <VolumeOffIcon /> : <VolumeUpIcon />}\r\n          </div>\r\n          <div\r\n            style={{ width: \"80px\" }} //slider width\r\n          >\r\n            <Slider\r\n              min={0}\r\n              max={1}\r\n              step={0.02}\r\n              value={volume}\r\n              onChange={event => {\r\n                volumeControl(event)\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            {i === Scene.cutList.length - 1 &&\r\n              <>\r\n                <button\r\n                  className={isClicked ? \"gamePlay__btnClicked\" : \"gamePlay__btn\"}\r\n                  onClick={onClick_thumbsUp}\r\n                >\r\n                  좋아요: {thumbsUp}\r\n                </button>\r\n                <button\r\n                  className=\"gamePlay__btn\"\r\n                >\r\n                  조회수: {view}\r\n                </button>\r\n              </>\r\n            }\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => setHistoryMap((state) => !state)}\r\n            >\r\n              미니맵\r\n            </button>\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => {\r\n                setTreeMap((state) => !state);\r\n              }}\r\n            >\r\n              트리맵\r\n            </button>\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => setDislike((state) => !state)}\r\n            >\r\n              신고\r\n            </button>\r\n          </div>\r\n          {errorMessage ? (\r\n            <button\r\n              onClick={() =>\r\n                alert(\r\n                  \"Fullscreen is unsupported by this browser, please try another browser.\"\r\n                )\r\n              }\r\n              className=\"gamePlay__btn\"\r\n            >\r\n              {errorMessage}\r\n            </button>\r\n          ) : isFullscreen ? (\r\n            <button onClick={handleExitFullscreen} className=\"gamePlay__btn\">\r\n              <FontAwesomeIcon icon={faCompress} />\r\n            </button>\r\n          ) : (\r\n            <button onClick={setIsFullscreen} className=\"gamePlay__btn\">\r\n              <FontAwesomeIcon icon={faExpand} />\r\n            </button>\r\n          )}\r\n        </div>\r\n        <DislikePopup\r\n          sceneId={sceneId}\r\n          gameId={gameId}\r\n          trigger={Dislike}\r\n          setTrigger={setDislike}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    // dispatch(gameLoadingPage(0));\r\n    // dispatch(gameLoadingPage(1));\r\n\r\n    return (\r\n      <div className=\"loader_container\">\r\n        <div className=\"loader\">Loading...</div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default ProductScreen;\r\n","import React from 'react'\r\n\r\nfunction BackgroundImg({ imgUrl, setBackgroundImg }) {\r\n\r\n  const onClick_img = () => {\r\n    setBackgroundImg(imgUrl);\r\n  }\r\n  return (\r\n    <div\r\n      className=\"backSidebar_image_container\"\r\n      onClick={onClick_img}>\r\n      <img\r\n        src={imgUrl}\r\n        alt=\"img\"\r\n        className=\"backSidebar_image\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BackgroundImg\r\n","import { FileAddOutlined } from '@ant-design/icons';\r\nimport React, { memo } from 'react'\r\nimport './BackgroundSideBar.css'\r\nimport BackgroundImg from './BackgroundImg'\r\nimport './BackgroundSideBar.css'\r\n\r\nfunction BackgroundSideBar({ gameDetail, setBackgroundImg, onSetModal }) {\r\n\r\n  const renderBackground = gameDetail.background.map((background, index) => {\r\n    return (\r\n      <div\r\n        className=\"backSidebar_box\"\r\n        key={`${index}`}>\r\n        <BackgroundImg imgUrl={background.image} setBackgroundImg={setBackgroundImg} />\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"backSidebar__container\">\r\n        {gameDetail?.background?.length === 0 &&\r\n          <div>\r\n            <FileAddOutlined onClick={onSetModal}\r\n              className=\"sidebar_add_esset_btn\" />\r\n            <div className=\"sidebar_line\" />\r\n          </div>\r\n        }\r\n        {renderBackground}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(BackgroundSideBar)\r\n","import { message } from \"antd\";\r\nimport {\r\n  SELECT_CHARACTER,\r\n  DETACH_CHARACTER,\r\n  PUSH_CHARACTER,\r\n  POP_CHARACTER,\r\n  UPDATE_CHARACTER,\r\n  SET_CHARACTER_LIST,\r\n  ORDER_CHARACTER\r\n} from \"./types\";\r\n\r\n\r\nexport function selectCharacter(character) {\r\n  return {\r\n    type: SELECT_CHARACTER,\r\n    payload: character,\r\n  };\r\n}\r\n\r\n\r\nexport function detachCharacter() {\r\n  return {\r\n    type: DETACH_CHARACTER,\r\n  };\r\n}\r\n\r\n\r\nexport function popCharacter(dataToSubmit) {\r\n  const { oldArray, index } = dataToSubmit;\r\n  let request;\r\n  for (let i = 0; i < oldArray.length; i++) {\r\n    if (oldArray[i].index === index) {\r\n      message.info(\"삭제되었습니다.\");\r\n      oldArray.splice(i, 1)\r\n      request = [...oldArray]\r\n      break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: POP_CHARACTER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\n\r\nexport function pushCharacter(dataToSubmit) {\r\n  const { oldArray, characterSchema } = dataToSubmit;\r\n  let request;\r\n  for (let i = 0; i < oldArray?.length; i++) {\r\n    if (oldArray[i].index === characterSchema.index) {\r\n      request = [\r\n        ...oldArray.slice(0, i),\r\n        {\r\n          ...oldArray[i],\r\n          image: characterSchema.image,\r\n        },\r\n        ...oldArray.slice(i + 1, 4)\r\n      ]\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (!request && oldArray?.length >= 3) {\r\n    message.info(\"인물은 최대 세명까지 추가 가능합니다.\");\r\n    request = oldArray;\r\n  }\r\n\r\n  request = request ? request : [...(oldArray ? oldArray : []), characterSchema]\r\n  return {\r\n    type: PUSH_CHARACTER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function updateCharacter(dataToSubmit) {\r\n  const { oldArray, data, index } = dataToSubmit;\r\n  const request = [\r\n    ...oldArray.slice(0, index),\r\n    {\r\n      ...oldArray[index],\r\n      ...data\r\n    },\r\n    ...oldArray.slice(index + 1, 4)\r\n  ]\r\n\r\n  return {\r\n    type: UPDATE_CHARACTER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function setCharacterList(dataToSubmit) {\r\n  const { CharacterList } = dataToSubmit;\r\n  const request = CharacterList\r\n\r\n  return {\r\n    type: SET_CHARACTER_LIST,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function orderCharacter(dataToSubmit) {\r\n  const { oldArray, index, num } = dataToSubmit;\r\n  const lastIndex = oldArray.length-1;\r\n  let request = [...oldArray]\r\n  for (let i = 1; i < lastIndex+1; i++) {\r\n    if (request[i].index === index) {\r\n      if(num === \"double\") {\r\n        [request[i], request[0]] = [request[0], request[i]]\r\n      } else {\r\n        [request[i], request[i-1]] = [request[i-1], request[i]]\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: ORDER_CHARACTER,\r\n    payload: request,\r\n  };\r\n}","import React, { useState } from 'react'\r\nimport { message } from 'antd';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { pushCharacter, selectCharacter, popCharacter } from '../../../../../_actions/characterSelected_actions';\r\nimport { useConstructor } from '../../../../functions/useConstructor';\r\n\r\nfunction CharacterImg({ character, index }) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList);\r\n  const isIn = CharacterList?.some(item=>item.index===index);\r\n  const selected= isIn?\"selected\":\"\";\r\n  const onClick_selectCharacter = () => {\r\n    const characterSchema = {\r\n      index,\r\n      image: character.image_array[0],\r\n      posX: 30,\r\n      posY: 15,\r\n      reverse: 0,\r\n      size: 90,\r\n    }\r\n\r\n    const dataToSubmit = { \r\n      oldArray: CharacterList,\r\n      characterSchema\r\n    }\r\n\r\n    dispatch(selectCharacter({ ...character, index }));\r\n    if ( isIn ){\r\n      dispatch(popCharacter({oldArray: CharacterList, index}))\r\n    }\r\n    else{\r\n      dispatch(pushCharacter(dataToSubmit))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`characterSidebar_box ${selected}`} key={`${index}`}>\r\n    <div\r\n      className=\"characterSidebar_image_box\"\r\n      onClick={onClick_selectCharacter}>\r\n      <img\r\n        src={character.image_array[0]}\r\n        alt=\"img\"\r\n        className=\"characterSidebar_image\"\r\n      />\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterImg\r\n","import { FileAddOutlined } from '@ant-design/icons';\r\nimport React, { memo, useEffect } from 'react'\r\nimport CharacterImg from './CharacterImg'\r\nimport './CharacterSideBar.css'\r\n\r\n\r\nfunction CharacterSideBar({ gameDetail, setName, onSetModal }) {\r\n\r\n  const renderCharacter = gameDetail.character.map((character, index) => {\r\n    return (\r\n      <div className=\"characterSidebar_box\" key={`${index}`}>\r\n        <CharacterImg\r\n          character={character}\r\n          index={index}\r\n          setName={setName} />\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"characterSidebar__container\">\r\n        {gameDetail?.character?.length === 0 &&\r\n          <FileAddOutlined onClick={onSetModal}\r\n            className=\"sidebar_add_esset_btn\" />\r\n        }\r\n        {renderCharacter}\r\n      </div>\r\n      <div className=\"characterSidebar_line\">\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CharacterSideBar)\r\n","import React from \"react\";\r\nimport { LOCAL_HOST } from \"../../../../Config\"\r\n\r\nfunction BgmFile({ bgm_audio, bgm, setBgmFile }) {\r\n    const onClick_music = () => {\r\n        setBgmFile(bgm);\r\n        bgm_audio.src = bgm.music;\r\n        bgm_audio.play();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"bgmSidebar_box\"\r\n            onClick={onClick_music}\r\n        >\r\n            {bgm.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BgmFile;\r\n","import { FileAddOutlined } from '@ant-design/icons';\r\nimport React, { memo } from \"react\";\r\nimport \"./BgmSideBar.css\";\r\n\r\nimport BgmFile from \"./BgmFile\";\r\n\r\nfunction BgmSideBar({ gameDetail, bgm_audio, setBgmFile, onSetModal }) {\r\n\r\n    const renderBgm = gameDetail.bgm.map((bgm, index) => {\r\n        return (\r\n            <div\r\n                className=\"bgmSidebar_box\"\r\n                key={`${index}`}>\r\n                <BgmFile\r\n                    bgm_audio={bgm_audio}\r\n                    bgm={bgm}\r\n                    setBgmFile={setBgmFile}\r\n                />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"bgmSidebar__container\">\r\n                {gameDetail?.bgm?.length === 0 &&\r\n                    <div>\r\n                        <FileAddOutlined onClick={onSetModal}\r\n                            className=\"sidebar_add_esset_btn\" />\r\n                        <div className=\"sidebar_line\" />\r\n                    </div>\r\n                }\r\n                <div>{renderBgm}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(BgmSideBar);\r\n","import React from \"react\";\r\nimport { LOCAL_HOST } from \"../../../../Config\"\r\n\r\nfunction SoundFile({ sound_audio, sound, setSoundFile }) {\r\n    const onClick_music = () => {\r\n        setSoundFile(sound);\r\n        sound_audio.src = sound.music;\r\n        sound_audio.play();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"bgmSidebar_box\"\r\n            onClick={onClick_music}\r\n        >\r\n            {sound.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundFile;\r\n","import { FileAddOutlined } from '@ant-design/icons';\r\nimport React, { memo } from \"react\";\r\nimport \"./BgmSideBar.css\";\r\n\r\nimport SoundFile from \"./SoundFile\";\r\n\r\nfunction SoundSideBar({ gameDetail, sound_audio, setSoundFile, onSetModal }) {\r\n\r\n    const renderSound = gameDetail.sound.map((sound, index) => {\r\n        return (\r\n            <div\r\n                className=\"bgmSidebar_box\"\r\n                key={`${index}`}>\r\n                <SoundFile\r\n                    sound_audio={sound_audio}\r\n                    sound={sound}\r\n                    setSoundFile={setSoundFile}\r\n                />\r\n                {/* <img src={`${sound.image}`} alt=\"img\"/> */}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"bgmSidebar__container\">\r\n                {gameDetail?.sound?.length === 0 &&\r\n                    <div>\r\n                        <FileAddOutlined onClick={onSetModal}\r\n                            className=\"sidebar_add_esset_btn\" />\r\n                        <div className=\"sidebar_line\" />\r\n                    </div>\r\n                }\r\n                <div>{renderSound}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(SoundSideBar);\r\n","import React from \"react\";\r\nimport \"../SceneMakeModal.css\";\r\n\r\nconst SceneMakeModalTab = ({ setTag, tag }) => {\r\n  return (\r\n    // <div className=\"sceenmake_modal_container2\">\r\n    <div className=\"tabs\">\r\n      <div\r\n        className={`${tag === 1 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(1)}>\r\n        캐릭터\r\n          </div>\r\n      <div\r\n        className={`${tag === 2 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(2)}>\r\n        배경\r\n          </div>\r\n      <div\r\n        className={`${tag === 3 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(3)}>\r\n        배경음악\r\n          </div>\r\n      <div\r\n        className={`${tag === 4 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(4)}>\r\n        효과음\r\n          </div>\r\n    </div>\r\n    // </div>\r\n  )\r\n}\r\nexport default SceneMakeModalTab;\r\n","import React from \"react\";\r\nimport { FileAddOutlined } from '@ant-design/icons';\r\nimport Dropzone from \"react-dropzone\";\r\nimport \"./MyDropzone.css\";\r\n\r\n\r\nfunction MyDropzone({ onDrop, multiple, maxSize, accept, blobURL,type }) {\r\n\r\n    let mention;\r\n    if(type === \"background\" || type === \"thumbnail\"){\r\n        mention =\"16 : 9 비율을 권장합니다.\"\r\n    }\r\n    else if(type === \"character\"){\r\n        mention= \"배경이 없는 사진을 권장합니다.\"\r\n    }\r\n    return <Dropzone\r\n        onDrop={onDrop}\r\n        multiple={multiple}\r\n        maxSize={maxSize} // 10MB + 1\r\n\r\n        // accept=\"image/*,audio/*,video/*\"\r\n        accept={accept}\r\n    >\r\n\r\n        {({ getRootProps, getInputProps }) => (\r\n                <div className=\"dropzone\" {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    {blobURL ? (\r\n                        <div className=\"thumbnail__container\">\r\n                            <img\r\n                                className=\"thumbnail__img\"\r\n                                src={blobURL}\r\n                                alt=\"thumbnail\"\r\n                            />\r\n\r\n                        </div>\r\n                    )\r\n                        :\r\n                        <>\r\n                            <div><p className=\"thumbnail__msg\"><b>파일 업로드</b></p>  </div>\r\n                            <FileAddOutlined className=\"dropzone-icon\" />\r\n                        <div><p className=\"thumbnail__msg\"><b>{mention}</b></p></div>\r\n                        </>\r\n                    }\r\n                </div>\r\n            \r\n        )}\r\n    </Dropzone>\r\n\r\n}\r\n\r\nexport default MyDropzone;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { message, Form } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./CharacterTab.css\";\r\nimport { SVG } from \"../../../../svg/icon\";\r\nimport useMouse from \"../../../../functions/useMouse\";\r\n\r\nfunction CharacterTab({ blobGame, setBlobGame, charPageNum, setCharFileQueue, setCharBlobList }) {\r\n    const [characterProfile, setCharacterProfile] = useState(\"\");\r\n    const [characterCards, setCharacterCards] = useState(\"\");\r\n    const [isUpdate, setIsUpdate] = useState(0);\r\n    const indexNum = useRef(0);\r\n\r\n    const onNameChange = (event) => {\r\n        setBlobGame(game => {\r\n            game.character[charPageNum.current].name = event.currentTarget.value\r\n            return game\r\n        })\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setBlobGame(game => {\r\n            game.character[charPageNum.current].description = event.currentTarget.value\r\n            return game\r\n        })\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            let curURL = URL.createObjectURL(files[i])\r\n            setCharBlobList(oldArray => [...oldArray, curURL])\r\n\r\n            //new Character\r\n            if (indexNum.current === \"-1\") {\r\n                setBlobGame(game => {\r\n                    game.character = [...game.character, {\r\n                        name: \"\",\r\n                        description: \"\",\r\n                        image_array: [curURL],\r\n                    }]\r\n                    return game\r\n                })\r\n                indexNum.current = blobGame.character.length - 1\r\n            }\r\n            else {\r\n                setBlobGame(game => {\r\n                    game.character[indexNum.current].image_array = [...game.character[indexNum.current].image_array, curURL]\r\n                    return game\r\n                })\r\n            }\r\n        }\r\n        setCharFileQueue(oldArray => [...oldArray, { index: Number(indexNum.current), array: files }])\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (blobGame.character && charPageNum.current < blobGame.character.length) {\r\n            const profile = () => {\r\n                // const img = new Image()\r\n                // img.src = image;\r\n                const image = blobGame.character[charPageNum.current].image_array[0]\r\n                return (\r\n                    <div>\r\n                        <div className=\"characterTab_profile_image\">\r\n                            <img\r\n                                // className={img.width > img.height ?\r\n                                //     \"characterTab_image_width\" : \"characterTab_image_height\"}\r\n                                className=\"characterTab_image\"\r\n                                src={image}\r\n                                alt=\"img\"\r\n                            />\r\n                        </div>\r\n\r\n                        <Form>\r\n                            <input\r\n                                onChange={onNameChange}\r\n                                value={blobGame.character[charPageNum.current].name}\r\n                                className=\"characterTab_profile_name\"\r\n                                placeholder=\"이름을 입력해주세요.\" />\r\n                            <textarea\r\n                                onChange={onDescriptionChange}\r\n                                value={blobGame.character[charPageNum.current].description}\r\n                                className=\"characterTab_profile_text\"\r\n                                placeholder=\"설명을 입력해주세요.\" />\r\n                            {/* <label>(혈액형/좋아하는 것 등 이모지넣을 수 있는 공간?)</label> */}\r\n                        </Form>\r\n                    </div>\r\n                )\r\n            }\r\n            setCharacterProfile(profile);\r\n            const cards = blobGame.character[charPageNum.current].image_array.map((image, index) => {\r\n                // const img = new Image()\r\n                // img.src = image;\r\n                return (\r\n                    <div\r\n                        id={charPageNum.current}\r\n                        key={index}\r\n                        className=\"characterTab_cards\"\r\n                    >\r\n                        <img\r\n                            // className={img.width > img.height ?\r\n                            //     \"characterTab_image_width\" : \"characterTab_image_height\"}\r\n                            className=\"characterTab_image\"\r\n                            src={image}\r\n                            alt=\"img\"\r\n                        />\r\n                    </div>\r\n                )\r\n            })\r\n            setCharacterCards(cards)\r\n        } else {\r\n            setCharacterProfile(\"\");\r\n            setCharacterCards(\"\")\r\n        }\r\n\r\n    }, [isUpdate, blobGame]);\r\n\r\n    useMouse(\"mousedown\", handleMouse)\r\n    function handleMouse(event) {\r\n        for (var i = 0; i < event.path.length; i++) {\r\n            if (event.path[i].id) {\r\n                indexNum.current = event.path[i].id\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"characterTab-container\">\r\n            {blobGame.character?.length !== charPageNum.current &&\r\n                <div>\r\n                    <div>{characterProfile}</div>\r\n                    <div className=\"characterTab_cards_Box\">{characterCards}</div>\r\n                    <div className=\"characterTab_char_dropzone\"\r\n                        id={charPageNum.current}>\r\n                        <MyDropzone\r\n                            onDrop={onDrop}\r\n                            multiple={true}\r\n                            maxSize={10485761} // 10MB + 1\r\n                            accept=\"image/*\"\r\n                            type=\"character\"\r\n                        />\r\n                    </div>\r\n                    {blobGame.character &&\r\n                        <div\r\n                            className=\"characterTab_pagenum\"\r\n                        >\r\n                            {charPageNum.current + 1}/{blobGame.character.length}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n            {blobGame.character?.length === charPageNum.current &&\r\n                <div\r\n                    className=\"characterTab_empty_dropzone\"\r\n                    id={-1}>\r\n                    <MyDropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={10485761} // 10MB + 1\r\n                        accept=\"image/*\"\r\n                        type=\"character\"\r\n                    />\r\n                    <div className=\"characterTab_instruct\">\r\n                        캐릭터를 추가해주세요\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                charPageNum.current !== 0 &&\r\n                <div\r\n                    className=\"characterTab_leftarrow\"\r\n                    onClick={() => {\r\n                        charPageNum.current--\r\n                        setIsUpdate(num => num + 1)\r\n                    }}>\r\n                    <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color=\"#222831\" />\r\n                </div>\r\n            }\r\n            {\r\n                blobGame?.character?.length !== charPageNum.current &&\r\n                <div\r\n                    className=\"characterTab_rightarrow\"\r\n                    onClick={() => {\r\n                        charPageNum.current++\r\n                        setIsUpdate(num => num + 1)\r\n                    }}>\r\n                    <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color=\"#222831\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CharacterTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./BackgroundTab.css\";\r\n\r\nfunction BackgroundTab({ game, setFileQueue, setTypeQueue, setBackBlobList, backBlobList }) {\r\n    const [backgroundCards, setBackgroundCards] = useState(\"\");\r\n    const [blobCards, setBlobCards] = useState(\"\");\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 1])\r\n            setBackBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (game.background)\r\n            setBackgroundCards(game.background.map((element, index) => {\r\n                return <div className=\"backgroundTab_image_box\" key={index}>\r\n                    <img className=\"backgroundTab_image\"\r\n                        src={element.image}\r\n                        alt=\"img\"\r\n                    />\r\n                </div>\r\n            }))\r\n    }, [game]);\r\n\r\n    useEffect(() => {\r\n        if (backBlobList)\r\n            setBlobCards(backBlobList.map((element, index) => {\r\n                return <div className=\"backgroundTab_image_box\" key={index}>\r\n                    <img className=\"backgroundTab_image\"\r\n                        src={element}\r\n                        alt=\"img\"\r\n                    />\r\n                </div>\r\n            }))\r\n    }, [backBlobList]);\r\n\r\n    return (\r\n        <div className=\"backgroundTab_container\">\r\n            <div className=\"backgroundTab_dropzone\">\r\n                <MyDropzone\r\n                    onDrop={onDrop}\r\n                    multiple={true}\r\n                    maxSize={10485761} // 10MB + 1\r\n                    accept=\"image/*\"\r\n                    type=\"background\"\r\n                >\r\n                </MyDropzone>\r\n            </div>\r\n            <div className=\"backgroundTab_Box\">\r\n                <div>{backgroundCards} {blobCards}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackgroundTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./MusicTab.css\";\r\nimport { LOCAL_HOST } from \"../../../../Config\";\r\nfunction BgmTab({ game, setFileQueue, setTypeQueue, setBgmBlobList, bgmBlobList, setBgmBlobNames, bgmBlobNames }) {\r\n    const [bgmCards, setBgmCards] = useState([]);\r\n    const [blobCards, setBlobCards] = useState([]);\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 음원 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 2])\r\n            setBgmBlobNames(oldArray => [...oldArray, files[i]])\r\n            setBgmBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (game.bgm)\r\n            setBgmCards(game.bgm.map((element, index) => {\r\n                return (\r\n                    <div className=\"bgmTab_text_box\" key={index}>\r\n                        {element.name}\r\n                    </div>\r\n                )\r\n            }))\r\n    }, [game]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (bgmBlobList)\r\n            setBlobCards(bgmBlobList.map((element, index) => {\r\n                return (\r\n                    <div className=\"bgmTab_text_box\" key={index}>\r\n                        {bgmBlobNames[index].name}\r\n                    </div>\r\n                )\r\n            }))\r\n    }, [bgmBlobList]);\r\n\r\n    return (\r\n        <div className=\"bgmTab_container\">\r\n            <div className=\"bgmTab_dropzone\">\r\n                <MyDropzone\r\n                    onDrop={onDrop}\r\n                    multiple={true}\r\n                    maxSize={10485761} // 10MB + 1\r\n                    accept=\"audio/*\"\r\n                    type=\"bgm\"\r\n                >\r\n                </MyDropzone>\r\n            </div>\r\n            <div className=\"bgmTab_Box\">\r\n                {bgmCards !== 0 && <div>{bgmCards}</div>}\r\n                {blobCards !== 0 && <div>{blobCards}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BgmTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./MusicTab.css\";\r\nimport { LOCAL_HOST } from \"../../../../Config\";\r\n\r\nfunction SoundTab({ game, setFileQueue, setTypeQueue, setSoundBlobList, soundBlobList, setSoundBlobNames, soundBlobNames }) {\r\n    const [soundCards, setSoundCards] = useState([]);\r\n    const [blobCards, setBlobCards] = useState([]);\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 음원 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 3])\r\n            setSoundBlobNames(oldArray => [...oldArray, files[i]])\r\n            setSoundBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (game.sound)\r\n            setSoundCards(game.sound.map((element, index) => {\r\n                return (\r\n                    <div className=\"bgmTab_text_box\" key={index}>\r\n                        {element.name}\r\n                    </div>\r\n                )\r\n            }))\r\n    }, [game]);\r\n\r\n    useEffect(() => {\r\n        if (soundBlobList)\r\n            setBlobCards(soundBlobList.map((element, index) => {\r\n                return (\r\n                    <div className=\"bgmTab_text_box\" key={index}>\r\n                        {soundBlobNames[index].name}\r\n                    </div>\r\n                )\r\n            }))\r\n    }, [soundBlobList]);\r\n\r\n    return (\r\n        <div className=\"bgmTab_container\">\r\n            <div className=\"bgmTab_dropzone\">\r\n                <MyDropzone\r\n                    onDrop={onDrop}\r\n                    multiple={true}\r\n                    maxSize={10485761} // 10MB + 1\r\n                    accept=\"audio/*\"\r\n                    type=\"sound\"\r\n                >\r\n                </MyDropzone>\r\n            </div>\r\n            <div className=\"bgmTab_Box\">\r\n                {soundCards !== 0 && <div>{soundCards}</div>}\r\n                {blobCards !== 0 && <div>{blobCards}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundTab;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Modal, message } from \"antd\";\r\nimport Axios from \"axios\";\r\n\r\nimport SceneMakeModalTab from \"./Tab/SceneMakeModalTab\";\r\nimport CharacterTab from \"./Tab/CharacterTab\"\r\nimport BackgroundTab from \"./Tab/BackgroundTab\"\r\nimport BgmTab from \"./Tab/BgmTab\"\r\nimport SoundTab from \"./Tab/SoundTab\"\r\nimport { LOCAL_HOST } from \"../../../Config\";\r\nimport _ from \"lodash\";\r\nimport \"./SceneMakeModal.css\";\r\n\r\nconst config = require('../../../../config/key');\r\n\r\nconst SceneMakeModal = ({ gameId, visible, setTag, tag, setReload }) => {\r\n  const [game, setGame] = useState([]);\r\n  const [fileQueue, setFileQueue] = useState([]);\r\n  const [typeQueue, setTypeQueue] = useState([]);\r\n\r\n  const [backBlobList, setBackBlobList] = useState([]);\r\n  const [bgmBlobList, setBgmBlobList] = useState([]);\r\n  const [bgmBlobNames, setBgmBlobNames] = useState([]);\r\n  const [soundBlobList, setSoundBlobList] = useState([]);\r\n  const [soundBlobNames, setSoundBlobNames] = useState([]);\r\n\r\n  const [blobGame, setBlobGame] = useState([]);\r\n  const charPageNum = useRef(0);\r\n  const [charFileQueue, setCharFileQueue] = useState([]);\r\n  const [charBlobList, setCharBlobList] = useState([]);\r\n\r\n\r\n  const variable = { gameId: gameId }\r\n  useEffect(() => {\r\n    Axios.post('/api/game/getgamedetail', variable)\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          setGame(response.data.gameDetail);\r\n          setBlobGame(_.cloneDeep(response.data.gameDetail));\r\n        } else {\r\n          alert('게임 정보를 로딩하는데 실패했습니다.')\r\n        }\r\n      })\r\n  }, [])\r\n\r\n  const revokeBlobList = () => {\r\n    charBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    backBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    bgmBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    soundBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n  }\r\n\r\n\r\n  const cancelUpload = () => {\r\n    revokeBlobList();\r\n    setTag(0)\r\n  }\r\n\r\n  let uploadFlag = false;\r\n  const upload = () => {\r\n    if (!uploadFlag) {\r\n      uploadFlag = true;\r\n      revokeBlobList();\r\n\r\n      uploadCharFiles()\r\n      if (fileQueue.length)\r\n        uploadFiles()\r\n    }\r\n  };\r\n\r\n  const uploadCharFiles = () => {\r\n    if (charFileQueue.length) {\r\n      let fileNum = Array.from({ length: blobGame.character.length }, () => 0);\r\n      let formData = new FormData();\r\n      for (var i = 0; i < blobGame.character.length; i++) {\r\n        //파일 합치기        \r\n        for (var j = 0; j < charFileQueue.length; j++) {\r\n          if (charFileQueue[j].index === i) {\r\n            fileNum[i] += charFileQueue[j].array.length\r\n            charFileQueue[j].array.forEach(function (value) {\r\n              formData.append('files', value);\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const config = {\r\n        header: { \"encrpyt\": \"multipart/form-data\" },\r\n      };\r\n\r\n\r\n      Axios.post(\"/api/game/uploadfile\", formData, config).then(\r\n        (response) => {\r\n          if (response.data.success) {\r\n            uploadCharDB(fileNum, response.data.files);\r\n          } else {\r\n            alert(\"캐릭터 DB 업로드 실패\");\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      uploadCharDB(null, null);\r\n    }\r\n  }\r\n\r\n  const uploadCharDB = (fileNum, files) => {\r\n    let cnt = 0\r\n    for (var i = 0; i < blobGame.character.length; i++) {\r\n      if (!game.character[i])\r\n        game.character.push({\r\n          name: \"\",\r\n          description: \"\",\r\n          image_array: [],\r\n        })\r\n      game.character[i].name = blobGame.character[i].name;\r\n      game.character[i].description = blobGame.character[i].description;\r\n\r\n      if (fileNum) {\r\n        for (var j = cnt; j < cnt + fileNum[i]; j++) {\r\n          game.character[i].image_array.push(process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[j].path}` : files[j].location)\r\n        }\r\n        cnt += fileNum[i]\r\n      }\r\n    }\r\n    const DBForm = {\r\n      gameId: gameId,\r\n      character: game.character\r\n    };\r\n    Axios.post(\r\n      \"/api/game/putCharDB\",\r\n      DBForm\r\n    ).then((response) => {\r\n      if (response.data.success) {\r\n        // character파일만 올리는 경우\r\n        if (!fileQueue.length) {\r\n          setReload(reload => reload + 1)\r\n          setTag(0)\r\n        }\r\n      } else {\r\n        message.error(\"DB 업데이트 실패\");\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  const uploadFiles = () => {\r\n    //upload file queue\r\n    let formData = new FormData();\r\n    fileQueue.forEach(value => {\r\n      formData.append('files', value);\r\n    })\r\n    const header = {\r\n      header: { \"encrpyt\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n    };\r\n\r\n    Axios.post(\"/api/game/uploadfile\", formData, header).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          uploadDB(response.data.files);\r\n        } else {\r\n          alert(\"업로드 실패\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  const uploadDB = (files) => {\r\n    const DBForm = { gameId: gameId, background: [], bgm: [], sound: [] };\r\n    for (var i = 0; i < files.length; i++) {\r\n      switch (typeQueue[i]) {\r\n        case 1: //background\r\n          DBForm.background.push({\r\n            name: files[i].originalname,\r\n            image: (process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        case 2:\r\n          DBForm.bgm.push({\r\n            name: files[i].originalname,\r\n            music: (process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        case 3:\r\n          DBForm.sound.push({\r\n            name: files[i].originalname,\r\n            music: (process.env.NODE_ENV === 'development' ? `${config.SERVER}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        default:\r\n          message.error(\"정의되지 않은 업로드 버튼입니다.\");\r\n          break;\r\n      }\r\n    }\r\n    Axios.post(\r\n      \"/api/game/putDB\",\r\n      DBForm\r\n    ).then((response) => {\r\n      if (response.data.success) {\r\n        setReload(reload => reload + 1)\r\n        setTag(0)\r\n      } else {\r\n        message.error(\"DB 업데이트 실패\");\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <Modal className=\"scenemake_modal\"\r\n      visible={visible}\r\n      okText=\"Upload\"\r\n      onCancel={cancelUpload}\r\n      onOk={upload}\r\n      width={1500}\r\n      closable={false}\r\n      keyboard={false}\r\n      maskClosable={false}\r\n      style={{ top: 50 }}\r\n    >\r\n      <div className=\"sceenmake_modal_container\">\r\n        <SceneMakeModalTab setTag={setTag} tag={tag} />\r\n        {tag === 1 &&\r\n          <CharacterTab\r\n            blobGame={blobGame}\r\n            setBlobGame={setBlobGame}\r\n            charPageNum={charPageNum}\r\n            setCharFileQueue={setCharFileQueue}\r\n            setCharBlobList={setCharBlobList}\r\n          />\r\n        }\r\n        {tag === 2 &&\r\n          <BackgroundTab\r\n            game={game}\r\n            setFileQueue={setFileQueue}\r\n            setTypeQueue={setTypeQueue}\r\n            setBackBlobList={setBackBlobList}\r\n            backBlobList={backBlobList}\r\n          />\r\n        }\r\n        {tag === 3 &&\r\n          <BgmTab\r\n            game={game}\r\n            setFileQueue={setFileQueue}\r\n            setTypeQueue={setTypeQueue}\r\n            setBgmBlobList={setBgmBlobList}\r\n            bgmBlobList={bgmBlobList}\r\n            setBgmBlobNames={setBgmBlobNames}\r\n            bgmBlobNames={bgmBlobNames}\r\n          />\r\n        }\r\n        {tag === 4 &&\r\n          <SoundTab\r\n            game={game}\r\n            setFileQueue={setFileQueue}\r\n            setTypeQueue={setTypeQueue}\r\n            setSoundBlobList={setSoundBlobList}\r\n            soundBlobList={soundBlobList}\r\n            setSoundBlobNames={setSoundBlobNames}\r\n            soundBlobNames={soundBlobNames}\r\n          />\r\n        }\r\n      </div>\r\n    </Modal>\r\n\r\n  )\r\n}\r\nexport default SceneMakeModal\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Form, message, Input } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MyDropzone from \"../../Dropzone/MyDropzone\";\r\nimport \"./UploadModal.css\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst PrivateOptions = [\r\n    { value: 0, label: \"Private\" },\r\n    { value: 1, label: \"Public\" },\r\n];\r\n\r\nconst CategoryOptions = [\r\n    { value: 0, label: \"살아남기\" },\r\n    { value: 1, label: \"로맨스\" },\r\n    { value: 2, label: \"스토리\" },\r\n    { value: 3, label: \"추리\" },\r\n    { value: 4, label: \"병맛\" },\r\n];\r\n\r\nconst UploadModal = ({ gameId, visible, setUploadModalState, onSubmit_saveScene, defaultTitle, defaultDescription }) => {\r\n    const user = useSelector((state) => state.user);\r\n    const [GameTitle, setGameTitle] = useState({ defaultTitle });\r\n    const [description, setDescription] = useState({ defaultDescription });\r\n    const [isPrivate, setIsPrivate] = useState(0);\r\n    const [category, setCategory] = useState(CategoryOptions[0].label);\r\n\r\n    const [blobURL, setBlobURL] = useState(\"\");\r\n    const [thumbFile, setThumbFile] = useState([]);\r\n\r\n    //! 렌더링의 타이밍으로 부득이하게..\r\n    useEffect(() => {\r\n        setGameTitle(defaultTitle)\r\n        setDescription(defaultDescription)\r\n    }, [defaultTitle, defaultDescription])\r\n\r\n\r\n    const onTitleChange = (event) => {\r\n        //최대 50자 제한\r\n        setGameTitle(event.currentTarget.value.substr(0, 50));\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescription(event.currentTarget.value);\r\n    };\r\n\r\n    const onPrivateChange = (event) => {\r\n        setIsPrivate(event.currentTarget.value);\r\n    };\r\n\r\n    const onCartegoryChange = (event) => {\r\n        let cat_idx = event.currentTarget.value;\r\n        setCategory(event.currentTarget[cat_idx].text);\r\n    };\r\n\r\n    const onDrop = (files) => {\r\n        if (!files[0]) {\r\n            message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n            return;\r\n        }\r\n        URL.revokeObjectURL(blobURL)\r\n\r\n        setBlobURL(URL.createObjectURL(files[0]))\r\n        setThumbFile(files)\r\n    };\r\n\r\n    const cancel = () => {\r\n        if (blobURL)\r\n            URL.revokeObjectURL(blobURL)\r\n        setUploadModalState(false)\r\n    }\r\n\r\n    const upload = async (event) => {\r\n        event.preventDefault();\r\n        if (GameTitle === \"\" || description === \"\" || blobURL === \"\") {\r\n            message.error(\"모든 정보를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        uploadThumb();\r\n        setUploadModalState(false);\r\n        onSubmit_saveScene()\r\n    }\r\n\r\n    const uploadThumb = async () => {\r\n        //revoke blobURL\r\n        URL.revokeObjectURL(blobURL)\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { \"encrpyt\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n        };\r\n\r\n        thumbFile.forEach(value => {\r\n            formData.append('files', value);\r\n        })\r\n\r\n        await Axios.post(\"/api/game/uploadfile\", formData, config).then(\r\n            (response) => {\r\n                if (response.data.success) {\r\n                    uploadGame(process.env.NODE_ENV === 'development' ? response.data.files[0].path : response.data.files[0].location);\r\n                } else {\r\n                    message.error(\"업로드 실패\");\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const uploadGame = async (filePath) => {\r\n        const game_variables = {\r\n            gameId: gameId,\r\n            creator: user.userData._id,\r\n            title: GameTitle,\r\n            description: description,\r\n            thumbnail: filePath,\r\n            privacy: isPrivate,\r\n            category: category,\r\n            writer: [user.userData._id],\r\n        };\r\n\r\n        await Axios.post(\"/api/game/uploadgameInfo\", game_variables).then((response) => {\r\n            if (response.data.success) {\r\n\r\n            } else {\r\n                message.error(\"game제작 실패\");\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"scenemake_modal\"\r\n            visible={visible}\r\n            okText=\"업로드\"\r\n            cancelText=\"취소\"\r\n            onCancel={cancel}\r\n            onOk={upload}\r\n            width={1000}\r\n            centered={true}\r\n            closable={false}\r\n            style={{ top: 10 }}\r\n        >\r\n            <div className=\"scenemake_modal_form_container\">\r\n                <label><b>게임 업로드</b></label>\r\n                <Form onSubmit={upload}>\r\n\r\n                    <div className=\"scenemake_modal_form\">\r\n                        <div className=\"scenemake_dropzone_container\" >\r\n                            <MyDropzone\r\n                                onDrop={onDrop}\r\n                                multiple={false}\r\n                                maxSize={10485761} // 10MB + 1\r\n                                accept=\"image/*\"\r\n                                blobURL={blobURL}\r\n                                type=\"thumbnail\"\r\n                            >\r\n                            </MyDropzone>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"scenemake_modal_detail\">\r\n                        <div className=\"scenemake_modal_detail_title_container\">\r\n\r\n                            <label><b>제목</b></label>\r\n                            <Input maxLength={15} onChange={onTitleChange} value={GameTitle} />\r\n                        </div>\r\n\r\n                        <div className=\"scenemake_modal_detail_description_container\">\r\n                            <label><b>게임 설명</b></label>\r\n                            <TextArea className=\"scenemake_modal_detail_description\" rows=\"4\" onChange={onDescriptionChange} value={description} />\r\n                        </div>\r\n\r\n                        {/* <select onChange={onPrivateChange}>\r\n                            {PrivateOptions.map((item, index) => (\r\n                                <option key={index} value={item.value}>\r\n                                    {item.label}\r\n                                </option>\r\n                            ))}\r\n                        </select> */}\r\n                        <div className=\"scenemake_modal_detail_category_container\">\r\n                            <select className=\"scenemake_modal_category\" onChange={onCartegoryChange}>\r\n                                {CategoryOptions.map((item, index) => (\r\n                                    <option key={index} value={item.value}>\r\n                                        {item.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </Form>\r\n            </div>\r\n        </Modal>\r\n\r\n    )\r\n}\r\nexport default UploadModal;\r\n","import React from \"react\";\r\nimport { Relay_Icon, Ending_Icon } from \"../../../svg/icon\";\r\nimport { Modal } from \"antd\";\r\nimport \"./EndingModal.css\";\r\n\r\nconst EndingModal = ({ isEnding, visible, setEndingModalState, onSubmit_saveScene }) => {\r\n\r\n    const ending = (event) => {\r\n        Modal.warning(\r\n            {\r\n                title: <b>주의!</b>,\r\n                content: (\r\n                    <div>\r\n                        <br></br>\r\n                        <h3>ENDING 체크 시, 이 게임의 엔딩으로 업로드 됩니다.</h3>\r\n                        <h3>따라서 이 씬에 연결되는 씬을 더이상 생성할 수 없습니다.</h3>\r\n                    </div>\r\n                ),\r\n                centered: true,\r\n                width: 650,\r\n                onOk() {\r\n                    event.preventDefault();\r\n                    isEnding.current = true;\r\n                    onSubmit_saveScene()\r\n                    // setEndingModalState(false)\r\n                },\r\n            });\r\n    }\r\n\r\n\r\n    const choice = (event) => {\r\n        event.preventDefault();\r\n        isEnding.current = false;\r\n        onSubmit_saveScene()\r\n        setEndingModalState(false)\r\n    }\r\n\r\n    const cancel = () => {\r\n        setEndingModalState(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal className=\"scenemake_modal\"\r\n            title=\"진행 방식을 선택해주세요.\"\r\n            visible={visible}\r\n            width={900}\r\n            onCancel={cancel}\r\n            centered={true}\r\n            closable={false}\r\n            footer={null}\r\n            bodyStyle={{\r\n                height: \"370px\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n            }}\r\n        >\r\n            <div\r\n                className=\"ending_modal_cancel_btn\"\r\n                onClick={cancel}>\r\n                X\r\n            </div>\r\n            <div\r\n                className=\"ending_modal_choice_btn\"\r\n                onClick={choice}>\r\n                <Relay_Icon />\r\n                선택의 길\r\n            </div>\r\n            <div\r\n                className=\"ending_modal_ending_btn\"\r\n                onClick={ending}>\r\n                <Ending_Icon />\r\n                엔딩\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EndingModal;\r\n","var _eventHandlers = {}; // somewhere global\r\n\r\nexport const addEvent = (node, event, handler, capture) => {\r\n    if (!(node in _eventHandlers)) {\r\n        // _eventHandlers stores references to nodes\r\n        _eventHandlers[node] = {};\r\n    }\r\n    if (!(event in _eventHandlers[node])) {\r\n        // each entry contains another entry for each event type\r\n        _eventHandlers[node][event] = [];\r\n    }\r\n    // capture reference\r\n    _eventHandlers[node][event].push([handler, capture]);\r\n    node.addEventListener(event, handler, capture);\r\n}\r\n\r\nexport const removeAllEvents = (node, event) => {\r\n    if (node in _eventHandlers) {\r\n        var handlers = _eventHandlers[node];\r\n        if (event in handlers) {\r\n            var eventHandlers = handlers[event];\r\n            for (var i = eventHandlers.length; i--;) {\r\n                var handler = eventHandlers[i];\r\n                node.removeEventListener(event, handler[0], handler[1]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React, { useRef, memo, useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport './Character.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { popCharacter, selectCharacter, updateCharacter, orderCharacter } from '../../../_actions/characterSelected_actions';\r\nimport { addEvent, removeAllEvents } from '../handleEventListener';\r\nimport { faAngleDoubleDown, faAngleDown, faTimes, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Character(props) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n  const { charSchema, GameCharacterList, index } = props;\r\n  const element_X = useRef();\r\n  const element_Y = useRef();\r\n\r\n  const [clicked, setClicked] = useState(true);\r\n  const [moving, setMoving] = useState(true);\r\n  const [sizing, setSizing] = useState(false);\r\n  const [imgWidth, setImgWidth] = useState(0);\r\n\r\n  const background_element = document.getElementById(\"backgroundImg_container\");\r\n  let pivot = [0, 0];\r\n  let drag = false;\r\n\r\n  function mouseMove(e) {\r\n    const page = [e.pageX, e.pageY];\r\n    if (drag && clicked && moving) {\r\n      if (pivot[0] - e.pageX > 3 || pivot[1] - e.pageY > 3 || pivot[0] - e.pageX < -3 || pivot[1] - e.pageY < -3) {\r\n        const background_width = background_element.offsetWidth;\r\n        const background_height = background_element.offsetHeight;\r\n        const prev_posX = Number(element_X.current.style.left.replace(/%/g, ''));\r\n        const prev_posY = Number(element_Y.current.style.top.replace(/%/g, '').replace(/px/g, ''));\r\n        const next_posX = prev_posX + 100 * (e.pageX - pivot[0]) / background_width;\r\n        const next_posY = prev_posY + 100 * (e.pageY - pivot[1]) / background_height;\r\n        element_X.current.style.left = String(next_posX) + '%';\r\n        element_Y.current.style.top = String(next_posY) + '%';\r\n        pivot = page;\r\n      }\r\n    } else if (drag && clicked && sizing) {\r\n      if (pivot[0] - e.pageX > 7 || pivot[0] - e.pageX < -7) {\r\n        const image_width = document.getElementById(`${index}`).offsetWidth;\r\n        const prev_size = Number(element_Y.current.style.height.replace(/%/g, ''));\r\n        let next_size = 0;\r\n        if (pivot[0] - page[0] < 0) {\r\n          next_size = prev_size * (image_width - 1 * (pivot[0] - page[0])) / image_width;\r\n        } else {\r\n          next_size = prev_size * (image_width - 1 * (pivot[0] - page[0])) / image_width;\r\n        }\r\n        if (next_size > 20) {\r\n          element_Y.current.style.height = String(next_size) + '%';\r\n        }\r\n        pivot = page;\r\n      }\r\n    }\r\n    setImgWidth(document.getElementById(`${index}`).offsetWidth);\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!background_element) {\r\n      return;\r\n    }\r\n    // addEvent(background_element, \"mousemove\", mouseMove, false);\r\n    // addEvent(background_element, \"mouseup\", onMouseUp, false);\r\n    setImgWidth(document.getElementById(`${index}`).offsetWidth);\r\n    return () => {\r\n      removeAllEvents(background_element, \"mousemove\");\r\n      removeAllEvents(background_element, \"mouseup\");\r\n    }\r\n  }, [CharacterList])\r\n\r\n  const onMouseDown = (e) => {\r\n    if (!background_element) {\r\n      return;\r\n    }\r\n    addEvent(background_element, \"mousemove\", mouseMove, false);\r\n    addEvent(background_element, \"mouseup\", onMouseUp, false);\r\n    pivot = [e.pageX, e.pageY];\r\n    drag = true;\r\n    dispatch(selectCharacter({ ...GameCharacterList[charSchema.index], index: charSchema.index }));\r\n  }\r\n\r\n  const onMouseUp = (e) => {\r\n    removeAllEvents(background_element, \"mousemove\");\r\n    removeAllEvents(background_element, \"mouseup\");\r\n    dispatch(updateCharacter({\r\n      oldArray: CharacterList,\r\n      data: {\r\n        posX: Number(element_X.current.style.left.replace(/%/g, '')),\r\n        posY: Number(element_Y.current.style.top.replace(/%/g, '').replace(/px/g, '')),\r\n        size: Number(element_Y.current.style.height.replace(/%/g, ''))\r\n      },\r\n      index\r\n    }))\r\n\r\n    pivot = [e.pageX, e.pageY];\r\n    drag = false;\r\n    setSizing(false);\r\n    setMoving(true);\r\n  }\r\n\r\n  const onMouseOver = (e) => {\r\n    setMoving(false);\r\n    setSizing(true);\r\n  }\r\n\r\n  const onMouseOut = (e) => {\r\n    setMoving(true);\r\n    setSizing(false);\r\n  }\r\n\r\n  const onClickDelete = () => {\r\n    dispatch(popCharacter({ oldArray: CharacterList, index: charSchema.index }));\r\n  }\r\n\r\n  const onClickOrder = (num) => {\r\n    dispatch(orderCharacter({ oldArray: CharacterList, index: charSchema.index, num }));\r\n  }\r\n  return (\r\n    <div\r\n      ref={element_X}\r\n      key={index}\r\n      className=\"CharacterBlock\"\r\n      style={{ left: `${charSchema.posX}%` }}\r\n    >\r\n      <div\r\n        ref={element_Y}\r\n        className=\"character__container\"\r\n        style={{\r\n          height: `${charSchema.size}%`,\r\n          top: `${charSchema.posY}%`\r\n        }}\r\n      >\r\n        <img\r\n          onMouseDown={onMouseDown}\r\n          className={\"characterImg_clicked\"}\r\n          id={`${index}`}\r\n          src={charSchema.image}\r\n          alt=\"img\"\r\n        />\r\n        {imgWidth &&\r\n          <>\r\n            <FontAwesomeIcon\r\n              icon={faTimesCircle}\r\n              className=\"bttn btn_character_delete\"\r\n              style={{ left: `${imgWidth - 17}px` }}\r\n              onClick={onClickDelete}\r\n            />\r\n            <FontAwesomeIcon\r\n              icon={faAngleDoubleDown}\r\n              className=\"bttn btn_character_Doubledown\"\r\n              style={{ left: `${imgWidth - 34}px` }}\r\n              onClick={() => { onClickOrder(\"double\") }}\r\n            />\r\n            <FontAwesomeIcon\r\n              icon={faAngleDown}\r\n              className=\"bttn btn_character_down\"\r\n              style={{ left: `${imgWidth - 51}px` }}\r\n              onClick={() => onClickOrder(\"\")}\r\n            />\r\n\r\n            <div\r\n              className={`${sizing ? \"bttn btn_sizing_clicked\" : \"bttn btn_sizing\"}`}\r\n              onMouseOver={onMouseOver}\r\n              onMouseOut={onMouseOut}\r\n              onMouseDown={onMouseDown}\r\n              style={{ left: `${imgWidth - 3}px` }}\r\n            ></div>\r\n          </>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Character)\r\n","import React, { memo, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport Character from \"../../functions/CharacterModal/Character\";\r\n\r\nimport \"./CharacterBlock.css\";\r\nconst CharacterBlock = (props) => {\r\n  const { GameCharacterList } = props;\r\n\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n  const characterblocks = CharacterList?.map((charSchema, index) => {\r\n    return (\r\n      <div key={charSchema.index}>\r\n        <Character\r\n          GameCharacterList={GameCharacterList}\r\n          index={index}\r\n          charSchema={charSchema}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    CharacterList?.length > 0 &&\r\n    <div className=\"CharacterBlocks\" id=\"CharacterBlocks\">\r\n      {characterblocks}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default memo(CharacterBlock);\r\n","import { message } from 'antd';\r\nimport React, { memo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { pushCharacter, selectCharacter } from '../../../../_actions/characterSelected_actions';\r\nimport './CharacterInfoDisplay.css';\r\n\r\nfunction CharacterInfoDisplay({ setName, character, GameCharacterList }) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n\r\n  const onClick_putCharacter = (index, url) => {\r\n    const characterSchema = {\r\n      index: character.index,\r\n      image: url,\r\n      posX: 30,\r\n      posY: 15,\r\n      reverse: 0,\r\n      size: 90,\r\n    }\r\n    dispatch(pushCharacter({ oldArray: CharacterList, characterSchema }))\r\n    setName(character?.name)\r\n  }\r\n\r\n  const onClick_selectCharacter = (index) => {\r\n    setName(GameCharacterList[index].name)\r\n    dispatch(selectCharacter({ ...GameCharacterList[index], index: index }));\r\n  }\r\n\r\n  const CharacterListImages = CharacterList?.map((character, index) => {\r\n    // const img = new Image();\r\n    // img.src = character.image;\r\n    return (\r\n      <div key={index}>\r\n        <div\r\n          className=\"characterList_Info\"\r\n          onClick={() => { onClick_selectCharacter(character.index) }}\r\n        >\r\n          <img\r\n            src={character?.image}\r\n            alt=\"\"\r\n            // className={img.height > img.width ?\r\n            //   \"characterList_image_height\" : \"characterList_image_width\"}\r\n            className=\"characterList_image_height\"\r\n          />\r\n          {/* <div className=\"characterList_Text\">\r\n        x: {character.posX} y: {character.posY} size: {character.size}\r\n      </div> */}\r\n        </div>\r\n        <div>{character?.name}이름 삭제</div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const characterDetailImages = character?.image_array?.map((url, index) => {\r\n    // const img = new Image();\r\n    // img.src = url;\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"image_array__box\"\r\n        onClick={() => { onClick_putCharacter(index, url) }}\r\n      >\r\n        <img\r\n          src={url}\r\n          alt=\"\"\r\n          // className={img.height > img.width ?\r\n          //   \"image_array_image_height\" : \"image_array_image_width\"}\r\n          className=\"image_array_image\"\r\n        />\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"image_array__container\">\r\n      {/* <div className=\"characterList__container\">\r\n        {CharacterListImages}\r\n      </div> */}\r\n      {characterDetailImages}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CharacterInfoDisplay)\r\n","import { message } from 'antd';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detachCharacter, selectCharacter } from '../../../_actions/characterSelected_actions';\r\nimport Character from './Character';\r\nimport CharacterInfoDisplay from './CharacterInfoDisplay/CharacterInfoDisplay';\r\nimport './CharacterModal.css';\r\n\r\nfunction CharacterModal({ GameCharacterList, setName }) {\r\n  const dispatch = useDispatch();\r\n  const CharacterList = useSelector(state => state.character.CharacterList)\r\n  // const onClick_detachCharacter = () => {\r\n  //   dispatch(detachCharacter());\r\n  // }\r\n\r\n  const currentCharacter = useSelector((state) => state.character);\r\n\r\n  const onClick_removeCharacter = () => {\r\n    let index = currentCharacter.characterSelected.index;\r\n    dispatch({ oldArray: CharacterList, index })\r\n    setName(\"\")\r\n  }\r\n\r\n  const [isAdded, setIsAdded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let flag = 0;\r\n    for (let i = 0; i < CharacterList?.length; i++) {\r\n      if (CharacterList[i].index === currentCharacter.characterSelected.index) {\r\n        flag = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (flag === 1) {\r\n      setIsAdded(true);\r\n    } else {\r\n      setIsAdded(false);\r\n    }\r\n\r\n  }, [currentCharacter, CharacterList])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"modal\">\r\n        {/* <div onClick={onClick_detachCharacter}>캐릭터 선택 해제</div> */}\r\n        <CharacterInfoDisplay\r\n          setName={setName}\r\n          GameCharacterList={GameCharacterList}\r\n          character={currentCharacter.characterSelected}\r\n        />\r\n        {/* {isAdded && <div onClick={onClick_removeCharacter}>삭제</div>} */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CharacterModal)\r\n","import { Switch } from 'antd';\r\nimport React, { memo } from 'react';\r\nimport '../SceneMakePage.css';\r\nimport './SceneBox.css';\r\n\r\nfunction SceneBox(props) {\r\n    const { CutList, CutNumber, displayCut, setCutNumber,\r\n        Hover, setHover, EmptyCutList, saveCut } = props;\r\n\r\n    const onClick_GotoCut = (index) => {\r\n        if (CutNumber > 29) {\r\n            displayCut(index);\r\n            setCutNumber(index);\r\n            return;\r\n        }\r\n        if (CutNumber !== index) {\r\n            saveCut();\r\n            displayCut(index);\r\n            setCutNumber(index);\r\n        }\r\n    };\r\n\r\n    const display_SceneBox = CutList.map((Cut, index) => {\r\n        if (CutNumber === index) {\r\n            return (\r\n                (<div className=\"scene__CurrentSceneBox\" key={`${index}`}></div>)\r\n            );\r\n        } else {\r\n            if (Hover) {\r\n                return (\r\n                    <div\r\n                        className=\"scene__SceneBox_color\"\r\n                        key={`${index}`}\r\n                        onMouseOver={() => onClick_GotoCut(index)}\r\n                    ></div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div\r\n                        className=\"scene__SceneBox_color\"\r\n                        key={`${index}`}\r\n                        onClick={() => onClick_GotoCut(index)}\r\n                    ></div>\r\n                )\r\n            }\r\n        }\r\n    });\r\n\r\n    const display_EmptyBox = EmptyCutList.map((EmptyCut, index) => {\r\n        if (CutNumber - CutList.length === index) {\r\n            return (\r\n                <div className=\"scene__CurrentSceneBox\" key={`${index}`}></div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"scene__EmptySceneBox\" key={`${index}`}></div>\r\n            );\r\n        }\r\n    });\r\n    return (\r\n        <div className=\"box sceneBox\">\r\n            {display_SceneBox}\r\n            {display_EmptyBox}\r\n            {/* <Switch\r\n                checked={Hover}\r\n                checkedChildren={CutNumber}\r\n                unCheckedChildren={CutNumber}\r\n                onChange={() => { setHover((state) => !state) }}\r\n                size=\"small\"\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(SceneBox)\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BackgroundSideBar from \"./SideBar/BackgroundSideBar\";\r\nimport CharacterSideBar from \"./SideBar/CharacterSideBar\";\r\nimport BgmSideBar from \"./SideBar/BgmSideBar\";\r\nimport SoundSideBar from \"./SideBar/SoundSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useLocation } from \"react-router\";\r\nimport SceneMakeModal from './SceneMakeModal';\r\nimport UploadModal from './UploadModal';\r\nimport EndingModal from './EndingModal';\r\nimport useKey from \"../../../functions/useKey\";\r\nimport CharacterBlock from \"../../GamePlayPage/CharacterBlock\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LoadingPage from \"../../GamePlayPage/LoadingPage\";\r\nimport { gameLoadingPage } from \"../../../../_actions/gamePlay_actions\";\r\nimport { navbarControl } from \"../../../../_actions/controlPage_actions\";\r\nimport CharacterModal from \"../../../functions/CharacterModal/CharacterModal\";\r\nimport SceneBox from \"./SceneBox/SceneBox\";\r\nimport axios from \"axios\";\r\nimport { SVG } from \"../../../svg/icon\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { socket } from \"../../../App\";\r\nimport { PlayCircleOutlined, PauseCircleOutlined, StopOutlined } from '@ant-design/icons';\r\nimport { detachCharacter, popCharacter, setCharacterList } from \"../../../../_actions/characterSelected_actions\";\r\nimport \"./SceneMakePage.css\";\r\nimport { LOCAL_HOST } from \"../../../Config\";\r\nimport { TextBlock } from \"../../GamePlayPage/TextBlock\";\r\nimport { MS_PER_HR } from \"../../../App\"\r\nimport moment from \"moment\";\r\nimport SceneEndingPage from \"../SceneEndingPage/SceneEndingPage\";\r\n\r\n\r\nlet bgm_audio = new Audio();\r\nlet sound_audio = new Audio();\r\nconst SceneMakePage = (props) => {\r\n    // window.addEventListener('beforeunload', (event) => {\r\n    //     // 표준에 따라 기본 동작 방지\r\n    //     event.preventDefault();\r\n    //     // Chrome에서는 returnValue 설정이 필요함\r\n    //     event.returnValue = '';\r\n    // });\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { gameId, sceneId } = location.state\r\n    const TEXT_MAX_LENGTH = 50;\r\n    let exp;\r\n    // const {gameId,sceneId} = location.state ;\r\n    if (location.state === undefined) {\r\n        window.history.back();\r\n        // return <div></div>;\r\n    }\r\n    message.config({ maxCount: 2 })\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const CharacterList = useSelector((state) => state.character.CharacterList);\r\n\r\n    const padding = 0.1;\r\n    const minSize = 300;\r\n    const ratio = 1080 / 1920;\r\n\r\n    const [windowWidth, setwindowWidth] = useState(window.innerWidth);\r\n    const [windowHeight, setwindowHeight] = useState(window.innerHeight);\r\n    const [newScreenSize, setNewScreenSize] = useState({});\r\n\r\n    //modal\r\n    const [makeModalState, setMakeModalState] = useState(0);\r\n    const [reload, setReload] = useState(1);\r\n    const [uploadModalState, setUploadModalState] = useState(false);\r\n    const [endingModalState, setEndingModalState] = useState(false);\r\n\r\n    const [SidBar_script, setSidBar_script] = useState(true);\r\n\r\n    const [BackgroundImg, setBackgroundImg] = useState(`http://${LOCAL_HOST}:5000/uploads/defaultBackground.png`);\r\n    const [Script, setScript] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [BgmFile, setBgmFile] = useState({\r\n        name: \"\",\r\n        music: \"\",\r\n    });\r\n    const [SoundFile, setSoundFile] = useState({\r\n        name: \"\",\r\n        music: \"\",\r\n    });\r\n\r\n    const [isFirstScene, setIsFirstScene] = useState(false)\r\n\r\n    const [CutNumber, setCutNumber] = useState(0);\r\n    const [Hover, setHover] = useState(false);\r\n\r\n    const [CutList, setCutList] = useState([]);\r\n    const [EmptyCutList, setEmptyCutList] = useState(\r\n        Array.from({ length: 30 }, () => 0)\r\n    );\r\n\r\n    const useConstructor = (cb) => {\r\n        const [isInited, setInit] = useState(false);\r\n        if (isInited) return;\r\n        cb();\r\n        setInit(true);\r\n    }\r\n\r\n    useConstructor(() => {\r\n        dispatch(setCharacterList({ CharacterList: [] }));\r\n    });\r\n\r\n    let scene;\r\n    useEffect(() => {\r\n        dispatch(navbarControl(false));\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (user.userData) {\r\n            socket.emit(\"leave room\", { room: user.userData?._id?.toString() });\r\n            socket.emit(\"room\", { room: user.userData?._id?.toString() });\r\n        }\r\n        socket.off(\"timeout_making\")\r\n        socket.on(\"timeout_making\", data => {\r\n            // console.log(\"GO HOME\")\r\n            props.history.replace(\"/\")\r\n        })\r\n\r\n    }, [user])\r\n\r\n    //! scene save할 때 필요한 정보 갖고오기\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await axios.get(`/api/game/getSceneInfo/${sceneId}`)\r\n            const validation = await axios.post(`/api/game/scene/validate`, { sceneId, gameId, isMaking: true })\r\n            // console.log(res.data)\r\n            if (res.data.success && validation.data.success) { scene = res.data.scene; }\r\n            else {\r\n                // console.log(\"get scene ERROR\");\r\n                props.history.replace(\"/\");\r\n                return;\r\n            }\r\n            // 임시저장한 녀석\r\n\r\n\r\n            if (scene.cutList.length) {\r\n\r\n                if (scene.isFirst) {\r\n                    setIsFirstScene(true)\r\n                }\r\n\r\n                // 임시저장된 녀석 불러오기\r\n                setCutList(scene.cutList);\r\n                const tmpFirstCut = scene.cutList[0]\r\n                dispatch(setCharacterList({ CharacterList: tmpFirstCut.characterList }));\r\n                setBackgroundImg(tmpFirstCut.background)\r\n                setName(tmpFirstCut.name);\r\n                setScript(tmpFirstCut.script);\r\n                setCutNumber(scene.cutList.length - 1);\r\n                dispatch(gameLoadingPage(0));\r\n                dispatch(gameLoadingPage(1));\r\n\r\n            }\r\n            // 껍데기\r\n            else {\r\n                if (!scene.isFirst) {\r\n                    const variable = { sceneId: scene.prevSceneId };\r\n                    Axios.post(\"/api/scene/scenedetail\", variable)\r\n                        .then((response) => {\r\n                            //! 이전 씬의 마지막 컷 설정 유지\r\n                            if (response.data.success) {\r\n                                const lastCut = response.data.lastCut;\r\n                                dispatch(setCharacterList({ CharacterList: lastCut.characterList }));\r\n                                setBackgroundImg(lastCut.background);\r\n                                setName(lastCut.name);\r\n                                dispatch(gameLoadingPage(0));\r\n                                dispatch(gameLoadingPage(1));\r\n                            } else {\r\n                                message.error(\"이전 Scene의 정보를 불러오는데 실패했습니다.\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    setIsFirstScene(true)\r\n                }\r\n            }\r\n        })();\r\n    }, [])\r\n\r\n    const onScriptChange = (event) => {\r\n        if (event.currentTarget.value.length === (TEXT_MAX_LENGTH + 1)) {\r\n            message.error({\r\n                content: '글자 수 제한을 초과하였습니다.',\r\n            });\r\n        }\r\n        else {\r\n            if (event.currentTarget.value[event.currentTarget.value.length - 1] !== '\\n') {\r\n                setScript(event.currentTarget.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onNameChange = (event) => {\r\n        setName(event.currentTarget.value);\r\n    };\r\n    const characterSidebarElement = useRef();\r\n    const backgroundSidebarElement = useRef();\r\n    const bgmSidebarElement = useRef();\r\n    const soundSidebarElement = useRef();\r\n    const scriptElement = useRef();\r\n    const nameElement = useRef();\r\n\r\n    const makeVisible = (element) => {\r\n        makeInvisible()\r\n        element.current.style.display = 'block'\r\n    }\r\n\r\n    const makeInvisible = () => {\r\n        characterSidebarElement.current.style.display = 'none'\r\n        backgroundSidebarElement.current.style.display = 'none'\r\n        bgmSidebarElement.current.style.display = 'none'\r\n        soundSidebarElement.current.style.display = 'none'\r\n    }\r\n\r\n    const [sideTab, setSideTab] = useState(1);\r\n    const onClick_character = () => {\r\n        if (characterSidebarElement.current.style.display === 'none') {\r\n            makeVisible(characterSidebarElement);\r\n            setSideTab(1);\r\n        }\r\n    };\r\n\r\n    const onClick_background = () => {\r\n        if (backgroundSidebarElement.current.style.display === 'none') {\r\n            makeVisible(backgroundSidebarElement);\r\n            setSideTab(2);\r\n        }\r\n    };\r\n\r\n\r\n    const onClick_bgm = () => {\r\n        if (bgmSidebarElement.current.style.display === 'none') {\r\n            makeVisible(bgmSidebarElement);\r\n            setSideTab(3);\r\n        }\r\n    };\r\n\r\n    const onClick_sound = () => {\r\n        if (soundSidebarElement.current.style.display === 'none') {\r\n            makeVisible(soundSidebarElement);\r\n            setSideTab(4);\r\n        }\r\n    };\r\n\r\n    const onClick_script = () => {\r\n        if (SidBar_script) {\r\n            setSidBar_script(false);\r\n        } else {\r\n            setSidBar_script(true);\r\n        }\r\n    };\r\n\r\n    const onClick_bgm_player = () => {\r\n        if (bgm_audio.paused) bgm_audio.play();\r\n        else bgm_audio.pause();\r\n        setReload(reload => reload + 1)\r\n    };\r\n\r\n    const onClick_sound_player = () => {\r\n        if (sound_audio.paused) sound_audio.play();\r\n        else sound_audio.pause();\r\n        setReload(reload => reload + 1)\r\n    };\r\n\r\n    function handleEnter(event) {\r\n        if (nameElement.current === document.activeElement)\r\n            scriptElement.current.focus();\r\n        else if (scriptElement.current === document.activeElement)\r\n            onSubmit_nextCut(event);\r\n    }\r\n\r\n    function handleTab(event) {\r\n        if (nameElement.current === document.activeElement)\r\n            scriptElement.current.focus();\r\n        else if (scriptElement.current === document.activeElement)\r\n            nameElement.current.focus();\r\n    }\r\n\r\n    useKey(\"Enter\", handleEnter);\r\n\r\n    const saveCut = () => {\r\n        const Cut = {\r\n            characterList: CharacterList,\r\n            background: BackgroundImg,\r\n            script: Script,\r\n            name: Name,\r\n            bgm: BgmFile,\r\n            sound: SoundFile,\r\n        };\r\n        setSoundFile({\r\n            name: \"\",\r\n            music: \"\",\r\n        });\r\n\r\n        setCutList((oldArray) => [\r\n            ...oldArray.slice(0, CutNumber),\r\n            Cut,\r\n            ...oldArray.slice(CutNumber + 1, 31),\r\n        ]);\r\n        if (CutList.length === CutNumber) {\r\n            setEmptyCutList((oldArray) => [\r\n                ...oldArray.slice(0, EmptyCutList.length - 1),\r\n            ]);\r\n        }\r\n    };\r\n\r\n    const displayCut = (index) => {\r\n        dispatch(setCharacterList({ CharacterList: CutList[index]?.characterList }));\r\n        setBackgroundImg(CutList[index]?.background);\r\n        setScript(CutList[index]?.script);\r\n        setName(CutList[index]?.name);\r\n        setBgmFile(CutList[index]?.bgm);\r\n        setSoundFile(CutList[index]?.sound);\r\n        if (CutList[index]?.bgm.music) {\r\n            bgm_audio.src = CutList[index]?.bgm.music;\r\n            bgm_audio.play();\r\n        } else {\r\n            bgm_audio.pause();\r\n        }\r\n        if (CutList[index]?.sound.music) {\r\n            sound_audio.src = CutList[index]?.sound.music;\r\n            sound_audio.play();\r\n        } else {\r\n            sound_audio.pause();\r\n        }\r\n    };\r\n\r\n    const onRemove_character = (index) => {\r\n        dispatch(popCharacter({\r\n            oldArray: CharacterList,\r\n            index\r\n        }))\r\n    };\r\n\r\n    const onSubmit_nextCut = (event) => {\r\n        event.preventDefault();\r\n        if (CutNumber >= 29) {\r\n            message.error(\"더이상 Cut을 생성할 수 없습니다.\");\r\n            return;\r\n        } else if (CutNumber === 24) {\r\n            message.warning(\"생성 가능한 Cut이 5개 남았습니다.\");\r\n        }\r\n\r\n        saveCut();\r\n\r\n        if (CutNumber < CutList.length - 1) {\r\n            displayCut(CutNumber + 1);\r\n        } else {\r\n            setScript(\"\");\r\n        }\r\n        setCutNumber((oldNumber) => oldNumber + 1);\r\n        scriptElement.current.focus()\r\n\r\n    };\r\n\r\n    const onRemove_cut = () => {\r\n        if (CutList.length <= 1) {\r\n            // setCutList([]);\r\n            // setEmptyCutList((oldArray) => [\r\n            //     0, ...oldArray\r\n            // ]);\r\n            // displayCut(0);\r\n            // setCutNumber(0);\r\n            message.info('첫번째 컷 입니다.');\r\n            return;\r\n        } else if (CutList.length - 1 <= CutNumber) {\r\n            if (CutList[CutNumber]) {\r\n                setCutList((oldArray) => [\r\n                    ...oldArray.slice(0, CutNumber)\r\n                ]);\r\n                setEmptyCutList((oldArray) => [\r\n                    0, ...oldArray\r\n                ]);\r\n            }\r\n            displayCut(CutNumber - 1);\r\n            setCutNumber(CutNumber - 1);\r\n            return;\r\n        }\r\n        message.success(`${CutNumber + 1}번째 컷이 삭제되었습니다.`);\r\n        setCutList((oldArray) => [\r\n            ...oldArray.slice(0, CutNumber),\r\n            ...oldArray.slice(CutNumber + 1, 31),\r\n        ]);\r\n        setEmptyCutList((oldArray) => [\r\n            0, ...oldArray\r\n        ]);\r\n        displayCut(CutNumber + 1);\r\n    }\r\n\r\n    const onSubmit_first = () => {\r\n        setUploadModalState(true)\r\n    }\r\n\r\n    const isEnding = useRef(false);\r\n    const onSubmit = () => {\r\n        setEndingModalState(true)\r\n    }\r\n\r\n    const onSubmit_saveScene = async (event, isTmp = 0) => {\r\n        if (CutList.length < 1 || (CutList.length === 1 && CutList[CutNumber])) {\r\n            message.error(\"최소 2개의 컷을 생성해주세요.\");\r\n            return;\r\n        }\r\n\r\n        bgm_audio.pause();\r\n        const submitCut = {\r\n            characterList: CharacterList,\r\n            background: BackgroundImg,\r\n            script: Script,\r\n            name: Name,\r\n            bgm: BgmFile,\r\n            sound: SoundFile,\r\n        };\r\n\r\n        const submitCutList = [\r\n            ...CutList.slice(0, CutNumber),\r\n            submitCut,\r\n            ...CutList.slice(CutNumber + 1, 31),\r\n        ];\r\n        if (isTmp || isEnding || window.confirm(\"게임 제작을 완료하시겠습니까?\")) {\r\n\r\n            const variable = {\r\n                cutList: submitCutList,\r\n                isEnding: isEnding.current,\r\n                gameId,\r\n                sceneId,\r\n                isTmp,\r\n            };\r\n\r\n            const response = await Axios.post(`/api/scene/save`, variable)\r\n\r\n            if (response.data.success) {\r\n                dispatch(detachCharacter());\r\n                message\r\n                    .loading(\"게임 업로드 중..\", 1.0)\r\n                    .then(() => {\r\n                        if (!isTmp) {\r\n                            message.success(\"게임 제작이 완료되었습니다.\", 1.0)\r\n                        }\r\n                        else {\r\n                            message.success(\"업로드 성공.\")\r\n                        }\r\n                    }\r\n                    ).then(() => {\r\n                        if (!isTmp && isFirstScene) {\r\n                            history.replace(\r\n                                `/game/${gameId}`\r\n                            );\r\n\r\n                        } else if (!isTmp) {\r\n                            socket.emit(\"final_submit\", {\r\n                                prevSceneId: response.data.scene.prevSceneId,\r\n                                sceneId: response.data.scene._id,\r\n                                title: response.data.scene.title,\r\n                                userId: user.userData._id.toString(),\r\n                            })\r\n                            history.replace({\r\n                                pathname: `/gameplay`,\r\n                                state: {\r\n                                    sceneId: response.data.scene._id,\r\n                                    gameId: gameId,\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n            } else if (response.data.msg === 'expired') {\r\n                message.error(\"제작 유효기간이 만료되었습니다..\", 1.0);\r\n                props.history.replace({\r\n                    pathname: `/gameplay`,\r\n                    state: {\r\n                        sceneId: response.data.prevSceneId,\r\n                        gameId: gameId,\r\n                    }\r\n                })\r\n                return;\r\n            }\r\n            else {\r\n                message.error(\"DB에 문제가 있습니다.\");\r\n            }\r\n\r\n        } else {\r\n            message.error(\"제출 취소\");\r\n        }\r\n    };\r\n\r\n    const onTmpSave = (event) => {\r\n        onSubmit_saveScene(event, 1);\r\n    }\r\n\r\n    const onSetModal = () => {\r\n        setMakeModalState(sideTab);\r\n    }\r\n\r\n    const [gameDetail, setGameDetail] = useState([]);\r\n    const [sideBar, setSideBar] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/game/getgamedetail', { gameId: gameId })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setGameDetail(response.data.gameDetail)\r\n                } else {\r\n                    alert('게임 정보를 로딩하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }, [reload, gameId])\r\n\r\n\r\n    useEffect(() => {\r\n        if (gameDetail.character) {\r\n            const reload_Sidebar = (< div className=\"sideBar\">\r\n                <div ref={characterSidebarElement}>\r\n                    <CharacterModal\r\n                        reload={reload} //update용\r\n                        setName={setName}\r\n                        GameCharacterList={gameDetail.character}\r\n                    />\r\n                    <CharacterSideBar\r\n                        gameDetail={gameDetail}\r\n                        setName={setName}\r\n                        onSetModal={onSetModal}\r\n                    />\r\n                </div>\r\n                <div ref={backgroundSidebarElement} style={{ display: 'none' }}>\r\n                    <BackgroundSideBar\r\n                        gameDetail={gameDetail}\r\n                        setBackgroundImg={setBackgroundImg}\r\n                        onSetModal={onSetModal}\r\n                    />\r\n                </div>\r\n                <div ref={bgmSidebarElement} style={{ display: 'none' }}>\r\n                    <BgmSideBar\r\n                        gameDetail={gameDetail}\r\n                        bgm_audio={bgm_audio}\r\n                        setBgmFile={setBgmFile}\r\n                        onSetModal={onSetModal}\r\n                    />\r\n                </div>\r\n                <div ref={soundSidebarElement} style={{ display: 'none' }}>\r\n                    <SoundSideBar\r\n                        gameDetail={gameDetail}\r\n                        sound_audio={sound_audio}\r\n                        setSoundFile={setSoundFile}\r\n                        onSetModal={onSetModal}\r\n                    />\r\n                </div>\r\n            </div>)\r\n            setSideBar(reload_Sidebar)\r\n        }\r\n    }, [gameDetail, CharacterList, reload])\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setwindowWidth(window.innerWidth);\r\n            setwindowHeight(window.innerHeight);\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n        if (windowWidth * ratio > windowHeight) {\r\n            setNewScreenSize({\r\n                width: `${windowHeight * (1 - 2 * padding) / ratio}px`,\r\n                height: `${windowHeight * (1 - 2 * padding)}px`,\r\n                minWidth: `${minSize / ratio}px`,\r\n                minHeight: `${minSize}px`\r\n            })\r\n        } else {\r\n            setNewScreenSize({\r\n                width: `${windowWidth * (1 - 2 * padding)}px`,\r\n                height: `${windowWidth * (1 - 2 * padding) * ratio}px`,\r\n                minWidth: `${minSize}px`,\r\n                minHeight: `${minSize * ratio}px`\r\n            })\r\n        }\r\n    }, [window.innerWidth, window.innerHeight]);\r\n\r\n    const onLeft = () => {\r\n        if (CutNumber !== 0) {\r\n            saveCut();\r\n            displayCut(CutNumber - 1);\r\n            setCutNumber(CutNumber - 1);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            bgm_audio.pause();\r\n            sound_audio.pause();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"title\">\r\n                <span>[{gameDetail?.title}]</span>\r\n                {/* <span>제작 유효기간: 2020.01.02 {exp}</span> */}\r\n                <div className=\"title-btn\">상세정보</div>\r\n            </div>\r\n            <SceneBox\r\n                CutList={CutList}\r\n                CutNumber={CutNumber}\r\n                displayCut={displayCut}\r\n                setCutNumber={setCutNumber}\r\n                Hover={Hover}\r\n                setHover={setHover}\r\n                EmptyCutList={EmptyCutList}\r\n                saveCut={saveCut}\r\n            />\r\n\r\n            <div className=\"scene\">\r\n                <div className=\"scene left-arrow\"\r\n                    onClick={onLeft}>\r\n                    <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color=\"#F5F5F5\" />\r\n                </div>\r\n                <div\r\n                    className=\"backgroundImg\"\r\n                    id=\"backgroundImg_container\"\r\n                    style={{ overflow: \"hidden\" }}\r\n                >\r\n\r\n                    <img\r\n                        className=\"backgroundImg\"\r\n                        // id=\"backgroundImg_container\"\r\n                        src={`${BackgroundImg}`}\r\n                        alt=\"img\"\r\n                    />\r\n                    <CharacterBlock\r\n                        GameCharacterList={gameDetail.character}\r\n                        onRemovech_aracter={onRemove_character}\r\n                    />\r\n                    {SidBar_script && Script && (\r\n                        <TextBlock\r\n                            cut_name={Name ? Name : \"이름을 입력해주세요.\"}\r\n                            cut_script={Script ? Script : \"대사를 입력해주세요.\"}\r\n                            setIsTyping={null}\r\n                            isTyping={null}\r\n                            theme={null}\r\n                        />\r\n                    )}\r\n                    <div className=\"scene__sound_container\">\r\n                        {BgmFile?.name ? (\r\n                            <div\r\n                                onClick={onClick_bgm_player}\r\n                            >\r\n                                {\r\n                                    BgmFile.name && bgm_audio.paused &&\r\n                                    <PlayCircleOutlined\r\n                                        style={{ fontSize: \"20px\" }} />\r\n                                }\r\n                                {\r\n                                    BgmFile.name && !bgm_audio.paused &&\r\n                                    <PauseCircleOutlined\r\n                                        style={{ fontSize: \"20px\" }} />\r\n                                }\r\n                                <div className=\"scene__sound_name\">{BgmFile.name}</div>\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <StopOutlined\r\n                                    style={{ fontSize: \"20px\" }}\r\n                                />\r\n                                <div className=\"scene__sound_name\">BGM</div>\r\n                            </div>\r\n                        )}\r\n                        {SoundFile?.name ? (\r\n                            <div\r\n                                onClick={onClick_sound_player}\r\n                            >\r\n                                {\r\n                                    SoundFile.name && sound_audio.paused &&\r\n                                    <PlayCircleOutlined\r\n                                        style={{ fontSize: \"20px\" }} />\r\n                                }\r\n                                {\r\n                                    SoundFile.name && !sound_audio.paused &&\r\n                                    <PauseCircleOutlined\r\n                                        style={{ fontSize: \"20px\" }} />\r\n                                }\r\n                                <div className=\"scene__sound_name\">{SoundFile.name}</div>\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <StopOutlined\r\n                                    style={{ fontSize: \"20px\" }}\r\n                                />\r\n                                <div className=\"scene__sound_name\">Sound</div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"scene right-arrow\"\r\n                    onClick={CutNumber < 29 && onSubmit_nextCut}>\r\n                    <SVG src=\"arrow_1\" width=\"50\" height=\"50\" color={CutNumber < 29 ? \"#F5F5F5\" : \"black\"} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"scene__btn_top\">\r\n\r\n                {isFirstScene &&\r\n                    <div className=\"scene_btn scene_btn_red\"\r\n                        onClick={onSetModal}>\r\n                        에셋 추가\r\n                    </div>\r\n                }\r\n                <div className=\"scene_btn\"\r\n                    onClick={onTmpSave}>\r\n                    임시 저장\r\n                </div>\r\n                {isFirstScene ?\r\n                    <div className=\"scene_btn scene_btn_blue\"\r\n                        onClick={onSubmit_first}>\r\n                        완료\r\n                        </div>\r\n                    : <div className=\"scene_btn scene_btn_blue\"\r\n                        onClick={onSubmit}>\r\n                        완료\r\n                        </div>\r\n                }\r\n\r\n            </div>\r\n            <div className=\"btn_side\">\r\n                <div\r\n                    className={sideTab === 1 ? \"scene_side_btn light\" : \"scene_side_btn\"}\r\n                    onClick={onClick_character}\r\n                >캐릭터</div>\r\n                <div\r\n                    className={sideTab === 2 ? \"scene_side_btn light\" : \"scene_side_btn\"}\r\n                    onClick={onClick_background}\r\n                >배경</div>\r\n\r\n                <div\r\n                    className={sideTab === 3 ? \"scene_side_btn light\" : \"scene_side_btn\"}\r\n                    onClick={onClick_bgm}>\r\n                    배경음\r\n                    </div>\r\n                <div\r\n                    className={sideTab === 4 ? \"scene_side_btn light\" : \"scene_side_btn\"}\r\n                    onClick={onClick_sound}>\r\n                    효과음\r\n                    </div>\r\n            </div>\r\n            {sideBar !== 0 && sideBar}\r\n            <div\r\n                className=\"textbox_name\">\r\n                <div className=\"textbox__name_block_btn\">\r\n                    <SVG src=\"arrow_1\" width=\"15\" height=\"25\" color=\"#FFFFFF\" />\r\n                </div>\r\n            </div>\r\n            <input\r\n                onChange={onNameChange}\r\n                placeholder=\"이름\"\r\n                value={Name}\r\n                ref={nameElement}\r\n                className=\"textbox_name\"\r\n            />\r\n            <div className=\"textbox_bottom\">\r\n                <div className=\"enter\"\r\n                    onClick={onSubmit_nextCut}>\r\n                    Enter\r\n                    <br />\r\n                    {/* {CutNumber + 1}/30\r\n                    <br /> */}\r\n                    {Script.length}/{TEXT_MAX_LENGTH}\r\n                </div>\r\n                <textarea\r\n                    onChange={onScriptChange}\r\n                    value={Script}\r\n                    placeholder=\"대사가 없으면 스크립트 창이 표시되지 않습니다.\"\r\n                    className=\"textbox_script\"\r\n                    maxLength={TEXT_MAX_LENGTH + 1}\r\n                    ref={scriptElement}\r\n                />\r\n            </div>\r\n            <div className=\"options\">\r\n                <div className=\"scene_btn\"\r\n                    onClick={onRemove_cut}>\r\n                    컷 삭제\r\n                </div>\r\n                {/* <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >On/Off</div>\r\n                <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >Preview</div> */}\r\n                <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >배경음 음소거</div>\r\n                <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >효과음 음소거</div>\r\n                <div className=\"scene_btn\"\r\n                    onClick={onClick_script}\r\n                >테마 선택</div>\r\n            </div>\r\n\r\n            <UploadModal\r\n                gameId={gameId}\r\n                visible={uploadModalState}\r\n                setUploadModalState={setUploadModalState}\r\n                onSubmit_saveScene={onSubmit_saveScene}\r\n                defaultTitle={gameDetail.title}\r\n                defaultDescription={gameDetail.description}\r\n            />\r\n            <EndingModal\r\n                isEnding={isEnding}\r\n                visible={endingModalState}\r\n                setEndingModalState={setEndingModalState}\r\n                onSubmit_saveScene={onSubmit_saveScene}\r\n            />\r\n            {\r\n                makeModalState !== 0 && <SceneMakeModal\r\n                    gameId={gameId}\r\n                    visible={Boolean(makeModalState)}\r\n                    setTag={setMakeModalState}\r\n                    tag={makeModalState}\r\n                    setReload={setReload}\r\n                />\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SceneMakePage;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { USER_SERVER } from \"../../../Config\";\r\nimport { withRouter ,Link} from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction RightMenu(props) {\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const logoutHandler = () => {\r\n        axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n            if (response.status === 200) {\r\n                props.history.push(\"/login\");\r\n            } else {\r\n                alert(\"Log Out Failed\");\r\n            }\r\n        });\r\n    };\r\n\r\n    if (user.userData && !user.userData.isAuth) {\r\n        return (\r\n            <Menu mode={props.mode}>\r\n                <Menu.Item key=\"login\">\r\n                    <Link to=\"/login\">로그인</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"register\">\r\n                    <Link to=\"/register\">회원가입</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    } else {\r\n        return (\r\n            <Menu mode={props.mode}>\r\n                <Menu.Item key=\"profile\">\r\n                    {user?.userData?._id ? \r\n                        <Link to={`/profile/${user.userData._id}`}>프로필</Link>\r\n                        :\r\n                        \"프로필\"\r\n                    }\r\n                </Menu.Item>\r\n                <Menu.Item key=\"logout\">\r\n                    <Link to=\"/\" onClick={logoutHandler}>로그아웃</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","import React, { memo, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RightMenu from \"./Sections/RightMenu\";\r\nimport { Drawer, Button, Icon } from \"antd\";\r\nimport \"./Sections/Navbar.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ninterface State_controlpage {\r\n  controlpage: {\r\n    navbarOn: boolean;\r\n  }\r\n}\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n  const navbarOn: boolean = useSelector((state: State_controlpage) => state.controlpage.navbarOn);\r\n  let style = {};\r\n\r\n  const showDrawer = ():void => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = ():void => {\r\n    setVisible(false);\r\n  };\r\n  \r\n  if (navbarOn) {\r\n    style = { position: \"fixed\", zIndex: 5, width: \"100%\" };\r\n  } else {\r\n    style = {\r\n      position: \"fixed\",\r\n      zIndex: 5,\r\n      width: \"100%\",\r\n      // transform: \"translate(0,-69px)\",\r\n      opacity: 0,\r\n      animation: \"0.8s ease-out 0s 1 hide\",\r\n    };\r\n  }\r\n  \r\n  return (\r\n    <nav className=\"menu\" style={style}>\r\n      <div className=\"menu__logo\">\r\n        <Link to=\"/\">이어봐</Link>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"이어봐\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default memo(NavBar);\r\n","import React from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer_container\">\r\n      <p>\r\n        마음껏 이어봐 <Icon type=\"smile\" />\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport io from 'socket.io-client';\r\n\r\nimport Auth from \"../hoc/auth\";\r\nimport Valid from \"../hoc/valid\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\n\r\nimport LoginPage from \"./views/LoginPage/LoginPage.tsx\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.tsx\";\r\nimport Profile from './views/Profile/Profile.tsx';\r\n\r\nimport GameDetailPage from './views/GameDetailPage/GameDetailPage.js';\r\nimport GameUploadPage from \"./views/GameUploadPage/GameUploadPage.js\";\r\nimport GameBuildUpPage from \"./views/GameUploadPage/GameBuildUpPage.js\";\r\nimport GamePlayPage from \"./views/GamePlayPage/GamePlayPage.js\";\r\nimport SceneMakePage from \"./views/Scene/SceneMakePage/SceneMakePage\";\r\n\r\nimport NavBar from \"./views/NavBar/NavBar.tsx\";\r\nimport Footer from \"./views/Footer/Footer.tsx\"\r\nimport { LOCAL_HOST } from './Config';\r\nimport './App.css';\r\n\r\nconst config = require('../config/key');\r\n// export let socket = io(`http://${LOCAL_HOST}:5000`, {transports : ['websocket']});\r\nexport let socket = io(config.SOCKET, { transports: ['websocket'] });\r\nexport const MS_PER_HR = 360000\r\n\r\nwindow.onpopstate = () => {\r\n  window.location.reload();\r\n};\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={(<div>Loading...</div>)}>\r\n      <NavBar />\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n          <Route exact path=\"/profile/:userId\" component={Auth(Profile, true)} />\r\n          <Route exact path=\"/game/upload\" component={Auth(GameUploadPage, true)} />\r\n          <Route path=\"/game/:gameId\" component={Auth(GameDetailPage, null)} />\r\n          <Route path=\"/gameplay\" component={Valid(Auth(GamePlayPage, null))} />\r\n          <Route exact path=\"/scene/make\" component={Valid(Auth(SceneMakePage, true))} />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { NAVBAR_CONTROL } from \"../_actions/types\";\r\n\r\nconst initialState = { navbarOn : true };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case NAVBAR_CONTROL:\r\n      return { ...state, navbarOn: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { LOADINGPAGE_GAMEPLAY, PAUSE_GAMEPLAY } from \"../_actions/types\";\r\n\r\nconst initialState = { loadingType: 0, isPause: false };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADINGPAGE_GAMEPLAY:\r\n      return { ...state, loadingType: action.payload };\r\n    case PAUSE_GAMEPLAY:\r\n      return { ...state, isPause: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SELECT_CHARACTER,\r\n  DETACH_CHARACTER,\r\n  PUSH_CHARACTER,\r\n  POP_CHARACTER,\r\n  UPDATE_CHARACTER,\r\n  SET_CHARACTER_LIST,\r\n  ORDER_CHARACTER\r\n} from '../_actions/types';\r\n\r\nconst initialState = {\r\n  description: \"\",\r\n  image: \"\",\r\n  image_array: [],\r\n  name: \"\",\r\n  _id: \"\",\r\n  index: -1\r\n}\r\n\r\nexport default function (state = { characterSelected: initialState, CharacterList: [] }, action) {\r\n\r\n  switch (action.type) {\r\n    case SELECT_CHARACTER:\r\n      return { ...state, characterSelected: action.payload }\r\n    case DETACH_CHARACTER:\r\n      return { ...state, characterSelected: initialState }\r\n    case PUSH_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    case POP_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    case UPDATE_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    case SET_CHARACTER_LIST:\r\n      return { ...state, CharacterList: action.payload }\r\n    case ORDER_CHARACTER:\r\n      return { ...state, CharacterList: action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  SELECT_DISPLAYED\r\n} from '../_actions/types';\r\n\r\nconst initialState = {index: -1}\r\n                      \r\nexport default function(state={characterDisplayed : initialState},action){\r\n\r\n  switch(action.type){\r\n      case SELECT_DISPLAYED:\r\n          return {...state, characterDisplayed: action.payload }\r\n      default:\r\n          return state;\r\n  }\r\n}","import { \r\n  SELECT_MOVINGTARGET, DETACH_MOVINGTARGET \r\n} from \"../_actions/types\";\r\n\r\n\r\nconst initialState = { movingTarget: -1 };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SELECT_MOVINGTARGET:\r\n      return { ...state, movingTarget: action.payload };\r\n    case DETACH_MOVINGTARGET:\r\n      return { ...state, movingTarget: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user_reducer\";\r\nimport controlpage from \"./controlPage_reducer\";\r\nimport gameplay from \"./gamePlay_reducer\";\r\nimport sync from './sync_reducer';\r\nimport character from \"./characterSelected_reducer\";\r\nimport characterDisplayed from \"./characterDisplayed_reducer\";\r\nimport movingTarget from \"./movingTarget_reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  controlpage,\r\n  gameplay,\r\n  sync,\r\n  character,\r\n  characterDisplayed,\r\n  movingTarget,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    LOAD_EMPTY_NUM,\r\n    SAVE_PREV_SCENE\r\n} from '../_actions/types';\r\n\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case LOAD_EMPTY_NUM:\r\n            return { ...state, emptyNum: action.payload }\r\n        case SAVE_PREV_SCENE:\r\n            return { ...state, prevSceneId: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","if (process.env.NODE_ENV === 'production') {\r\n    module.exports = require('./prod');\r\n} else {\r\n    module.exports = require('./dev');\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 419;"],"sourceRoot":""}