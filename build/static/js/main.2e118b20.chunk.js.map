{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","hoc/valid.js","components/svg/icon.js","components/views/LandingPage/LandingPage.js","components/functions/useKey.js","components/views/Comment/SingleComment.js","components/views/Comment/Comment.js","components/views/GameDetailPage/GameDetailPage.js","components/views/LandingPage/TestPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/Profile/Profile.js","components/views/GameUploadPage/GameUploadPage.js","components/views/GameUploadPage/GameBuildUpPage.js","components/views/GamePlayPage/GameCharacterBlock.js","components/views/Modal/InputModalForm.js","_actions/gamePlay_actions.js","components/views/Modal/InputModal.js","components/functions/useMouse.js","components/views/GamePlayPage/TextAnimation.js","components/views/GamePlayPage/TextBlock.js","components/views/GamePlayPage/Dislike.js","components/views/GamePlayPage/HistoryMap.js","components/views/GamePlayPage/LoadingPage.js","_actions/sync_actions.js","_actions/controlPage_actions.js","utils/useFullscreenStatus.js","components/views/GamePlayPage/TreeMap.js","components/views/GamePlayPage/GamePlayPage.js","components/views/Scene/SceneMakePage/SideBar/BackgroundImg.js","components/views/Scene/SceneMakePage/SideBar/BackgroundSideBar.js","_actions/characterSelected_actions.js","components/views/Scene/SceneMakePage/SideBar/CharacterImg.js","components/views/Scene/SceneMakePage/SideBar/CharacterSideBar.js","components/views/Scene/SceneMakePage/SideBar/BgmFile.js","components/views/Scene/SceneMakePage/SideBar/BgmSideBar.js","components/views/Scene/SceneMakePage/SideBar/SoundFile.js","components/views/Scene/SceneMakePage/SideBar/SoundSideBar.js","components/views/Scene/SceneMakePage/Tab/SceneMakeModalTab.js","components/views/Dropzone/MyDropzone.js","components/views/Scene/SceneMakePage/Tab/CharacterTab.js","components/views/Scene/SceneMakePage/Tab/BackgroundTab.js","components/views/Scene/SceneMakePage/Tab/BgmTab.js","components/views/Scene/SceneMakePage/Tab/SoundTab.js","components/views/Scene/SceneMakePage/SceneMakeModal.js","components/views/Scene/SceneMakePage/UploadModal.js","components/functions/handleEventListener.js","components/functions/CharacterModal/Character.js","components/views/GamePlayPage/CharacterBlock.js","components/functions/CharacterModal/CharacterInfoDisplay/CharacterInfoDisplay.js","components/functions/CharacterModal/CharacterModal.js","components/views/Scene/SceneMakePage/SceneBox/SceneBox.js","components/views/Scene/SceneMakePage/SceneMakePage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/App.js","serviceWorker.js","_reducers/controlPage_reducer.js","_reducers/gamePlay_reducer.js","_reducers/characterSelected_reducer.js","_reducers/characterDisplayed_reducer.js","_reducers/movingTarget_reducer.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/sync_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","replace","push","Validate","location","useLocation","undefined","svg","arrow_1","SVG","src","color","width","height","viewBox","fill","xmlns","d","BAR","ListContainer","id","pos","limit","ContainerToRight","target","console","log","bar","document","getElementById","split","String","style","filter","transform","arrow","display","ContainerToLeft","LandingPage","useState","games","setGames","Axios","success","alert","uploadGameFrame","a","gameResponse","firstScene","gameId","game","_id","prevSceneId","sceneDepth","isFirst","title","post","sceneResponse","message","setTimeout","pathname","sceneId","game_length","gameList","map","index","key","className","href","thumbnail","alt","category","onClick","useKey","cb","callbackRef","useRef","current","handle","event","code","shiftKey","addEventListener","removeEventListener","SingleComment","comment","updateToggle_comment","userData","user_id","reference","update","setUpdate","commentContent","setCommentContent","Replys","setReplys","writeReply","setWriteReply","updateToggle","variable","responseTo","toString","result","error","mapReply","reply","marginLeft","writer","image","nickname","content","length","commentId","onChange","currentTarget","value","placeholder","preventDefault","variables","ref","Comment","comments","setComments","onSubmit_comment","mapComment","GameDetailPage","match","params","gameDetail","setGameDetail","setSceneId","isMaking","setIsMaking","creator","description","to","Typography","Title","Card","Meta","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","dataToSubmit","loginUser","loginSuccess","window","setItem","userId","removeItem","catch","err","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","level","Item","prefix","onBlur","fontSize","border","padding","borderRadius","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","confirmPassword","oneOf","moment","unix","registerUser","errmsg","label","hasFeedback","validateStatus","Profile","makingGameList","list","TextArea","Input","PrivateOptions","CategoryOptions","GameUploadPage","GameTitle","setGameTitle","setDescription","isPrivate","setIsPrivate","setCategory","ratio","setRatio","filePath","setFilePath","onRatioChange","floatRatio","game_variables","privacy","character","background","bgm","sound","maxWidth","margin","textAlign","marginBottom","justifyContent","onDrop","files","formData","FormData","append","header","multiple","maxSize","getRootProps","getInputProps","alignItems","item","cat_idx","text","name","size","GameBuildUpPage","GameCharacterBlock","characterblocks","characterList","charSchema","left","posX","top","posY","ModalForm","Form","create","visible","onCancel","onCreate","form","remainTime","getFieldDecorator","okText","onOk","layout","rules","input","focus","gameLoadingPage","loadingType","gamePause","isPause","InputModal","decTimer","scene_id","scene_depth","game_id","scene_next_list","useHistory","emptyNum","sync","setVisible","formRef","setFormRef","setRemainTime","decreaseTimer","setDecreaseTimer","validated","setValidated","saveFormRef","useCallback","node","cancelHandler","socket","emit","clearTimeout","dino","setDino","off","on","working","setWorking","workingCnt","Array","isArray","n","tick","setInterval","clearInterval","validateFields","res","exp","resetFields","useMouse","TextAnimation","cut_script","setIsTyping","flag","setFlag","useWindupString","pace","onFinished","skip","handleEnter","TextBlock","cut_name","isTyping","TextBlockChoice","choices","choice","script","DislikePopup","trigger","setTrigger","setTitle","Description","MapToLeft","getElementsByClassName","getComputedStyle","getPropertyValue","new_position","parseInt","MapToRight","HistoryMapPopup","userhistory","GoScene","setGoScene","DelayHandler","setDelayHandler","SceneInfo","setSceneInfo","delay","scene","cutList","lastcut","sceneindex","GetSceneInfo","HistoryMap_scenes","onMouseEnter","onMouseLeave","sceneIndex","close","i","click","GoToScene","LOADING_TYPE","LoadingPage","gameplay","animation","loadEmptyNum","sceneTmp","navbarControl","navbarOn","getBrowserFullscreenElementProp","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","Error","sceneMap","link","pivot","position","drag","TreeMapPopup","Position","setPosition","mouseDown","e","pageX","pageY","mouseUp","mouseMove","callBack","hasBeenCalled","setHasBeenCalled","useConstructor","container","depth","cnt_limit","cnt","TreeMap_nodes","nodeWidth","Math","pow","SceneDepth","bgm_audio","Audio","volume","sound_audio","ProductScreen","isFullscreen","setIsFullscreen","errorMessage","userHistory","innerWidth","windowWidth","setwindowWidth","innerHeight","windowHeight","setwindowHeight","setI","Scene","setScene","Dislike","setDislike","History","setHistory","HistoryMap","setHistoryMap","TreeMap","setTreeMap","maximizableElement","elRef","React","useLayoutEffect","onfullscreenchange","requestFullscreen","useFullscreenStatus","handleChoice","newNextList","nextList","newScene","setVolume","muted","setMuted","tempVolume","volumeControl","isFirstCut","setIsFirstCut","playMusic","music","pause","play","room","sceneIdList","inner","newScreenSize","minHeight","minSize","max","step","exitFullscreen","icon","faCompress","faExpand","BackgroundImg","imgUrl","setBackgroundImg","BackgroundSideBar","setMakeModalState","renderBackground","selectCharacter","CharacterImg","image_array","CharacterSideBar","setCharacterList","setName","renderCharacter","BgmFile","setBgmFile","BgmSideBar","renderBgm","SoundFile","setSoundFile","SoundSideBar","renderSound","SceneMakeModalTab","setTag","tag","MyDropzone","accept","FileAddOutlined","CharacterTab","blobGame","setBlobGame","charPageNum","setCharFileQueue","setCharBlobList","characterCards","setCharacterCards","isUpdate","setIsUpdate","indexNum","onNameChange","num","onDescriptionChange","curURL","URL","createObjectURL","oldArray","Number","array","cards","path","LeftCircleTwoTone","twoToneColor","RightCircleTwoTone","BackgroundTab","setFileQueue","setTypeQueue","setBackBlobList","backBlobList","backgroundCards","setBackgroundCards","blobCards","setBlobCards","element","BgmTab","setBgmBlobList","bgmBlobList","setBgmBlobNames","bgmBlobNames","bgmCards","setBgmCards","SoundTab","setSoundBlobList","soundBlobList","setSoundBlobNames","soundBlobNames","soundCards","setSoundCards","SceneMakeModal","setReload","setGame","fileQueue","typeQueue","charFileQueue","charBlobList","_","cloneDeep","revokeBlobList","forEach","revokeObjectURL","uploadFlag","uploadCharFiles","j","fileNum","from","uploadCharDB","DBForm","reload","uploadFiles","uploadDB","originalname","UploadModal","setUploadModalState","onSubmit_saveScene","blobURL","setBlobURL","thumbFile","setThumbFile","upload","uploadThumb","uploadGame","_eventHandlers","addEvent","handler","capture","removeAllEvents","handlers","eventHandlers","memo","GameCharacterList","element_X","CharacterList","element_Y","clicked","moving","setMoving","sizing","setSizing","imgWidth","setImgWidth","background_element","page","background_width","offsetWidth","background_height","offsetHeight","prev_posX","prev_posY","next_posX","next_posY","image_width","prev_size","next_size","stopPropagation","onMouseUp","onMouseDown","slice","onMouseOver","onMouseOut","onRemove_character","CharacterInfoDisplay","CharacterListImages","onClick_selectCharacter","characterDetailImages","url","CharacterSchema","reverse","info","onClick_putCharacter","CharacterModal","currentCharacter","isAdded","setIsAdded","characterSelected","SceneBox","CutList","CutNumber","displayCut","setCutNumber","Hover","setHover","EmptyCutList","saveCut","onClick_GotoCut","display_SceneBox","Cut","display_EmptyBox","EmptyCut","checkedChildren","unCheckedChildren","SceneMakePage","back","setNewScreenSize","makeModalState","uploadModalState","SidBar_script","setSidBar_script","Script","setScript","Name","isFirstScene","setIsFirstScene","setCutList","setEmptyCutList","tmpFirstCut","lastCut","characterSidebarElement","backgroundSidebarElement","bgmSidebarElement","soundSidebarElement","makeVisible","makeInvisible","onSubmit_nextCut","warning","oldNumber","isTmp","submitCut","submitCutList","confirm","loading","msg","sideBar","setSideBar","paused","PlayCircleOutlined","PauseCircleOutlined","StopOutlined","Boolean","Menu","SubMenu","ItemGroup","mode","status","NavBar","controlpage","zIndex","opacity","placement","closable","onClose","Footer","require","io","transports","onpopstate","App","fallback","exact","component","Auth","LoginPage","Valid","GamePlayPage","hostname","initialState","movingTarget","rootReducer","combineReducers","action","register","loginSucces","characterDisplayed","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e118b20.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n\nexport const LOAD_EMPTY_NUM = 'load_empty_num';\nexport const SAVE_PREV_SCENE = 'SAVE_PREV_SCENE';\n\nexport const LOADINGPAGE_GAMEPLAY = \"gameLoading_gamePlay\"\nexport const PAUSE_GAMEPLAY = \"pause_gamePlay\"\n\nexport const NAVBAR_CONTROL = \"navbar_control\";\n\nexport const SELECT_CHARACTER = \"select_character\";\nexport const DETACH_CHARACTER = \"detach_character\";\n\nexport const SELECT_MOVINGTARGET = \"select_movingtarget\";\nexport const DETACH_MOVINGTARGET = \"detach_movingtarget\"; \nexport const SELECT_DISPLAYED = \"select_displayed\";\n","import { localhost } from \"./dev\";\n\n\n//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n// ip address ( please be careful... )\nexport const LOCAL_HOST = \"15.164.48.192\";\n\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.replace('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.replace('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { useLocation } from 'react-router';\n\nexport default function (SpecificComponent, adminRoute = null) {\n    function Validate(props) {\n        const location = useLocation();\n        useEffect(() => {\n            if (location.state === undefined) {\n                props.history.replace('/');\n            }\n        }, [])\n        if(location.state) {\n            return (\n                <SpecificComponent {...props}/>\n            )\n        }\n        else {\n            return <div>잘못된 접근입니다ㅋㅋ</div>\n        }\n    }\n    return Validate\n}\n\n\n","import React from \"react\";\n\nconst svg = {\n  arrow_1:\n    \"M-1.73589e-06 5.2875L16.6883 22.5L-2.31124e-07 39.7125L5.13765 45L27 22.5L5.13765 -2.24574e-07L-1.73589e-06 5.2875Z\",\n};\n\nexport function SVG(props) {\n  const { src, color, width, height } = props;\n  return (\n    <svg\n      width={width ? width : \"auto\"}\n      height={height ? height : \"auto\"}\n      viewBox=\"0 0 27 45\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d={svg[src]} fill={color} />\n    </svg>\n  );\n}\n\nexport function BAR(props) {\n  return (\n    <svg\n      width=\"15\"\n      height=\"3\"\n      viewBox=\"0 0 15 3\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <rect width=\"15\" height=\"3\" fill=\"white\" />\n    </svg>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { message } from \"antd\";\nimport Axios from \"axios\";\nimport { LOCAL_HOST } from \"../../Config\";\nimport \"./LandingPage.css\";\nimport { SVG, BAR } from \"../../svg/icon\";\n\nconst ListContainer = {\n  recent_games: {\n    id: \"recent_gameList\",\n    pos: 0,\n    limit: 3,\n  },\n  popular_games: {\n    id: \"popular_gameList\",\n    pos: 0,\n    limit: 2,\n  },\n};\n\nfunction ContainerToRight(target) {\n  if (target.pos < target.limit - 1) {\n    console.log(target.pos);\n\n    var bar = document.getElementById(\n      target.id.split(\"_\")[0] + \"_bar\" + String(target.pos)\n    );\n    bar.style.filter = \"brightness(50%)\";\n\n    target.pos += 1;\n    //* container\n    var container = document.getElementById(target.id);\n    container.style.transform = `translate(${-1267 * target.pos}px, 0px)`;\n    // container.style.left = -1267 * target.pos + \"px\";\n    //* bar\n    bar = document.getElementById(\n      target.id.split(\"_\")[0] + \"_bar\" + String(target.pos)\n    );\n    bar.style.filter = \"brightness(100%)\";\n    //* arrow\n    if (target.pos == target.limit - 1) {\n      var arrow = document.getElementById(\n        target.id.split(\"_\")[0] + \"_right_arrow\"\n      );\n      arrow.style.display = \"none\";\n    }\n    arrow = document.getElementById(target.id.split(\"_\")[0] + \"_left_arrow\");\n    arrow.style.display = \"\";\n  }\n}\n\nfunction ContainerToLeft(target) {\n  if (target.pos > 0) {\n    // console.log(target.pos);\n    var bar = document.getElementById(\n      target.id.split(\"_\")[0] + \"_bar\" + String(target.pos)\n    );\n    bar.style.filter = \"brightness(50%)\";\n\n    target.pos -= 1;\n    //* container\n    var container = document.getElementById(target.id);\n    container.style.transform = `translate(${-1267 * target.pos}px, 0px)`;\n\n    // container.style.left = -1267 * target.pos + \"px\";\n    //* bar\n    bar = document.getElementById(\n      target.id.split(\"_\")[0] + \"_bar\" + String(target.pos)\n    );\n    bar.style.filter = \"brightness(100%)\";\n    //* arrow\n    if (target.pos == 0) {\n      var arrow = document.getElementById(\n        target.id.split(\"_\")[0] + \"_left_arrow\"\n      );\n      arrow.style.display = \"none\";\n    }\n    arrow = document.getElementById(target.id.split(\"_\")[0] + \"_right_arrow\");\n    arrow.style.display = \"\";\n  }\n}\n\nfunction LandingPage(props) {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\"/api/game/getgames\").then((response) => {\n      if (response.data.success) {\n        setGames(response.data.games);\n      } else {\n        alert(\"game load에 실패했습니다.\");\n      }\n    });\n  }, []);\n\n  const uploadGameFrame = async () => {\n\n    // tmp scene create\n    const gameResponse = await Axios.get(\"/api/game/uploadgameframe\");\n  \n    if (!gameResponse.data.success) {\n      alert(\"game Frame제작 실패\");\n      return;\n    }\n  \n    const firstScene = {\n      gameId: gameResponse.data.game._id,\n      prevSceneId: null,\n      sceneDepth: 0,\n      isFirst: 1,\n      title: \"\",\n    };\n  \n    const sceneResponse = await Axios.post(\"/api/scene/create\", firstScene);\n    if (!sceneResponse.data.success) {\n      alert(\"scene Frame제작 실패\");\n      return;\n    }\n  \n    message.success(\n      \"첫 Scene을 생성해주세요. 오른쪽의 버튼을 활용해 이미지들을 추가할 수 있습니다.\"\n    );\n\n    // console.log(props)\n    setTimeout(() => {\n      props.history.replace({\n        pathname: `/scene/make`,\n        state: {\n          gameId: gameResponse.data.game._id,\n          sceneId: sceneResponse.data.sceneId,\n        },\n      });\n    }, 1000);\n  };\n\n\n  // console.log(games);\n  let game_length = 0;\n\n  const gameList = games.map((game, index) => {\n    if (game.title) {\n      // console.log(game.title);\n      game_length += 1;\n      return (\n        <div key={index} className=\"gamelist-game\">\n          <a href={`/game/${game._id}`}>\n            <img\n              className=\"game-image\"\n              src={game.thumbnail}\n              alt={game.title}\n            />\n            <div className=\"game-title\">{game.title}</div>\n          </a>\n          <div className=\"game-category\">{game.category}</div>\n        </div>\n      );\n    }\n    return null;\n  });\n\n  return (\n    <div className=\"mainPage_container\">\n      <div className=\"box-container\">\n        <button className=\"button-newgame\" onClick={uploadGameFrame}>\n          NEW 게임 만들기\n        </button>\n      </div>\n      <div className=\"box-container game-box\">\n        <div className=\"box-title\">최근 플레이한 게임</div>\n        <div className=\"box-positionBar\">\n          <div id=\"recent_bar2\" className=\"bar\">\n            <BAR />\n          </div>\n          <div id=\"recent_bar1\" className=\"bar\">\n            <BAR />\n          </div>\n          <div\n            id=\"recent_bar0\"\n            className=\"bar\"\n            style={{ filter: \"brightness(100%)\" }}\n          >\n            <BAR />\n          </div>\n        </div>\n        <div className=\"box-gameList\">\n          <div\n            id=\"recent_gameList\"\n            className=\"gamelist-container\"\n            style={{ width: game_length * 335 + \"px\" }}\n          >\n            {gameList}\n          </div>\n          <div\n            id=\"recent_left_arrow\"\n            className=\"gamelist-left-arrow\"\n            style={{ display: \"none\" }}\n            onClick={() => {\n              ContainerToLeft(ListContainer.recent_games);\n            }}\n          >\n            <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\n          </div>\n          <div\n            id=\"recent_right_arrow\"\n            className=\"gamelist-right-arrow\"\n            onClick={() => {\n              ContainerToRight(ListContainer.recent_games);\n            }}\n          >\n            <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"box-container game-box\">\n        <div className=\"box-title\">인기 게임</div>\n        <div className=\"box-positionBar\">\n          <div id=\"popular_bar1\" className=\"bar\">\n            <BAR />\n          </div>\n          <div\n            id=\"popular_bar0\"\n            className=\"bar\"\n            style={{ filter: \"brightness(100%)\" }}\n          >\n            <BAR />\n          </div>\n        </div>\n        <div className=\"box-gameList\">\n          <div\n            id=\"popular_gameList\"\n            className=\"gamelist-container\"\n            style={{ width: game_length * 335 + \"px\" }}\n          >\n            {gameList}\n          </div>\n          <div\n            id=\"popular_left_arrow\"\n            className=\"gamelist-left-arrow\"\n            style={{ display: \"none\" }}\n            onClick={() => {\n              ContainerToLeft(ListContainer.popular_games);\n            }}\n          >\n            <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\n          </div>\n          <div\n            id=\"popular_right_arrow\"\n            className=\"gamelist-right-arrow\"\n            onClick={() => {\n              ContainerToRight(ListContainer.popular_games);\n            }}\n          >\n            <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import { useEffect, useRef } from \"react\";\n\nfunction useKey(key, cb) {\n    const callbackRef = useRef(cb);\n\n    useEffect(() => {\n        callbackRef.current = cb;\n    });\n\n    useEffect(() => {\n        function handle(event) {\n            if (event.code === key && !event.shiftKey) {\n                callbackRef.current(event);\n            }\n        }\n        document.addEventListener(\"keypress\", handle);\n        return () => document.removeEventListener(\"keypress\", handle);\n    }, [key]);\n}\n\nexport default useKey;","import { message } from 'antd';\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './SingleComment.css';\n\n//Todo : 삭제(자식이 있다면 모두 지우자 deleteMany())\n//Todo : 깊이 2개까지만 하자. \n//Todo : 아이콘 글자크기 차별화시키자 자식&부모에서\n//Todo : 댓글이 밀린다,,,!\n\nfunction SingleComment({gameId, comment, updateToggle_comment}) {\n  const user = useSelector((state) => state.user);\n  const isAuth = useSelector((state) => {\n    if (state.user.userData){\n      return state.user.userData.isAuth;\n    } else {\n      return null;\n    }\n  });\n  const user_id = useSelector((state) => {\n    if (state.user.userData){\n      return state.user.userData._id;\n    } else {\n      return null;\n    }\n  });\n\n  const reference = useRef();\n\n  const [update, setUpdate] = useState(true);\n  const [commentContent, setCommentContent] = useState(\"\");\n  const [Replys, setReplys] = useState([]);\n  const [writeReply, setWriteReply] = useState(false);\n\n  const updateToggle = () => {\n    setUpdate((state) => !state);\n  }\n\n  const variable = {\n    gameId: gameId,\n    responseTo: comment._id.toString()\n  }\n\n  useEffect(() => {\n    axios.post('/api/comment/getReply', variable).then(response => {\n      if (response.data.success) {\n        setReplys(response.data.result);\n      } else {\n        message.error('대댓글을 불러오는데 실패했습니다.')\n      }\n    })\n  }, [update])\n\n  const onClick_writeReply = () => {\n    setWriteReply((state) => !state);\n  }\n\n  const onClick_displayReply = () => {\n    if (reference.current.style.display === 'block') {\n      reference.current.style.display = 'none'\n    } else {\n      reference.current.style.display = 'block'\n    }\n  }\n  \n  const onChange_comment = (event) => {\n    setCommentContent(event.currentTarget.value);\n  }\n\n  const onSubmit_response = (event) => {\n    event.preventDefault();\n    if(commentContent === \"\"){\n      return;\n    }\n    const variables = {\n      content: commentContent,\n      writer: user.userData._id,\n      gameId: gameId,\n      responseTo: comment._id.toString()\n    };\n\n    axios.post('/api/comment/saveComment', variables).then(response => {\n      if(response.data.success) {\n        message.success('댓글 감사합니다!');\n        updateToggle();\n        setCommentContent(\"\");\n        if (reference.current.style.display !== 'block') {\n          reference.current.style.display = 'block'\n        } \n      } else {\n        message.error('댓글 저장에 실패했습니다.');\n      }\n    })\n  }\n\n  const onClick_removeComment = () => {\n    axios.post('/api/comment/removeComment', {commentId: comment._id}).then(response => {\n      if(response.data.success) {\n        message.success('댓글이 삭제되었습니다.');\n        updateToggle_comment();\n      } else {\n        message.error('댓글 삭제에 실패했습니다.');\n      }\n    })\n  }\n\n  const mapReply = Replys.map((reply, index) => {\n    return (\n      <div key={index} style={{marginLeft:'10px'}}>\n        {reply &&\n          <SingleComment \n            updateToggle_comment={updateToggle}\n            gameId={gameId} \n            comment={reply}/>\n        }\n      </div>\n    )\n  })\n\n  return (\n    <div className=\"container_box\">\n      <div className=\"comment_container\">\n        <img src={comment.writer.image} alt=\"img\" className=\"img\"/>\n        <div className=\"comment_contents\">\n          <div className=\"nickname\">{comment.writer.nickname}</div>\n          <div className=\"content\">{comment.content}</div>\n          <div className=\"comment_info\">\n            <div className=\"comment_like\">좋아요 : 0 {}</div>\n            <div className=\"comment_dislike\">싫어요 : 0 {}</div>\n            { Replys.length ? \n            <div onClick={onClick_displayReply} className=\"comment_displayReplyToggle\">댓글 {Replys.length}개 보기</div>\n            :\n            <div></div>\n            }\n            <div onClick={onClick_writeReply} className=\"comment_writeReplyToggle\">댓글 작성</div>\n            { comment.writer._id === user_id&&\n            <div onClick={onClick_removeComment} className=\"comment_delete\">댓글 삭제</div>\n            }\n          </div>\n          {(isAuth & writeReply) ?\n          <form className=\"form\">\n            <textarea\n              className=\"textarea\"\n              onChange={onChange_comment}\n              value={commentContent}\n              placeholder=\"코멘트를 작성해 주세요.\"\n              />\n            <button className=\"btn\" onClick={onSubmit_response}>댓글 작성</button>\n          </form> \n          :\n          <div></div>\n          }\n        </div>\n      </div>\n      <div ref={reference} className=\"reply_container\">\n        {mapReply}\n      </div>\n    </div>\n  )\n}\n\nexport default SingleComment\n","import { message } from 'antd';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from \"react-redux\";\nimport useKey from '../../functions/useKey';\nimport './Comment.css';\nimport SingleComment from './SingleComment';\n\nfunction Comment({gameId}) {\n  const user = useSelector((state) => state.user);\n  const isAuth = useSelector((state) => {\n    if (state.user.userData){\n      return state.user.userData.isAuth;\n    } else {\n      return null;\n    }\n  });\n  \n  const [update, setUpdate] = useState(true);\n  const [commentContent, setCommentContent] = useState(\"\");\n  const [comments, setComments] = useState([]);\n \n  const updateToggle = () => {\n    setUpdate((state) => !state);\n  }\n\n  useEffect(() => {\n    axios.post('/api/comment/getComment', {gameId: gameId}).then(response => {\n      if (response.data.success) {\n        setComments(response.data.result);\n      } else {\n        message.error('댓글을 불러오는데 실패했습니다.')\n      }\n    })\n  }, [update])\n\n  const onChange_comment = (event) => {\n    setCommentContent(event.currentTarget.value);\n  }\n\n  const onSubmit_comment = (event) => {\n    event.preventDefault();\n    if(commentContent === \"\"){\n      return;\n    }\n\n    const variables = {\n      content: commentContent,\n      writer: user.userData._id,\n      gameId: gameId,\n      responseTo : \"\"\n    };\n\n    axios.post('/api/comment/saveComment', variables).then(response => {\n      if(response.data.success) {\n        message.success('댓글 감사합니다!');\n        updateToggle();\n        setCommentContent(\"\");\n      } else {\n        message.error('댓글 저장에 실패했습니다.');\n      }\n    })\n  }\n\n  const handleEnter = (event) => {\n    onSubmit_comment(event);\n  }\n\n  // useKey('Enter',(event => handleEnter(event))); //Todo 문제가 많음 엔터칠때 대댓글 엔터도 같이 쳐진다,,,\n\n  const mapComment = comments.map((comment, index) => {\n    return (\n      <div key={index}>\n        {comment &&\n          <SingleComment \n            updateToggle_comment={updateToggle}\n            gameId={gameId} \n            comment={comment}/>\n        }\n      </div>\n    )\n  })\n\n  return (\n    <div className=\"container\">\n      <br />\n      {isAuth &&\n      <form className=\"form\">\n        <textarea\n          className=\"textarea\"\n          onChange={onChange_comment}\n          value={commentContent}\n          placeholder=\"코멘트를 작성해 주세요.\"\n        />\n        <button className=\"btn\" onClick={onSubmit_comment}>댓글 작성</button>\n      </form>\n      }\n      <br />\n      <div>댓글 {comments.length}개</div>\n      <hr/>\n      {mapComment}\n      <br />\n\n    </div>\n  )\n}\n\nexport default Comment\n","import { message } from \"antd\";\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./GameDetailPage.css\";\nimport { LOCAL_HOST } from \"../../Config\"\nimport Comment from '../Comment/Comment';\nimport { socket } from \"../../App\";\n\nfunction GameDetailPage(props) {\n    const gameId = props.match.params.gameId;\n    const variable = { gameId: gameId };\n\n    const [gameDetail, setGameDetail] = useState([]);\n    const [sceneId, setSceneId] = useState([]);\n    const [isMaking, setIsMaking] = useState(false);\n\n    useEffect(() => {\n        Axios.post(\"/api/game/getgamedetail\", variable).then((response) => {\n            if (response.data.success) {\n                setGameDetail(response.data.gameDetail);\n            } else {\n                message.error(\"게임 정보를 로딩하는데 실패했습니다.\");\n                //Todo : 게임 정보를 로딩하는데 실패했습니다 메세지 변경하기(자세히)\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        Axios.get(`/api/game/gamestart/${gameId}`).then((response) => {\n            if (response.data.success) {\n                setSceneId(response.data.sceneId);\n                setIsMaking(response.data.isMaking);\n            } else {\n                message.error(\"로그인 해주세요.\");\n            }\n        });\n    }, []);\n\n    return (\n        <div className=\"detailPage__container\">\n\n            {/* 이미지 불러오는게 늦음 디버깅 필요 */}\n            {gameDetail.thumbnail &&\n                <img\n                    style={{ width: \"30%\", height: \"30%\" }}\n                    src={gameDetail.thumbnail}\n                    alt=\"thumbnail\"\n                />}\n            <div>제목: {gameDetail.title}</div>\n            <div>카테고리 : {gameDetail.category}</div>\n            <div>크리에이터: {gameDetail.creator}</div>\n            <div>{gameDetail.description}</div>\n            <br />\n\n            {/* 게임 시작하기 or 이어 만들기 */}\n            <Link\n                style={{ color: \"#f05454\" }}\n                to={\n                    {\n                        pathname: isMaking ? `/scene/make` : `/gameplay`,\n                        state: {\n                            gameId: gameId,\n                            sceneId: sceneId\n                        },\n                    }\n                }>\n                게임 시작하기\n            </Link>\n            <Comment gameId={gameId} />\n        </div>\n    );\n}\n\nexport default GameDetailPage;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Card, Icon, Avatar, Col, Typography } from \"antd\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\nimport GameDetailPage from \"../GameDetailPage/GameDetailPage\";\n\nimport { socket } from \"../../App\"\n\nconst { Title } = Typography;\nconst { Meta } = Card;\n\nfunction LandingPage() {\n    const [messageCount, setMessageCount] = useState(0);\n    const [theme, setTheme] = useState('dark');\n    const [inRoom, setInRoom] = useState(false);\n\n    useEffect(() => {\n\n        if (inRoom) {\n            // console.log('joining room');\n            socket.emit('room', { room: 'test-room' });\n        }\n\n        return () => {\n            if (inRoom) {\n                // console.log('leaving room');\n                socket.emit('leave room', {\n                    room: 'test-room'\n                })\n            }\n        }\n    });\n\n    useEffect(() => {\n    socket.off(\"receive message\");\n    socket.on('receive message', payload => {\n            setMessageCount(messageCount + 1);\n            document.title = `${messageCount} new messages have been emitted`;\n        });\n    }, []); //only re-run the effect if new message comes in\n\n    const handleSetTheme = () => {\n        let newTheme;\n        (theme === 'light')\n            ? newTheme = 'dark'\n            : newTheme = 'light';\n        // console.log('new theme: ' + newTheme);\n        setTheme(newTheme);\n    }\n\n    const handleInRoom = () => {\n        inRoom\n            ? setInRoom(false)\n            : setInRoom(true);\n    }\n\n    const handleNewMessage = () => {\n        // console.log('emitting new message');\n        socket.emit('new message', {\n            room: 'test-room'\n        });\n        setMessageCount(messageCount + 1);\n    }\n\n\n    return (\n        <div className={`App Theme-${theme}`}>\n            <header className=\"App-header\">\n\n                <h1>\n                    {inRoom && `You Have Entered The Room`}\n                    {!inRoom && `Outside Room`}\n                </h1>\n\n                <p>{messageCount} messages have been emitted</p>\n\n                {inRoom &&\n                    <button onClick={() => handleNewMessage()}>\n                        Emit new message\n            </button>\n                }\n\n                <button onClick={() => handleSetTheme()}>\n                    Toggle Theme\n            </button>\n\n                <button onClick={() => handleInRoom()}>\n                    {inRoom && `Leave Room`}\n                    {!inRoom && `Enter Room`}\n                </button>\n\n            </header>\n        </div>\n    );\n}\n\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.replace(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        nickname: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        nickname: Yup.string()\n          .required('Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            nickname: values.nickname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"nickname\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.nickname}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.nickname && touched.nickname ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.nickname && touched.nickname && (\n                  <div className=\"input-feedback\">{errors.nickname}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport './Profile.css';\n\n\nfunction Profile() {\n  const userData = useSelector((state) => state.user.userData);\n  if (userData) {\n\n    const list = (userData) => {\n      const makingGameList = userData.makingGameList;\n      return makingGameList.map((game, index) => {\n        return (\n          <>\n            <div>\n              {game.gameId}\n            </div>\n            <Link to={\n              {\n                pathname: `/scene/make}`,\n                state: {\n                  gameId: game.gameId,\n                  sceneId: game.sceneId\n                }\n              }\n            } key = {index}>\n              게임 만들러가기..\n            </Link>\n          </>\n        )\n      })\n    }\n    return (\n      <div>\n        <img src={userData.image} alt=\"\" />\n        <div>{userData.email}</div>\n        <div>{userData.nickname}</div>\n        {list(userData)}\n        {/* <div>{userData.makingGameList[0]}</div> */}\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        loading...\n      </div>\n    )\n  }\n}\n\nexport default Profile\n","import React, { useState } from \"react\";\nimport { Typography, Button, Form, message, Input, Icon } from \"antd\";\nimport Dropzone from \"react-dropzone\";\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport \"./GameUploadPage.css\";\nimport {LOCAL_HOST} from\"../../Config\"\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nconst PrivateOptions = [\n    { value: 0, label: \"Private\" },\n    { value: 1, label: \"Public\" },\n];\n\nconst CategoryOptions = [\n    { value: 0, label: \"살아남기\" },\n    { value: 1, label: \"로맨스\" },\n    { value: 2, label: \"스토리\" },\n    { value: 3, label: \"추리\" },\n    { value: 4, label: \"병맛\" },\n];\n\nconst RatioOptions = [\n    { value: `${9/16}`, label: \"16:9\"}, \n    { value: `${16/9}`, label: \"9:16(스마트폰)\"}, \n]\n\nfunction GameUploadPage(props) {\n    const user = useSelector((state) => state.user);\n    const [GameTitle, setGameTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [isPrivate, setIsPrivate] = useState(0);\n    const [category, setCategory] = useState(\"살아남기\");\n    const [ratio, setRatio] = useState(true);\n\n    const [filePath, setFilePath] = useState(\"\");\n    // const [duration, setDuration] = useState(\"\")\n    // const [thumbnailPath, setThumbnailPath] = useState(\"\")\n\n    const onTitleChange = (event) => {\n        setGameTitle(event.currentTarget.value);\n    };\n\n    const onDescriptionChange = (event) => {\n        setDescription(event.currentTarget.value);\n    };\n\n    const onPrivateChange = (event) => {\n        setIsPrivate(event.currentTarget.value);\n    };\n\n    const onCartegoryChange = (event) => {\n        let cat_idx = event.currentTarget.value;\n        setCategory(event.currentTarget[cat_idx].text);\n    };\n\n    const onRatioChange = (event) => {\n        setRatio(state => !state);\n    }\n\n    const onDrop = (files) => {\n        if (!files[0]) {\n            alert(\"손상된 파일입니다.\");\n            return;\n        }\n\n        let formData = new FormData();\n        const config = {\n            header: { \"content-type\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\n        };\n        formData.append(\"file\", files[0]);\n\n        Axios.post(\"/api/game/uploadfiles\", formData, config).then(\n            (response) => {\n                if (response.data.success) {\n                    setFilePath(response.data.location);\n                } else {\n                    alert(\"업로드 실패\");\n                }\n            }\n        );\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        if (GameTitle === \"\" || description === \"\" || filePath === \"\") {\n            alert(\"모든 정보를 입력해주세요.\");\n            return;\n        }\n\n        let floatRatio;\n        if (ratio) {\n            floatRatio = 9/16;\n        } else {\n            floatRatio = 16/9;\n        }\n        const game_variables = {\n            creator: user.userData._id,\n            title: GameTitle,\n            description: description,\n            thumbnail: filePath,\n            privacy: isPrivate,\n            category: category,\n            ratio: floatRatio,\n            writer: [user.userData._id],\n            character: [],\n            background: [],\n            bgm: [],\n            sound: [],\n        };\n        \n        Axios.post(\"/api/game/uploadgame\", game_variables).then((response) => {\n            if (response.data.success) {\n                message.success(\n                    \"첫 Scene을 생성해주세요. 오른쪽의 +버튼을 활용해 이미지들을 추가할 수 있습니다.\"\n                );\n                setTimeout(() => {\n                    props.history.replace(\n                        `/game/upload/${response.data.game._id}`\n                    );\n                }, 1000);\n            } else {\n                alert(\"game제작 실패\");\n            }\n        });\n    };\n\n    return (\n        <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\n            <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\n                <Title level={2}>Upload Game</Title>\n            </div>\n            <Form onSubmit={onSubmit}>\n                <div\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                >\n                    {/* drop zone */}\n                    <Dropzone\n                        onDrop={onDrop}\n                        multiple={false}\n                        maxSize={1000000000}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div\n                                style={{\n                                    width: \"300px\",\n                                    height: \"240px\",\n                                    border: \"1px solid lightgray\",\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"center\",\n                                }}\n                                {...getRootProps()}\n                            >\n                                <input {...getInputProps()} />\n                                <Icon\n                                    type=\"plus\"\n                                    style={{ fontSize: \"3rem\" }}\n                                />\n                            </div>\n                        )}\n                    </Dropzone>\n                    {/* thunb nail */}\n                    {filePath && (\n                        <div>\n                            <img\n                                className=\"thumbnail__img\"\n                                src={filePath}\n                                alt=\"thumbnail\"\n                            />\n                        </div>\n                    )}\n                </div>\n                <br />\n                <br />\n                <label>Title</label>\n                <Input onChange={onTitleChange} value={GameTitle} />\n                <br />\n                <br />\n                <label>Description</label>\n                <TextArea onChange={onDescriptionChange} value={description} />\n                <br />\n                <br />\n                <select onChange={onPrivateChange}>\n                    {PrivateOptions.map((item, index) => (\n                        <option key={index} value={item.value}>\n                            {item.label}\n                        </option>\n                    ))}\n                </select>\n                <br />\n                <br />\n                <select onChange={onCartegoryChange}>\n                    {CategoryOptions.map((item, index) => (\n                        <option key={index} value={item.value}>\n                            {item.label}\n                        </option>\n                    ))}\n                </select>\n                <br />\n                <br />\n                <label><input type=\"radio\" name=\"ratio\" checked={ratio} onChange={onRatioChange}/>컴퓨터</label>\n                <br />\n                <label><input type=\"radio\" name=\"ratio\" checked={!ratio} onChange={onRatioChange}/>스마트폰</label>\n                    \n                {/* <select onChange={onRatioChange}>\n                    {RatioOptions.map((item, index) => (\n                        <option key={index} value={item.value}>\n                            {item.label}\n                        </option>\n                    ))}\n                </select> */}\n                <br />\n                <br />\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n                    Next Step\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default GameUploadPage;\n","import React, { useEffect, useState } from \"react\";\nimport { Col, Row, Typography, Button, Form, Icon, message } from \"antd\";\nimport Dropzone from \"react-dropzone\";\nimport Axios from \"axios\";\nimport \"./GameBuildUpPage\";\nimport { LOCAL_HOST } from \"../../Config\"\n\nconst { Title } = Typography;\n\nconst extension = {\n    image: [\".jpg\", \".png\", \".jpeg\", \".gif\"],\n    music: [\".mp3\", \".wav\", \".wmv\", \".wma\", \".flac\"],\n};\n\nfunction GameBuildUpPage(props) {\n    const [filePath, setFilePath] = useState(\"\");\n    const [fileState, setFileState] = useState(\"\");\n    const [cur_game, setGame] = useState([]);\n    const [characterCards, setCharacterCards] = useState([]);\n    const [backgroundCards, setBackgroundCards] = useState([]);\n    const [bgmCards, setBgmCards] = useState([]);\n    const [soundCards, setSoundCards] = useState([]);\n    const gameId = props.match.params.gameId;\n\n    const game_form = {\n        gameId: gameId,\n    };\n\n    useEffect(() => {\n        Axios.post(\"/api/game/getgamedetail\", game_form).then((response) => {\n            if (response.data.success) {\n                setGame(response.data.gameDetail);\n            } else {\n                message.error(\"game load에 실패했습니다.\");\n            }\n        });\n    }, [filePath]);\n\n    useEffect(() => {\n        //character\n        if (cur_game.character) {\n            const tempCharacterCards = cur_game.character.map((_, index) => {\n                return (\n                    <Col key={index} lg={6} md={8} xs={24}>\n                        <div style={{ position: \"relative\" }}>\n                            <img\n                                style={{ width: \"50px\", height: \"50px\" }}\n                                src={`${cur_game.character[index].image}`}\n                                alt=\"img not found\"\n                            />\n                        </div>\n                        <br />\n                    </Col>\n                );\n            });\n            setCharacterCards(tempCharacterCards);\n        }\n        //background\n        if (cur_game.background) {\n            const backgroundCards = cur_game.background.map((_, index) => {\n                return (\n                    <Col key={index} lg={6} md={8} xs={24}>\n                        <div style={{ position: \"relative\" }}>\n                            <img\n                                style={{ width: \"50px\", height: \"50px\" }}\n                                src={`${cur_game.background[index].image}`}\n                                alt=\"img not found\"\n                            />\n                        </div>\n                        <br />\n                    </Col>\n                );\n            });\n            setBackgroundCards(backgroundCards);\n        }\n        //bgm\n        if (cur_game.bgm) {\n            const bgmCards = cur_game.bgm.map((_, index) => {\n                return (\n                    <Col key={index} lg={6} md={8} xs={24}>\n                        <div style={{ position: \"relative\" }}>\n                            <img\n                                style={{ width: \"20px\", height: \"20px\" }}\n                                src={`https://neverending.s3.ap-northeast-2.amazonaws.com/original/music_icon.jpg`}\n                                alt=\"img not found\"\n                            />\n                            {cur_game.bgm[index].name}\n                        </div>\n                        <br />\n                    </Col>\n                );\n            });\n            setBgmCards(bgmCards);\n        }\n        //sound\n        if (cur_game.sound) {\n            const soundCards = cur_game.sound.map((_, index) => {\n                return (\n                    <Col key={index} lg={6} md={8} xs={24}>\n                        <div style={{ position: \"relative\" }}>\n                            <img\n                                style={{ width: \"20px\", height: \"20px\" }}\n                                src={`https://neverending.s3.ap-northeast-2.amazonaws.com/original/music_icon.jpg`}\n                                alt=\"img not found\"\n                            />\n                            {cur_game.sound[index].name}\n                        </div>\n                        <br />\n                    </Col>\n                );\n            });\n            setSoundCards(soundCards);\n        }\n    }, [cur_game]);\n\n    const onDrop = (files) => {\n        //check is_file ok\n        for (let i = 0; i < files.length; i++) {\n            if (!files[i]) {\n                message.error(\"10MB 이하의 파일을 업로드해주세요.\");\n                return;\n            }\n\n            let dotIdx = files[i].name.lastIndexOf(\".\");\n            if (dotIdx === -1) {\n                message.error(files[i].name + \"은 확장자가 없는 파일입니다.\");\n                return;\n            }\n\n            let cur_extension = files[i].name.substr(dotIdx, 10000);\n            if (\n                //image check\n                (fileState === 1 || fileState === 2) &&\n                extension.image.indexOf(cur_extension) == -1\n            ) {\n                message.error(\n                    files[i].name + \"은 지원하지 않는 이미지 확장자 파일입니다.\"\n                );\n                return;\n            }\n\n            if (\n                //sound check\n                (fileState === 3 || fileState === 4) &&\n                extension.music.indexOf(cur_extension) == -1\n            ) {\n                message.error(\n                    files[i].name + \"은 지원하지 않는 음원 확장자 파일입니다.\"\n                );\n                return;\n            }\n        }\n\n        for (let i = 0; i < files.length; i++) {\n            let formData = new FormData();\n            const config = {\n                header: { \"content-type\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\n            };\n            formData.append(\"file\", files[i]);\n            let file_name = files[i].name;\n            Axios.post(\"/api/game/uploadfile\", formData, config).then(\n                (response) => {\n                    if (response.data.success) {\n                        console.log(response.data)\n\n                        setFilePath(response.data.location);\n\n                        switch (fileState) {\n                            case 1:\n                                const characterForm = {\n                                    gameId: gameId,\n                                    character: {\n                                        name: file_name,\n                                        image: response.data.location,\n                                    },\n                                };\n                                Axios.post(\n                                    \"/api/game/putCharacterImg\",\n                                    characterForm\n                                ).then((response) => {\n                                    if (response.data.success) {\n                                        setFilePath(response.data.location);\n                                    } else {\n                                        message.error(\"캐릭터 업데이트 실패\");\n                                    }\n                                });\n                                return;\n                            case 2: //background\n                                const backgroundForm = {\n                                    gameId: gameId,\n                                    background: {\n                                        name: file_name,\n                                        image: response.data.location,\n                                    },\n                                };\n                                Axios.post(\n                                    \"/api/game/putBackgroundImg\",\n                                    backgroundForm\n                                ).then((response) => {\n                                    if (response.data.success) {\n                                        setFilePath(response.data.location);\n                                    } else {\n                                        message.error(\"배경 업데이트 실패\");\n                                    }\n                                });\n                                return;\n                            case 3:\n                                const bgmForm = {\n                                    gameId: gameId,\n                                    bgm: {\n                                        name: file_name,\n                                        music: response.data.location,\n                                    },\n                                };\n                                Axios.post(\"/api/game/putBgm\", bgmForm).then(\n                                    (response) => {\n                                        if (response.data.success) {\n                                            setFilePath(response.data.location);\n                                        } else {\n                                            message.error(\"배경음 업데이트 실패\");\n                                        }\n                                    }\n                                );\n                                return;\n\n                            case 4:\n                                const soundForm = {\n                                    gameId: gameId,\n                                    sound: {\n                                        name: file_name,\n                                        music: response.data.location,\n                                    },\n                                };\n                                Axios.post(\n                                    \"/api/game/putSound\",\n                                    soundForm\n                                ).then((response) => {\n                                    if (response.data.success) {\n                                        setFilePath(response.data.location);\n                                    } else {\n                                        message.error(\"효과음 업데이트 실패\");\n                                    }\n                                });\n                                return;\n                            default:\n                                message.error(\"정의되지 않은 업로드 버튼입니다.\");\n                                return;\n                        }\n                    } else {\n                        message.error(\"업로드 실패\");\n                    }\n                }\n            );\n        }\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        props.history.push(`/scene/make/`);\n    };\n\n    const onCharacter = () => {\n        setFileState(1);\n    };\n    const onBackground = () => {\n        setFileState(2);\n    };\n    const onBgm = () => {\n        setFileState(3);\n    };\n    const onSound = () => {\n        setFileState(4);\n    };\n\n    return (\n        <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\n            <div style={{ marginBottom: \"2rem\" }}>\n                <Title level={4}>게임에 필요한 캐릭터를 추가해주세요</Title>\n            </div>\n            <Form>\n                <div\n                    style={{ display: \"flex\", justifyContent: \"flex-start\" }}\n                    onClick={onCharacter}\n                >\n                    {/* Set click handler */}\n                    {/* <button onClick={onBackground}> </button> */}\n                    {/* drop zone */}\n                    <Dropzone\n                        onDrop={onDrop}\n                        multiple={true}\n                        maxSize={1000000000}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div\n                                style={{\n                                    width: \"100px\",\n                                    height: \"100px\",\n                                    border: \"1px solid lightgray\",\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"center\",\n                                }}\n                                {...getRootProps()}\n                            >\n                                <input {...getInputProps()} />\n                                <Icon\n                                    type=\"plus\"\n                                    style={{ fontSize: \"3rem\" }}\n                                />\n                            </div>\n                        )}\n                    </Dropzone>\n                    <Row>{characterCards}</Row>\n                </div>\n            </Form>\n\n            <div style={{ marginBottom: \"2rem\" }}>\n                <Title level={4}>게임에 필요한 배경을 추가해주세요</Title>\n            </div>\n            <Form>\n                <div\n                    // style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                    style={{ display: \"flex\", justifyContent: \"flex-start\" }}\n                    onClick={onBackground}\n                >\n                    {/* drop zone */}\n                    <Dropzone\n                        onDrop={onDrop}\n                        multiple={true}\n                        maxSize={1000000000}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div\n                                style={{\n                                    width: \"100px\",\n                                    height: \"100px\",\n                                    border: \"1px solid lightgray\",\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"center\",\n                                }}\n                                {...getRootProps()}\n                            >\n                                <input {...getInputProps()} />\n                                <Icon\n                                    type=\"plus\"\n                                    style={{ fontSize: \"3rem\" }}\n                                />\n                            </div>\n                        )}\n                    </Dropzone>\n                    <Row>{backgroundCards}</Row>\n                </div>\n            </Form>\n\n            <div style={{ marginBottom: \"2rem\" }}>\n                <Title level={4}>게임에 필요한 음악을 추가해주세요</Title>\n            </div>\n            <Form>\n                <div\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                    onClick={onBgm}\n                >\n                    {/* drop zone */}\n                    <Dropzone\n                        onDrop={onDrop}\n                        multiple={true}\n                        maxSize={1000000000}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div\n                                style={{\n                                    width: \"100px\",\n                                    height: \"100px\",\n                                    border: \"1px solid lightgray\",\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"center\",\n                                }}\n                                {...getRootProps()}\n                            >\n                                <input {...getInputProps()} />\n                                <Icon\n                                    type=\"plus\"\n                                    style={{ fontSize: \"3rem\" }}\n                                />\n                            </div>\n                        )}\n                    </Dropzone>\n                    <Row>{bgmCards}</Row>\n                </div>\n            </Form>\n\n            <div style={{ marginBottom: \"2rem\" }}>\n                <Title level={4}>게임에 필요한 효과음을 추가해주세요</Title>\n            </div>\n            <Form>\n                <div\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                    onClick={onSound}\n                >\n                    {/* drop zone */}\n                    <Dropzone\n                        onDrop={onDrop}\n                        multiple={true}\n                        maxSize={1000000000}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div\n                                style={{\n                                    width: \"100px\",\n                                    height: \"100px\",\n                                    border: \"1px solid lightgray\",\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"center\",\n                                }}\n                                {...getRootProps()}\n                            >\n                                <input {...getInputProps()} />\n                                <Icon\n                                    type=\"plus\"\n                                    style={{ fontSize: \"3rem\" }}\n                                />\n                            </div>\n                        )}\n                    </Dropzone>\n                    <Row>{soundCards}</Row>\n                </div>\n\n                <br />\n                <br />\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n                    Go to Last Step!!\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default GameBuildUpPage;\n","import \"./GameCharacterBlock.css\";\nimport React from \"react\";\nconst GameCharacterBlock = (props) => {\n  const { characterList } = props;\n  \n  const characterblocks = characterList.map((charSchema, index) => {\n    return (\n      <div key={index}>\n        <div \n          className=\"CharacterBlock\"\n          style={{ left: `${charSchema.posX}%`}}\n        >\n          <div \n            className=\"character__container\"\n            style={{height: `${charSchema.size}%`,\n                    top: `${charSchema.posY}%`}}\n          >\n              <img\n                className=\"characterImg\"\n                src={charSchema.image}\n                alt=\"img\"\n              />\n          </div>\n        </div>\n      </div>\n    )\n  });\n\n  return <div className=\"CharacterBlocks\" >{characterblocks}</div>;\n};\n\nexport default GameCharacterBlock;","import React from \"react\";\nimport { Modal, Form, Input } from \"antd\";\nimport useKey from \"../../functions/useKey\";\n\nconst ModalFormComponent = ({ visible, onCancel, onCreate, form, remainTime }) => {\n  const { getFieldDecorator } = form;\n\n  function handleEnter() {\n    onCreate();\n  }\n\n  useKey(\"Enter\", handleEnter);\n\n  if (visible) {\n    return (\n      <Modal\n        visible={true}\n        title={`선택지 내용을 입력하세요 (${remainTime})`}\n        okText=\"Submit\"\n        onCancel={onCancel}\n        onOk={onCreate}\n      >\n        <Form layout=\"vertical\">\n          <Form.Item label=\"Title\">\n            {getFieldDecorator(\"title\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input the title of collection!\",\n                },\n              ],\n            })(<Input ref={(input) => input && input.focus()} />)}\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  } else {\n    return \"\";\n  }\n};\n\nconst ModalForm = Form.create({ name: \"modal_form\" })(ModalFormComponent);\n\nexport default ModalForm;\n","import { LOADINGPAGE_GAMEPLAY, PAUSE_GAMEPLAY } from \"./types\";\n\nexport function gameLoadingPage(loadingType) {\n  return {\n    type: LOADINGPAGE_GAMEPLAY,\n    payload: loadingType,\n  };\n}\n\nexport function gamePause(isPause) {\n  return {\n    type: PAUSE_GAMEPLAY,\n    payload: isPause,\n  };\n}\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport { Button } from \"antd\";\nimport ModalForm from \"./InputModalForm\";\nimport { useHistory } from \"react-router\";\nimport { socket } from \"../../App\";\nimport axios from \"axios\";\nimport { gamePause } from \"../../../_actions/gamePlay_actions\";\nimport { SecurityScanTwoTone } from \"@ant-design/icons\";\n\nconst InputModal = ({ scene_id, scene_depth, game_id, scene_next_list }) => {\n  const dispatch = useDispatch()\n  let history = useHistory();\n  const user = useSelector((state) => state.user);\n  const emptyNum = useSelector((state) => state.sync.emptyNum);\n  const user_id = user.userData._id.toString();\n  const [visible, setVisible] = useState(false);\n  const [formRef, setFormRef] = useState(null);\n  const [remainTime, setRemainTime] = useState(0);\n  const [decreaseTimer, setDecreaseTimer] = useState(null);\n  const [validated, setValidated] = useState(1)\n\n  const tick = 30;\n\n\n  const handleCreate = () => {\n    formRef.validateFields(async (err, values) => {\n      clearTimeout(decreaseTimer);\n      console.log(\"deleted -- \", decreaseTimer)\n      if (err || !visible) {\n        return;\n      }\n\n      const data = {\n        gameId: game_id,\n        prevSceneId: scene_id,\n        isFirst: 0,\n        sceneDepth: scene_depth + 1,\n        title: values.title,\n      };\n      const res = await axios.post(\"/api/scene/create\", data);\n      //! socket 보내서 서버에서 scene Cache x exp 업데이트\n\n      socket.emit(\"created_choice\", { sceneId: scene_id, userId: user_id, exp: res.data.exp })\n      // tmp scene create\n\n      formRef.resetFields();\n      setVisible(false);\n\n      //! 껍데기 넣을 때, 서버에서 exp 같이 넣기 (별개로 or 같이 해도됨 시간 동기화가 되는 좋은 방법이 있다면)\n      history.replace({\n        pathname: `/scene/make`,\n        state: {\n          gameId: game_id,\n          sceneId: res.data.sceneId\n        }\n      });\n\n    });\n  };\n\n  const saveFormRef = useCallback((node) => {\n    if (node !== null) {\n      setFormRef(node);\n    }\n  }, []);\n  let decTimer;\n\n  const onClickHandler = () => {\n    dispatch(gamePause(true));\n    clearTimeout(decreaseTimer);\n    console.log(\"deleted -- \", decreaseTimer)\n    let tick = 30;\n    setRemainTime(tick);\n    decTimer = setInterval(() => {\n      console.log(\"timer is not deleted~~~~~~~~~~~\");\n      tick--;\n      if (tick === 0) {\n        console.log(\"tick이 0이라서 실행합니다.\")\n        clearInterval(decTimer);\n        cancelHandler();\n        return;\n      }\n      setRemainTime(tick);\n    }, 970);\n    console.log(\"made -- \", decTimer)\n    setDecreaseTimer(decTimer);\n\n    socket.emit(\"empty_num_decrease\", { scene_id, user_id });\n    setVisible(true);\n  }\n\n  const cancelHandler = () => {\n    socket.emit(\"empty_num_increase\", { scene_id, user_id });\n    clearTimeout(decreaseTimer);\n    console.log(\"deleted -- \", decreaseTimer)\n    setVisible(false);\n    dispatch(gamePause(false));\n  }\n\n  const createHandler = () => {\n    return handleCreate();\n  }\n\n  const [dino, setDino] = useState(0);\n\n  useEffect(() => {\n    socket.off(\"validated\");\n    socket.on(\"validated\", (data) => {\n      setValidated(validated * -1)\n    })\n\n    socket.off(\"decrease_failed\");\n    socket.on(\"decrease_failed\", () => {\n      setVisible(false);\n      setDino(0);\n      setDino(1);\n    })\n\n    socket.emit(\"validate_empty_num\", { scene_id })\n  }, [scene_id])\n\n  useEffect(() => {\n    if (dino) {\n      clearTimeout(decreaseTimer);\n      console.log(\"failed.. deleted -- \", decreaseTimer)\n      console.log(\"visible false\");\n    }\n  }, [dino]);\n\n  const [working, setWorking] = useState();\n  useEffect(() => {\n    // console.log(\"en\", emptyNum);\n    const nextListLen = Array.isArray(scene_next_list) ? scene_next_list.length : 0;\n    const workingCnt = nextListLen + emptyNum\n    // console.log(\"nextListLen : \", nextListLen, \"emptyNum : \", emptyNum)\n    if (workingCnt >= 0 && workingCnt <= 4) {\n      console.log(\"working Cnt : \", workingCnt)\n      setWorking([...Array(4 - workingCnt)].map((n, index) => {\n        return <div key={index}>작업중..<br /></div>\n      }))\n    }\n  }, [emptyNum, scene_next_list])\n\n\n  return (\n    <>\n      {\n        working\n      }\n      {\n        emptyNum > 0 &&\n        <>\n          <div\n            id=\"choice\"\n            onClick={onClickHandler}\n            style={{ color: \"red\" }}\n          >\n            선택의 길...\n            </div>\n        </>\n      }\n      <ModalForm\n        ref={saveFormRef}\n        visible={visible}\n        onCancel={cancelHandler}\n        onCreate={createHandler}\n        remainTime={remainTime}\n      />\n    </>\n  );\n};\n\nexport default InputModal;\n","import { useEffect, useRef } from \"react\";\n\nfunction useMouse(key, cb) {\n    const callbackRef = useRef(cb);\n\n    useEffect(() => {\n        callbackRef.current = cb;\n    });\n\n    useEffect(() => {\n        function handle(event) {\n            callbackRef.current(event);\n        }\n        document.addEventListener(key, handle);\n        return () => document.removeEventListener(key, handle);\n    }, []);\n}\nexport default useMouse;\n","import React, { useEffect, useState } from \"react\";\nimport useKey from \"../../functions/useKey\";\nimport { useWindupString } from \"windups\";\nimport useMouse from \"../../functions/useMouse\";\nimport { LOCAL_HOST } from \"../../Config\";\n\nfunction TextAnimation({ cut_script, setIsTyping }) {\n    const [flag, setFlag] = useState(false);\n    let i = 0;\n    const [text, { skip }] = useWindupString(\n        cut_script,\n        {\n            pace: () => 150,\n            onFinished: () => {\n                setFlag(true)\n            },\n            // onChar: () => {\n            //     if (!(cut_script[i] === ' ' || cut_script[i] === '.')) {\n            //         voice.load()\n            //         voice.play()\n            //     }\n            //     i++;\n            // }\n        }\n    );\n\n    useKey(\"Enter\", handleEnter);\n    useKey(\"Space\", handleEnter);\n    useMouse(\"mouseup\", handleEnter);\n    function handleEnter(event) {\n        skip()\n    }\n\n    useEffect(() => {\n        return () => {\n            setIsTyping(false)\n        }\n    }, [flag])\n\n    if (cut_script)\n        return <div>{text}</div>\n    else\n        return <div></div>\n}\n\n\nexport default TextAnimation;","import \"./TextBlock.css\";\nimport React, { useReducer } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { message } from \"antd\";\nimport InputModal from \"../Modal/InputModal\";\nimport TextAnimation from './TextAnimation'\n\n// 일단 4 나중에 어떻게 할지 다시 결정..\nconst CHOICE_NUM = 4;\n\nexport const TextBlock = (props) => {\n  const { cut_name, cut_script, setIsTyping, isTyping } = props;\n  return (\n    <div className=\"text_container\">\n      <div className=\"name_block\">{cut_name}</div>\n      <hr className=\"text_line\"></hr>\n      <br />\n      <div className=\"text_block\">\n        <div>\n          {\n            isTyping ? <TextAnimation\n              cut_script={cut_script}\n              setIsTyping={setIsTyping}\n            /> : cut_script\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// 선택지 display\nexport const TextBlockChoice = (props) => {\n\n  // 뭔가 한다..\n  \n  const {\n    game_id,\n    cut_name,\n    cut_script,\n    scene_next_list,\n    scene_id,\n    scene_depth,\n    setIsTyping,\n    isTyping,\n  } = props;\n  \n  const choices = scene_next_list.map((choice, index) => {\n    return (\n      <Link to={\n        {\n            pathname: `/gameplay`,\n            key:index,\n            state: {\n                gameId: game_id,\n                sceneId: choice.sceneId\n            }\n        }\n        } key={index}>\n        {choice.script} <br />\n    </Link>\n    );\n  });\n  return (\n    <div className=\"text_container\">\n      <div className=\"name_block\">{cut_name}</div>\n      <hr className=\"text_line\"></hr>\n      <div className=\"text_block\">\n        {\n          isTyping ? <TextAnimation\n            cut_script={cut_script}\n            setIsTyping={setIsTyping}\n          /> : cut_script\n        }\n        <br />\n        {/* 선택의 길이 등장할 수 있는 경우 */}\n        <div>{choices}</div>\n        <br />\n        {scene_next_list.length < CHOICE_NUM ? (\n          <div>\n            <InputModal\n              scene_id={scene_id}\n              scene_depth={scene_depth}\n              game_id={game_id}\n              scene_next_list={scene_next_list}\n            />\n          </div>\n        ) : (\n          <div></div>\n        )}\n        {/* 항상 */}\n      </div>\n    </div>\n  );\n};\n","import { message } from \"antd\";\nimport Axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Dislike.css\";\n\nfunction DislikePopup(props) {\n  const { gameId, sceneId, trigger, setTrigger } = props;\n\n  const user = useSelector((state) => state.user);\n\n  const [Title,setTitle] = useState(\"\");\n  const [Description,setDescription] = useState(\"\");\n\n  const onTitleChange = (event) => {\n    setTitle(event.currentTarget.value);\n  };\n\n  const onDescriptionChange = (event) => {\n    setDescription(event.currentTarget.value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const variable = {\n      title : Title,\n      description : Description,\n      user : user.userData._id,\n      sceneId : sceneId,\n      gameId : gameId,\n    }\n    Axios.post(\"/api/complaint/save\", variable).then((response) => {\n      if(!response.data.success) {\n        message.error(\"신고하는데 문제가 발생했습니다.\")\n      } else {\n        message.success(\"감사합니다. 신고가 접수되었습니다.\")\n        setTrigger(state => !state)\n      }\n    })\n  }\n\n  return trigger ? (\n    <div className=\"dislike_popup\">\n      <div className=\"dislike_inner\">\n        <button className=\"close_btn\" onClick={() => setTrigger(state => !state)}>\n          close\n        </button>\n        <label>Title</label>\n        <input onChange={onTitleChange} value={Title} />\n        <label>Description</label>\n        <textarea onChange={onDescriptionChange} value={Description} />\n        <button className=\"btn\" onClick={onSubmit}>\n          신고하기\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default DislikePopup;\n","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport \"./HistoryMap.css\";\nimport { message } from \"antd\";\n\nfunction MapToLeft() {\n  var map = document.getElementsByClassName(\"HistoryMap_inner\")[0];\n  var computedStyle = window.getComputedStyle(map);\n  var transform = computedStyle.getPropertyValue(\"transform\");\n  var new_position =\n    transform !== \"none\" ? parseInt(transform.split(\",\")[4]) : 0;\n\n  map.style.transform = `translate(${new_position + 250}px, 0px)`;\n}\n\nfunction MapToRight() {\n  var map = document.getElementsByClassName(\"HistoryMap_inner\")[0];\n  var computedStyle = window.getComputedStyle(map);\n  var transform = computedStyle.getPropertyValue(\"transform\");\n  var new_position =\n    transform !== \"none\" ? parseInt(transform.split(\",\")[4]) : 0;\n\n  map.style.transform = `translate(${new_position - 250}px, 0px)`;\n}\n\nfunction GoToScene(props) {\n  const { userhistory, gameId, sceneId, GoScene } = props;\n  const data = { data: { sceneIndex: GoScene - 1 } };\n  Axios.post(\"/api/game/refreshHistory\", data).then((response) => {\n    if (!response.data.success) {\n      message.error(\"Scene 변경 요청 실패\");\n    } else {\n      userhistory.replace({\n        pathname: `/gameplay`,\n        state: {\n          sceneId: sceneId[GoScene - 1],\n          gameId: gameId,\n        }\n      })\n      const close = document.getElementsByClassName(\"close_btn\");\n      for (let i = close.length - 1; i >= 0; i--) {\n        close[i].click();\n      }\n    }\n  });\n}\n\nfunction GetSceneInfo(props) {\n  const { index, scene, setSceneInfo } = props;\n  Axios.get(`/api/game/getSceneInfo/${scene}`).then((response) => {\n    if (!response.data.success) {\n      alert(\"Scene 정보 없음...\");\n    } else {\n      const cutList = response.data.scene.cutList;\n      const lastcut = cutList[cutList.length - 1];\n      console.log(\"cutlist : \", cutList)\n      console.log(\"lastcut : \", lastcut)\n      setSceneInfo({\n        sceneindex: index,\n        background: lastcut?.background,\n        name: lastcut?.name,\n        script: lastcut?.script,\n      });\n    }\n  });\n}\n\nfunction HistoryMapPopup(props) {\n  const { userhistory, setTrigger } = props;\n  const { gameId, sceneId } = props.history;\n  const [GoScene, setGoScene] = useState(null);\n  const [DelayHandler, setDelayHandler] = useState(null);\n  const [SceneInfo, setSceneInfo] = useState(null);\n\n  function delay(index, scene, setSceneInfo) {\n    setDelayHandler(\n      setTimeout(() => {\n        GetSceneInfo({ index, scene, setSceneInfo });\n      }, 300)\n    );\n  }\n\n  function delay_reset() {\n    setSceneInfo(null);\n    clearTimeout(DelayHandler);\n  }\n\n  function close_button() {\n    setTrigger(false);\n  }\n\n  const HistoryMap_scenes = sceneId.map((scene, index) => {\n    return (\n      <div\n        className=\"HistoryMap_scene\"\n        key={index + 1}\n        onMouseEnter={() => delay(index, scene, setSceneInfo)}\n        onMouseLeave={() => delay_reset()}\n        onClick={() => setGoScene(index + 1)}\n      >\n        {SceneInfo && SceneInfo.sceneindex === index ? (\n          <div>\n            <div className=\"HistoryMap_scene_num\"> #{index + 1}</div>\n            <img className=\"HistoryMap_scene_img\" src={SceneInfo.background} />\n            <div className=\"HistoryMap_scene_name\">{SceneInfo.name}:</div>\n            <div className=\"HistoryMap_scene_text\">\"{SceneInfo.script}\"</div>\n          </div>\n        ) : (\n          <div>\n            <div className=\"HistoryMap_scene_num\"> #{index + 1}</div>\n          </div>\n        )}\n      </div>\n    );\n  });\n\n  //! 해당 녀석 클릭과 화면 클릭을 같게 인식한다.. 이부분을 고쳐야합니다!!\n  return props.trigger ? (\n    <div className=\"HistoryMap_popup\">\n      <button className=\"close_btn\" onClick={() => close_button()}>\n        close\n      </button>\n\n      <div className=\"toleft_btn\" onClick={MapToLeft}>\n        to left 나중에 이미지로 대체\n      </div>\n\n      <div className=\"toright_btn\" onClick={MapToRight}>\n        to right 나중에 이미지로 대체\n      </div>\n\n      <div className=\"HistoryMap_inner\">{HistoryMap_scenes}</div>\n\n      {GoScene ? (\n        <div className=\"warning_popup\">\n          <button\n            className=\"ok_btn\"\n            onClick={() => GoToScene({ userhistory, gameId, sceneId, GoScene })}\n          >\n            ok\n          </button>\n          <button className=\"close_btn\" onClick={() => setGoScene(null)}>\n            close\n          </button>\n          <div className=\"warning_text\">\n            are you sure? 다시는 돌아올 수 없다?\n          </div>\n        </div>\n      ) : null}\n    </div>\n  ) : null;\n}\n\nexport default HistoryMapPopup;\n","import React, { useState } from \"react\";\nimport \"./LoadingPage.css\";\nimport { useSelector } from \"react-redux\";\nconst LOADING_TYPE = {\n  NONE: 0,\n  BASIC: 1,\n  SLIDELEFT: 2,\n  SLIDERIGHT: 3,\n  SLIDEUP: 4,\n  SLIDEDOWN: 5,\n  BLACKIN: 6,\n};\n\nconst LoadingPage = () => {\n  const loadingType = useSelector((state) => state.gameplay.loadingType);\n  switch (loadingType) {\n    case LOADING_TYPE.NONE:\n      return null;\n    case LOADING_TYPE.BASIC:\n      return (\n        <div\n          style={{ animation: \"1.5s ease-out 0s 1 basic\" }}\n          className=\"loading_page\"\n        >\n          <div className=\"loading_icon\">loading.....</div>\n        </div>\n      );\n    case LOADING_TYPE.SLIDELEFT:\n      return (\n        <div\n          style={{ animation: \"1s ease-out 0s 1 slideLeft\" }}\n          className=\"loading_page\"\n        />\n      );\n    case LOADING_TYPE.SLIDERIGHT:\n      return (\n        <div\n          style={{ animation: \"1s ease-out 0s 1 slideRight\" }}\n          className=\"loading_page\"\n        />\n      );\n    case LOADING_TYPE.SLIDEUP:\n      return (\n        <div\n          style={{ animation: \"1s ease-out 0s 1 slideUp\" }}\n          className=\"loading_page\"\n        />\n      );\n    case LOADING_TYPE.SLIDEDOWN:\n      return (\n        <div\n          style={{ animation: \"1s ease-out 0s 1 slideDown\" }}\n          className=\"loading_page\"\n        />\n      );\n    default:\n      return null;\n  }\n};\n\nexport default LoadingPage;\n","import axios from 'axios';\nimport {\n    LOAD_EMPTY_NUM,\n    SAVE_PREV_SCENE\n} from './types';\n\nexport function loadEmptyNum(dataToSubmit){\n    console.log(dataToSubmit)\n    const request = dataToSubmit.emptyNum !== undefined ? dataToSubmit.emptyNum : axios.get(`/api/game/getSceneInfo/${dataToSubmit.sceneId}`)\n        .then(response => {\n            console.log(response.data);\n            const scene = response.data.scene;\n            return scene.sceneTmp.emptyNum;\n        });\n\n    return {\n        type: LOAD_EMPTY_NUM,\n        payload: request\n    };\n}\n\nexport function savePrevScene(dataToSubmit){\n    const request = dataToSubmit.prevSceneId;\n\n    return {\n        type: SAVE_PREV_SCENE,\n        payload: request\n    };\n}\n","import { NAVBAR_CONTROL } from \"./types\";\n\nexport function navbarControl(navbarOn) {\n  return {\n    type: NAVBAR_CONTROL,\n    payload: navbarOn,\n  };\n}\n","import React from \"react\";\n\nexport default function useFullscreenStatus(elRef) {\n  const [isFullscreen, setIsFullscreen] = React.useState(\n    document[getBrowserFullscreenElementProp()] != null\n  );\n\n  const setFullscreen = () => {\n    if (elRef.current == null) return;\n\n    elRef.current\n      .requestFullscreen()\n      .then(() => {\n        setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\n      })\n      .catch(() => {\n        setIsFullscreen(false);\n      });\n  };\n\n  React.useLayoutEffect(() => {\n    document.onfullscreenchange = () =>\n      setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\n\n    return () => (document.onfullscreenchange = undefined);\n  });\n\n  return [isFullscreen, setFullscreen];\n}\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== \"undefined\") {\n    return \"fullscreenElement\";\n  } else if (typeof document.mozFullScreenElement !== \"undefined\") {\n    return \"mozFullScreenElement\";\n  } else if (typeof document.msFullscreenElement !== \"undefined\") {\n    return \"msFullscreenElement\";\n  } else if (typeof document.webkitFullscreenElement !== \"undefined\") {\n    return \"webkitFullscreenElement\";\n  } else {\n    throw new Error(\"fullscreenElement is not supported by this browser\");\n  }\n}\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport Axios from \"axios\";\nimport \"./TreeMap.css\";\nimport { message } from \"antd\";\n\nfunction GoToScene(props) {\n  const { userhistory, gameId, sceneId, GoScene } = props;\n  const data = { data: { sceneIndex: GoScene - 1 } };\n  Axios.post(\"/api/game/refreshHistory\", data).then((response) => {\n    if (!response.data.success) {\n      message.error(\"Scene 변경 요청 실패\");\n    } else {\n      userhistory.push(`/gameplay/${gameId}/${sceneId[GoScene - 1]}`);\n      const close = document.getElementsByClassName(\"close_btn\");\n      for (let i = close.length - 1; i >= 0; i--) {\n        close[i].click();\n      }\n    }\n  });\n}\n\nfunction GetSceneInfo(props) {\n  const { index, scene, setSceneInfo } = props;\n  Axios.get(`/api/game/getSceneInfo/${scene}`).then((response) => {\n    if (!response.data.success) {\n      alert(\"Scene 정보 없음...\");\n    } else {\n      const cutList = response.data.scene.cutList;\n      const lastcut = cutList[cutList.length - 1];\n      setSceneInfo({\n        sceneindex: index,\n        background: lastcut.background,\n        name: lastcut.name,\n        script: lastcut.script,\n      });\n    }\n  });\n}\n\nfunction useConstructor(callBack = () => {}) {\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\n  if (hasBeenCalled) return;\n  callBack();\n  setHasBeenCalled(true);\n}\n\n//* 나중에 스키마로 만들어야함\nconst SceneDepth = 4;\nconst sceneMap = [\n  { sceneId: 1, link: null },\n  { sceneId: 2, link: null },\n  { sceneId: 3, link: null },\n  { sceneId: 4, link: null },\n  { sceneId: null, link: null },\n  { sceneId: null, link: null },\n  { sceneId: 7, link: null },\n  { sceneId: 8, link: null },\n  { sceneId: 9, link: null },\n  { sceneId: 10, link: null },\n  { sceneId: 11, link: null },\n  { sceneId: 12, link: null },\n  { sceneId: 13, link: null },\n  { sceneId: 14, link: null },\n  { sceneId: 15, link: null },\n  { sceneId: 16, link: null },\n  { sceneId: 17, link: null },\n  { sceneId: 18, link: null },\n  { sceneId: 19, link: null },\n  { sceneId: 20, link: null },\n  { sceneId: 21, link: null },\n  { sceneId: 22, link: null },\n];\n\nconst nodeWidth = 10;\nconst nodeHeight = 5;\n\nlet pivot = [0, 0];\nlet position = [50, 0];\nlet drag = false;\n\nfunction TreeMapPopup(props) {\n  const { trigger, userhistory, setTrigger} = props;\n  const { gameId, sceneId } = props.history;\n\n  const [Position, setPosition] = useState();\n  \n  useConstructor(() => {\n    setPosition(position);\n    // console.log(\"constructor\");\n    // console.log(userhistory);\n  });\n\n  useEffect(() => {\n    var container = document.getElementsByClassName(\"TreeMap_popup\");\n    if (trigger) {\n      container[0].addEventListener(\"mousedown\", mouseDown);\n      container[0].addEventListener(\"mouseup\", mouseUp);\n      container[0].addEventListener(\"mousemove\", mouseMove);\n    } else {\n      if (container[0]) {\n        container[0].removeEventListener(\"mousedown\", mouseDown);\n        container[0].removeEventListener(\"mouseup\", mouseUp);\n        container[0].removeEventListener(\"mousemove\", mouseMove);\n      }\n    }\n  }, [trigger]);\n\n  function close_button() {\n    setTrigger(false);\n  }\n\n  function mouseDown(e) {\n    pivot = [e.pageX, e.pageY];\n    drag = true;\n    e.preventDefault();\n  }\n\n  function mouseUp(e) {\n    drag = false;\n    e.preventDefault();\n  }\n\n  function mouseMove(e) {\n    if (drag) {\n      if (pivot[0] !== e.pageX || pivot[1] !== e.pageY) {\n        position = [\n          position[0] - (pivot[0] - e.pageX),\n          position[1] - (pivot[1] - e.pageY),\n        ];\n        setPosition(position);\n        pivot = [e.pageX, e.pageY];\n      }\n    }\n    e.preventDefault();\n  }\n\n  let depth = 1;\n  let cnt_limit = 1;\n  let cnt = 0;\n  const TreeMap_nodes = sceneMap.map((scene, index) => {\n    if (cnt === cnt_limit) {\n      depth += 1;\n      cnt = 0;\n      cnt_limit = cnt_limit * 4;\n    }\n    cnt += 1;\n\n    // console.log(index, depth);\n\n    return (\n      <div\n        className=\"TreeMap_nodeContainer\"\n        style={{\n          width: (1 / SceneDepth) * 100 + \"%\",\n          height: (1 / cnt_limit) * 100 + \"%\",\n          left: ((depth - 1) / SceneDepth) * 100 + \"%\",\n          top: ((cnt - 1) / cnt_limit) * 100 + \"%\",\n        }}\n      >\n        {/* {index} */}\n        <div\n          className=\"TreeMap_node\"\n          style={{ width: 1 +\"rem\", height: 1+\"rem\" }}\n\n        />\n        {depth !== SceneDepth ? (\n          <Fragment>\n            <hr\n              className=\"TreeMap_nodeLine\"\n              style={{ left: \"70%\", top: \"12.5%\" }}\n            />\n            <hr\n              className=\"TreeMap_nodeLine\"\n              style={{ left: \"70%\", top: \"37.5%\" }}\n            />\n            <hr\n              className=\"TreeMap_nodeLine\"\n              style={{ left: \"70%\", top: \"62.5%\" }}\n            />\n            <hr\n              className=\"TreeMap_nodeLine\"\n              style={{ left: \"70%\", top: \"87.5%\" }}\n            />\n            <hr\n              className=\"TreeMap_nodeLine\"\n              style={{ left: \"50%\", top: \"50%\" }}\n            />\n            <hr className=\"TreeMap_nodeLine_vertical\" />\n          </Fragment>\n        ) : null}\n      </div>\n    );\n  });\n\n  return trigger ? (\n    <div className=\"TreeMap_popup\">\n      <button className=\"close_btn\" onClick={() => close_button()}>\n        close\n      </button>\n      <div\n        className=\"TreeMap_inner\"\n        style={{\n          width: nodeWidth * SceneDepth + \"%\",\n          height: nodeHeight * Math.pow(4, SceneDepth - 1) + \"%\",\n          left: Position[0],\n          top: Position[1],\n        }}\n      >\n        {TreeMap_nodes}\n      </div>\n    </div>\n  ) : null;\n}\n\nexport default TreeMapPopup;\n","import \"./GamePlayPage.css\";\nimport 'react-rangeslider/lib/index.css'\nimport \"./GamePlaySlider.css\";\nimport GameCharacterBlock from \"./GameCharacterBlock\";\nimport { TextBlock, TextBlockChoice } from \"./TextBlock.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Axios from \"axios\";\nimport DislikePopup from \"./Dislike\";\nimport HistoryMapPopup from \"./HistoryMap\";\nimport LoadingPage from \"./LoadingPage\";\nimport { message } from \"antd\";\nimport { socket } from \"../../App\"\nimport { loadEmptyNum, savePrevScene } from \"../../../_actions/sync_actions\"\nimport useKey from \"../../functions/useKey\";\nimport { gameLoadingPage } from \"../../../_actions/gamePlay_actions\";\nimport { navbarControl } from \"../../../_actions/controlPage_actions\";\nimport useFullscreenStatus from \"../../../utils/useFullscreenStatus\";\nimport { useLocation } from \"react-router\";\nimport TreeMapPopup from \"./TreeMap\";\nimport { gamePause } from \"../../../_actions/gamePlay_actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport Slider from 'react-rangeslider'\n\nimport {\n  faCheckSquare,\n  faCompress,\n  faExpand,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst bgm_audio = new Audio();\nbgm_audio.volume = 0.5\nconst sound_audio = new Audio();\nsound_audio.volume = 0.5\n\nfunction useConstructor(callBack = () => { }) {\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\n  if (hasBeenCalled) return;\n  callBack();\n  setHasBeenCalled(true);\n}\n\n//! playscreen\nconst ProductScreen = (props) => {\n  const location = useLocation();\n  const { gameId, sceneId } = location.state;\n\n  const userHistory = props.history;\n\n  const dispatch = useDispatch();\n\n  const isPause = useSelector((state) => state.gameplay.isPause);\n\n  const ratio = 1080 / 1920;\n\n  const [windowWidth, setwindowWidth] = useState(window.innerWidth);\n  const [windowHeight, setwindowHeight] = useState(window.innerHeight);\n  const [i, setI] = useState(0);\n  const [Scene, setScene] = useState({});\n  const [Dislike, setDislike] = useState(false);\n  const [History, setHistory] = useState({});\n  const [HistoryMap, setHistoryMap] = useState(false);\n  const [TreeMap, setTreeMap] = useState(false);\n\n  const prevSceneId = useSelector(state => state.sync.prevSceneId);\n\n  const maximizableElement = useRef(null);\n\n  const handleExitFullscreen = () => document.exitFullscreen();\n\n  let isFullscreen, setIsFullscreen;\n  let errorMessage;\n\n  useConstructor(() => {\n    console.log(\"\")\n  });\n\n  try {\n    [isFullscreen, setIsFullscreen] = useFullscreenStatus(maximizableElement);\n  } catch (e) {\n    errorMessage = \"Fullscreen not supported\";\n    isFullscreen = false;\n    setIsFullscreen = undefined;\n  }\n\n  useKey(\"Enter\", handleEnter);\n  useKey(\"Space\", handleEnter);\n  useKey(\"Digit1\", handleChoice);\n  useKey(\"Digit2\", handleChoice);\n  useKey(\"Digit3\", handleChoice);\n  useKey(\"Digit4\", handleChoice);\n\n\n  useEffect(() => {\n    socket.off(\"accept_final_change\");\n    socket.on(\"accept_final_change\", data => {\n      const { sceneId, title } = data;\n\n      let newNextList = Scene.nextList ? [...Scene.nextList] : [];\n      newNextList.push({ sceneId, script: title });\n      const newScene = { ...Scene, nextList: newNextList };\n      setScene(newScene);\n    })\n  }, [Scene])\n\n  const [volume, setVolume] = useState(0.5)\n  const [muted, setMuted] = useState(false)\n  const tempVolume = useRef(0.5)\n\n  const mute = () => {\n    if (muted) {\n      setMuted(false)\n      volumeControl(tempVolume.current)\n    } else {\n      tempVolume.current = volume\n      setMuted(true)\n      volumeControl(0)\n    }\n  }\n\n  const volumeControl = (volume) => {\n    setVolume(volume)\n    volume === 0 ? setMuted(true) : setMuted(false)\n    bgm_audio.volume = volume\n    sound_audio.volume = volume\n  }\n\n  const [isFirstCut, setIsFirstCut] = useState(true);\n  function playMusic(i) {\n    if (isFirstCut) setIsFirstCut(false);\n    if (Scene.cutList[i].bgm.music) {\n      //이전 곡과 같은 bgm이 아니라면\n      if (\n        !(i > 0 && Scene.cutList[i - 1].bgm.music == Scene.cutList[i].bgm.music)\n      ) {\n        bgm_audio.pause();\n        bgm_audio.src = Scene.cutList[i].bgm.music;\n        bgm_audio.play();\n      }\n    }\n    if (Scene.cutList[i].sound.music) {\n      sound_audio.pause();\n\n      sound_audio.src = Scene.cutList[i].sound.music;\n      sound_audio.play();\n    }\n  }\n\n  const [isTyping, setIsTyping] = useState(true);\n  function handleEnter(event) {\n    if (!isTyping && i < Scene.cutList.length - 1 && !isPause) {\n      playMusic(i + 1);\n      setI(i + 1);\n      setIsTyping(true);\n    }\n  }\n\n\n  function handleChoice(event) {\n    if (i === Scene.cutList.length - 1 && !isPause) {\n      if (Scene.nextList[parseInt(event.key) - 1]) {\n        userHistory.replace({\n          pathname: `/gameplay`,\n          state: {\n            sceneId: Scene.nextList[parseInt(event.key) - 1].sceneId,\n            gameId: gameId,\n          }\n        })\n      } else {\n        if (parseInt(event.key) - 1 === Scene.nextList.length) {\n          dispatch(gamePause(true));\n          event.preventDefault();\n          let choice = document.getElementById(\"choice\");\n          if (choice) {\n            choice.click();\n          }\n        }\n      }\n    }\n  }\n\n\n  useEffect(() => {\n    socket.emit(\"leave room\", { room: prevSceneId });\n    socket.emit(\"room\", { room: sceneId });\n    // socket.emit(\"exp_val\", {room: sceneId});\n    dispatch(savePrevScene({ prevSceneId: sceneId }));\n    socket.off(\"empty_num_changed\") //! 매번 열린다.\n    socket.on(\"empty_num_changed\", data => {\n      dispatch(loadEmptyNum({\n        sceneId,\n        emptyNum: data.emptyNum\n      }));\n    })\n    socket.emit(\"validate_empty_num\", { scene_id: sceneId })\n\n  }, [sceneId])\n\n  //* navigation bar control\n  useEffect(() => {\n    dispatch(navbarControl(false));\n  }, []);\n\n  //* game pause control\n  useEffect(() => {\n    if (HistoryMap || Dislike || TreeMap) {\n      dispatch(gamePause(true));\n    } else {\n      dispatch(gamePause(false));\n    }\n  }, [HistoryMap, Dislike, TreeMap]);\n\n  useEffect(() => {\n    Axios.get(`/api/game/getnextscene/${gameId}/${sceneId}`).then(\n      (response) => {\n        if (response.data.success) {\n          const history = {\n            gameId: gameId,\n            sceneId: response.data.sceneIdList,\n          };\n          setHistory(history);\n          setI(0);\n          bgm_audio.pause();\n          sound_audio.pause();\n          setIsFirstCut(true);\n          setScene(response.data.scene);\n          dispatch(gamePause(false));\n          dispatch(gameLoadingPage(0));\n          dispatch(gameLoadingPage(6));\n        } else {\n          message.error(\"Scene 정보가 없습니다.\");\n          props.history.replace(`/game/${gameId}`);\n        }\n      }\n    );\n  }, [sceneId]);\n\n  useEffect(() => {\n    function handleResize() {\n      setwindowWidth(window.innerWidth);\n      setwindowHeight(window.innerHeight);\n    }\n    window.addEventListener(\"resize\", handleResize);\n  }, [window.innerWidth, window.inner]);\n\n  const padding = isFullscreen ? 0.0 : 0.1;\n  const minSize = 300;\n\n  let newScreenSize;\n  if (windowWidth * ratio > windowHeight) {\n    newScreenSize = {\n      width: `${(windowHeight * (1 - 2 * padding)) / ratio}px`,\n      height: `${windowHeight * (1 - 2 * padding)}px`,\n      minWidth: `${minSize / ratio}px`,\n      minHeight: `${minSize}px`,\n    };\n  } else {\n    newScreenSize = {\n      width: `${windowWidth * (1 - 2 * padding)}px`,\n      height: `${windowWidth * (1 - 2 * padding) * ratio}px`,\n      minWidth: `${minSize}px`,\n      minHeight: `${minSize * ratio}px`,\n    };\n  }\n\n  useEffect(() => {\n    dispatch(loadEmptyNum({\n      sceneId,\n    }));\n\n    return () => {\n      bgm_audio.pause();\n      sound_audio.pause();\n    };\n  }, []);\n\n\n  if (Scene.cutList) {\n    if (i == 0 && isFirstCut) playMusic(0);\n    return (\n      <div\n        className={`${isFullscreen\n          ? \"gamePlay__container_fullscreen\"\n          : \"gamePlay__container\"\n          }`}\n        ref={maximizableElement}\n      >\n        <div\n          className={`${isFullscreen\n            ? \"gamePlay__mainContainer_fullscreen\"\n            : \"gamePlay__mainContainer\"\n            }`}\n        >\n          <div\n            className={`${isFullscreen\n              ? \"backgroundImg_container_fullscreen\"\n              : \"backgroundImg_container\"\n              }`}\n            style={newScreenSize}\n            onClick={(event) => handleEnter(event)}\n          >\n            <LoadingPage />\n            {(Scene.cutList[i] && Scene.cutList[i].background) ?\n              <img\n                className=\"backgroundImg\"\n                src={Scene.cutList[i].background}\n                alt=\"Network Error\"\n              />\n              : (\n                <div></div>\n              )}\n            <GameCharacterBlock\n              characterList={Scene.cutList[i].characterList}\n            />\n\n            {i === Scene.cutList.length - 1 ? (\n              <TextBlockChoice\n                game_id={gameId}\n                cut_name={Scene.cutList[i].name}\n                cut_script={Scene.cutList[i].script}\n                scene_depth={Scene.depth}\n                scene_id={Scene._id}\n                scene_next_list={Scene.nextList}\n                setIsTyping={setIsTyping}\n                isTyping={isTyping}\n              />\n            ) : (\n              <TextBlock\n                cut_name={Scene.cutList[i].name}\n                cut_script={Scene.cutList[i].script}\n                setIsTyping={setIsTyping}\n                isTyping={isTyping}\n              />\n            )}\n            <HistoryMapPopup\n              userhistory={userHistory}\n              history={History}\n              trigger={HistoryMap}\n              setTrigger={setHistoryMap}\n            />\n            <TreeMapPopup\n              userhistory={userHistory}\n              history={History}\n              trigger={TreeMap}\n              setTrigger={setTreeMap}\n            />\n          </div>\n        </div>\n        <div className=\"gamePlay__btn_container\">\n          <div\n            className=\"gamePlay__btn\"\n            onClick={mute}\n          >\n            {muted ? <VolumeOffIcon /> : <VolumeUpIcon />}\n          </div>\n          <div\n            style={{ width: \"80px\" }} //slider width\n          >\n            <Slider\n              min={0}\n              max={1}\n              step={0.02}\n              value={volume}\n              onChange={event => {\n                volumeControl(event)\n              }}\n            />\n          </div>\n          <div>\n            <button\n              className=\"gamePlay__btn\"\n              onClick={() => setHistoryMap((state) => !state)}\n            >\n              미니맵\n            </button>\n            <button\n              className=\"gamePlay__btn\"\n              onClick={() => {\n                setTreeMap((state) => !state);\n              }}\n            >\n              트리맵\n            </button>\n            <button\n              className=\"gamePlay__btn\"\n              onClick={() => setDislike((state) => !state)}\n            >\n              신고\n            </button>\n          </div>\n          {errorMessage ? (\n            <button\n              onClick={() =>\n                alert(\n                  \"Fullscreen is unsupported by this browser, please try another browser.\"\n                )\n              }\n              className=\"gamePlay__btn\"\n            >\n              {errorMessage}\n            </button>\n          ) : isFullscreen ? (\n            <button onClick={handleExitFullscreen} className=\"gamePlay__btn\">\n              <FontAwesomeIcon icon={faCompress} />\n            </button>\n          ) : (\n            <button onClick={setIsFullscreen} className=\"gamePlay__btn\">\n              <FontAwesomeIcon icon={faExpand} />\n            </button>\n          )}\n        </div>\n        <DislikePopup\n          sceneId={sceneId}\n          gameId={gameId}\n          trigger={Dislike}\n          setTrigger={setDislike}\n        />\n      </div>\n    );\n  } else {\n    // dispatch(gameLoadingPage(0));\n    // dispatch(gameLoadingPage(1));\n    return <LoadingPage />;\n  }\n};\n\nexport default ProductScreen;\n","import React from 'react'\n\nfunction BackgroundImg({imgUrl, setBackgroundImg}) {\n\n  const onClick_img = () => {\n    setBackgroundImg(imgUrl);\n  }\n\n  return (\n    <div onClick={onClick_img}>\n      <img src={`${imgUrl}`} alt=\"img\"/>\n    </div>\n  )\n}\n\nexport default BackgroundImg\n","import { Button } from 'antd';\nimport React from 'react'\nimport './BackgroundSideBar.css'\nimport BackgroundImg from './BackgroundImg'\n\nfunction BackgroundSideBar({ gameDetail, setBackgroundImg, setMakeModalState }) {\n\n  const renderBackground = gameDetail.background.map((background, index) => {\n    return <div className=\"background\" key={`${index}`}>\n      <BackgroundImg imgUrl={background.image} setBackgroundImg={setBackgroundImg} />\n    </div>\n  })\n\n  const setModal = () => {\n    setMakeModalState(2);\n  }\n\n  return (\n    <div className=\"sidebar__container\">\n      <Button\n        type=\"primary\"\n        style={{ fontSize: \"15px\" }}\n        onClick={setModal}>\n        추가\n      </Button>\n      <div>{renderBackground}</div>\n    </div>\n  )\n}\n\nexport default BackgroundSideBar\n","import { \n  SELECT_CHARACTER, DETACH_CHARACTER \n} from \"./types\";\n\nexport function selectCharacter(character) {\n  return {\n    type: SELECT_CHARACTER,\n    payload: character,\n  };\n}\n\nexport function detachCharacter() {\n  return {\n    type: DETACH_CHARACTER,\n  };\n}","import React from 'react'\nimport { message } from 'antd';\nimport { useDispatch } from \"react-redux\";\nimport { selectCharacter } from '../../../../../_actions/characterSelected_actions';\n\nfunction CharacterImg({ character, index }) {\n  const dispatch = useDispatch();\n\n  const onClick_selectCharacter = () => {\n    dispatch(selectCharacter({ ...character, index: index }));\n  }\n\n  return (\n    <div>\n      <div onClick={onClick_selectCharacter}>\n        <img src={`${character.image_array[0]}`} alt=\"img\" />\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterImg\n","import { Button } from 'antd';\nimport React, { useEffect } from 'react'\nimport './CharacterSideBar'\n\nimport CharacterImg from './CharacterImg'\n\nfunction CharacterSideBar({ gameDetail, setCharacterList, setMakeModalState, setName }) {\n\n  const renderCharacter = gameDetail.character.map((character, index) => {\n    return <div className=\"character\" key={`${index}`}>\n      <CharacterImg\n        character={character}\n        index={index}\n        setCharacterList={setCharacterList}\n        setName={setName} />\n    </div>\n  })\n\n  const setModal = () => {\n    setMakeModalState(1);\n  }\n\n  return (\n    <div className=\"sidebar__container\">\n      <Button\n        type=\"primary\"\n        style={{ fontSize: \"15px\" }}\n        onClick={setModal}>\n        추가\n      </Button>\n      <div>{renderCharacter}</div>\n    </div>\n  )\n}\n\nexport default CharacterSideBar\n","import React from \"react\";\nimport { LOCAL_HOST } from \"../../../../Config\"\n\nfunction BgmFile({ bgm_audio, bgm, setBgmFile }) {\n    const onClick_music = () => {\n        setBgmFile(bgm);\n        bgm_audio.src = bgm.music;\n        bgm_audio.play();\n    };\n\n    return (\n        <div onClick={onClick_music}>\n            <img src={`https://neverending.s3.ap-northeast-2.amazonaws.com/original/music_icon.jpg`} alt=\"img\" />\n            {bgm.name}\n        </div>\n    );\n}\n\nexport default BgmFile;\n","import { Button } from 'antd';\nimport React from \"react\";\nimport \"./BgmSideBar.css\";\n\nimport BgmFile from \"./BgmFile\";\n\nfunction BgmSideBar({ gameDetail, bgm_audio, setBgmFile, setMakeModalState }) {\n\n    const renderBgm = gameDetail.bgm.map((bgm, index) => {\n        return (\n            <div className=\"bgm\" key={`${index}`}>\n                <BgmFile\n                    bgm_audio={bgm_audio}\n                    bgm={bgm}\n                    setBgmFile={setBgmFile}\n                />\n                {/* <img src={`${bgm.image}`} alt=\"img\"/> */}\n            </div>\n        );\n    });\n\n    const setModal = () => {\n        setMakeModalState(3);\n    }\n\n    return (\n        <div className=\"sidebar__container\">\n            <Button\n                type=\"primary\"\n                style={{ fontSize: \"15px\" }}\n                onClick={setModal}>\n                추가\n            </Button>\n            <div>{renderBgm}</div>\n        </div>\n    );\n}\n\nexport default BgmSideBar;\n","import React from \"react\";\nimport { LOCAL_HOST } from \"../../../../Config\"\n\nfunction SoundFile({ sound_audio, sound, setSoundFile }) {\n    const onClick_music = () => {\n        setSoundFile(sound);\n        sound_audio.src = sound.music;\n        sound_audio.play();\n    };\n\n    return (\n        <div onClick={onClick_music}>\n            <img src={`https://neverending.s3.ap-northeast-2.amazonaws.com/original/music_icon.jpg`} alt=\"img\" />\n            {sound.name}\n        </div>\n    );\n}\n\nexport default SoundFile;\n","import { Button } from 'antd';\nimport React from \"react\";\nimport \"./SoundSideBar.css\";\n\nimport SoundFile from \"./SoundFile\";\n\nfunction SoundSideBar({ gameDetail, sound_audio, setSoundFile, setMakeModalState }) {\n\n    const renderSound = gameDetail.sound.map((sound, index) => {\n        return (\n            <div className=\"sound\" key={`${index}`}>\n                <SoundFile\n                    sound_audio={sound_audio}\n                    sound={sound}\n                    setSoundFile={setSoundFile}\n                />\n                {/* <img src={`${sound.image}`} alt=\"img\"/> */}\n            </div>\n        );\n    });\n\n    const setModal = () => {\n        setMakeModalState(4);\n    }\n\n    return (\n        <div className=\"sidebar__container\">\n            <Button\n                type=\"primary\"\n                style={{ fontSize: \"15px\" }}\n                onClick={setModal}>\n                추가\n            </Button>\n            <div>{renderSound}</div>\n        </div>\n    );\n}\n\nexport default SoundSideBar;\n","import React from \"react\";\nimport \"../SceneMakeModal.css\";\n\nconst SceneMakeModalTab = ({ setTag, tag }) => {\n  return (\n    <div className=\"tabs\">\n      <div\n        className={`${tag === 1 ? \"tab is-selected\" : \"tab\"}`}\n        onClick={() => setTag(1)}>\n        Character\n          </div>\n      <div\n        className={`${tag === 2 ? \"tab is-selected\" : \"tab\"}`}\n        onClick={() => setTag(2)}>\n        Background\n          </div>\n      <div\n        className={`${tag === 3 ? \"tab is-selected\" : \"tab\"}`}\n        onClick={() => setTag(3)}>\n        Bgm\n          </div>\n      <div\n        className={`${tag === 4 ? \"tab is-selected\" : \"tab\"}`}\n        onClick={() => setTag(4)}>\n        Sound\n          </div>\n    </div>\n  )\n}\nexport default SceneMakeModalTab;\n","import React from \"react\";\nimport { FileAddOutlined } from '@ant-design/icons';\nimport Dropzone from \"react-dropzone\";\nimport \"./MyDropzone.css\";\n\n\nfunction MyDropzone({ onDrop, multiple, maxSize, accept }) {\n    return <Dropzone\n        onDrop={onDrop}\n        multiple={multiple}\n        maxSize={maxSize} // 10MB + 1\n\n        // accept=\"image/*,audio/*,video/*\"\n        accept={accept}\n    >\n        {({ getRootProps, getInputProps }) => (\n            <div className=\"dropzone\" {...getRootProps()}>\n                <input {...getInputProps()} />\n                <FileAddOutlined className=\"dropzone-icon\" />\n            </div>\n        )}\n    </Dropzone>\n\n}\n\nexport default MyDropzone;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { message, Form, Input } from \"antd\";\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\nimport { LeftCircleTwoTone, RightCircleTwoTone } from '@ant-design/icons';\nimport \"../SceneMakeModal.css\";\nimport \"./CharacterTab.css\";\nimport useMouse from \"../../../../functions/useMouse\";\n\nconst { TextArea } = Input;\n\nfunction CharacterTab({ blobGame, setBlobGame, charPageNum, setCharFileQueue, setCharBlobList }) {\n    const [characterCards, setCharacterCards] = useState([]);\n    const [isUpdate, setIsUpdate] = useState(0);\n    const indexNum = useRef(0);\n\n    const onNameChange = (event) => {\n        setBlobGame(game => {\n            game.character[charPageNum.current].name = event.currentTarget.value\n            return game\n        })\n        setIsUpdate(num => num + 1)\n    };\n\n    const onDescriptionChange = (event) => {\n        setBlobGame(game => {\n            game.character[charPageNum.current].description = event.currentTarget.value\n            return game\n        })\n        setIsUpdate(num => num + 1)\n    };\n\n    const onDrop = (files) => {\n        for (var i = 0; i < files.length; i++) {\n            if (!files[i]) {\n                message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\n                return;\n            }\n            let curURL = URL.createObjectURL(files[i])\n            setCharBlobList(oldArray => [...oldArray, curURL])\n\n            //new Character\n            if (indexNum.current === \"-1\") {\n                setBlobGame(game => {\n                    game.character = [...game.character, {\n                        name: \"\",\n                        description: \"\",\n                        image_array: [curURL],\n                    }]\n                    return game\n                })\n                indexNum.current = blobGame.character.length - 1\n            }\n            else {\n                setBlobGame(game => {\n                    game.character[indexNum.current].image_array = [...game.character[indexNum.current].image_array, curURL]\n                    return game\n                })\n            }\n        }\n        setCharFileQueue(oldArray => [...oldArray, { index: Number(indexNum.current), array: files }])\n        setIsUpdate(num => num + 1)\n    };\n\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\n    useEffect(() => {\n        if (blobGame.character && charPageNum.current < blobGame.character.length) {\n            const cards = blobGame.character[charPageNum.current].image_array.map((image, index) => {\n                return (\n                    <div\n                        id={charPageNum.current}\n                        className=\"largeBox\" key={index}\n                    >\n                        <img className=\"smallBox\"\n                            src={image}\n                            alt=\"img\"\n                        />\n\n                        {index === 0 &&\n                            <Form><label>이름</label>\n                                <Input onChange={onNameChange} value={blobGame.character[charPageNum.current].name} />\n\n                                <label>상세설정</label>\n                                <TextArea onChange={onDescriptionChange} value={blobGame.character[charPageNum.current].description} />\n\n                                {/* <label>(혈액형/좋아하는 것 등 이모지넣을 수 있는 공간?)</label> */}\n                            </Form>\n                        }\n\n                        {(index === blobGame.character[charPageNum.current].image_array.length - 1) &&\n                            <MyDropzone\n                                onDrop={onDrop}\n                                multiple={true}\n                                maxSize={10485761} // 10MB + 1\n                                accept=\"image/*\"\n                            />}\n                    </div>\n                )\n            })\n            setCharacterCards(cards)\n        } else {\n            setCharacterCards(\"\")\n        }\n\n    }, [isUpdate, blobGame]);\n\n    useMouse(\"mousedown\", handleMouse)\n    function handleMouse(event) {\n        for (var i = 0; i < event.path.length; i++) {\n            if (event.path[i].id) {\n                indexNum.current = event.path[i].id\n                return;\n            }\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"character-container\">\n                {characterCards !== 0 && <div>{characterCards}</div>}\n            </div>\n            {\n                blobGame.character && charPageNum.current === blobGame.character.length &&\n                <div id={-1}>\n                    <MyDropzone\n                        onDrop={onDrop}\n                        multiple={true}\n                        maxSize={10485761} // 10MB + 1\n                        accept=\"image/*\"\n                    />\n                </div>\n            }\n            {\n                charPageNum.current !== 0 && <LeftCircleTwoTone\n                    style={{ fontSize: \"3rem\" }}\n                    onClick={() => {\n                        charPageNum.current--\n                        setIsUpdate(num => num + 1)\n                    }}\n                    twoToneColor=\"#52c41a\" />\n            }\n            {\n                blobGame.character && charPageNum.current !== blobGame.character.length &&\n                <RightCircleTwoTone\n                    style={{ fontSize: \"3rem\" }}\n                    onClick={() => {\n                        charPageNum.current++\n                        setIsUpdate(num => num + 1)\n                    }}\n                    twoToneColor=\"#52c41a\" />\n            }\n            {blobGame.character && <div> {charPageNum.current}/{blobGame.character.length}</div>}\n        </div>\n    );\n}\n\nexport default CharacterTab;\n","import React, { useEffect, useState } from \"react\";\nimport { Col, message } from \"antd\";\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\nimport \"../SceneMakeModal.css\";\nimport \"./BackgroundTab.css\";\n\nfunction BackgroundTab({ game, setFileQueue, setTypeQueue, setBackBlobList, backBlobList }) {\n    const [backgroundCards, setBackgroundCards] = useState([]);\n    const [blobCards, setBlobCards] = useState([]);\n\n    const onDrop = (files) => {\n        for (var i = 0; i < files.length; i++) {\n            if (!files[i]) {\n                message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\n                return;\n            }\n            setFileQueue(oldArray => [...oldArray, files[i]])\n            setTypeQueue(oldArray => [...oldArray, 1])\n            setBackBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\n        }\n    };\n\n\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\n    useEffect(() => {\n        if (game.background)\n            setBackgroundCards(game.background.map((element, index) => {\n                return <div className=\"largeBox1\" key={index}>\n                    <img className=\"smallBox12\"\n                        // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\n                        src={element.image}\n                        alt=\"img\"\n                    />\n                </div>\n            }))\n    }, [game]);\n\n    useEffect(() => {\n        if (backBlobList)\n            setBlobCards(backBlobList.map((element, index) => {\n                return <div className=\"largeBox1\" key={index}>\n                    <img className=\"smallBox12\"\n                        // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\n                        src={element}\n                        alt=\"img\"\n                    />\n                </div>\n            }))\n    }, [backBlobList]);\n\n    return (\n        <div>\n            <MyDropzone\n                onDrop={onDrop}\n                multiple={true}\n                maxSize={10485761} // 10MB + 1\n                accept=\"image/*\"\n            >\n            </MyDropzone>\n            <div className=\"background-container\">\n                {backgroundCards !== 0 && <div>{backgroundCards}</div>}\n                {blobCards !== 0 && <div>{blobCards}</div>}\n            </div>\n        </div>\n    );\n}\n\nexport default BackgroundTab;\n","import React, { useEffect, useState } from \"react\";\nimport { Col, message } from \"antd\";\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\nimport \"../SceneMakeModal.css\";\nimport \"./MusicTab.css\";\nimport { LOCAL_HOST } from \"../../../../Config\";\nfunction BgmTab({ game, setFileQueue, setTypeQueue, setBgmBlobList, bgmBlobList, setBgmBlobNames, bgmBlobNames }) {\n    const [bgmCards, setBgmCards] = useState([]);\n    const [blobCards, setBlobCards] = useState([]);\n\n    const onDrop = (files) => {\n        for (var i = 0; i < files.length; i++) {\n            if (!files[i]) {\n                message.error(\"10MB 이하의 음원 파일을 업로드해주세요.\");\n                return;\n            }\n            setFileQueue(oldArray => [...oldArray, files[i]])\n            setTypeQueue(oldArray => [...oldArray, 2])\n            setBgmBlobNames(oldArray => [...oldArray, files[i]])\n            setBgmBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\n        }\n    };\n\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\n    useEffect(() => {\n        if (game.bgm)\n            setBgmCards(game.bgm.map((element, index) => {\n                return <div className=\"largeBox13\" key={index}>\n                    {(index + 1) % 2 ?\n                        <div>\n                            <img className=\"smallBox13\"\n                                src={`https://neverending.s3.ap-northeast-2.amazonaws.com/original/music_icon.jpg`}\n                                alt=\"img\"\n                            />\n                            {element.name}\n                        </div>\n                        :\n                        <div>\n                            <img className=\"smallBox23\"\n                                src={`https://neverending.s3.ap-northeast-2.amazonaws.com/original/music_icon.jpg`}\n                                alt=\"img\"\n                            />\n                            {element.name}\n                        </div>\n                    }\n                </div>\n            }))\n    }, [game]);\n\n\n    useEffect(() => {\n        if (bgmBlobList)\n            setBlobCards(bgmBlobList.map((element, index) => {\n                return <div className=\"largeBox13\" key={index}>\n                    {(index + 1) % 2 ?\n                        <div>\n                            <img className=\"smallBox13\"\n                                // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\n                                src={`https://neverending.s3.ap-northeast-2.amazonaws.com/original/music_icon.jpg`}\n                                alt=\"img\"\n                            />\n                            {bgmBlobNames[index].name}\n                        </div>\n                        :\n                        <div>\n                            <img className=\"smallBox23\"\n                                // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\n                                src={`https://neverending.s3.ap-northeast-2.amazonaws.com/original/music_icon.jpg`}\n                                alt=\"img\"\n                            />\n                            {bgmBlobNames[index].name}\n                        </div>\n                    }\n                </div>\n            }))\n    }, [bgmBlobList]);\n\n    return (\n        <div>\n            <MyDropzone\n                onDrop={onDrop}\n                multiple={true}\n                maxSize={10485761} // 10MB + 1\n                accept=\"audio/*\"\n            >\n            </MyDropzone>\n            <div className=\"music-container\">\n                {bgmCards !== 0 && <div>{bgmCards}</div>}\n                {blobCards !== 0 && <div>{blobCards}</div>}\n            </div>\n        </div>\n    );\n}\n\nexport default BgmTab;\n","import React, { useEffect, useState } from \"react\";\nimport { Col, message } from \"antd\";\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\nimport \"../SceneMakeModal.css\";\nimport \"./MusicTab.css\";\nimport { LOCAL_HOST } from \"../../../../Config\";\n\nfunction SoundTab({ game, setFileQueue, setTypeQueue, setSoundBlobList, soundBlobList, setSoundBlobNames, soundBlobNames }) {\n    const [soundCards, setSoundCards] = useState([]);\n    const [blobCards, setBlobCards] = useState([]);\n\n    const onDrop = (files) => {\n        for (var i = 0; i < files.length; i++) {\n            if (!files[i]) {\n                message.error(\"10MB 이하의 음원 파일을 업로드해주세요.\");\n                return;\n            }\n            setFileQueue(oldArray => [...oldArray, files[i]])\n            setTypeQueue(oldArray => [...oldArray, 3])\n            setSoundBlobNames(oldArray => [...oldArray, files[i]])\n            setSoundBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\n        }\n    };\n\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\n    useEffect(() => {\n        if (game.sound)\n            setSoundCards(game.sound.map((element, index) => {\n                return <div className=\"largeBox13\" key={index}>\n                    {(index + 1) % 2 ?\n                        <div>\n                            <img className=\"smallBox13\"\n                                src={`https://neverending.s3.ap-northeast-2.amazonaws.com/original/music_icon.jpg`}\n                                alt=\"img\"\n                            />\n                            {element.name}\n                        </div>\n                        :\n                        <div>\n                            <img className=\"smallBox23\"\n                                src={`https://neverending.s3.ap-northeast-2.amazonaws.com/original/music_icon.jpg`}\n                                alt=\"img\"\n                            />\n                            {element.name}\n                        </div>\n                    }\n                </div>\n            }))\n    }, [game]);\n\n    useEffect(() => {\n        if (soundBlobList)\n            setBlobCards(soundBlobList.map((element, index) => {\n                return <div className=\"largeBox13\" key={index}>\n                    {(index + 1) % 2 ?\n                        <div>\n                            <img className=\"smallBox13\"\n                                // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\n                                src={`https://neverending.s3.ap-northeast-2.amazonaws.com/original/music_icon.jpg`}\n                                alt=\"img\"\n                            />\n                            {soundBlobNames[index].name}\n                        </div>\n                        :\n                        <div>\n                            <img className=\"smallBox23\"\n                                // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\n                                src={`https://neverending.s3.ap-northeast-2.amazonaws.com/original/music_icon.jpg`}\n                                alt=\"img\"\n                            />\n                            {soundBlobNames[index].name}\n                        </div>\n                    }\n                </div>\n            }))\n    }, [soundBlobList]);\n\n    return (\n        <div>\n            <MyDropzone\n                onDrop={onDrop}\n                multiple={true}\n                maxSize={10485761} // 10MB + 1\n                accept=\"audio/*\"\n            >\n            </MyDropzone>\n            <div className=\"music-container\">\n                {soundCards !== 0 && <div>{soundCards}</div>}\n                {blobCards !== 0 && <div>{blobCards}</div>}\n            </div>\n        </div>\n    );\n}\n\nexport default SoundTab;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Modal, message } from \"antd\";\nimport Axios from \"axios\";\n\nimport SceneMakeModalTab from \"./Tab/SceneMakeModalTab\";\nimport CharacterTab from \"./Tab/CharacterTab\"\nimport BackgroundTab from \"./Tab/BackgroundTab\"\nimport BgmTab from \"./Tab/BgmTab\"\nimport SoundTab from \"./Tab/SoundTab\"\nimport { LOCAL_HOST } from \"../../../Config\";\nimport _ from \"lodash\";\n\nconst SceneMakeModal = ({ gameId, visible, setTag, tag, setReload }) => {\n  const [game, setGame] = useState([]);\n  const [fileQueue, setFileQueue] = useState([]);\n  const [typeQueue, setTypeQueue] = useState([]);\n\n  const [backBlobList, setBackBlobList] = useState([]);\n  const [bgmBlobList, setBgmBlobList] = useState([]);\n  const [bgmBlobNames, setBgmBlobNames] = useState([]);\n  const [soundBlobList, setSoundBlobList] = useState([]);\n  const [soundBlobNames, setSoundBlobNames] = useState([]);\n\n  const [blobGame, setBlobGame] = useState([]);\n  const charPageNum = useRef(0);\n  const [charFileQueue, setCharFileQueue] = useState([]);\n  const [charBlobList, setCharBlobList] = useState([]);\n\n\n  const variable = { gameId: gameId }\n  useEffect(() => {\n    Axios.post('/api/game/getgamedetail', variable)\n      .then(response => {\n        if (response.data.success) {\n          setGame(response.data.gameDetail);\n          setBlobGame(_.cloneDeep(response.data.gameDetail));\n        } else {\n          alert('게임 정보를 로딩하는데 실패했습니다.')\n        }\n      })\n  }, [])\n\n  const revokeBlobList = () => {\n    charBlobList.forEach(function (value) {\n      if (value)\n        URL.revokeObjectURL(value)\n    });\n    backBlobList.forEach(function (value) {\n      if (value)\n        URL.revokeObjectURL(value)\n    });\n    bgmBlobList.forEach(function (value) {\n      if (value)\n        URL.revokeObjectURL(value)\n    });\n    soundBlobList.forEach(function (value) {\n      if (value)\n        URL.revokeObjectURL(value)\n    });\n  }\n\n\n  const cancelUpload = () => {\n    revokeBlobList();\n    setTag(0)\n  }\n\n  let uploadFlag = false;\n  const upload = () => {\n    if (!uploadFlag) {\n      uploadFlag = true;\n      revokeBlobList();\n\n      uploadCharFiles()\n      if (fileQueue.length)\n        uploadFiles()\n    }\n  };\n\n  const uploadCharFiles = () => {\n    if (charFileQueue.length) {\n      let fileNum = Array.from({ length: blobGame.character.length }, () => 0);\n      let formData = new FormData();\n      for (var i = 0; i < blobGame.character.length; i++) {\n        //파일 합치기        \n        for (var j = 0; j < charFileQueue.length; j++) {\n          if (charFileQueue[j].index === i) {\n            fileNum[i] += charFileQueue[j].array.length\n            charFileQueue[j].array.forEach(function (value) {\n              formData.append('files', value);\n            });\n          }\n        }\n      }\n      const config = {\n        header: { \"encrpyt\": \"multipart/form-data\" },\n      };\n\n\n      Axios.post(\"/api/game/uploadfile\", formData, config).then(\n        (response) => {\n          if (response.data.success) {\n            uploadCharDB(fileNum, response.data.files);\n          } else {\n            alert(\"캐릭터 DB 업로드 실패\");\n          }\n        }\n      );\n    } else {\n      uploadCharDB(null, null);\n    }\n  }\n\n  const uploadCharDB = (fileNum, files) => {\n    let cnt = 0\n    for (var i = 0; i < blobGame.character.length; i++) {\n      if (!game.character[i])\n        game.character.push({\n          name: \"\",\n          description: \"\",\n          image_array: [],\n        })\n      game.character[i].name = blobGame.character[i].name;\n      game.character[i].description = blobGame.character[i].description;\n\n      if (fileNum) {\n        for (var j = cnt; j < cnt + fileNum[i]; j++) {\n          console.log(files[j].location)\n          game.character[i].image_array.push(files[j].location)\n        }\n        cnt += fileNum[i]\n      }\n    }\n    const DBForm = {\n      gameId: gameId,\n      character: game.character\n    };\n    Axios.post(\n      \"/api/game/putCharDB\",\n      DBForm\n    ).then((response) => {\n      if (response.data.success) {\n        // character파일만 올리는 경우\n        if (!fileQueue.length) {\n          setReload(reload => reload + 1)\n          setTag(0)\n        }\n        // console.log(\"SceneMakeModal::CharDB 업데이트 성공\")\n      } else {\n        message.error(\"DB 업데이트 실패\");\n      }\n    });\n  }\n\n\n  const uploadFiles = () => {\n    //upload file queue\n    let formData = new FormData();\n    fileQueue.forEach(value => {\n      formData.append('files', value);\n    })\n    const config = {\n      header: { \"encrpyt\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\n    };\n\n    Axios.post(\"/api/game/uploadfile\", formData, config).then(\n      (response) => {\n        if (response.data.success) {\n          uploadDB(response.data.files);\n        } else {\n          alert(\"업로드 실패\");\n        }\n      }\n    );\n  }\n\n\n  const uploadDB = (files) => {\n    const DBForm = { gameId: gameId, background: [], bgm: [], sound: [] };\n    for (var i = 0; i < files.length; i++) {\n      console.log(files[i]);\n      switch (typeQueue[i]) {\n        case 1: //background\n          DBForm.background.push({\n            name: files[i].originalname,\n            image: files[i].location,\n          })\n          break;\n        case 2:\n          DBForm.bgm.push({\n            name: files[i].originalname,\n            music: files[i].location,\n          })\n          break;\n        case 3:\n          DBForm.sound.push({\n            name: files[i].originalname,\n            music: files[i].location,\n          })\n          break;\n        default:\n          message.error(\"정의되지 않은 업로드 버튼입니다.\");\n          break;\n      }\n    }\n    Axios.post(\n      \"/api/game/putDB\",\n      DBForm\n    ).then((response) => {\n      if (response.data.success) {\n        setReload(reload => reload + 1)\n        setTag(0)\n      } else {\n        message.error(\"DB 업데이트 실패\");\n      }\n    });\n  }\n  return (\n    <Modal className=\"scenemake_modal\"\n      visible={visible}\n      okText=\"Upload\"\n      onCancel={cancelUpload}\n      onOk={upload}\n      width={1000}\n      style={{ top: 20 }}\n    >\n      <SceneMakeModalTab setTag={setTag} tag={tag} />\n      {tag === 1 &&\n        <CharacterTab\n          blobGame={blobGame}\n          setBlobGame={setBlobGame}\n          charPageNum={charPageNum}\n          setCharFileQueue={setCharFileQueue}\n          setCharBlobList={setCharBlobList}\n        />\n      }\n      {tag === 2 &&\n        <BackgroundTab\n          game={game}\n          setFileQueue={setFileQueue}\n          setTypeQueue={setTypeQueue}\n          setBackBlobList={setBackBlobList}\n          backBlobList={backBlobList}\n        />\n      }\n      {tag === 3 &&\n        <BgmTab\n          game={game}\n          setFileQueue={setFileQueue}\n          setTypeQueue={setTypeQueue}\n          setBgmBlobList={setBgmBlobList}\n          bgmBlobList={bgmBlobList}\n          setBgmBlobNames={setBgmBlobNames}\n          bgmBlobNames={bgmBlobNames}\n        />\n      }\n      {tag === 4 &&\n        <SoundTab\n          game={game}\n          setFileQueue={setFileQueue}\n          setTypeQueue={setTypeQueue}\n          setSoundBlobList={setSoundBlobList}\n          soundBlobList={soundBlobList}\n          setSoundBlobNames={setSoundBlobNames}\n          soundBlobNames={soundBlobNames}\n        />\n      }\n    </Modal>\n  )\n}\nexport default SceneMakeModal\n","import React, { useState } from \"react\";\nimport { Modal, Form, message, Input } from \"antd\";\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport MyDropzone from \"../../Dropzone/MyDropzone\";\n\nconst { TextArea } = Input;\n\nconst PrivateOptions = [\n    { value: 0, label: \"Private\" },\n    { value: 1, label: \"Public\" },\n];\n\nconst CategoryOptions = [\n    { value: 0, label: \"살아남기\" },\n    { value: 1, label: \"로맨스\" },\n    { value: 2, label: \"스토리\" },\n    { value: 3, label: \"추리\" },\n    { value: 4, label: \"병맛\" },\n];\n\nconst UploadModal = ({ gameId, visible, setUploadModalState, onSubmit_saveScene }) => {\n    const user = useSelector((state) => state.user);\n    const [GameTitle, setGameTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [isPrivate, setIsPrivate] = useState(0);\n    const [category, setCategory] = useState(CategoryOptions[0].label);\n\n    const [blobURL, setBlobURL] = useState(\"\");\n    const [thumbFile, setThumbFile] = useState([]);\n\n    const onTitleChange = (event) => {\n        setGameTitle(event.currentTarget.value);\n    };\n\n    const onDescriptionChange = (event) => {\n        setDescription(event.currentTarget.value);\n    };\n\n    const onPrivateChange = (event) => {\n        setIsPrivate(event.currentTarget.value);\n    };\n\n    const onCartegoryChange = (event) => {\n        let cat_idx = event.currentTarget.value;\n        setCategory(event.currentTarget[cat_idx].text);\n    };\n\n    const onDrop = (files) => {\n        if (!files[0]) {\n            message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\n            return;\n        }\n        URL.revokeObjectURL(blobURL)\n\n        setBlobURL(URL.createObjectURL(files[0]))\n        setThumbFile(files)\n    };\n\n    const cancel = () => {\n        if (blobURL)\n            URL.revokeObjectURL(blobURL)\n        setUploadModalState(false)\n    }\n\n    const upload = (event) => {\n        event.preventDefault();\n        if (GameTitle === \"\" || description === \"\" || blobURL === \"\") {\n            message.error(\"모든 정보를 입력해주세요.\");\n            return;\n        }\n\n        uploadThumb();\n        setUploadModalState(false);\n        onSubmit_saveScene()\n    }\n\n    const uploadThumb = () => {\n        //revoke blobURL\n        URL.revokeObjectURL(blobURL)\n\n        let formData = new FormData();\n        const config = {\n            header: { \"encrpyt\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\n        };\n\n        thumbFile.forEach(value => {\n            formData.append('files', value);\n        })\n\n        Axios.post(\"/api/game/uploadfile\", formData, config).then(\n            (response) => {\n                if (response.data.success) {\n                    uploadGame(response.data.files[0].location);\n                } else {\n                    message.error(\"업로드 실패\");\n                }\n            }\n        );\n    }\n\n    const uploadGame = (filePath) => {\n        const game_variables = {\n            gameId: gameId,\n            creator: user.userData._id,\n            title: GameTitle,\n            description: description,\n            thumbnail: filePath,\n            privacy: isPrivate,\n            category: category,\n            writer: [user.userData._id],\n        };\n\n        Axios.post(\"/api/game/uploadgameInfo\", game_variables).then((response) => {\n            if (response.data.success) {\n\n            } else {\n                message.error(\"game제작 실패\");\n            }\n        });\n    }\n\n    return (\n        <Modal className=\"scenemake_modal\"\n            visible={visible}\n            okText=\"Upload\"\n            onCancel={cancel}\n            onOk={upload}\n            width={1000}\n            style={{ top: 20 }}\n        >\n            <div>\n                <label>Upload Game</label>\n                <Form onSubmit={upload}>\n                    <div style={{ display: \"flex\" }}>\n                        <MyDropzone\n                            onDrop={onDrop}\n                            multiple={false}\n                            maxSize={10485761} // 10MB + 1\n                            accept=\"image/*\"\n                        >\n                        </MyDropzone>\n\n                        {blobURL && (\n                            <div>\n                                <img\n                                    className=\"thumbnail__img\"\n                                    src={blobURL}\n                                    alt=\"thumbnail\"\n                                />\n\n                            </div>\n                        )}\n                    </div>\n                    <label>Title</label>\n                    <Input onChange={onTitleChange} value={GameTitle} />\n\n                    <label>Description</label>\n                    <TextArea onChange={onDescriptionChange} value={description} />\n\n                    <select onChange={onPrivateChange}>\n                        {PrivateOptions.map((item, index) => (\n                            <option key={index} value={item.value}>\n                                {item.label}\n                            </option>\n                        ))}\n                    </select>\n\n                    <select onChange={onCartegoryChange}>\n                        {CategoryOptions.map((item, index) => (\n                            <option key={index} value={item.value}>\n                                {item.label}\n                            </option>\n                        ))}\n                    </select>\n\n                </Form>\n            </div>\n        </Modal>\n\n    )\n}\nexport default UploadModal;\n","var _eventHandlers = {}; // somewhere global\n\nexport const addEvent = (node, event, handler, capture) => {\n    if (!(node in _eventHandlers)) {\n        // _eventHandlers stores references to nodes\n        _eventHandlers[node] = {};\n    }\n    if (!(event in _eventHandlers[node])) {\n        // each entry contains another entry for each event type\n        _eventHandlers[node][event] = [];\n    }\n    // capture reference\n    _eventHandlers[node][event].push([handler, capture]);\n    node.addEventListener(event, handler, capture);\n}\n\nexport const removeAllEvents = (node, event) => {\n    if (node in _eventHandlers) {\n        var handlers = _eventHandlers[node];\n        if (event in handlers) {\n            var eventHandlers = handlers[event];\n            for (var i = eventHandlers.length; i--;) {\n                var handler = eventHandlers[i];\n                node.removeEventListener(event, handler[0], handler[1]);\n            }\n        }\n    }\n}\n","import React, { useRef, memo, useState, useEffect } from 'react';\nimport './Character.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCharacter } from '../../../_actions/characterSelected_actions';\nimport {addEvent, removeAllEvents} from '../handleEventListener';\n\nfunction Character(props) {\n  const dispatch = useDispatch();\n\n  const { charSchema, GameCharacterList, setCharacterList , index, CharacterList } = props;\n\n  const element_X = useRef();\n  const element_Y = useRef();\n\n  const [clicked,setClicked] = useState(true);\n  const [moving, setMoving] = useState(true);\n  const [sizing, setSizing] = useState(false);\n  const [imgWidth, setImgWidth] = useState(0);\n\n  const background_element = document.getElementById(\"backgroundImg_container\");\n\n  let pivot = [0,0];\n  let drag = false;\n\n  function mouseMove(e) {\n    const page = [e.pageX,e.pageY];\n    if (drag && clicked && moving) {\n      if (pivot[0]-e.pageX>3 || pivot[1]-e.pageY>3 || pivot[0]-e.pageX<-3 || pivot[1]-e.pageY<-3) {\n        const background_width = background_element.offsetWidth;\n        const background_height = background_element.offsetHeight;\n        const prev_posX = Number(element_X.current.style.left.replace( /%/g, '' ));\n        const prev_posY = Number(element_Y.current.style.top.replace( /%/g, '' ).replace( /px/g, '' ));\n        const next_posX = prev_posX + 100*(e.pageX-pivot[0])/background_width;\n        const next_posY = prev_posY + 100*(e.pageY-pivot[1])/background_height;\n        element_X.current.style.left = String(next_posX)+'%';\n        element_Y.current.style.top = String(next_posY)+'%';\n        pivot = page;\n      }\n    } else if (drag && clicked && sizing) {\n      if (pivot[0] - e.pageX>7 || pivot[0] - e.pageX<-7 ) {\n        const image_width = document.getElementById(`${index}`).offsetWidth;\n        const prev_size = Number(element_Y.current.style.height.replace( /%/g, '' ));\n        let next_size = 0;\n        if(pivot[0]-page[0] < 0){\n          next_size = prev_size*(image_width-1*(pivot[0]-page[0]))/image_width;\n        } else {\n          next_size = prev_size*(image_width-1*(pivot[0]-page[0]))/image_width;\n        }\n        if (next_size > 20){\n          element_Y.current.style.height = String(next_size)+'%';\n        }\n        pivot = page;\n      }\n    }\n    setImgWidth(document.getElementById(`${index}`).offsetWidth);\n    e.stopPropagation()\n    e.preventDefault()\n  }\n\n  useEffect(() => {\n    addEvent(background_element, \"mousemove\", mouseMove, false);\n    addEvent(background_element, \"mouseup\", onMouseUp, false);\n    setImgWidth(document.getElementById(`${index}`).offsetWidth);\n    return () => {\n      removeAllEvents(background_element, \"mousemove\");\n      removeAllEvents(background_element, \"mouseup\");\n    }\n  }, [])\n\n  const onMouseDown = (e) => {\n    addEvent(background_element, \"mousemove\", mouseMove, false);\n    addEvent(background_element, \"mouseup\", onMouseUp, false);\n    pivot = [e.pageX,e.pageY];\n    drag = true;\n  }\n\n  const onMouseUp = (e) => {\n    removeAllEvents(background_element, \"mousemove\");\n    removeAllEvents(background_element, \"mouseup\");\n    setCharacterList((oldArray)=> {\n      return [\n        ...oldArray.slice(0,index), \n        {...oldArray[index], posX: Number(element_X.current.style.left.replace( /%/g, '' )), posY: Number(element_Y.current.style.top.replace( /%/g, '' ).replace( /px/g, '' ))},\n        ...oldArray.slice(index+1,4)\n      ]\n    })\n    setCharacterList((oldArray)=> {\n      return [...oldArray.slice(0,index), {...oldArray[index], size: Number(element_Y.current.style.height.replace( /%/g, '' ))} ,...oldArray.slice(index+1,4)]\n    })\n    pivot = [e.pageX,e.pageY];\n    drag = false;\n    setSizing(false);\n    setMoving(true);\n    dispatch(selectCharacter({...GameCharacterList[charSchema.index], index: charSchema.index}));\n  }\n\n  const onMouseOver = (e) => {\n    setMoving(false);\n    setSizing(true);\n  }\n\n  const onMouseOut = (e) => {\n    setMoving(true);\n    setSizing(false);\n  }\n\n  return (\n    <div \n      ref={element_X}\n      key={index} \n      className=\"CharacterBlock\"\n      style={{ left: `${charSchema.posX}%`}}\n    >\n      <div \n        ref={element_Y}\n        className=\"character__container\"\n        style={{height: `${charSchema.size}%`,\n                top: `${charSchema.posY}%`}}\n      >\n          <img\n            onMouseDown={onMouseDown}\n            className={`${clicked ? \"characterImg_clicked\" : \"characterImg\"}`}\n            id={`${index}`}\n            src={charSchema.image}\n            alt=\"img\"\n          />\n          <div \n            className={`${sizing ? \"btn_sizing_clicked\" : \"btn_sizing\"}`} \n            onMouseOver={onMouseOver}\n            onMouseOut={onMouseOut}\n            onMouseDown={onMouseDown}\n            style={{left: `${imgWidth-3}px`}}\n          ></div>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(Character)\n","import React, { memo, useEffect } from 'react'\nimport Character from \"../../functions/CharacterModal/Character\";\n\nimport \"./CharacterBlock.css\";\n\nconst CharacterBlock = (props) => {\n  const { onRemove_character, CharacterList, GameCharacterList, setCharacterList } = props;\n\n  const characterblocks = CharacterList.map((charSchema, index) => {\n    return (\n      <div key={index}>\n        <Character\n          setCharacterList={setCharacterList}\n          GameCharacterList={GameCharacterList}\n          onRemove_character={onRemove_character}\n          CharacterList={CharacterList}\n          index={index}\n          charSchema={charSchema}\n        />\n      </div>\n    );\n  });\n\n  return (\n    CharacterList.length > 0 &&\n    <div className=\"CharacterBlocks\" id=\"CharacterBlocks\">\n      {characterblocks}\n    </div>\n  )\n};\n\nexport default memo(CharacterBlock);\n","import { message } from 'antd';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { selectCharacter } from '../../../../_actions/characterSelected_actions';\nimport './CharacterInfoDisplay.css';\n\nfunction CharacterInfoDisplay({setName, character, setCharacterList, CharacterList, GameCharacterList}) {\n  const dispatch = useDispatch();\n\n  const onClick_putCharacter = (index,url) => {\n    const CharacterSchema = {\n      index: character.index,\n      image: url,\n      posX: 0,\n      posY: 0,\n      reverse: 0,\n      size: 50,\n    }\n    setCharacterList((oldArray) => {\n      for (let i = 0; i < oldArray.length; i++) {\n        if (oldArray[i].index === character.index)\n          return [...oldArray.slice(0, i), { ...oldArray[i], image: url }, ...oldArray.slice(i + 1, 4)]\n      }\n      if (oldArray.length >= 3) {\n        message.info(\"인물은 최대 세명까지 추가 가능합니다.\");\n        return oldArray;\n      }\n      return [...oldArray, CharacterSchema]\n    })\n    setName(character.name)\n  }\n\n  const onClick_selectCharacter = (index) => {\n    setName(GameCharacterList[index].name)\n    dispatch(selectCharacter({...GameCharacterList[index], index: index}));\n  }\n\n  const CharacterListImages = CharacterList.map((character,index) => {\n    return (\n    <div key={index} \n      className=\"characterList_Info\" \n      onClick={() => {onClick_selectCharacter(character.index)}}\n    >\n      <img src={character.image} alt=\"\" className=\"characterList_Image\"/>\n      {/* <div className=\"characterList_Text\">\n        x: {character.posX} y: {character.posY} size: {character.size}\n      </div> */}\n    </div>\n    )\n  })\n\n  const characterDetailImages = character.image_array.map((url, index) => {\n    return( \n      <div key={index} onClick={() => {onClick_putCharacter(index,url)}}>\n        <img src={url} alt=\"img\"/>\n      </div>\n    )\n  })\n\n  return (\n    <div className=\"characterInfo__container\">\n      <div className=\"characterList__container\">\n        {CharacterListImages}\n      </div>\n      <div>이름 : {character.name}</div>\n      <div>정보 : {character.description}</div>\n      <img src={character.image_array[0]} alt=\"\" className=\"main_img\"/>\n      <div className=\"image_array__container\">{characterDetailImages}</div>\n    </div>\n  )\n}\n\nexport default CharacterInfoDisplay\n","import { message } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detachCharacter, selectCharacter } from '../../../_actions/characterSelected_actions';\nimport Character from './Character';\nimport CharacterInfoDisplay from './CharacterInfoDisplay/CharacterInfoDisplay';\nimport './CharacterModal.css';\n\nfunction CharacterModal({ setCharacterList, CharacterList, GameCharacterList, setName }) {\n  const dispatch = useDispatch();\n\n  const onClick_detachCharacter = () => {\n    dispatch(detachCharacter());\n  }\n\n  const currentCharacter = useSelector((state) => state.character);\n\n  const onClick_removeCharacter = () => {\n    setCharacterList((oldArray) => {\n      for (let i = 0; i < oldArray.length; i++) {\n        if (oldArray[i].index === currentCharacter.characterSelected.index) {\n          message.info(\"삭제되었습니다.\");\n          return [...oldArray.slice(0, i), ...oldArray.slice(i + 1, 4)]\n        }\n      }\n    })\n    setName(\"\")\n  }\n\n  const [isAdded, setIsAdded] = useState(false);\n\n  useEffect(() => {\n    let flag = 0;\n    for (let i = 0; i < CharacterList.length; i++) {\n      if (CharacterList[i].index === currentCharacter.characterSelected.index) {\n        flag = 1;\n        break;\n      }\n    }\n    if (flag === 1) {\n      setIsAdded(true);\n    } else {\n      setIsAdded(false);\n    }\n\n  }, [currentCharacter, CharacterList])\n\n  return (\n    <div className=\"modal_Character\">\n      <div onClick={onClick_detachCharacter}>캐릭터 선택 해제</div>\n      {isAdded && <div onClick={onClick_removeCharacter}>삭제</div>}\n      <CharacterInfoDisplay\n        setName={setName}\n        GameCharacterList={GameCharacterList}\n        character={currentCharacter.characterSelected}\n        setCharacterList={setCharacterList}\n        CharacterList={CharacterList}\n      />\n    </div>\n  )\n}\n\nexport default CharacterModal\n","import { Switch } from 'antd';\nimport React from 'react';\nimport './SceneBox.css';\n\nfunction SceneBox(props) {\n    const {CutList, CutNumber, displayCut, setCutNumber, \n      Hover, setHover, EmptyCutList, saveCut} = props;\n\n    const onClick_GotoCut = (index) => {\n      if (CutNumber > 29) {\n          displayCut(index);\n          setCutNumber(index);\n          return;\n      }\n      if (CutNumber !== index) {\n          saveCut();\n          displayCut(index);\n          setCutNumber(index);\n      }\n    };\n\n    const display_SceneBox = CutList.map((Cut, index) => {\n        if (CutNumber === index) {\n            return (\n                (<div className=\"sceneMake__CurrentSceneBox\" key={`${index}`}></div>)\n            );\n        } else {\n            if (Hover){ \n                return (\n                    <div\n                        className=\"sceneMake__SceneBox_color\"\n                        key={`${index}`}\n                        onMouseOver={() => onClick_GotoCut(index)}\n                    ></div>\n                )\n            } else {\n                return (\n                    <div\n                        className=\"sceneMake__SceneBox_color\"\n                        key={`${index}`}\n                        onClick={() => onClick_GotoCut(index)}\n                    ></div>\n                )\n            }\n        }\n    });\n\n    const display_EmptyBox = EmptyCutList.map((EmptyCut, index) => {\n        if (CutNumber - CutList.length === index) {\n            return (\n                <div className=\"sceneMake__CurrentSceneBox\" key={`${index}`}></div>\n            );\n        } else {\n            return (\n                <div className=\"sceneMake__EmptySceneBox\" key={`${index}`}></div>\n            );\n        }\n    });\n    return (\n      <div className=\"sceneMake__sceneBox_container\">\n          <div className=\"sceneMake__sceneBox\">\n              {display_SceneBox}\n              {display_EmptyBox}\n          </div>\n          <div>\n              <Switch\n                  checked={Hover}\n                  checkedChildren={CutNumber}\n                  unCheckedChildren={CutNumber}\n                  onChange={() => {setHover((state) => !state)}}\n                  size=\"small\"\n              />\n          </div>\n      </div>\n    )\n}\n\nexport default SceneBox\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BackgroundSideBar from \"./SideBar/BackgroundSideBar\";\nimport CharacterSideBar from \"./SideBar/CharacterSideBar\";\nimport BgmSideBar from \"./SideBar/BgmSideBar\";\nimport SoundSideBar from \"./SideBar/SoundSideBar\";\nimport { useSelector } from \"react-redux\";\nimport { message, Button } from \"antd\";\nimport Axios from \"axios\";\nimport { useLocation } from \"react-router\";\nimport SceneMakeModal from './SceneMakeModal';\nimport UploadModal from './UploadModal';\nimport useKey from \"../../../functions/useKey\";\nimport CharacterBlock from \"../../GamePlayPage/CharacterBlock\";\nimport { useDispatch } from \"react-redux\";\nimport LoadingPage from \"../../GamePlayPage/LoadingPage\";\nimport { gameLoadingPage } from \"../../../../_actions/gamePlay_actions\";\nimport { navbarControl } from \"../../../../_actions/controlPage_actions\";\nimport CharacterModal from \"../../../functions/CharacterModal/CharacterModal\";\nimport SceneBox from \"./SceneBox/SceneBox\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\"\nimport { socket } from \"../../../App\";\nimport { PlayCircleOutlined, PauseCircleOutlined, StopOutlined } from '@ant-design/icons';\nimport \"./SceneMakePage.css\";\nimport { detachCharacter } from \"../../../../_actions/characterSelected_actions\";\nimport { LOCAL_HOST } from \"../../../Config\";\n\nlet bgm_audio = new Audio();\nlet sound_audio = new Audio();\nconst SceneMakePage = (props) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n    const { gameId, sceneId } = location.state\n\n    // const {gameId,sceneId} = location.state ;\n    if (location.state === undefined) {\n        window.history.back();\n        // return <div></div>;\n    }\n\n    const user = useSelector((state) => state.user);\n\n    const padding = 0.1;\n    const minSize = 300;\n    const ratio = 1080 / 1920;\n\n    const [windowWidth, setwindowWidth] = useState(window.innerWidth);\n    const [windowHeight, setwindowHeight] = useState(window.innerHeight);\n    const [newScreenSize, setNewScreenSize] = useState({});\n\n    //modal\n    const [makeModalState, setMakeModalState] = useState(0);\n    const [reload, setReload] = useState(1);\n    const [uploadModalState, setUploadModalState] = useState(false);\n\n    const [SidBar_script, setSidBar_script] = useState(true);\n\n    const [CharacterList, setCharacterList] = useState([]);\n    const [BackgroundImg, setBackgroundImg] = useState(`https://neverending.s3.ap-northeast-2.amazonaws.com/original/defaultBackground.png`);\n    const [Script, setScript] = useState(\"\");\n    const [Name, setName] = useState(\"\");\n    const [BgmFile, setBgmFile] = useState({\n        name: \"\",\n        music: \"\",\n    });\n    const [SoundFile, setSoundFile] = useState({\n        name: \"\",\n        music: \"\",\n    });\n\n    const [isFirstScene, setIsFirstScene] = useState(false)\n\n    const [CutNumber, setCutNumber] = useState(0);\n    const [Hover, setHover] = useState(false);\n\n    const [CutList, setCutList] = useState([]);\n    const [EmptyCutList, setEmptyCutList] = useState(\n        Array.from({ length: 30 }, () => 0)\n    );\n\n\n    let scene;\n    useEffect(() => {\n        dispatch(navbarControl(false));\n\n    }, [])\n\n\n    useEffect(() => {\n        if (user.userData) {\n            socket.emit(\"leave room\", { room: user.userData._id.toString() });\n            socket.emit(\"room\", { room: user.userData._id.toString() });\n        }\n        socket.off(\"timeout_making\")\n        socket.on(\"timeout_making\", data => {\n            // console.log(\"GO HOME\")\n            props.history.replace(\"/\")\n        })\n\n    }, [user])\n\n    //! scene save할 때 필요한 정보 갖고오기\n    useEffect(() => {\n        (async () => {\n            const res = await axios.get(`/api/game/getSceneInfo/${sceneId}`)\n            // console.log(res.data)\n            if (res.data.success) { scene = res.data.scene; }\n            else {\n                // console.log(\"get scene ERROR\");\n                props.history.replace(\"/\");\n                return;\n            }\n            // 임시저장한 녀석\n            if (scene.cutList.length) {\n\n                if (scene.isFirst) {\n                    setIsFirstScene(true)\n                }\n\n                // 임시저장된 녀석 불러오기\n                setCutList(scene.cutList);\n                const tmpFirstCut = scene.cutList[0]\n                setCharacterList(tmpFirstCut.characterList)\n                setBackgroundImg(tmpFirstCut.background)\n                setName(tmpFirstCut.name);\n                setScript(tmpFirstCut.script);\n                setCutNumber(scene.cutList.length - 1);\n\n                dispatch(gameLoadingPage(0));\n                dispatch(gameLoadingPage(1));\n\n            }\n            // 껍데기\n            else {\n                if (!scene.isFirst) {\n                    const variable = { sceneId: scene.prevSceneId };\n                    Axios.post(\"/api/scene/scenedetail\", variable)\n                        .then((response) => {\n                            //! 이전 씬의 마지막 컷 설정 유지\n                            if (response.data.success) {\n                                const lastCut = response.data.lastCut;\n                                setCharacterList(lastCut.characterList);\n                                setBackgroundImg(lastCut.background);\n                                setName(lastCut.name);\n                                dispatch(gameLoadingPage(0));\n                                dispatch(gameLoadingPage(1));\n                            } else {\n                                message.error(\"이전 Scene의 정보를 불러오는데 실패했습니다.\")\n                            }\n                        })\n                }\n                else {\n                    setIsFirstScene(true)\n                }\n            }\n        })();\n    }, [])\n\n    const onScriptChange = (event) => {\n        setScript(event.currentTarget.value);\n    };\n\n    const onNameChange = (event) => {\n        setName(event.currentTarget.value);\n    };\n    const characterSidebarElement = useRef();\n    const backgroundSidebarElement = useRef();\n    const bgmSidebarElement = useRef();\n    const soundSidebarElement = useRef();\n\n    const makeVisible = (element) => {\n        makeInvisible()\n        element.current.style.display = 'block'\n    }\n\n    const makeInvisible = () => {\n        characterSidebarElement.current.style.display = 'none'\n        backgroundSidebarElement.current.style.display = 'none'\n        bgmSidebarElement.current.style.display = 'none'\n        soundSidebarElement.current.style.display = 'none'\n    }\n\n    const onClick_character = () => {\n        if (characterSidebarElement.current.style.display === 'none') {\n            makeVisible(characterSidebarElement);\n        } else {\n            makeInvisible();\n        }\n    };\n\n    const onClick_background = () => {\n        if (backgroundSidebarElement.current.style.display === 'none') {\n            makeVisible(backgroundSidebarElement);\n        } else {\n            makeInvisible();\n        }\n    };\n\n\n    const onClick_bgm = () => {\n        if (bgmSidebarElement.current.style.display === 'none') {\n            makeVisible(bgmSidebarElement);\n        } else {\n            makeInvisible();\n        }\n    };\n\n    const onClick_sound = () => {\n        if (soundSidebarElement.current.style.display === 'none') {\n            makeVisible(soundSidebarElement);\n        } else {\n            makeInvisible();\n        }\n    };\n\n    const onClick_script = () => {\n        if (SidBar_script) {\n            setSidBar_script(false);\n        } else {\n            setSidBar_script(true);\n        }\n    };\n\n    const onClick_bgm_player = () => {\n        if (bgm_audio.paused) bgm_audio.play();\n        else bgm_audio.pause();\n        setReload(reload => reload + 1)\n    };\n\n    const onClick_sound_player = () => {\n        if (sound_audio.paused) sound_audio.play();\n        else sound_audio.pause();\n        setReload(reload => reload + 1)\n    };\n\n    function handleEnter(event) {\n        onSubmit_nextCut(event);\n    }\n\n    useKey(\"Enter\", handleEnter);\n\n    const saveCut = () => {\n        const Cut = {\n            characterList: CharacterList,\n            background: BackgroundImg,\n            script: Script,\n            name: Name,\n            bgm: BgmFile,\n            sound: SoundFile,\n        };\n        setBgmFile({\n            name: \"\",\n            music: \"\",\n        });\n        setSoundFile({\n            name: \"\",\n            music: \"\",\n        });\n\n        setCutList((oldArray) => [\n            ...oldArray.slice(0, CutNumber),\n            Cut,\n            ...oldArray.slice(CutNumber + 1, 31),\n        ]);\n        if (CutList.length === CutNumber) {\n            setEmptyCutList((oldArray) => [\n                ...oldArray.slice(0, EmptyCutList.length - 1),\n            ]);\n        }\n    };\n\n    const displayCut = (index) => {\n        setCharacterList(CutList[index].characterList);\n        setBackgroundImg(CutList[index].background);\n        setScript(CutList[index].script);\n        setName(CutList[index].name);\n        setBgmFile(CutList[index].bgm);\n        setSoundFile(CutList[index].sound);\n        if (CutList[index].bgm.music) {\n            bgm_audio.src = CutList[index].bgm.music;\n            bgm_audio.play();\n        } else {\n            bgm_audio.pause();\n        }\n        if (CutList[index].sound.music) {\n            sound_audio.src = CutList[index].sound.music;\n            sound_audio.play();\n        } else {\n            sound_audio.pause();\n        }\n    };\n\n    const onRemove_character = (index) => {\n        setCharacterList((oldArray) => [\n            ...oldArray.slice(0, index),\n            ...oldArray.slice(index + 1, 4),\n        ]);\n    };\n\n    const onSubmit_nextCut = (event) => {\n        event.preventDefault();\n        if (CutNumber > 29) {\n            message.error(\"더이상 Cut을 생성할 수 없습니다.\");\n            return;\n        } else if (CutNumber === 24) {\n            message.warning(\"생성 가능한 Cut이 5개 남았습니다.\");\n        }\n\n        saveCut();\n\n        if (CutNumber < CutList.length - 1) {\n            displayCut(CutNumber + 1);\n        } else {\n            setScript(\"\");\n        }\n        setCutNumber((oldNumber) => oldNumber + 1);\n    };\n\n    const onRemove_cut = () => {\n        if (CutList.length - 1 <= CutNumber) {\n            message.info('마지막 컷 입니다.');\n            return;\n        }\n        message.success(`${CutNumber + 1}번째 컷이 삭제되었습니다.`);\n        setCutList((oldArray) => [\n            ...oldArray.slice(0, CutNumber),\n            ...oldArray.slice(CutNumber + 1, 31),\n        ]);\n        setEmptyCutList((oldArray) => [\n            0, ...oldArray\n        ]);\n        displayCut(CutNumber + 1);\n    }\n\n    const onSubmit_first = () => {\n        setUploadModalState(true)\n    }\n\n    const onSubmit_saveScene = async (event, isTmp = 0) => {\n        if (CutList.length < 1) {\n            message.error(\"최소 2개의 컷을 생성해주세요.\");\n            return;\n        }\n        const submitCut = {\n            characterList: CharacterList,\n            background: BackgroundImg,\n            script: Script,\n            name: Name,\n            bgm: BgmFile,\n            sound: SoundFile,\n        };\n\n        const submitCutList = [\n            ...CutList.slice(0, CutNumber),\n            submitCut,\n            ...CutList.slice(CutNumber + 1, 31),\n        ];\n\n        if (window.confirm(\"게임 제작을 완료하시겠습니까?\")) {\n            const variable = {\n                gameId: gameId,\n                sceneId: sceneId,\n                cutList: submitCutList,\n                isTmp,\n            };\n\n            const response = await Axios.post(`/api/scene/save`, variable)\n\n            if (response.data.success) {\n                dispatch(detachCharacter());\n                message\n                    .loading(\"게임 업로드 중..\", 1.0)\n                    .then(() => {\n                        if (!isTmp) {\n                            message.success(\"게임 제작이 완료되었습니다.\", 1.0)\n                        }\n                        else {\n                            message.success(\"업로드 성공.\")\n                        }\n                    }\n                    ).then(() => {\n                        if (!isTmp && isFirstScene) {\n                            history.replace(\n                                `/game/${gameId}`\n                            );\n\n                        } else if (!isTmp) {\n                            socket.emit(\"final_submit\", {\n                                prevSceneId: response.data.scene.prevSceneId,\n                                sceneId: response.data.scene._id,\n                                title: response.data.scene.title,\n                                userId: user.userData._id.toString(),\n                            })\n                            history.replace({\n                                pathname: `/gameplay`,\n                                state: {\n                                    sceneId: response.data.scene._id,\n                                    gameId: gameId,\n                                }\n                            })\n                        }\n                    })\n            } else if(response.data.msg === 'expired') {\n                message.error(\"제작 유효기간이 만료되었습니다..\", 1.0);\n                props.history.replace({\n                    pathname: `/gameplay`,\n                    state: {\n                        sceneId: response.data.prevSceneId,\n                        gameId: gameId,\n                    }\n                })\n                return;\n            }\n             else {\n                message.error(\"DB에 문제가 있습니다.\");\n            }\n\n        } else {\n            message.error(\"제출 취소요\");\n        }\n    };\n\n    const onTmpSave = (event) => {\n        onSubmit_saveScene(event, 1);\n    }\n\n    const [gameDetail, setGameDetail] = useState([]);\n    const [sideBar, setSideBar] = useState([]);\n\n    useEffect(() => {\n        Axios.post('/api/game/getgamedetail', { gameId: gameId })\n            .then(response => {\n                if (response.data.success) {\n                    setGameDetail(response.data.gameDetail)\n                } else {\n                    alert('게임 정보를 로딩하는데 실패했습니다.')\n                }\n            })\n    }, [reload, gameId])\n\n\n    useEffect(() => {\n        if (gameDetail.character) {\n            const reload_Sidebar = (< div className=\"scenemake__toggleBar\">\n                <div ref={characterSidebarElement}>\n                    <CharacterSideBar\n                        gameDetail={gameDetail}\n                        setMakeModalState={setMakeModalState}\n                        setCharacterList={setCharacterList}\n                        setName={setName}\n                    />\n                </div>\n                <div ref={backgroundSidebarElement} style={{ display: 'none' }}>\n                    <BackgroundSideBar\n                        gameDetail={gameDetail}\n                        setBackgroundImg={setBackgroundImg}\n                        setMakeModalState={setMakeModalState}\n                    />\n                </div>\n                <div ref={bgmSidebarElement} style={{ display: 'none' }}>\n                    <BgmSideBar\n                        gameDetail={gameDetail}\n                        bgm_audio={bgm_audio}\n                        setBgmFile={setBgmFile}\n                        setMakeModalState={setMakeModalState}\n                    />\n                </div>\n                <div ref={soundSidebarElement} style={{ display: 'none' }}>\n                    <SoundSideBar\n                        gameDetail={gameDetail}\n                        sound_audio={sound_audio}\n                        setSoundFile={setSoundFile}\n                        setMakeModalState={setMakeModalState}\n                    />\n                </div>\n            </div>)\n            setSideBar(reload_Sidebar)\n        }\n    }, [gameDetail, CharacterList, reload])\n\n    useEffect(() => {\n        function handleResize() {\n            setwindowWidth(window.innerWidth);\n            setwindowHeight(window.innerHeight);\n        }\n        window.addEventListener('resize', handleResize)\n        if (windowWidth * ratio > windowHeight) {\n            setNewScreenSize({\n                width: `${windowHeight * (1 - 2 * padding) / ratio}px`,\n                height: `${windowHeight * (1 - 2 * padding)}px`,\n                minWidth: `${minSize / ratio}px`,\n                minHeight: `${minSize}px`\n            })\n        } else {\n            setNewScreenSize({\n                width: `${windowWidth * (1 - 2 * padding)}px`,\n                height: `${windowWidth * (1 - 2 * padding) * ratio}px`,\n                minWidth: `${minSize}px`,\n                minHeight: `${minSize * ratio}px`\n            })\n        }\n    }, [window.innerWidth, window.innerHeight]);\n\n    return (\n        <div className=\"scene__container\">\n            {/* <LoadingPage />   */}\n            <div>\n                <div\n                    className=\"backgroundImg_container\"\n                    id=\"backgroundImg_container\"\n                    style={newScreenSize}\n                >\n                    <img\n                        className=\"backgroundImg\"\n                        src={`${BackgroundImg}`}\n                        alt=\"img\"\n                    />\n                    <CharacterBlock\n                        GameCharacterList={gameDetail.character}\n                        CharacterList={CharacterList}\n                        setCharacterList={setCharacterList}\n                        onRemove_character={onRemove_character}\n                    />\n                    {SidBar_script && (\n                        <div className=\"sceneMake__text_container\">\n                            <input onChange={onNameChange} value={Name} className=\"sceneMake__name_block\" />\n                            <hr className=\"sceneMake__text_line\"></hr>\n                            <textarea\n                                onChange={onScriptChange}\n                                value={Script}\n                                className=\"sceneMake__text_block\"\n                                ref={(input) => input && input.focus()}\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n            <CharacterModal\n                setName={setName}\n                setCharacterList={setCharacterList}\n                CharacterList={CharacterList}\n                GameCharacterList={gameDetail.character}\n            />\n            <SceneBox\n                CutList={CutList}\n                CutNumber={CutNumber}\n                displayCut={displayCut}\n                setCutNumber={setCutNumber}\n                Hover={Hover}\n                setHover={setHover}\n                EmptyCutList={EmptyCutList}\n                saveCut={saveCut}\n            />\n            <div className=\"sceneMake__sound_container\">\n                {BgmFile.name ? (\n                    <div\n                        className=\"scene__SoundBox_container\"\n                        onClick={onClick_bgm_player}\n                    >\n                        {\n                            BgmFile.name && bgm_audio.paused &&\n                            <PlayCircleOutlined\n                                style={{ fontSize: \"20px\" }} />\n                        }\n                        {\n                            BgmFile.name && !bgm_audio.paused &&\n                            <PauseCircleOutlined\n                                style={{ fontSize: \"20px\" }} />\n                        }\n                        {BgmFile.name}\n                    </div>\n                ) : (\n                    <div>\n                        <StopOutlined\n                            style={{ fontSize: \"20px\" }}\n                        />\n                    BGM\n                    </div>\n                )}\n                {SoundFile.name ? (\n                    <div\n                        className=\"scene__SoundBox_container\"\n                        onClick={onClick_sound_player}\n                    >\n                        {\n                            BgmFile.name && sound_audio.paused &&\n                            <PlayCircleOutlined\n                                style={{ fontSize: \"20px\" }} />\n                        }\n                        {\n                            BgmFile.name && !sound_audio.paused &&\n                            <PauseCircleOutlined\n                                style={{ fontSize: \"20px\" }} />\n                        }\n                        {SoundFile.name}\n                    </div>\n                ) : (\n                    <div>\n                        <StopOutlined\n                            style={{ fontSize: \"20px\" }}\n                        />\n                    Sound\n                    </div>\n                )}\n            </div>\n            <div className=\"sceneMake__btn_container\">\n                <Button type=\"primary\"\n                    style={{ fontSize: \"15px\" }}\n                    onClick={onTmpSave}>\n                    임시저장\n                </Button>\n                <Button type=\"primary\"\n                    style={{ fontSize: \"15px\" }}\n                    onClick={onRemove_cut}>\n                    컷 삭제\n                </Button>\n                {CutNumber < 29 && (\n                    <Button type=\"primary\"\n                        style={{ fontSize: \"15px\" }}\n                        onClick={onSubmit_nextCut}>\n                        다음 컷\n                    </Button>\n                )}\n                {isFirstScene ?\n                    <Button type=\"primary\"\n                        style={{ fontSize: \"15px\" }}\n                        onClick={onSubmit_first}>\n                        업로드\n                        </Button>\n                    : <Button type=\"primary\"\n                        style={{ fontSize: \"15px\" }}\n                        onClick={onSubmit_saveScene}>\n                        업로드\n                        </Button>\n                }\n                <UploadModal\n                    gameId={gameId}\n                    visible={uploadModalState}\n                    setUploadModalState={setUploadModalState}\n                    onSubmit_saveScene={onSubmit_saveScene}\n                />\n            </div>\n            <div className=\"scenemake__sideBar_container\">\n                {sideBar !== 0 && sideBar}\n\n                <div className=\"scenemake__toggleButton_container\">\n                    <div\n                        className=\"scenemake__btn_sidebar\"\n                        onClick={onClick_character}\n                    >char</div>\n                    <div\n                        className=\"scenemake__btn_sidebar\"\n                        onClick={onClick_background}\n                    >back</div>\n                    <div\n                        className=\"scenemake__btn_sidebar\"\n                        onClick={onClick_script}\n                    >script</div>\n                    <div className=\"scenemake__btn_sidebar\" onClick={onClick_bgm}>\n                        bgm\n                    </div>\n                    <div className=\"scenemake__btn_sidebar\" onClick={onClick_sound}>\n                        sound\n                    </div>\n                </div>\n            </div>\n            {\n                makeModalState !== 0 && <SceneMakeModal\n                    gameId={gameId}\n                    visible={Boolean(makeModalState)}\n                    setTag={setMakeModalState}\n                    tag={makeModalState}\n                    setReload={setReload}\n                />\n            }\n        </div>\n    );\n}\n\nexport default SceneMakePage;\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n    <Menu.Item key=\"mail\">\n      <a href=\"/\">Home</a>\n    </Menu.Item>\n    <SubMenu title={<span>Blogs</span>}>\n      <MenuItemGroup title=\"Item 1\">\n        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n      </MenuItemGroup>\n      <MenuItemGroup title=\"Item 2\">\n        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n      </MenuItemGroup>\n    </SubMenu>\n  </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Menu, message } from \"antd\";\nimport axios from \"axios\";\nimport { USER_SERVER } from \"../../../Config\";\nimport { withRouter } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Axios from \"axios\";\n\nfunction RightMenu(props) {\n    const user = useSelector((state) => state.user);\n\n    const logoutHandler = () => {\n        axios.get(`${USER_SERVER}/logout`).then((response) => {\n            if (response.status === 200) {\n                props.history.push(\"/login\");\n            } else {\n                alert(\"Log Out Failed\");\n            }\n        });\n    };\n\n    const uploadGameFrame = async () => {\n        // console.log(props)\n\n        // tmp scene create\n        const gameResponse = await Axios.get(\"/api/game/uploadgameframe\")\n\n        if (!gameResponse.data.success) {\n            alert(\"game Frame제작 실패\");\n            return;\n        }\n\n        const firstScene = {\n            gameId: gameResponse.data.game._id,\n            prevSceneId: null,\n            sceneDepth: 0,\n            isFirst: 1,\n            title: \"\"\n        };\n\n\n        const sceneResponse = await Axios.post(\"/api/scene/create\", firstScene)\n        if (!sceneResponse.data.success) {\n            alert(\"scene Frame제작 실패\");\n            return;\n        }\n\n        message.success(\n            \"첫 Scene을 생성해주세요. 오른쪽의 버튼을 활용해 이미지들을 추가할 수 있습니다.\"\n        );\n        setTimeout(() => {\n            props.history.replace({\n                pathname: `/scene/make`,\n                state: {\n                    gameId: gameResponse.data.game._id,\n                    sceneId: sceneResponse.data.sceneId\n                }\n            });\n        }, 1000);\n\n\n    }\n\n    if (user.userData && !user.userData.isAuth) {\n        return (\n            <Menu mode={props.mode}>\n                <Menu.Item key=\"mail\">\n                    <a href=\"/login\">Signin</a>\n                </Menu.Item>\n                <Menu.Item key=\"app\">\n                    <a href=\"/register\">Signup</a>\n                </Menu.Item>\n            </Menu>\n        );\n    } else {\n        return (\n            <Menu mode={props.mode}>\n                <Menu.Item key=\"upload\">\n                    <a onClick={uploadGameFrame}>Game Upload</a>\n                    {/* <a href=\"/game/upload\">Game Upload</a> */}\n                </Menu.Item>\n                <Menu.Item key=\"profile\">\n                    <a href=\"/profile\">Profile</a>\n                </Menu.Item>\n                <Menu.Item key=\"logout\">\n                    <a onClick={logoutHandler}>Logout</a>\n                </Menu.Item>\n            </Menu>\n        );\n    }\n}\n\nexport default withRouter(RightMenu);\n","import React, { useState } from \"react\";\nimport LeftMenu from \"./Sections/LeftMenu\";\nimport RightMenu from \"./Sections/RightMenu\";\nimport { Drawer, Button, Icon } from \"antd\";\nimport \"./Sections/Navbar.css\";\nimport { useSelector } from \"react-redux\";\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false);\n  const navbarOn = useSelector((state) => state.controlpage.navbarOn);\n  let style = {};\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  if (navbarOn) {\n    style = { position: \"fixed\", zIndex: 5, width: \"100%\" };\n  } else {\n    style = {\n      position: \"fixed\",\n      zIndex: 5,\n      width: \"100%\",\n      // transform: \"translate(0,-69px)\",\n      opacity: 0,\n      animation: \"0.8s ease-out 0s 1 hide\",\n    };\n  }\n  return (\n    <nav className=\"menu\" style={style}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">REGANOP</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"REGANOP\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          {/* <LeftMenu mode=\"inline\" /> */}\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Icon } from \"antd\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer_container\">\n      <p>\n        Mutsad 화이팅 <Icon type=\"smile\" />\n      </p>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\nimport Valid from \"../hoc/valid\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport TestPage from \"./views/LandingPage/TestPage.js\";\n\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport Profile from './views/Profile/Profile';\n\nimport GameDetailPage from './views/GameDetailPage/GameDetailPage.js';\nimport GameUploadPage from \"./views/GameUploadPage/GameUploadPage.js\";\nimport GameBuildUpPage from \"./views/GameUploadPage/GameBuildUpPage.js\";\nimport GamePlayPage from \"./views/GamePlayPage/GamePlayPage.js\";\nimport SceneMakePage from \"./views/Scene/SceneMakePage/SceneMakePage\";\n\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\nimport { LOCAL_HOST } from './Config';\n\nimport './App.css';\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n \nconst io = require('socket.io-client');\nexport let socket = io(`http://13.124.130.199:5001`, {transports : ['websocket']});\n\nwindow.onpopstate = () => {\n  window.location.reload();\n};\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/profile\" component={Auth(Profile, true)} />\n          <Route exact path=\"/game/upload\" component={Auth(GameUploadPage, true)} />\n          <Route path=\"/game/:gameId\" component={Auth(GameDetailPage, null)} />\n          <Route path=\"/gameplay\" component={Valid(Auth(GamePlayPage, null))} />\n          <Route exact path=\"/scene/make\" component={Valid(Auth(SceneMakePage, true))} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { NAVBAR_CONTROL } from \"../_actions/types\";\n\nconst initialState = { navbarOn : true };\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case NAVBAR_CONTROL:\n      return { ...state, navbarOn: action.payload };\n    default:\n      return state;\n  }\n}","import { LOADINGPAGE_GAMEPLAY, PAUSE_GAMEPLAY } from \"../_actions/types\";\n\nconst initialState = { loadingType: 0, isPause: false };\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADINGPAGE_GAMEPLAY:\n      return { ...state, loadingType: action.payload };\n    case PAUSE_GAMEPLAY:\n      return { ...state, isPause: action.payload };\n    default:\n      return state;\n  }\n}\n","import {\n  SELECT_CHARACTER, DETACH_CHARACTER\n} from '../_actions/types';\n\nconst initialState = {description: \"\",\n                      image: \"\",\n                      image_array: [],\n                      name: \"\",\n                      _id: \"\",\n                      index: -1}\n                      \nexport default function(state={characterSelected : initialState},action){\n\n  switch(action.type){\n      case SELECT_CHARACTER:\n          return {...state, characterSelected: action.payload }\n      case DETACH_CHARACTER:\n          return {...state, characterSelected: initialState }\n      default:\n          return state;\n  }\n}","import {\n  SELECT_DISPLAYED\n} from '../_actions/types';\n\nconst initialState = {index: -1}\n                      \nexport default function(state={characterDisplayed : initialState},action){\n\n  switch(action.type){\n      case SELECT_DISPLAYED:\n          return {...state, characterDisplayed: action.payload }\n      default:\n          return state;\n  }\n}","import { \n  SELECT_MOVINGTARGET, DETACH_MOVINGTARGET \n} from \"../_actions/types\";\n\n\nconst initialState = { movingTarget: -1 };\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SELECT_MOVINGTARGET:\n      return { ...state, movingTarget: action.payload };\n    case DETACH_MOVINGTARGET:\n      return { ...state, movingTarget: action.payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport user from \"./user_reducer\";\nimport controlpage from \"./controlPage_reducer\";\nimport gameplay from \"./gamePlay_reducer\";\nimport sync from './sync_reducer';\nimport character from \"./characterSelected_reducer\";\nimport characterDisplayed from \"./characterDisplayed_reducer\";\nimport movingTarget from \"./movingTarget_reducer\";\n\n\nconst rootReducer = combineReducers({\n  user,\n  controlpage,\n  gameplay,\n  sync,\n  character,\n  characterDisplayed,\n  movingTarget,\n});\n\nexport default rootReducer;\n","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import {\n    LOAD_EMPTY_NUM,\n    SAVE_PREV_SCENE\n} from '../_actions/types';\n\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case LOAD_EMPTY_NUM:\n            return { ...state, emptyNum: action.payload }\n        case SAVE_PREV_SCENE:\n            return { ...state, prevSceneId: action.payload }\n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}