{"version":3,"sources":["components/Config.js","_actions/user_actions.js","_actions/types.js","hoc/auth.js","hoc/valid.js","components/svg/icon.js","components/views/LandingPage/LandingPage.js","components/functions/useKey.js","components/views/Comment/SingleComment.js","components/views/Comment/Comment.js","components/views/GameDetailPage/GameDetailPage.js","components/views/LandingPage/TestPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/Profile/Profile.js","components/views/GameUploadPage/GameUploadPage.js","components/views/GameUploadPage/GameBuildUpPage.js","components/views/GamePlayPage/GameCharacterBlock.js","components/views/Modal/InputModalForm.js","_actions/gamePlay_actions.js","components/views/Modal/InputModal.js","components/functions/useMouse.js","components/views/GamePlayPage/TextAnimation.js","components/views/GamePlayPage/TextBlock.js","components/views/GamePlayPage/Dislike.js","components/views/GamePlayPage/HistoryMap.js","components/views/GamePlayPage/LoadingPage.js","_actions/sync_actions.js","_actions/controlPage_actions.js","utils/useFullscreenStatus.js","components/views/GamePlayPage/TreeMap.js","components/views/GamePlayPage/GamePlayPage.js","components/views/Scene/SceneMakePage/SideBar/BackgroundImg.js","components/views/Scene/SceneMakePage/SideBar/BackgroundSideBar.js","_actions/characterSelected_actions.js","components/views/Scene/SceneMakePage/SideBar/CharacterImg.js","components/views/Scene/SceneMakePage/SideBar/CharacterSideBar.js","components/views/Scene/SceneMakePage/SideBar/BgmFile.js","components/views/Scene/SceneMakePage/SideBar/BgmSideBar.js","components/views/Scene/SceneMakePage/SideBar/SoundFile.js","components/views/Scene/SceneMakePage/SideBar/SoundSideBar.js","components/views/Scene/SceneMakePage/Tab/SceneMakeModalTab.js","components/views/Dropzone/MyDropzone.js","components/views/Scene/SceneMakePage/Tab/CharacterTab.js","components/views/Scene/SceneMakePage/Tab/BackgroundTab.js","components/views/Scene/SceneMakePage/Tab/BgmTab.js","components/views/Scene/SceneMakePage/Tab/SoundTab.js","components/views/Scene/SceneMakePage/SceneMakeModal.js","components/views/Scene/SceneMakePage/UploadModal.js","components/functions/handleEventListener.js","components/functions/CharacterModal/Character.js","components/views/GamePlayPage/CharacterBlock.js","components/functions/CharacterModal/CharacterInfoDisplay/CharacterInfoDisplay.js","components/functions/CharacterModal/CharacterModal.js","components/views/Scene/SceneMakePage/SceneBox/SceneBox.js","components/views/Scene/SceneMakePage/SceneMakePage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/App.js","serviceWorker.js","_reducers/controlPage_reducer.js","_reducers/gamePlay_reducer.js","_reducers/characterSelected_reducer.js","_reducers/characterDisplayed_reducer.js","_reducers/movingTarget_reducer.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/sync_reducer.js","index.js","config/key.js","config/prod.js"],"names":["LOCAL_HOST","auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","replace","push","Validate","location","useLocation","undefined","svg","arrow_1","SVG","src","color","width","height","viewBox","fill","xmlns","d","BAR","ListContainer","id","pos","limit","ContainerToRight","target","console","log","bar","document","getElementById","split","String","style","filter","transform","arrow","display","ContainerToLeft","LandingPage","useState","games","setGames","Axios","success","alert","uploadGameFrame","a","gameResponse","firstScene","gameId","game","_id","prevSceneId","sceneDepth","isFirst","title","post","sceneResponse","message","setTimeout","pathname","sceneId","game_length","gameList","map","index","key","className","href","thumbnail","alt","category","onClick","useKey","cb","callbackRef","useRef","current","handle","event","code","shiftKey","addEventListener","removeEventListener","SingleComment","comment","updateToggle_comment","userData","user_id","reference","update","setUpdate","commentContent","setCommentContent","Replys","setReplys","writeReply","setWriteReply","updateToggle","variable","responseTo","toString","result","error","mapReply","reply","marginLeft","writer","image","nickname","content","length","commentId","onChange","currentTarget","value","placeholder","preventDefault","variables","ref","Comment","comments","setComments","onSubmit_comment","mapComment","require","GameDetailPage","match","params","gameDetail","setGameDetail","setSceneId","isMaking","setIsMaking","creator","description","to","Typography","Title","Card","Meta","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","dataToSubmit","loginUser","loginSuccess","window","setItem","userId","removeItem","catch","err","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","level","Item","prefix","onBlur","fontSize","border","padding","borderRadius","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","confirmPassword","oneOf","moment","unix","registerUser","errmsg","label","hasFeedback","validateStatus","Profile","makingGameList","list","TextArea","Input","PrivateOptions","CategoryOptions","GameUploadPage","GameTitle","setGameTitle","setDescription","isPrivate","setIsPrivate","setCategory","ratio","setRatio","filePath","setFilePath","onRatioChange","floatRatio","game_variables","privacy","character","background","bgm","sound","maxWidth","margin","textAlign","marginBottom","justifyContent","onDrop","files","formData","FormData","append","header","url","multiple","maxSize","getRootProps","getInputProps","alignItems","item","cat_idx","text","name","size","GameBuildUpPage","GameCharacterBlock","characterblocks","characterList","charSchema","left","posX","top","posY","ModalForm","Form","create","visible","onCancel","onCreate","form","remainTime","getFieldDecorator","okText","onOk","layout","rules","input","focus","gameLoadingPage","loadingType","gamePause","isPause","InputModal","decTimer","scene_id","scene_depth","game_id","scene_next_list","useHistory","emptyNum","sync","setVisible","formRef","setFormRef","setRemainTime","decreaseTimer","setDecreaseTimer","validated","setValidated","saveFormRef","useCallback","node","cancelHandler","socket","emit","clearTimeout","dino","setDino","off","on","working","setWorking","workingCnt","Array","isArray","n","tick","setInterval","clearInterval","validateFields","res","exp","resetFields","useMouse","TextAnimation","cut_script","setIsTyping","flag","setFlag","useWindupString","pace","onFinished","skip","handleEnter","TextBlock","cut_name","isTyping","TextBlockChoice","choices","choice","script","DislikePopup","trigger","setTrigger","setTitle","Description","MapToLeft","getElementsByClassName","getComputedStyle","getPropertyValue","new_position","parseInt","MapToRight","HistoryMapPopup","userhistory","GoScene","setGoScene","DelayHandler","setDelayHandler","SceneInfo","setSceneInfo","delay","scene","cutList","lastcut","sceneindex","GetSceneInfo","HistoryMap_scenes","onMouseEnter","onMouseLeave","sceneIndex","close","i","click","GoToScene","LOADING_TYPE","LoadingPage","gameplay","animation","loadEmptyNum","sceneTmp","navbarControl","navbarOn","getBrowserFullscreenElementProp","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","Error","sceneMap","link","pivot","position","drag","TreeMapPopup","Position","setPosition","mouseDown","e","pageX","pageY","mouseUp","mouseMove","callBack","hasBeenCalled","setHasBeenCalled","useConstructor","container","depth","cnt_limit","cnt","TreeMap_nodes","nodeWidth","Math","pow","SceneDepth","bgm_audio","Audio","volume","sound_audio","ProductScreen","isFullscreen","setIsFullscreen","errorMessage","userHistory","innerWidth","windowWidth","setwindowWidth","innerHeight","windowHeight","setwindowHeight","setI","Scene","setScene","Dislike","setDislike","History","setHistory","HistoryMap","setHistoryMap","TreeMap","setTreeMap","maximizableElement","elRef","React","useLayoutEffect","onfullscreenchange","requestFullscreen","useFullscreenStatus","handleChoice","newNextList","nextList","newScene","setVolume","muted","setMuted","tempVolume","volumeControl","isFirstCut","setIsFirstCut","playMusic","music","pause","play","room","sceneIdList","inner","newScreenSize","minHeight","minSize","max","step","exitFullscreen","icon","faCompress","faExpand","BackgroundImg","imgUrl","setBackgroundImg","BackgroundSideBar","setMakeModalState","renderBackground","selectCharacter","CharacterImg","image_array","CharacterSideBar","setCharacterList","setName","renderCharacter","BgmFile","setBgmFile","BgmSideBar","renderBgm","SoundFile","setSoundFile","SoundSideBar","renderSound","SceneMakeModalTab","setTag","tag","MyDropzone","accept","FileAddOutlined","CharacterTab","blobGame","setBlobGame","charPageNum","setCharFileQueue","setCharBlobList","characterCards","setCharacterCards","isUpdate","setIsUpdate","indexNum","onNameChange","num","onDescriptionChange","curURL","URL","createObjectURL","oldArray","Number","array","cards","path","LeftCircleTwoTone","twoToneColor","RightCircleTwoTone","BackgroundTab","setFileQueue","setTypeQueue","setBackBlobList","backBlobList","backgroundCards","setBackgroundCards","blobCards","setBlobCards","element","BgmTab","setBgmBlobList","bgmBlobList","setBgmBlobNames","bgmBlobNames","bgmCards","setBgmCards","SoundTab","setSoundBlobList","soundBlobList","setSoundBlobNames","soundBlobNames","soundCards","setSoundCards","config","SceneMakeModal","setReload","setGame","fileQueue","typeQueue","charFileQueue","charBlobList","_","cloneDeep","revokeBlobList","forEach","revokeObjectURL","uploadFlag","uploadCharFiles","j","fileNum","from","uploadCharDB","process","STORAGE","DBForm","reload","uploadFiles","uploadDB","originalname","UploadModal","setUploadModalState","onSubmit_saveScene","blobURL","setBlobURL","thumbFile","setThumbFile","upload","uploadThumb","uploadGame","_eventHandlers","addEvent","handler","capture","removeAllEvents","handlers","eventHandlers","memo","GameCharacterList","element_X","CharacterList","element_Y","clicked","moving","setMoving","sizing","setSizing","imgWidth","setImgWidth","background_element","page","background_width","offsetWidth","background_height","offsetHeight","prev_posX","prev_posY","next_posX","next_posY","image_width","prev_size","next_size","stopPropagation","onMouseUp","onMouseDown","slice","onMouseOver","onMouseOut","onRemove_character","CharacterInfoDisplay","CharacterListImages","onClick_selectCharacter","characterDetailImages","CharacterSchema","reverse","info","onClick_putCharacter","CharacterModal","currentCharacter","isAdded","setIsAdded","characterSelected","SceneBox","CutList","CutNumber","displayCut","setCutNumber","Hover","setHover","EmptyCutList","saveCut","onClick_GotoCut","display_SceneBox","Cut","display_EmptyBox","EmptyCut","checkedChildren","unCheckedChildren","SceneMakePage","back","setNewScreenSize","makeModalState","uploadModalState","SidBar_script","setSidBar_script","Script","setScript","Name","isFirstScene","setIsFirstScene","setCutList","setEmptyCutList","tmpFirstCut","lastCut","characterSidebarElement","backgroundSidebarElement","bgmSidebarElement","soundSidebarElement","makeVisible","makeInvisible","onSubmit_nextCut","warning","oldNumber","isTmp","submitCut","submitCutList","confirm","loading","msg","sideBar","setSideBar","paused","PlayCircleOutlined","PauseCircleOutlined","StopOutlined","delete","Boolean","Menu","SubMenu","ItemGroup","mode","status","NavBar","controlpage","zIndex","opacity","placement","closable","onClose","Footer","io","transports","onpopstate","App","fallback","exact","component","Auth","LoginPage","Valid","GamePlayPage","hostname","initialState","movingTarget","rootReducer","combineReducers","action","register","loginSucces","characterDisplayed","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","navigator","serviceWorker","ready","registration","unregister","module","exports","SERVER","CLIENT","SOCKET"],"mappings":"qmFAGaA,EAAa,gBC0BnB,SAASC,IAIZ,MAAO,CACHC,KChCiB,YDiCjBC,QALYC,IAAMC,IAAN,UD7BO,aC6BP,UACfC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,YE1BhB,WAAUC,EAAmBC,GAA4B,IAApBC,EAAmB,uDAAN,KAC7D,SAASC,EAAoBC,GAEzB,IAAIC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAChCG,EAAWC,cA2BjB,OAzBAC,qBAAU,WAENF,EAAShB,KAAQK,MAAK,SAAAC,GAEbA,EAASJ,QAAQiB,QAOdT,IAAeJ,EAASJ,QAAQkB,UAKjB,IAAXX,IAJJG,EAAMS,QAAQC,QAAQ,KAPtBb,GACAG,EAAMS,QAAQE,KAAK,eAiBhC,IAGC,kBAACf,EAAD,iBAAuBI,EAAvB,CAA8BC,KAAMA,KAG5C,OAAOF,GCpCI,WAAUH,GAAsC,wDAC3D,SAASgB,EAASZ,GACd,IAAMa,EAAWC,cAMjB,OALAR,qBAAU,gBACiBS,IAAnBF,EAASV,OACTH,EAAMS,QAAQC,QAAQ,OAE3B,IACAG,EAASV,MAEJ,kBAACP,EAAsBI,GAIpB,8FAGf,OAAOY,G,2CCnBLI,G,OAAM,CACVC,QACE,wHAGG,SAASC,EAAIlB,GAAQ,IAClBmB,EAA8BnB,EAA9BmB,IAAKC,EAAyBpB,EAAzBoB,MAAOC,EAAkBrB,EAAlBqB,MAAOC,EAAWtB,EAAXsB,OAC3B,OACE,yBACED,MAAOA,GAAgB,OACvBC,OAAQA,GAAkB,OAC1BC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAEN,0BAAMC,EAAGV,EAAIG,GAAMK,KAAMJ,KAKxB,SAASO,EAAI3B,GAClB,OACE,yBACEqB,MAAM,KACNC,OAAO,IACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,8BAEN,0BAAMJ,MAAM,KAAKC,OAAO,IAAIE,KAAK,WCxBvC,IAAMI,EACU,CACZC,GAAI,kBACJC,IAAK,EACLC,MAAO,GAJLH,EAMW,CACbC,GAAI,mBACJC,IAAK,EACLC,MAAO,GAIX,SAASC,EAAiBC,GACxB,GAAIA,EAAOH,IAAMG,EAAOF,MAAQ,EAAG,CACjCG,QAAQC,IAAIF,EAAOH,KAEnB,IAAIM,EAAMC,SAASC,eACjBL,EAAOJ,GAAGU,MAAM,KAAK,GAAK,OAASC,OAAOP,EAAOH,MAenD,GAbAM,EAAIK,MAAMC,OAAS,kBAEnBT,EAAOH,KAAO,EAEEO,SAASC,eAAeL,EAAOJ,IACrCY,MAAME,UAAhB,qBAA0C,KAAOV,EAAOH,IAAxD,aAGAM,EAAMC,SAASC,eACbL,EAAOJ,GAAGU,MAAM,KAAK,GAAK,OAASC,OAAOP,EAAOH,OAE/CW,MAAMC,OAAS,mBAEfT,EAAOH,KAAOG,EAAOF,MAAQ,EAAG,CAClC,IAAIa,EAAQP,SAASC,eACnBL,EAAOJ,GAAGU,MAAM,KAAK,GAAK,gBAE5BK,EAAMH,MAAMI,QAAU,QAExBD,EAAQP,SAASC,eAAeL,EAAOJ,GAAGU,MAAM,KAAK,GAAK,gBACpDE,MAAMI,QAAU,IAI1B,SAASC,EAAgBb,GACvB,GAAIA,EAAOH,IAAM,EAAG,CAElB,IAAIM,EAAMC,SAASC,eACjBL,EAAOJ,GAAGU,MAAM,KAAK,GAAK,OAASC,OAAOP,EAAOH,MAgBnD,GAdAM,EAAIK,MAAMC,OAAS,kBAEnBT,EAAOH,KAAO,EAEEO,SAASC,eAAeL,EAAOJ,IACrCY,MAAME,UAAhB,qBAA0C,KAAOV,EAAOH,IAAxD,aAIAM,EAAMC,SAASC,eACbL,EAAOJ,GAAGU,MAAM,KAAK,GAAK,OAASC,OAAOP,EAAOH,OAE/CW,MAAMC,OAAS,mBAED,GAAdT,EAAOH,IAAU,CACnB,IAAIc,EAAQP,SAASC,eACnBL,EAAOJ,GAAGU,MAAM,KAAK,GAAK,eAE5BK,EAAMH,MAAMI,QAAU,QAExBD,EAAQP,SAASC,eAAeL,EAAOJ,GAAGU,MAAM,KAAK,GAAK,iBACpDE,MAAMI,QAAU,IAsLXE,MAlLf,SAAqB/C,GAAQ,IAAD,EACAgD,mBAAS,IADT,mBACnBC,EADmB,KACZC,EADY,KAG1B5C,qBAAU,WACR6C,IAAM3D,IAAI,sBAAsBC,MAAK,SAACC,GAChCA,EAASC,KAAKyD,QAChBF,EAASxD,EAASC,KAAKsD,OAEvBI,MAAM,8DAGT,IAEH,IAAMC,EAAe,uCAAG,gCAAAC,EAAA,sEAGKJ,IAAM3D,IAAI,6BAHf,WAGhBgE,EAHgB,QAKJ7D,KAAKyD,QALD,uBAMpBC,MAAM,uCANc,iCAUhBI,EAAa,CACjBC,OAAQF,EAAa7D,KAAKgE,KAAKC,IAC/BC,YAAa,KACbC,WAAY,EACZC,QAAS,EACTC,MAAO,IAfa,SAkBMb,IAAMc,KAAK,oBAAqBR,GAlBtC,WAkBhBS,EAlBgB,QAmBHvE,KAAKyD,QAnBF,wBAoBpBC,MAAM,wCApBc,2BAwBtBc,IAAQf,QACN,8MAIFgB,YAAW,WACTpE,EAAMS,QAAQC,QAAQ,CACpB2D,SAAS,cACTlE,MAAO,CACLuD,OAAQF,EAAa7D,KAAKgE,KAAKC,IAC/BU,QAASJ,EAAcvE,KAAK2E,aAG/B,KArCmB,4CAAH,qDA0CjBC,EAAc,EAEZC,EAAWvB,EAAMwB,KAAI,SAACd,EAAMe,GAChC,OAAIf,EAAKK,OAEPO,GAAe,EAEb,yBAAKI,IAAKD,EAAOE,UAAU,iBACzB,uBAAGC,KAAI,gBAAWlB,EAAKC,MACrB,yBACEgB,UAAU,aACVzD,IAA+FwC,EAAKmB,UACpGC,IAAKpB,EAAKK,QAEZ,yBAAKY,UAAU,cAAcjB,EAAKK,QAEpC,yBAAKY,UAAU,iBAAiBjB,EAAKqB,YAIpC,QAGT,OACE,yBAAKJ,UAAU,sBACb,yBAAKA,UAAU,iBACb,4BAAQA,UAAU,iBAAiBK,QAAS3B,GAA5C,wCAIF,yBAAKsB,UAAU,0BACb,yBAAKA,UAAU,aAAf,sDACA,yBAAKA,UAAU,mBACb,yBAAK/C,GAAG,cAAc+C,UAAU,OAC9B,kBAACjD,EAAD,OAEF,yBAAKE,GAAG,cAAc+C,UAAU,OAC9B,kBAACjD,EAAD,OAEF,yBACEE,GAAG,cACH+C,UAAU,MACVnC,MAAO,CAAEC,OAAQ,qBAEjB,kBAACf,EAAD,QAGJ,yBAAKiD,UAAU,gBACb,yBACE/C,GAAG,kBACH+C,UAAU,qBACVnC,MAAO,CAAEpB,MAAqB,IAAdkD,EAAoB,OAEnCC,GAEH,yBACE3C,GAAG,oBACH+C,UAAU,sBACVnC,MAAO,CAAEI,QAAS,QAClBoC,QAAS,WACPnC,EAAgBlB,KAGlB,kBAACV,EAAD,CAAKC,IAAI,UAAUE,MAAM,KAAKC,OAAO,KAAKF,MAAM,aAElD,yBACES,GAAG,qBACH+C,UAAU,uBACVK,QAAS,WACPjD,EAAiBJ,KAGnB,kBAACV,EAAD,CAAKC,IAAI,UAAUE,MAAM,KAAKC,OAAO,KAAKF,MAAM,eAItD,yBAAKwD,UAAU,0BACb,yBAAKA,UAAU,aAAf,6BACA,yBAAKA,UAAU,mBACb,yBAAK/C,GAAG,eAAe+C,UAAU,OAC/B,kBAACjD,EAAD,OAEF,yBACEE,GAAG,eACH+C,UAAU,MACVnC,MAAO,CAAEC,OAAQ,qBAEjB,kBAACf,EAAD,QAGJ,yBAAKiD,UAAU,gBACb,yBACE/C,GAAG,mBACH+C,UAAU,qBACVnC,MAAO,CAAEpB,MAAqB,IAAdkD,EAAoB,OAEnCC,GAEH,yBACE3C,GAAG,qBACH+C,UAAU,sBACVnC,MAAO,CAAEI,QAAS,QAClBoC,QAAS,WACPnC,EAAgBlB,KAGlB,kBAACV,EAAD,CAAKC,IAAI,UAAUE,MAAM,KAAKC,OAAO,KAAKF,MAAM,aAElD,yBACES,GAAG,sBACH+C,UAAU,uBACVK,QAAS,WACPjD,EAAiBJ,KAGnB,kBAACV,EAAD,CAAKC,IAAI,UAAUE,MAAM,KAAKC,OAAO,KAAKF,MAAM,iB,qDCxO7C8D,MAlBf,SAAgBP,EAAKQ,GACjB,IAAMC,EAAcC,iBAAOF,GAE3B7E,qBAAU,WACN8E,EAAYE,QAAUH,KAG1B7E,qBAAU,WACN,SAASiF,EAAOC,GACRA,EAAMC,OAASd,GAAQa,EAAME,UAC7BN,EAAYE,QAAQE,GAI5B,OADAnD,SAASsD,iBAAiB,WAAYJ,GAC/B,kBAAMlD,SAASuD,oBAAoB,WAAYL,MACvD,CAACZ,K,cCiJOkB,MAvJf,SAASA,EAAT,GAAiE,IAAzCnC,EAAwC,EAAxCA,OAAQoC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,qBACjC9F,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QACpCM,EAASL,aAAY,SAACC,GAC1B,OAAIA,EAAMF,KAAK+F,SACN7F,EAAMF,KAAK+F,SAASzF,OAEpB,QAGL0F,EAAU/F,aAAY,SAACC,GAC3B,OAAIA,EAAMF,KAAK+F,SACN7F,EAAMF,KAAK+F,SAASpC,IAEpB,QAILsC,EAAYb,mBAjB4C,EAmBlCrC,oBAAS,GAnByB,mBAmBvDmD,EAnBuD,KAmB/CC,EAnB+C,OAoBlBpD,mBAAS,IApBS,mBAoBvDqD,EApBuD,KAoBvCC,EApBuC,OAqBlCtD,mBAAS,IArByB,mBAqBvDuD,EArBuD,KAqB/CC,EArB+C,OAsB1BxD,oBAAS,GAtBiB,mBAsBvDyD,EAtBuD,KAsB3CC,EAtB2C,KAwBxDC,EAAe,WACnBP,GAAU,SAACjG,GAAD,OAAYA,MAGlByG,EAAW,CACflD,OAAQA,EACRmD,WAAYf,EAAQlC,IAAIkD,YAG1BxG,qBAAU,WACRf,IAAM0E,KAAK,wBAAyB2C,GAAUnH,MAAK,SAAAC,GAC7CA,EAASC,KAAKyD,QAChBoD,EAAU9G,EAASC,KAAKoH,QAExB5C,IAAQ6C,MAAM,sGAGjB,CAACb,IAEJ,IAqDMc,EAAWV,EAAO9B,KAAI,SAACyC,EAAOxC,GAClC,OACE,yBAAKC,IAAKD,EAAOjC,MAAO,CAAC0E,WAAW,SACjCD,GACC,kBAAC,EAAD,CACEnB,qBAAsBY,EACtBjD,OAAQA,EACRoC,QAASoB,QAMnB,OACE,yBAAKtC,UAAU,iBACb,yBAAKA,UAAU,qBACb,yBAAKzD,IAAK2E,EAAQsB,OAAOC,MAAOtC,IAAI,MAAMH,UAAU,QACpD,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,YAAYkB,EAAQsB,OAAOE,UAC1C,yBAAK1C,UAAU,WAAWkB,EAAQyB,SAClC,yBAAK3C,UAAU,gBACb,yBAAKA,UAAU,gBAAf,2BACA,yBAAKA,UAAU,mBAAf,2BACE2B,EAAOiB,OACT,yBAAKvC,QAzEc,WACa,UAApCiB,EAAUZ,QAAQ7C,MAAMI,QAC1BqD,EAAUZ,QAAQ7C,MAAMI,QAAU,OAElCqD,EAAUZ,QAAQ7C,MAAMI,QAAU,SAqEQ+B,UAAU,8BAA9C,gBAA+E2B,EAAOiB,OAAtF,uBAEA,8BAEA,yBAAKvC,QAjFY,WACzByB,GAAc,SAACvG,GAAD,OAAYA,MAgFgByE,UAAU,4BAA5C,6BACEkB,EAAQsB,OAAOxD,MAAQqC,GACzB,yBAAKhB,QAzCe,WAC5B1F,IAAM0E,KAAK,6BAA8B,CAACwD,UAAW3B,EAAQlC,MAAMnE,MAAK,SAAAC,GACnEA,EAASC,KAAKyD,SACfe,IAAQf,QAAQ,kEAChB2C,KAEA5B,IAAQ6C,MAAM,6EAmC2BpC,UAAU,kBAA/C,8BAGArE,EAASkG,EACX,0BAAM7B,UAAU,QACd,8BACEA,UAAU,WACV8C,SA9Ea,SAAClC,GACxBc,EAAkBd,EAAMmC,cAAcC,QA8E5BA,MAAOvB,EACPwB,YAAY,oEAEd,4BAAQjD,UAAU,MAAMK,QA9ER,SAACO,GAEzB,GADAA,EAAMsC,iBACgB,KAAnBzB,EAAH,CAGA,IAAM0B,EAAY,CAChBR,QAASlB,EACTe,OAAQnH,EAAK+F,SAASpC,IACtBF,OAAQA,EACRmD,WAAYf,EAAQlC,IAAIkD,YAG1BvH,IAAM0E,KAAK,2BAA4B8D,GAAWtI,MAAK,SAAAC,GAClDA,EAASC,KAAKyD,SACfe,IAAQf,QAAQ,gDAChBuD,IACAL,EAAkB,IACsB,UAApCJ,EAAUZ,QAAQ7C,MAAMI,UAC1BqD,EAAUZ,QAAQ7C,MAAMI,QAAU,UAGpCsB,IAAQ6C,MAAM,+EAyDV,8BAGF,gCAIJ,yBAAKgB,IAAK9B,EAAWtB,UAAU,mBAC5BqC,KCjDMgB,MAnGf,YAA4B,IAAVvE,EAAS,EAATA,OACVzD,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QACpCM,EAASL,aAAY,SAACC,GAC1B,OAAIA,EAAMF,KAAK+F,SACN7F,EAAMF,KAAK+F,SAASzF,OAEpB,QANc,EAUGyC,oBAAS,GAVZ,mBAUlBmD,EAVkB,KAUVC,EAVU,OAWmBpD,mBAAS,IAX5B,mBAWlBqD,EAXkB,KAWFC,EAXE,OAYOtD,mBAAS,IAZhB,mBAYlBkF,EAZkB,KAYRC,EAZQ,KAcnBxB,EAAe,WACnBP,GAAU,SAACjG,GAAD,OAAYA,MAGxBG,qBAAU,WACRf,IAAM0E,KAAK,0BAA2B,CAACP,OAAQA,IAASjE,MAAK,SAAAC,GACvDA,EAASC,KAAKyD,QAChB+E,EAAYzI,EAASC,KAAKoH,QAE1B5C,IAAQ6C,MAAM,gGAGjB,CAACb,IAEJ,IAIMiC,EAAmB,SAAC5C,GAExB,GADAA,EAAMsC,iBACgB,KAAnBzB,EAAH,CAIA,IAAM0B,EAAY,CAChBR,QAASlB,EACTe,OAAQnH,EAAK+F,SAASpC,IACtBF,OAAQA,EACRmD,WAAa,IAGftH,IAAM0E,KAAK,2BAA4B8D,GAAWtI,MAAK,SAAAC,GAClDA,EAASC,KAAKyD,SACfe,IAAQf,QAAQ,gDAChBuD,IACAL,EAAkB,KAElBnC,IAAQ6C,MAAM,8EAWdqB,EAAaH,EAASzD,KAAI,SAACqB,EAASpB,GACxC,OACE,yBAAKC,IAAKD,GACPoB,GACC,kBAAC,EAAD,CACEC,qBAAsBY,EACtBjD,OAAQA,EACRoC,QAASA,QAMnB,OACE,yBAAKlB,UAAU,aACb,6BACCrE,GACD,0BAAMqE,UAAU,QACd,8BACEA,UAAU,WACV8C,SAtDiB,SAAClC,GACxBc,EAAkBd,EAAMmC,cAAcC,QAsDhCA,MAAOvB,EACPwB,YAAY,oEAEd,4BAAQjD,UAAU,MAAMK,QAASmD,GAAjC,8BAGF,6BACA,6CAASF,EAASV,OAAlB,UACA,6BACCa,EACD,+BC5FSC,EAAQ,KAuERC,MArEf,SAAwBvI,GACpB,IAAM0D,EAAS1D,EAAMwI,MAAMC,OAAO/E,OAC5BkD,EAAW,CAAElD,OAAQA,GAFA,EAISV,mBAAS,IAJlB,mBAIpB0F,EAJoB,KAIRC,EAJQ,OAKG3F,mBAAS,IALZ,mBAKpBsB,EALoB,KAKXsE,EALW,OAMK5F,oBAAS,GANd,mBAMpB6F,EANoB,KAMVC,EANU,KA8B3B,OAtBAxI,qBAAU,WACN6C,IAAMc,KAAK,0BAA2B2C,GAAUnH,MAAK,SAACC,GAC9CA,EAASC,KAAKyD,QACduF,EAAcjJ,EAASC,KAAK+I,YAE5BvE,IAAQ6C,MAAM,6GAIvB,IAEH1G,qBAAU,WACN6C,IAAM3D,IAAN,8BAAiCkE,IAAUjE,MAAK,SAACC,GACzCA,EAASC,KAAKyD,SACdwF,EAAWlJ,EAASC,KAAK2E,SACzBwE,EAAYpJ,EAASC,KAAKkJ,WAE1B1E,IAAQ6C,MAAM,qDAGvB,IAGC,yBAAKpC,UAAU,yBAGV8D,EAAW5D,WACR,yBACIrC,MAAO,CAAEpB,MAAO,MAAOC,OAAQ,OAC/BH,IAEIuH,EAAW5D,UAGfC,IAAI,cAEZ,8CAAU2D,EAAW1E,OACrB,2DAAa0E,EAAW1D,UACxB,gEAAa0D,EAAWK,SACxB,6BAAML,EAAWM,aACjB,6BAGA,kBAAC,IAAD,CACIvG,MAAO,CAAErB,MAAO,WAChB6H,GACI,CACI5E,SAAUwE,EAAQ,0BAClB1I,MAAO,CACHuD,OAAQA,EACRY,QAASA,KAPzB,yCAaA,kBAAC,EAAD,CAASZ,OAAQA,MCnEXwF,IAAVC,MACSC,IAATC,KAuFOtG,I,gECxFPoG,EAAUD,IAAVC,MAwIOG,mBAtIf,SAAmBtJ,GACjB,IAAMI,EAAWC,cACXkJ,IAAoBC,aAAaC,QAAQ,cAFvB,EAIwBzG,mBAAS,IAJjC,mBAIjB0G,EAJiB,KAICC,EAJD,OAKY3G,mBAASuG,GALrB,mBAKjBK,EALiB,KAKLC,EALK,KAOlBC,EAAmB,WACvBD,GAAeD,IAGXG,EAAeP,aAAaC,QAAQ,cAAgBD,aAAaC,QAAQ,cAAgB,GAE/F,OACE,kBAAC,IAAD,CACEO,cAAe,CACbC,MAAOF,EACPG,SAAU,IAEZC,iBAAkBC,WAAaC,MAAM,CACnCJ,MAAOG,WACJH,MAAM,oBACNK,SAAS,qBACZJ,SAAUE,WACPG,IAAI,EAAG,0CACPD,SAAS,0BAEdE,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBtG,YAAW,WACT,IAAIuG,EAAe,CACjBV,MAAOQ,EAAOR,MACdC,SAAUO,EAAOP,UAGnB9J,EXzBH,SAAmBuK,GAItB,MAAO,CACHtL,KCxBkB,aDyBlBC,QALYC,IAAM0E,KAAN,UDnBO,aCmBP,UAAkC0G,GACrClL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SWuBxBiL,CAAUD,IAChBlL,MAAK,SAAAC,GACAA,EAASJ,QAAQuL,cACnBC,OAAOtB,aAAauB,QAAQ,SAAUrL,EAASJ,QAAQ0L,SACpC,IAAfpB,EACFkB,OAAOtB,aAAauB,QAAQ,aAAcN,EAAO5I,IAEjD2H,aAAayB,WAAW,cAE1BjL,EAAMS,QAAQC,QAAQ,MAEtBiJ,EAAoB,+CAGvBuB,OAAM,SAAAC,GACLxB,EAAoB,4CACpBvF,YAAW,WACTuF,EAAoB,MACnB,QAEPe,GAAc,KACb,QAGJ,SAAA1K,GAAU,IAEPyK,EAOEzK,EAPFyK,OACAW,EAMEpL,EANFoL,QACAC,EAKErL,EALFqL,OACAC,EAIEtL,EAJFsL,aACAC,EAGEvL,EAHFuL,aACAC,EAEExL,EAFFwL,WACAC,EACEzL,EADFyL,aAEF,OACE,yBAAK7G,UAAU,OAEb,kBAAC,EAAD,CAAO8G,MAAO,GAAd,UACA,0BAAMlB,SAAUiB,EAAchJ,MAAO,CAAEpB,MAAO,UAE5C,kBAAC,IAAKsK,KAAN,CAAWrB,UAAQ,GACjB,kBAAC,IAAD,CACEzI,GAAG,QACH+J,OAAQ,kBAAC,IAAD,CAAMvM,KAAK,OAAOoD,MAAO,CAAErB,MAAO,qBAC1CyG,YAAY,mBACZxI,KAAK,QACLuI,MAAO6C,EAAOR,MACdvC,SAAU6D,EACVM,OAAQL,EACR5G,UACEyG,EAAOpB,OAASmB,EAAQnB,MAAQ,mBAAqB,eAGxDoB,EAAOpB,OAASmB,EAAQnB,OACvB,yBAAKrF,UAAU,kBAAkByG,EAAOpB,QAI5C,kBAAC,IAAK0B,KAAN,CAAWrB,UAAQ,GACjB,kBAAC,IAAD,CACEzI,GAAG,WACH+J,OAAQ,kBAAC,IAAD,CAAMvM,KAAK,OAAOoD,MAAO,CAAErB,MAAO,qBAC1CyG,YAAY,sBACZxI,KAAK,WACLuI,MAAO6C,EAAOP,SACdxC,SAAU6D,EACVM,OAAQL,EACR5G,UACEyG,EAAOnB,UAAYkB,EAAQlB,SAAW,mBAAqB,eAG9DmB,EAAOnB,UAAYkB,EAAQlB,UAC1B,yBAAKtF,UAAU,kBAAkByG,EAAOnB,WAI3CR,GACC,+BAAQ,uBAAGjH,MAAO,CAAErB,MAAO,YAAa0K,SAAU,SAAUC,OAAQ,YAAaC,QAAS,OAAQC,aAAc,SAAWvC,IAG7H,kBAAC,IAAKiC,KAAN,KACE,kBAAC,IAAD,CAAU9J,GAAG,aAAa6F,SAAUoC,EAAkBoC,QAAStC,GAA/D,eACA,uBAAGhF,UAAU,oBAAoBC,KAAK,cAAcpC,MAAO,CAAE0J,MAAO,UAApE,mBAGA,6BACE,kBAAC,IAAD,CAAQ9M,KAAK,UAAU+M,SAAS,SAASxH,UAAU,oBAAoBnC,MAAO,CAAE4J,SAAU,QAAUC,SAAUhB,EAAcd,SAAUiB,GAAtI,WANJ,MAUK,uBAAG5G,KAAK,aAAR,0BCzHb0H,EAAiB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAGVG,EAAqB,CACzBD,WAAY,CACVH,GAAI,CACFC,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KAoJCC,MA/If,SAAsB/M,GACpB,IAAMI,EAAWC,cACjB,OAEE,kBAAC,IAAD,CACE2J,cAAe,CACbC,MAAO,GACP3C,SAAU,GACV4C,SAAU,GACV8C,gBAAiB,IAEnB7C,iBAAkBC,WAAaC,MAAM,CACnC/C,SAAU8C,WACPE,SAAS,oBACZL,MAAOG,WACJH,MAAM,oBACNK,SAAS,qBACZJ,SAAUE,WACPG,IAAI,EAAG,0CACPD,SAAS,wBACZ0C,gBAAiB5C,WACd6C,MAAM,CAAC7C,MAAQ,YAAa,MAAO,wBACnCE,SAAS,kCAEdE,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBtG,YAAW,WAET,IAAIuG,EAAe,CACjBV,MAAOQ,EAAOR,MACdC,SAAUO,EAAOP,SACjB5C,SAAUmD,EAAOnD,SACjBD,MAAM,8BAAD,OAAgC6F,MAASC,OAAzC,iBAGP/M,EZ7DH,SAAsBuK,GAIzB,MAAO,CACHtL,KCbqB,gBDcrBC,QALYC,IAAM0E,KAAN,UDTO,aCSP,aAAqC0G,GAChDlL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SY2DhByN,CAAazC,IAAelL,MAAK,SAAAC,GACpCA,EAASJ,QAAQ8D,QACnBpD,EAAMS,QAAQE,KAAK,UAEnB0C,MAAM3D,EAASJ,QAAQ6L,IAAIkC,WAI/B3C,GAAc,KACb,QAGJ,SAAA1K,GAAU,IAEPyK,EAOEzK,EAPFyK,OACAW,EAMEpL,EANFoL,QACAC,EAKErL,EALFqL,OACAC,EAIEtL,EAJFsL,aACAC,EAGEvL,EAHFuL,aACAC,EAEExL,EAFFwL,WACAC,EACEzL,EADFyL,aAEF,OACE,yBAAK7G,UAAU,OACb,uCACA,kBAAC,IAAD,eAAMnC,MAAO,CAAE4J,SAAU,UAAeE,EAAxC,CAAwD/B,SAAUiB,IAEhE,kBAAC,IAAKE,KAAN,CAAWrB,UAAQ,EAACgD,MAAM,QACxB,kBAAC,IAAD,CACEzL,GAAG,WACHgG,YAAY,kBACZxI,KAAK,OACLuI,MAAO6C,EAAOnD,SACdI,SAAU6D,EACVM,OAAQL,EACR5G,UACEyG,EAAO/D,UAAY8D,EAAQ9D,SAAW,mBAAqB,eAG9D+D,EAAO/D,UAAY8D,EAAQ9D,UAC1B,yBAAK1C,UAAU,kBAAkByG,EAAO/D,WAI5C,kBAAC,IAAKqE,KAAN,CAAWrB,UAAQ,EAACgD,MAAM,QAAQC,aAAW,EAACC,eAAgBnC,EAAOpB,OAASmB,EAAQnB,MAAQ,QAAU,WACtG,kBAAC,IAAD,CACEpI,GAAG,QACHgG,YAAY,mBACZxI,KAAK,QACLuI,MAAO6C,EAAOR,MACdvC,SAAU6D,EACVM,OAAQL,EACR5G,UACEyG,EAAOpB,OAASmB,EAAQnB,MAAQ,mBAAqB,eAGxDoB,EAAOpB,OAASmB,EAAQnB,OACvB,yBAAKrF,UAAU,kBAAkByG,EAAOpB,QAI5C,kBAAC,IAAK0B,KAAN,CAAWrB,UAAQ,EAACgD,MAAM,WAAWC,aAAW,EAACC,eAAgBnC,EAAOnB,UAAYkB,EAAQlB,SAAW,QAAU,WAC/G,kBAAC,IAAD,CACErI,GAAG,WACHgG,YAAY,sBACZxI,KAAK,WACLuI,MAAO6C,EAAOP,SACdxC,SAAU6D,EACVM,OAAQL,EACR5G,UACEyG,EAAOnB,UAAYkB,EAAQlB,SAAW,mBAAqB,eAG9DmB,EAAOnB,UAAYkB,EAAQlB,UAC1B,yBAAKtF,UAAU,kBAAkByG,EAAOnB,WAI5C,kBAAC,IAAKyB,KAAN,CAAWrB,UAAQ,EAACgD,MAAM,UAAUC,aAAW,GAC7C,kBAAC,IAAD,CACE1L,GAAG,kBACHgG,YAAY,6BACZxI,KAAK,WACLuI,MAAO6C,EAAOuC,gBACdtF,SAAU6D,EACVM,OAAQL,EACR5G,UACEyG,EAAO2B,iBAAmB5B,EAAQ4B,gBAAkB,mBAAqB,eAG5E3B,EAAO2B,iBAAmB5B,EAAQ4B,iBACjC,yBAAKpI,UAAU,kBAAkByG,EAAO2B,kBAI5C,kBAAC,IAAKrB,KAASkB,EACb,kBAAC,IAAD,CAAQ5H,QAASwG,EAAcpM,KAAK,UAAUiN,SAAUhB,GAAxD,iB,QCnHDmC,MA7Cf,WACE,IAAMzH,EAAW9F,aAAY,SAACC,GAAD,OAAWA,EAAMF,KAAK+F,YACnD,GAAIA,EAAU,CAyBZ,OACE,6BACE,yBAAK7E,IAAK6E,EAASqB,MAAOtC,IAAI,KAC9B,6BAAMiB,EAASiE,OACf,6BAAMjE,EAASsB,UA3BN,SAACtB,GAEZ,OADuBA,EAAS0H,eACVjJ,KAAI,SAACd,EAAMe,GAC/B,OACE,oCACE,6BACGf,EAAKD,QAER,kBAAC,IAAD,CAAMuF,GACJ,CACE5E,SAAS,eACTlE,MAAO,CACLuD,OAAQC,EAAKD,OACbY,QAASX,EAAKW,UAGlBK,IAAOD,GART,qDAoBHiJ,CAAK3H,IAKV,OACE,4C,SCpCE4H,G,QAAaC,IAAbD,UACAzE,EAAUD,IAAVC,MAEF2E,EAAiB,CACnB,CAAElG,MAAO,EAAG0F,MAAO,WACnB,CAAE1F,MAAO,EAAG0F,MAAO,WAGjBS,GAAkB,CACpB,CAAEnG,MAAO,EAAG0F,MAAO,4BACnB,CAAE1F,MAAO,EAAG0F,MAAO,sBACnB,CAAE1F,MAAO,EAAG0F,MAAO,sBACnB,CAAE1F,MAAO,EAAG0F,MAAO,gBACnB,CAAE1F,MAAO,EAAG0F,MAAO,iBAIX,GAAD,OAAK,EAAE,IACN,GAAD,OAAK,GAAG,GAsMJU,OAnMf,SAAwBhO,GACpB,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QADf,EAEO+C,mBAAS,IAFhB,mBAEpBiL,EAFoB,KAETC,EAFS,OAGWlL,mBAAS,IAHpB,mBAGpBgG,EAHoB,KAGPmF,EAHO,OAIOnL,mBAAS,GAJhB,mBAIpBoL,EAJoB,KAITC,EAJS,OAKKrL,mBAAS,4BALd,mBAKpBgC,EALoB,KAKVsJ,EALU,OAMDtL,oBAAS,GANR,mBAMpBuL,EANoB,KAMbC,EANa,OAQKxL,mBAAS,IARd,mBAQpByL,EARoB,KAQVC,EARU,KA6BrBC,EAAgB,SAACnJ,GACnBgJ,GAAS,SAAArO,GAAK,OAAKA,MA0BjBqK,EAAW,SAAChF,GAEd,GADAA,EAAMsC,iBACY,KAAdmG,GAAoC,KAAhBjF,GAAmC,KAAbyF,EAA9C,CAKA,IAAIG,EAEAA,EADAL,EACa,EAAE,GAEF,GAAG,EAEpB,IAAMM,EAAiB,CACnB9F,QAAS9I,EAAK+F,SAASpC,IACvBI,MAAOiK,EACPjF,YAAaA,EACblE,UAAW2J,EACXK,QAASV,EACTpJ,SAAUA,EACVuJ,MAAOK,EACPxH,OAAQ,CAACnH,EAAK+F,SAASpC,KACvBmL,UAAW,GACXC,WAAY,GACZC,IAAK,GACLC,MAAO,IAGX/L,IAAMc,KAAK,uBAAwB4K,GAAgBpP,MAAK,SAACC,GACjDA,EAASC,KAAKyD,SACde,IAAQf,QACJ,+MAEJgB,YAAW,WACPpE,EAAMS,QAAQC,QAAd,uBACoBhB,EAASC,KAAKgE,KAAKC,QAExC,MAEHP,MAAM,yCApCVA,MAAM,0EAyCd,OACI,yBAAKZ,MAAO,CAAE0M,SAAU,QAASC,OAAQ,cACrC,yBAAK3M,MAAO,CAAE4M,UAAW,SAAUC,aAAc,SAC7C,kBAAC,EAAD,CAAO5D,MAAO,GAAd,gBAEJ,kBAAC,IAAD,CAAMlB,SAAUA,GACZ,yBACI/H,MAAO,CAAEI,QAAS,OAAQ0M,eAAgB,kBAG1C,kBAAC,IAAD,CACIC,OA9EL,SAACC,GACZ,GAAKA,EAAM,GAAX,CAKA,IAAIC,EAAW,IAAIC,SAInBD,EAASE,OAAO,OAAQH,EAAM,IAE9BtM,IAAMc,KAAK,wBAAyByL,EALrB,CACXG,OAAQ,CAAE,eAAgB,yBAIwBpQ,MAClD,SAACC,GACOA,EAASC,KAAKyD,QACdsL,EAAYhP,EAASC,KAAKmQ,KAE1BzM,MAAM,2CAfdA,MAAM,uDA6EM0M,UAAU,EACVC,QAAS,MAER,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACG,uCACIzN,MAAO,CACHpB,MAAO,QACPC,OAAQ,QACRyK,OAAQ,sBACRlJ,QAAS,OACTsN,WAAY,SACZZ,eAAgB,WAEhBU,KAEJ,0BAAWC,KACX,kBAAC,IAAD,CACI7Q,KAAK,OACLoD,MAAO,CAAEqJ,SAAU,cAMlC2C,GACG,6BACI,yBACI7J,UAAU,iBACVzD,IAAG,iBAAYhC,EAAZ,iBAA+BsP,GAClC1J,IAAI,gBAKpB,6BACA,6BACA,wCACA,kBAAC,IAAD,CAAO2C,SAzIG,SAAClC,GACnB0I,EAAa1I,EAAMmC,cAAcC,QAwIOA,MAAOqG,IACvC,6BACA,6BACA,8CACA,kBAACL,EAAD,CAAUlG,SAzIM,SAAClC,GACzB2I,EAAe3I,EAAMmC,cAAcC,QAwIcA,MAAOoB,IAChD,6BACA,6BACA,4BAAQtB,SAxII,SAAClC,GACrB6I,EAAa7I,EAAMmC,cAAcC,SAwIpBkG,EAAerJ,KAAI,SAAC2L,EAAM1L,GAAP,OAChB,4BAAQC,IAAKD,EAAOkD,MAAOwI,EAAKxI,OAC3BwI,EAAK9C,WAIlB,6BACA,6BACA,4BAAQ5F,SA7IM,SAAClC,GACvB,IAAI6K,EAAU7K,EAAMmC,cAAcC,MAClC0G,EAAY9I,EAAMmC,cAAc0I,GAASC,QA4I5BvC,GAAgBtJ,KAAI,SAAC2L,EAAM1L,GAAP,OACjB,4BAAQC,IAAKD,EAAOkD,MAAOwI,EAAKxI,OAC3BwI,EAAK9C,WAIlB,6BACA,6BACA,+BAAO,2BAAOjO,KAAK,QAAQkR,KAAK,QAAQrE,QAASqC,EAAO7G,SAAUiH,IAAlE,sBACA,6BACA,+BAAO,2BAAOtP,KAAK,QAAQkR,KAAK,QAAQrE,SAAUqC,EAAO7G,SAAUiH,IAAnE,4BASA,6BACA,6BACA,kBAAC,IAAD,CAAQtP,KAAK,UAAUmR,KAAK,QAAQvL,QAASuF,GAA7C,gB,aCjNEtB,IAAVC,MAEOb,EAAQ,KAgbRmI,I,kBC1ZAC,I,gCA7BY,SAAC1Q,GAAW,IAG/B2Q,EAFoB3Q,EAAlB4Q,cAE8BnM,KAAI,SAACoM,EAAYnM,GACrD,OACE,yBAAKC,IAAKD,GACR,yBACEE,UAAU,iBACVnC,MAAO,CAAEqO,KAAK,GAAD,OAAKD,EAAWE,KAAhB,OAEb,yBACEnM,UAAU,uBACVnC,MAAO,CAACnB,OAAO,GAAD,OAAKuP,EAAWL,KAAhB,KACNQ,IAAI,GAAD,OAAKH,EAAWI,KAAhB,OAET,yBACErM,UAAU,eACVzD,IAAK0P,EAAWxJ,MAChBtC,IAAI,cAQlB,OAAO,yBAAKH,UAAU,mBAAoB+L,K,qBCe7BO,GAFGC,IAAKC,OAAO,CAAEb,KAAM,cAApBY,EArCS,SAAC,GAAuD,IAArDE,EAAoD,EAApDA,QAASC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACvDC,EAAsBF,EAAtBE,kBAQR,OAFAxM,EAAO,SAJP,WACEqM,OAKEF,EAEA,kBAAC,KAAD,CACEA,SAAS,EACTrN,MAAK,gFAAoByN,EAApB,KACLE,OAAO,SACPL,SAAUA,EACVM,KAAML,GAEN,kBAAC,IAAD,CAAMM,OAAO,YACX,kBAAC,IAAKlG,KAAN,CAAW2B,MAAM,SACdoE,EAAkB,QAAS,CAC1BI,MAAO,CACL,CACExH,UAAU,EACVnG,QAAS,2CAJduN,CAOE,kBAAC,IAAD,CAAO1J,IAAK,SAAC+J,GAAD,OAAWA,GAASA,EAAMC,eAM1C,MCnCJ,SAASC,GAAgBC,GAC9B,MAAO,CACL7S,KjBIgC,uBiBHhCC,QAAS4S,GAIN,SAASC,GAAUC,GACxB,MAAO,CACL/S,KjBF0B,iBiBG1BC,QAAS8S,GCDb,IAmKeC,GAnKI,SAAC,GAAyD,IAwDvEC,EAxDgBC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC9CtS,EAAWC,cACbI,EAAUkS,cACR1S,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QACpC2S,EAAW1S,aAAY,SAACC,GAAD,OAAWA,EAAM0S,KAAKD,YAC7C3M,EAAUhG,EAAK+F,SAASpC,IAAIkD,WALwC,EAM5C9D,oBAAS,GANmC,mBAMnEqO,EANmE,KAM1DyB,EAN0D,OAO5C9P,mBAAS,MAPmC,mBAOnE+P,EAPmE,KAO1DC,EAP0D,OAQtChQ,mBAAS,GAR6B,mBAQnEyO,EARmE,KAQvDwB,EARuD,OAShCjQ,mBAAS,MATuB,mBASnEkQ,EATmE,KASpDC,EAToD,OAUxCnQ,mBAAS,GAV+B,mBAUnEoQ,EAVmE,KAUxDC,EAVwD,KAmDpEC,EAAcC,uBAAY,SAACC,GAClB,OAATA,GACFR,EAAWQ,KAEZ,IA2BGC,EAAgB,WACpBC,GAAOC,KAAK,qBAAsB,CAAEpB,WAAUtM,YAC9C2N,aAAaV,GACbhR,QAAQC,IAAI,cAAe+Q,GAC3BJ,GAAW,GACX1S,EAAS+R,IAAU,KAvFqD,EA8FlDnP,mBAAS,GA9FyC,mBA8FnE6Q,EA9FmE,KA8F7DC,EA9F6D,KAgG1ExT,qBAAU,WACRoT,GAAOK,IAAI,aACXL,GAAOM,GAAG,aAAa,SAACrU,GACtB0T,GAA0B,EAAbD,MAGfM,GAAOK,IAAI,mBACXL,GAAOM,GAAG,mBAAmB,WAC3BlB,GAAW,GACXgB,EAAQ,GACRA,EAAQ,MAGVJ,GAAOC,KAAK,qBAAsB,CAAEpB,eACnC,CAACA,IAEJjS,qBAAU,WACJuT,IACFD,aAAaV,GACbhR,QAAQC,IAAI,uBAAwB+Q,GACpChR,QAAQC,IAAI,oBAEb,CAAC0R,IAtHsE,MAwH5C7Q,qBAxH4C,mBAwHnEiR,EAxHmE,KAwH1DC,EAxH0D,KAuI1E,OAdA5T,qBAAU,WAER,IACM6T,GADcC,MAAMC,QAAQ3B,GAAmBA,EAAgBlL,OAAS,GAC7CoL,EAE7BuB,GAAc,GAAKA,GAAc,IACnCjS,QAAQC,IAAI,iBAAkBgS,GAC9BD,EAAW,aAAIE,MAAM,EAAID,IAAa1P,KAAI,SAAC6P,EAAG5P,GAC5C,OAAO,yBAAKC,IAAKD,GAAV,uBAAsB,qCAGhC,CAACkO,EAAUF,IAIZ,oCAEIuB,EAGArB,EAAW,GACX,oCACE,yBACE/Q,GAAG,SACHoD,QAvFa,WACrB7E,EAAS+R,IAAU,IACnByB,aAAaV,GACbhR,QAAQC,IAAI,cAAe+Q,GAC3B,IAAIqB,EAAO,GACXtB,EAAcsB,GACdjC,EAAWkC,aAAY,WAGrB,GAFAtS,QAAQC,IAAI,mCAEC,MADboS,EAKE,OAHArS,QAAQC,IAAI,kEACZsS,cAAcnC,QACdmB,IAGFR,EAAcsB,KACb,KACHrS,QAAQC,IAAI,WAAYmQ,GACxBa,EAAiBb,GAEjBoB,GAAOC,KAAK,qBAAsB,CAAEpB,WAAUtM,YAC9C6M,GAAW,IAmEHrQ,MAAO,CAAErB,MAAO,QAHlB,iCASJ,kBAAC,GAAD,CACE4G,IAAKsL,EACLjC,QAASA,EACTC,SAAUmC,EACVlC,SAlEgB,WA1EpBwB,EAAQ2B,eAAR,uCAAuB,WAAOvJ,EAAKV,GAAZ,iBAAAlH,EAAA,yDACrBqQ,aAAaV,GACbhR,QAAQC,IAAI,cAAe+Q,IACvB/H,GAAQkG,EAHS,wDAOf1R,EAAO,CACX+D,OAAQ+O,EACR5O,YAAa0O,EACbxO,QAAS,EACTD,WAAY0O,EAAc,EAC1BxO,MAAOyG,EAAOzG,OAZK,SAcHzE,IAAM0E,KAAK,oBAAqBtE,GAd7B,OAcfgV,EAde,OAiBrBjB,GAAOC,KAAK,iBAAkB,CAAErP,QAASiO,EAAUvH,OAAQ/E,EAAS2O,IAAKD,EAAIhV,KAAKiV,MAGlF7B,EAAQ8B,cACR/B,GAAW,GAGXrS,EAAQC,QAAQ,CACd2D,SAAS,cACTlE,MAAO,CACLuD,OAAQ+O,EACRnO,QAASqQ,EAAIhV,KAAK2E,WA5BD,4CAAvB,0DA6IImN,WAAYA,M,UCvJLqD,OAff,SAAkBnQ,EAAKQ,GACnB,IAAMC,EAAcC,iBAAOF,GAE3B7E,qBAAU,WACN8E,EAAYE,QAAUH,KAG1B7E,qBAAU,WACN,SAASiF,EAAOC,GACZJ,EAAYE,QAAQE,GAGxB,OADAnD,SAASsD,iBAAiBhB,EAAKY,GACxB,kBAAMlD,SAASuD,oBAAoBjB,EAAKY,MAChD,KCkCQwP,OAxCf,YAAqD,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,YAAe,EACxBjS,oBAAS,GADe,mBACzCkS,EADyC,KACnCC,EADmC,OAGvBC,aACrBJ,EACA,CACIK,KAAM,kBAAM,KACZC,WAAY,WACRH,GAAQ,MAR4B,mBAGzC7E,EAHyC,KAGjCiF,EAHiC,KAGjCA,KAoBf,SAASC,EAAYhQ,GACjB+P,IASJ,OAbArQ,EAAO,QAASsQ,GAChBtQ,EAAO,QAASsQ,GAChBV,GAAS,UAAWU,GAKpBlV,qBAAU,WACN,OAAO,WACH2U,GAAY,MAEjB,CAACC,IAEAF,EACO,6BAAM1E,GAEN,+BCnCFmF,GAAY,SAACzV,GAAW,IAC3B0V,EAAgD1V,EAAhD0V,SAAUV,EAAsChV,EAAtCgV,WAAYC,EAA0BjV,EAA1BiV,YAAaU,EAAa3V,EAAb2V,SAC3C,OACE,yBAAK/Q,UAAU,kBACb,yBAAKA,UAAU,cAAc8Q,GAC7B,wBAAI9Q,UAAU,cACd,6BACA,yBAAKA,UAAU,cACb,6BAEI+Q,EAAW,kBAAC,GAAD,CACTX,WAAYA,EACZC,YAAaA,IACVD,MASJY,GAAkB,SAAC5V,GAAU,IAKtCyS,EAQEzS,EARFyS,QACAiD,EAOE1V,EAPF0V,SACAV,EAMEhV,EANFgV,WACAtC,EAKE1S,EALF0S,gBACAH,EAIEvS,EAJFuS,SACAC,EAGExS,EAHFwS,YACAyC,EAEEjV,EAFFiV,YACAU,EACE3V,EADF2V,SAGIE,EAAUnD,EAAgBjO,KAAI,SAACqR,EAAQpR,GAC3C,OACE,kBAAC,IAAD,CAAMuE,GACJ,CACI5E,SAAS,YACTM,IAAID,EACJvE,MAAO,CACHuD,OAAQ+O,EACRnO,QAASwR,EAAOxR,UAGtBK,IAAKD,GACNoR,EAAOC,OAVV,IAUkB,iCAItB,OACE,yBAAKnR,UAAU,kBACb,yBAAKA,UAAU,cAAc8Q,GAC7B,wBAAI9Q,UAAU,cACd,yBAAKA,UAAU,cAEX+Q,EAAW,kBAAC,GAAD,CACTX,WAAYA,EACZC,YAAaA,IACVD,EAEP,6BAEA,6BAAMa,GACN,6BACCnD,EAAgBlL,OAtEN,EAuET,6BACE,kBAAC,GAAD,CACE+K,SAAUA,EACVC,YAAaA,EACbC,QAASA,EACTC,gBAAiBA,KAIrB,iC,QC3BKsD,OAvDf,SAAsBhW,GAAQ,IACpB0D,EAAyC1D,EAAzC0D,OAAQY,EAAiCtE,EAAjCsE,QAAS2R,EAAwBjW,EAAxBiW,QAASC,EAAelW,EAAfkW,WAE5BjW,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAHf,EAKF+C,mBAAS,IALP,mBAKpBmG,EALoB,KAKdgN,EALc,OAMUnT,mBAAS,IANnB,mBAMpBoT,EANoB,KAMRjI,EANQ,KAmC3B,OAAO8H,EACL,yBAAKrR,UAAU,iBACb,yBAAKA,UAAU,iBACb,4BAAQA,UAAU,YAAYK,QAAS,kBAAMiR,GAAW,SAAA/V,GAAK,OAAKA,OAAlE,SAGA,wCACA,2BAAOuH,SAlCS,SAAClC,GACrB2Q,EAAS3Q,EAAMmC,cAAcC,QAiCOA,MAAOuB,IACvC,8CACA,8BAAUzB,SAhCY,SAAClC,GAC3B2I,EAAe3I,EAAMmC,cAAcC,QA+BUA,MAAOwO,IAChD,4BAAQxR,UAAU,MAAMK,QA7Bb,SAACO,GAChBA,EAAMsC,iBACN,IAAMlB,EAAW,CACf5C,MAAQmF,EACRH,YAAcoN,EACdnW,KAAOA,EAAK+F,SAASpC,IACrBU,QAAUA,EACVZ,OAASA,GAEXP,IAAMc,KAAK,sBAAuB2C,GAAUnH,MAAK,SAACC,GAC5CA,EAASC,KAAKyD,SAGhBe,IAAQf,QAAQ,kGAChB8S,GAAW,SAAA/V,GAAK,OAAKA,MAHrBgE,IAAQ6C,MAAM,gGAkBd,8BAMJ,I,QCpDJ,SAASqP,KACP,IAAI5R,EAAMpC,SAASiU,uBAAuB,oBAAoB,GAE1D3T,EADgBmI,OAAOyL,iBAAiB9R,GACd+R,iBAAiB,aAC3CC,EACY,SAAd9T,EAAuB+T,SAAS/T,EAAUJ,MAAM,KAAK,IAAM,EAE7DkC,EAAIhC,MAAME,UAAV,oBAAmC8T,EAAe,IAAlD,YAGF,SAASE,KACP,IAAIlS,EAAMpC,SAASiU,uBAAuB,oBAAoB,GAE1D3T,EADgBmI,OAAOyL,iBAAiB9R,GACd+R,iBAAiB,aAC3CC,EACY,SAAd9T,EAAuB+T,SAAS/T,EAAUJ,MAAM,KAAK,IAAM,EAE7DkC,EAAIhC,MAAME,UAAV,oBAAmC8T,EAAe,IAAlD,YAiIaG,OAtFf,SAAyB5W,GAAQ,IACvB6W,EAA4B7W,EAA5B6W,YAAaX,EAAelW,EAAfkW,WADS,EAEFlW,EAAMS,QAA1BiD,EAFsB,EAEtBA,OAAQY,EAFc,EAEdA,QAFc,EAGAtB,mBAAS,MAHT,mBAGvB8T,EAHuB,KAGdC,EAHc,OAIU/T,mBAAS,MAJnB,mBAIvBgU,EAJuB,KAITC,EAJS,OAKIjU,mBAAS,MALb,mBAKvBkU,EALuB,KAKZC,EALY,KAO9B,SAASC,EAAM1S,EAAO2S,EAAOF,GAC3BF,EACE7S,YAAW,YA3BjB,SAAsBpE,GAAQ,IACpB0E,EAA+B1E,EAA/B0E,MAAO2S,EAAwBrX,EAAxBqX,MAAOF,EAAiBnX,EAAjBmX,aACtBhU,IAAM3D,IAAN,iCAAoC6X,IAAS5X,MAAK,SAACC,GACjD,GAAKA,EAASC,KAAKyD,QAEZ,CACL,IAAMkU,EAAU5X,EAASC,KAAK0X,MAAMC,QAC9BC,EAAUD,EAAQA,EAAQ9P,OAAS,GACzC2P,EAAa,CACXK,WAAY9S,EACZsK,WAAU,OAAEuI,QAAF,IAAEA,OAAF,EAAEA,EAASvI,WACrBuB,KAAI,OAAEgH,QAAF,IAAEA,OAAF,EAAEA,EAAShH,KACfwF,OAAM,OAAEwB,QAAF,IAAEA,OAAF,EAAEA,EAASxB,cARnB1S,MAAM,yCAwBJoU,CAAa,CAAE/S,QAAO2S,QAAOF,mBAC5B,MAaP,IAAMO,EAAoBpT,EAAQG,KAAI,SAAC4S,EAAO3S,GAC5C,OACE,yBACEE,UAAU,mBACVD,IAAKD,EAAQ,EACbiT,aAAc,kBAAMP,EAAM1S,EAAO2S,EAAOF,IACxCS,aAAc,kBAdlBT,EAAa,WACbvD,aAAaoD,IAcT/R,QAAS,kBAAM8R,EAAWrS,EAAQ,KAEjCwS,GAAaA,EAAUM,aAAe9S,EACrC,6BACE,yBAAKE,UAAU,wBAAf,KAAyCF,EAAQ,GACjD,yBAAKE,UAAU,uBAAuBzD,IAAK+V,EAAUlI,aACrD,yBAAKpK,UAAU,yBAAyBsS,EAAU3G,KAAlD,KACA,yBAAK3L,UAAU,yBAAf,IAAyCsS,EAAUnB,OAAnD,MAGF,6BACE,yBAAKnR,UAAU,wBAAf,KAAyCF,EAAQ,QAQ3D,OAAO1E,EAAMiW,QACX,yBAAKrR,UAAU,oBACb,4BAAQA,UAAU,YAAYK,QAAS,WA/BzCiR,GAAW,KA+BT,SAIA,yBAAKtR,UAAU,aAAaK,QAASoR,IAArC,oEAIA,yBAAKzR,UAAU,cAAcK,QAAS0R,IAAtC,qEAIA,yBAAK/R,UAAU,oBAAoB8S,GAElCZ,EACC,yBAAKlS,UAAU,iBACb,4BACEA,UAAU,SACVK,QAAS,kBA9GrB,SAAmBjF,GAAQ,IACjB6W,EAA0C7W,EAA1C6W,YAAanT,EAA6B1D,EAA7B0D,OAAQY,EAAqBtE,EAArBsE,QAASwS,EAAY9W,EAAZ8W,QAChCnX,EAAO,CAAEA,KAAM,CAAEkY,WAAYf,EAAU,IAC7C3T,IAAMc,KAAK,2BAA4BtE,GAAMF,MAAK,SAACC,GACjD,GAAKA,EAASC,KAAKyD,QAEZ,CACLyT,EAAYnW,QAAQ,CAClB2D,SAAS,YACTlE,MAAO,CACLmE,QAASA,EAAQwS,EAAU,GAC3BpT,OAAQA,KAIZ,IADA,IAAMoU,EAAQzV,SAASiU,uBAAuB,aACrCyB,EAAID,EAAMtQ,OAAS,EAAGuQ,GAAK,EAAGA,IACrCD,EAAMC,GAAGC,aAXX7T,IAAQ6C,MAAM,mDAyGOiR,CAAU,CAAEpB,cAAanT,SAAQY,UAASwS,cAF3D,MAMA,4BAAQlS,UAAU,YAAYK,QAAS,kBAAM8R,EAAW,QAAxD,SAGA,yBAAKnS,UAAU,gBAAf,6EAIA,MAEJ,MCjJAsT,I,QACE,GADFA,GAEG,EAFHA,GAGO,EAHPA,GAIQ,EAJRA,GAKK,EALLA,GAMO,EAmDEC,GA/CK,WAElB,OADoBjY,aAAY,SAACC,GAAD,OAAWA,EAAMiY,SAASlG,gBAExD,KAAKgG,GACH,OAAO,KACT,KAAKA,GACH,OACE,yBACEzV,MAAO,CAAE4V,UAAW,4BACpBzT,UAAU,gBAEV,yBAAKA,UAAU,gBAAf,iBAGN,KAAKsT,GACH,OACE,yBACEzV,MAAO,CAAE4V,UAAW,8BACpBzT,UAAU,iBAGhB,KAAKsT,GACH,OACE,yBACEzV,MAAO,CAAE4V,UAAW,+BACpBzT,UAAU,iBAGhB,KAAKsT,GACH,OACE,yBACEzV,MAAO,CAAE4V,UAAW,4BACpBzT,UAAU,iBAGhB,KAAKsT,GACH,OACE,yBACEzV,MAAO,CAAE4V,UAAW,8BACpBzT,UAAU,iBAGhB,QACE,OAAO,OClDN,SAAS0T,GAAa3N,GASzB,OARAzI,QAAQC,IAAIwI,GAQL,CACHtL,KzBXsB,iByBYtBC,aATsCyB,IAA1B4J,EAAaiI,SAAyBjI,EAAaiI,SAAWrT,IAAMC,IAAN,iCAAoCmL,EAAarG,UAC1H7E,MAAK,SAAAC,GAGF,OAFAwC,QAAQC,IAAIzC,EAASC,MACPD,EAASC,KAAK0X,MACfkB,SAAS3F,aCV3B,SAAS4F,GAAcC,GAC5B,MAAO,CACLpZ,K1BO0B,iB0BN1BC,QAASmZ,GCyBb,SAASC,KACP,GAA0C,qBAA/BrW,SAASsW,kBAClB,MAAO,oBACF,GAA6C,qBAAlCtW,SAASuW,qBACzB,MAAO,uBACF,GAA4C,qBAAjCvW,SAASwW,oBACzB,MAAO,sBACF,GAAgD,qBAArCxW,SAASyW,wBACzB,MAAO,0BAEP,MAAM,IAAIC,MAAM,sD,QCOpB,IACMC,GAAW,CACf,CAAE1U,QAAS,EAAG2U,KAAM,MACpB,CAAE3U,QAAS,EAAG2U,KAAM,MACpB,CAAE3U,QAAS,EAAG2U,KAAM,MACpB,CAAE3U,QAAS,EAAG2U,KAAM,MACpB,CAAE3U,QAAS,KAAM2U,KAAM,MACvB,CAAE3U,QAAS,KAAM2U,KAAM,MACvB,CAAE3U,QAAS,EAAG2U,KAAM,MACpB,CAAE3U,QAAS,EAAG2U,KAAM,MACpB,CAAE3U,QAAS,EAAG2U,KAAM,MACpB,CAAE3U,QAAS,GAAI2U,KAAM,MACrB,CAAE3U,QAAS,GAAI2U,KAAM,MACrB,CAAE3U,QAAS,GAAI2U,KAAM,MACrB,CAAE3U,QAAS,GAAI2U,KAAM,MACrB,CAAE3U,QAAS,GAAI2U,KAAM,MACrB,CAAE3U,QAAS,GAAI2U,KAAM,MACrB,CAAE3U,QAAS,GAAI2U,KAAM,MACrB,CAAE3U,QAAS,GAAI2U,KAAM,MACrB,CAAE3U,QAAS,GAAI2U,KAAM,MACrB,CAAE3U,QAAS,GAAI2U,KAAM,MACrB,CAAE3U,QAAS,GAAI2U,KAAM,MACrB,CAAE3U,QAAS,GAAI2U,KAAM,MACrB,CAAE3U,QAAS,GAAI2U,KAAM,OAMnBC,GAAQ,CAAC,EAAG,GACZC,GAAW,CAAC,GAAI,GAChBC,IAAO,EAwIIC,OAtIf,SAAsBrZ,GAAQ,IACpBiW,EAAoCjW,EAApCiW,QAAsBC,GAAclW,EAA3B6W,YAA2B7W,EAAdkW,YADH,EAEClW,EAAMS,QAFP,KAEnBiD,OAFmB,EAEXY,QAEgBtB,sBAJL,mBAIpBsW,EAJoB,KAIVC,EAJU,KA+B3B,SAASC,EAAUC,GACjBP,GAAQ,CAACO,EAAEC,MAAOD,EAAEE,OACpBP,IAAO,EACPK,EAAE3R,iBAGJ,SAAS8R,EAAQH,GACfL,IAAO,EACPK,EAAE3R,iBAGJ,SAAS+R,EAAUJ,GACbL,KACEF,GAAM,KAAOO,EAAEC,OAASR,GAAM,KAAOO,EAAEE,QACzCR,GAAW,CACTA,GAAS,IAAMD,GAAM,GAAKO,EAAEC,OAC5BP,GAAS,IAAMD,GAAM,GAAKO,EAAEE,QAE9BJ,EAAYJ,IACZD,GAAQ,CAACO,EAAEC,MAAOD,EAAEE,SAGxBF,EAAE3R,kBA9FN,WAA8C,IAAtBgS,EAAqB,uDAAV,aAAU,EACD9W,oBAAS,GADR,mBACpC+W,EADoC,KACrBC,EADqB,KAEvCD,IACJD,IACAE,GAAiB,IA2CjBC,EAAe,WACbV,EAAYJ,OAKd7Y,qBAAU,WACR,IAAI4Z,EAAY7X,SAASiU,uBAAuB,iBAC5CL,GACFiE,EAAU,GAAGvU,iBAAiB,YAAa6T,GAC3CU,EAAU,GAAGvU,iBAAiB,UAAWiU,GACzCM,EAAU,GAAGvU,iBAAiB,YAAakU,IAEvCK,EAAU,KACZA,EAAU,GAAGtU,oBAAoB,YAAa4T,GAC9CU,EAAU,GAAGtU,oBAAoB,UAAWgU,GAC5CM,EAAU,GAAGtU,oBAAoB,YAAaiU,MAGjD,CAAC5D,IA+BJ,IAAIkE,EAAQ,EACRC,EAAY,EACZC,EAAM,EACJC,EAAgBtB,GAASvU,KAAI,SAAC4S,EAAO3S,GAUzC,OATI2V,IAAQD,IACVD,GAAS,EACTE,EAAM,EACND,GAAwB,GAE1BC,GAAO,EAKL,yBACEzV,UAAU,wBACVnC,MAAO,CACLpB,MAAQ,MACRC,OAAS,EAAI8Y,EAAa,IAAM,IAChCtJ,MAAQqJ,EAAQ,GA5GP,EA4G0B,IAAM,IACzCnJ,KAAOqJ,EAAM,GAAKD,EAAa,IAAM,MAIvC,yBACExV,UAAU,eACVnC,MAAO,CAAEpB,MAAO,OAAUC,OAAQ,UAnHzB,IAsHV6Y,EACC,kBAAC,WAAD,KACE,wBACEvV,UAAU,mBACVnC,MAAO,CAAEqO,KAAM,MAAOE,IAAK,WAE7B,wBACEpM,UAAU,mBACVnC,MAAO,CAAEqO,KAAM,MAAOE,IAAK,WAE7B,wBACEpM,UAAU,mBACVnC,MAAO,CAAEqO,KAAM,MAAOE,IAAK,WAE7B,wBACEpM,UAAU,mBACVnC,MAAO,CAAEqO,KAAM,MAAOE,IAAK,WAE7B,wBACEpM,UAAU,mBACVnC,MAAO,CAAEqO,KAAM,MAAOE,IAAK,SAE7B,wBAAIpM,UAAU,+BAEd,SAKV,OAAOqR,EACL,yBAAKrR,UAAU,iBACb,4BAAQA,UAAU,YAAYK,QAAS,WAxFzCiR,GAAW,KAwFT,SAGA,yBACEtR,UAAU,gBACVnC,MAAO,CACLpB,MAAOkZ,MACPjZ,OAjIS,EAiIYkZ,KAAKC,IAAI,EAAGC,GAAkB,IACnD5J,KAAMwI,EAAS,GACftI,IAAKsI,EAAS,KAGfgB,IAGH,M,mFCnLAK,GAAY,IAAIC,MACtBD,GAAUE,OAAS,GACnB,IAAMC,GAAc,IAAIF,MACxBE,GAAYD,OAAS,GAUrB,IA+XeE,GA/XO,SAAC/a,GACrB,IA0BIgb,EAAcC,EACdC,EA5B2B,EACdpa,cACoBX,MAA7BuD,EAFuB,EAEvBA,OAAQY,EAFe,EAEfA,QAEV6W,EAAcnb,EAAMS,QAEpBL,EAAWC,cAEX+R,EAAUlS,aAAY,SAACC,GAAD,OAAWA,EAAMiY,SAAShG,WARvB,EAYOpP,mBAAS8H,OAAOsQ,YAZvB,mBAYxBC,EAZwB,KAYXC,EAZW,OAaStY,mBAAS8H,OAAOyQ,aAbzB,mBAaxBC,EAbwB,KAaVC,EAbU,OAcbzY,mBAAS,GAdI,mBAcxB+U,EAdwB,KAcrB2D,EAdqB,OAeL1Y,mBAAS,IAfJ,mBAexB2Y,EAfwB,KAejBC,EAfiB,OAgBD5Y,oBAAS,GAhBR,mBAgBxB6Y,EAhBwB,KAgBfC,EAhBe,OAiBD9Y,mBAAS,IAjBR,mBAiBxB+Y,EAjBwB,KAiBfC,EAjBe,OAkBKhZ,oBAAS,GAlBd,mBAkBxBiZ,EAlBwB,KAkBZC,EAlBY,OAmBDlZ,oBAAS,GAnBR,mBAmBxBmZ,EAnBwB,KAmBfC,EAnBe,KAqBzBvY,EAAc3D,aAAY,SAAAC,GAAK,OAAIA,EAAM0S,KAAKhP,eAE9CwY,EAAqBhX,iBAAO,OA/BpC,WAA+C,IAAvByU,EAAsB,uDAAX,aAAW,EACF9W,oBAAS,GADP,mBACrC+W,EADqC,KACtBC,EADsB,KAExCD,IACJD,IACAE,GAAiB,IAkCjBC,EAAe,WACb/X,QAAQC,IAAI,OAGd,IAAK,IAAD,EF7ES,SAA6Bma,GAAQ,IAAD,EACTC,IAAMvZ,SACG,MAA/CX,SAASqW,OAFsC,mBAC1CsC,EAD0C,KAC5BC,EAD4B,KAyBjD,OAPAsB,IAAMC,iBAAgB,WAIpB,OAHAna,SAASoa,mBAAqB,kBAC5BxB,EAA+D,MAA/C5Y,SAASqW,QAEpB,kBAAOrW,SAASoa,wBAAqB1b,MAGvC,CAACia,EApBc,WACC,MAAjBsB,EAAMhX,SAEVgX,EAAMhX,QACHoX,oBACAjd,MAAK,WACJwb,EAA+D,MAA/C5Y,SAASqW,UAE1BxN,OAAM,WACL+P,GAAgB,QEgEc0B,CAAoBN,GADpD,mBACDrB,EADC,KACaC,EADb,KAEF,MAAOxB,IACPyB,EAAe,2BACfF,GAAe,EACfC,OAAkBla,EAGpBmE,EAAO,QAASsQ,IAChBtQ,EAAO,QAASsQ,IAChBtQ,EAAO,SAAU0X,IACjB1X,EAAO,SAAU0X,IACjB1X,EAAO,SAAU0X,IACjB1X,EAAO,SAAU0X,IAGjBtc,qBAAU,WACRoT,GAAOK,IAAI,uBACXL,GAAOM,GAAG,uBAAuB,SAAArU,GAAS,IAChC2E,EAAmB3E,EAAnB2E,QAASN,EAAUrE,EAAVqE,MAEb6Y,EAAclB,EAAMmB,SAAN,aAAqBnB,EAAMmB,UAAY,GACzDD,EAAYlc,KAAK,CAAE2D,UAASyR,OAAQ/R,IACpC,IAAM+Y,EAAQ,gBAAQpB,EAAR,CAAemB,SAAUD,IACvCjB,EAASmB,QAEV,CAACpB,IA5D2B,OA8DH3Y,mBAAS,IA9DN,qBA8DxB6X,GA9DwB,MA8DhBmC,GA9DgB,SA+DLha,oBAAS,GA/DJ,qBA+DxBia,GA/DwB,MA+DjBC,GA/DiB,MAgEzBC,GAAa9X,iBAAO,IAapB+X,GAAgB,SAACvC,GACrBmC,GAAUnC,GACKqC,GAAJ,IAAXrC,GACAF,GAAUE,OAASA,EACnBC,GAAYD,OAASA,GAjFQ,GAoFK7X,oBAAS,GApFd,qBAoFxBqa,GApFwB,MAoFZC,GApFY,MAqF/B,SAASC,GAAUxF,GAAI,IAAD,IAChBsF,IAAYC,IAAc,IAC9B,UAAI3B,EAAMrE,QAAQS,UAAlB,aAAI,EAAkB9I,IAAIuO,SAGpBzF,EAAI,GAAK4D,EAAMrE,QAAQS,EAAI,GAAG9I,IAAIuO,OAAS7B,EAAMrE,QAAQS,GAAG9I,IAAIuO,QAElE7C,GAAU8C,QACV9C,GAAUxZ,IAAMwa,EAAMrE,QAAQS,GAAG9I,IAAIuO,MACrC7C,GAAU+C,UAGd,UAAI/B,EAAMrE,QAAQS,UAAlB,aAAI,EAAkB7I,MAAMsO,SAC1B1C,GAAY2C,QAEZ3C,GAAY3Z,IAAMwa,EAAMrE,QAAQS,GAAG7I,MAAMsO,MACzC1C,GAAY4C,QArGe,OAyGC1a,oBAAS,GAzGV,qBAyGxB2S,GAzGwB,MAyGdV,GAzGc,MA0G/B,SAASO,GAAYhQ,IACdmQ,IAAYoC,EAAI4D,EAAMrE,QAAQ9P,OAAS,IAAM4K,IAChDmL,GAAUxF,EAAI,GACd2D,EAAK3D,EAAI,GACT9C,IAAY,IAKhB,SAAS2H,GAAapX,GACpB,GAAIuS,IAAM4D,EAAMrE,QAAQ9P,OAAS,IAAM4K,EACrC,GAAIuJ,EAAMmB,SAASpG,SAASlR,EAAMb,KAAO,GACvCwW,EAAYza,QAAQ,CAClB2D,SAAS,YACTlE,MAAO,CACLmE,QAASqX,EAAMmB,SAASpG,SAASlR,EAAMb,KAAO,GAAGL,QACjDZ,OAAQA,UAIZ,GAAIgT,SAASlR,EAAMb,KAAO,IAAMgX,EAAMmB,SAAStV,OAAQ,CACrDpH,EAAS+R,IAAU,IACnB3M,EAAMsC,iBACN,IAAIgO,EAASzT,SAASC,eAAe,UACjCwT,GACFA,EAAOkC,SAQjB1X,qBAAU,WACRoT,GAAOC,KAAK,aAAc,CAAEgK,KAAM9Z,IAClC6P,GAAOC,KAAK,OAAQ,CAAEgK,KAAMrZ,IAE5BlE,EJpKO,CACHf,KzBnBuB,kByBoBvBC,QIkKmB,CAAEuE,YAAaS,GJtKTT,cIuK7B6P,GAAOK,IAAI,qBACXL,GAAOM,GAAG,qBAAqB,SAAArU,GAC7BS,EAASkY,GAAa,CACpBhU,UACAsO,SAAUjT,EAAKiT,eAGnBc,GAAOC,KAAK,qBAAsB,CAAEpB,SAAUjO,MAE7C,CAACA,IAGJhE,qBAAU,WACRF,EAASoY,IAAc,MACtB,IAGHlY,qBAAU,WAENF,EAAS+R,MADP8J,GAAcJ,GAAWM,OAK5B,CAACF,EAAYJ,EAASM,IAEzB7b,qBAAU,WACR6C,IAAM3D,IAAN,iCAAoCkE,EAApC,YAA8CY,IAAW7E,MACvD,SAACC,GACC,GAAIA,EAASC,KAAKyD,QAAS,CACzB,IAAM3C,EAAU,CACdiD,OAAQA,EACRY,QAAS5E,EAASC,KAAKie,aAEzB5B,EAAWvb,GACXib,EAAK,GACLf,GAAU8C,QACV3C,GAAY2C,QACZH,IAAc,GACd1B,EAASlc,EAASC,KAAK0X,OACvBjX,EAAS+R,IAAU,IACnB/R,EAAS6R,GAAgB,IACzB7R,EAAS6R,GAAgB,SAEzB9N,IAAQ6C,MAAM,sDACdhH,EAAMS,QAAQC,QAAd,gBAA+BgD,SAIpC,CAACY,IAEJhE,qBAAU,WAKRwK,OAAOnF,iBAAiB,UAJxB,WACE2V,EAAexQ,OAAOsQ,YACtBK,EAAgB3Q,OAAOyQ,kBAGxB,CAACzQ,OAAOsQ,WAAYtQ,OAAO+S,QAE9B,IAGIC,GAHE9R,GAAUgP,EAAe,EAAM,GAgCrC,OA3BE8C,GArMY,MAoMVzC,EAAsBG,EACR,CACdna,MAAM,GAAD,OAAMma,GAAgB,EAAI,EAAIxP,IAtMzB,MAsML,MACL1K,OAAO,GAAD,OAAKka,GAAgB,EAAI,EAAIxP,IAA7B,MACNK,SAAS,GAAD,OAPI,IAjMF,MAwMF,MACR0R,UAAU,GAAD,OARG,IAQH,OAGK,CACd1c,MAAM,GAAD,OAAKga,GAAe,EAAI,EAAIrP,IAA5B,MACL1K,OAAO,GAAD,OAAK+Z,GAAe,EAAI,EAAIrP,IA9MxB,MA8MJ,MACNK,SAAS,GAAD,OAdI,IAcJ,MACR0R,UAAU,GAAD,OAAKC,OAAL,OAIb1d,qBAAU,WAKR,OAJAF,EAASkY,GAAa,CACpBhU,aAGK,WACLqW,GAAU8C,QACV3C,GAAY2C,WAEb,KAGH,OAAI9B,QAAJ,IAAIA,OAAJ,EAAIA,EAAOrE,UACA,GAALS,GAAUsF,IAAYE,GAAU,GAElC,yBACE3Y,UAAS,UAAKoW,EACV,iCACA,uBAEJhT,IAAKqU,GAEL,yBACEzX,UAAS,UAAKoW,EACV,qCACA,4BAGJ,yBACEpW,UAAS,UAAKoW,EACV,qCACA,2BAEJvY,MAAOqb,GACP7Y,QAAS,SAACO,GAAD,OAAWgQ,OAEpB,kBAAC,GAAD,MACEmG,EAAMrE,QAAQS,IAAM4D,EAAMrE,QAAQS,GAAG/I,WACrC,yBACEpK,UAAU,gBACVzD,IAAKwa,EAAMrE,QAAQS,GAAG/I,WACtBjK,IAAI,kBAGJ,8BAEJ,kBAAC,GAAD,CACE6L,cAAe+K,EAAMrE,QAAQS,GAAGnH,gBAGjCmH,IAAM4D,EAAMrE,QAAQ9P,OAAS,EAC5B,kBAAC,GAAD,CACEiL,QAAS/O,EACTgS,SAAUiG,EAAMrE,QAAQS,GAAGxH,KAC3ByE,WAAY2G,EAAMrE,QAAQS,GAAGhC,OAC7BvD,YAAamJ,EAAMxB,MACnB5H,SAAUoJ,EAAM/X,IAChB8O,gBAAiBiJ,EAAMmB,SACvB7H,YAAaA,GACbU,SAAUA,KAGZ,kBAAC,GAAD,CACED,SAAUiG,EAAMrE,QAAQS,GAAGxH,KAC3ByE,WAAY2G,EAAMrE,QAAQS,GAAGhC,OAC7Bd,YAAaA,GACbU,SAAUA,KAGd,kBAAC,GAAD,CACEkB,YAAasE,EACb1a,QAASsb,EACT9F,QAASgG,EACT/F,WAAYgG,IAEd,kBAAC,GAAD,CACErF,YAAasE,EACb1a,QAASsb,EACT9F,QAASkG,EACTjG,WAAYkG,MAIlB,yBAAKxX,UAAU,2BACb,yBACEA,UAAU,gBACVK,QAlPG,WACPgY,IACFC,IAAS,GACTE,GAAcD,GAAW7X,WAEzB6X,GAAW7X,QAAUuV,GACrBqC,IAAS,GACTE,GAAc,MA6OPH,GAAQ,kBAAC,KAAD,MAAoB,kBAAC,KAAD,OAE/B,yBACExa,MAAO,CAAEpB,MAAO,SAEhB,kBAAC,KAAD,CACEkJ,IAAK,EACL0T,IAAK,EACLC,KAAM,IACNtW,MAAOiT,GACPnT,SAAU,SAAAlC,GACR4X,GAAc5X,OAIpB,6BACE,4BACEZ,UAAU,gBACVK,QAAS,kBAAMiX,GAAc,SAAC/b,GAAD,OAAYA,OAF3C,sBAMA,4BACEyE,UAAU,gBACVK,QAAS,WACPmX,GAAW,SAACjc,GAAD,OAAYA,OAH3B,sBAQA,4BACEyE,UAAU,gBACVK,QAAS,kBAAM6W,GAAW,SAAC3b,GAAD,OAAYA,OAFxC,iBAOD+a,EACC,4BACEjW,QAAS,kBACP5B,MACE,2EAGJuB,UAAU,iBAETsW,GAEDF,EACF,4BAAQ/V,QA9UW,kBAAM5C,SAAS8b,kBA8UKvZ,UAAU,iBAC/C,kBAAC,KAAD,CAAiBwZ,KAAMC,QAGzB,4BAAQpZ,QAASgW,EAAiBrW,UAAU,iBAC1C,kBAAC,KAAD,CAAiBwZ,KAAME,SAI7B,kBAAC,GAAD,CACEha,QAASA,EACTZ,OAAQA,EACRuS,QAAS4F,EACT3F,WAAY4F,MAOX,kBAAC,GAAD,O,QCzZIyC,OAbf,YAAoD,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,iBAM9B,OACE,yBAAKxZ,QALa,WAClBwZ,EAAiBD,KAKf,yBAAKrd,IAAG,UAAKqd,GAAUzZ,IAAI,UCoBlB2Z,OAzBf,YAAiF,IAApDhW,EAAmD,EAAnDA,WAAY+V,EAAuC,EAAvCA,iBAAkBE,EAAqB,EAArBA,kBAEnDC,EAAmBlW,EAAWsG,WAAWvK,KAAI,SAACuK,EAAYtK,GAC9D,OAAO,yBAAKE,UAAU,aAAaD,IAAG,UAAKD,IACzC,kBAAC,GAAD,CAAe8Z,OAAQxP,EAAW3H,MAAOoX,iBAAkBA,QAQ/D,OACE,yBAAK7Z,UAAU,sBACb,kBAAC,IAAD,CACEvF,KAAK,UACLoD,MAAO,CAAEqJ,SAAU,QACnB7G,QATW,WACf0Z,EAAkB,KAKhB,gBAMA,6BAAMC,KCrBL,SAASC,GAAgB9P,GAC9B,MAAO,CACL1P,KhCO4B,mBgCN5BC,QAASyP,GCcE+P,OAhBf,YAA6C,IAArB/P,EAAoB,EAApBA,UAAWrK,EAAS,EAATA,MAC3BtE,EAAWC,cAMjB,OACE,6BACE,yBAAK4E,QANuB,WAC9B7E,EAASye,GAAgB,gBAAK9P,EAAN,CAAiBrK,MAAOA,QAM5C,yBAAKvD,IAAG,UAAK4N,EAAUgQ,YAAY,IAAMha,IAAI,WCoBtCia,OA7Bf,YAAyF,IAA7DtW,EAA4D,EAA5DA,WAAYuW,EAAgD,EAAhDA,iBAAkBN,EAA8B,EAA9BA,kBAAmBO,EAAW,EAAXA,QAErEC,EAAkBzW,EAAWqG,UAAUtK,KAAI,SAACsK,EAAWrK,GAC3D,OAAO,yBAAKE,UAAU,YAAYD,IAAG,UAAKD,IACxC,kBAAC,GAAD,CACEqK,UAAWA,EACXrK,MAAOA,EACPua,iBAAkBA,EAClBC,QAASA,QAQf,OACE,yBAAKta,UAAU,sBACb,kBAAC,IAAD,CACEvF,KAAK,UACLoD,MAAO,CAAEqJ,SAAU,QACnB7G,QATW,WACf0Z,EAAkB,KAKhB,gBAMA,6BAAMQ,K,QCZGC,OAff,YAAkD,IAA/BzE,EAA8B,EAA9BA,UAAW1L,EAAmB,EAAnBA,IAAKoQ,EAAc,EAAdA,WAO/B,OACI,yBAAKpa,QAPa,WAClBoa,EAAWpQ,GACX0L,EAAUxZ,IAAM8N,EAAIuO,MACpB7C,EAAU+C,SAKN,yBAAKvc,IAAG,iBAAYhC,EAAZ,gCAAsD4F,IAAI,QACjEkK,EAAIsB,OCyBF+O,OAhCf,YAA+E,IAAzD5W,EAAwD,EAAxDA,WAAYiS,EAA4C,EAA5CA,UAAW0E,EAAiC,EAAjCA,WAAYV,EAAqB,EAArBA,kBAE/CY,EAAY7W,EAAWuG,IAAIxK,KAAI,SAACwK,EAAKvK,GACvC,OACI,yBAAKE,UAAU,MAAMD,IAAG,UAAKD,IACzB,kBAAC,GAAD,CACIiW,UAAWA,EACX1L,IAAKA,EACLoQ,WAAYA,QAW5B,OACI,yBAAKza,UAAU,sBACX,kBAAC,IAAD,CACIvF,KAAK,UACLoD,MAAO,CAAEqJ,SAAU,QACnB7G,QATK,WACb0Z,EAAkB,KAKd,gBAMA,6BAAMY,K,QCfHC,OAff,YAA0D,IAArC1E,EAAoC,EAApCA,YAAa5L,EAAuB,EAAvBA,MAAOuQ,EAAgB,EAAhBA,aAOrC,OACI,yBAAKxa,QAPa,WAClBwa,EAAavQ,GACb4L,EAAY3Z,IAAM+N,EAAMsO,MACxB1C,EAAY4C,SAKR,yBAAKvc,IAAG,iBAAYhC,EAAZ,gCAAsD4F,IAAI,QACjEmK,EAAMqB,OCyBJmP,OAhCf,YAAqF,IAA7DhX,EAA4D,EAA5DA,WAAYoS,EAAgD,EAAhDA,YAAa2E,EAAmC,EAAnCA,aAAcd,EAAqB,EAArBA,kBAErDgB,EAAcjX,EAAWwG,MAAMzK,KAAI,SAACyK,EAAOxK,GAC7C,OACI,yBAAKE,UAAU,QAAQD,IAAG,UAAKD,IAC3B,kBAAC,GAAD,CACIoW,YAAaA,EACb5L,MAAOA,EACPuQ,aAAcA,QAW9B,OACI,yBAAK7a,UAAU,sBACX,kBAAC,IAAD,CACIvF,KAAK,UACLoD,MAAO,CAAEqJ,SAAU,QACnB7G,QATK,WACb0Z,EAAkB,KAKd,gBAMA,6BAAMgB,KCJHC,I,OA1BW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,IACnC,OACE,yBAAKlb,UAAU,QACb,yBACEA,UAAS,UAAa,IAARkb,EAAY,kBAAoB,OAC9C7a,QAAS,kBAAM4a,EAAO,KAFxB,aAKA,yBACEjb,UAAS,UAAa,IAARkb,EAAY,kBAAoB,OAC9C7a,QAAS,kBAAM4a,EAAO,KAFxB,cAKA,yBACEjb,UAAS,UAAa,IAARkb,EAAY,kBAAoB,OAC9C7a,QAAS,kBAAM4a,EAAO,KAFxB,OAKA,yBACEjb,UAAS,UAAa,IAARkb,EAAY,kBAAoB,OAC9C7a,QAAS,kBAAM4a,EAAO,KAFxB,Y,mBCISE,OAnBf,YAA4D,IAAtCvQ,EAAqC,EAArCA,OAAQO,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,QAASgQ,EAAU,EAAVA,OAC7C,OAAO,kBAAC,IAAD,CACHxQ,OAAQA,EACRO,SAAUA,EACVC,QAASA,EAGTgQ,OAAQA,IAEP,gBAAG/P,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACG,uCAAKtL,UAAU,YAAeqL,KAC1B,0BAAWC,KACX,kBAAC+P,GAAA,EAAD,CAAiBrb,UAAU,uB,sBCVnCgJ,I,QAAaC,IAAbD,UAmJOsS,OAjJf,YAAkG,IAA1EC,EAAyE,EAAzEA,SAAUC,EAA+D,EAA/DA,YAAaC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,gBAAmB,EACjDvd,mBAAS,IADwC,mBACtFwd,EADsF,KACtEC,EADsE,OAE7Dzd,mBAAS,GAFoD,mBAEtF0d,EAFsF,KAE5EC,EAF4E,KAGvFC,EAAWvb,iBAAO,GAElBwb,EAAe,SAACrb,GAClB4a,GAAY,SAAAzc,GAER,OADAA,EAAKoL,UAAUsR,EAAY/a,SAASiL,KAAO/K,EAAMmC,cAAcC,MACxDjE,KAEXgd,GAAY,SAAAG,GAAG,OAAIA,EAAM,MAGvBC,EAAsB,SAACvb,GACzB4a,GAAY,SAAAzc,GAER,OADAA,EAAKoL,UAAUsR,EAAY/a,SAAS0D,YAAcxD,EAAMmC,cAAcC,MAC/DjE,KAEXgd,GAAY,SAAAG,GAAG,OAAIA,EAAM,MAGvBtR,EAAS,SAACC,GACZ,IADuB,IAAD,aAElB,IAAKA,EAAMsI,GAEP,OADA5T,IAAQ6C,MAAM,6GACR,CAAN,UAEJ,IAAIga,EAASC,IAAIC,gBAAgBzR,EAAMsI,IACvCwI,GAAgB,SAAAY,GAAQ,6BAAQA,GAAR,CAAkBH,OAGjB,OAArBJ,EAAStb,SACT8a,GAAY,SAAAzc,GAMR,OALAA,EAAKoL,UAAL,uBAAqBpL,EAAKoL,WAA1B,CAAqC,CACjCwB,KAAM,GACNvH,YAAa,GACb+V,YAAa,CAACiC,MAEXrd,KAEXid,EAAStb,QAAU6a,EAASpR,UAAUvH,OAAS,GAG/C4Y,GAAY,SAAAzc,GAER,OADAA,EAAKoL,UAAU6R,EAAStb,SAASyZ,YAAjC,uBAAmDpb,EAAKoL,UAAU6R,EAAStb,SAASyZ,aAApF,CAAiGiC,IAC1Frd,MAvBVoU,EAAI,EAAGA,EAAItI,EAAMjI,OAAQuQ,IAAK,CAAC,IAAD,wCA2BvCuI,GAAiB,SAAAa,GAAQ,6BAAQA,GAAR,CAAkB,CAAEzc,MAAO0c,OAAOR,EAAStb,SAAU+b,MAAO5R,QACrFkR,GAAY,SAAAG,GAAG,OAAIA,EAAM,MAuD7B,OAnDAxgB,qBAAU,WACN,GAAI6f,EAASpR,WAAasR,EAAY/a,QAAU6a,EAASpR,UAAUvH,OAAQ,CACvE,IAAM8Z,EAAQnB,EAASpR,UAAUsR,EAAY/a,SAASyZ,YAAYta,KAAI,SAAC4C,EAAO3C,GAC1E,OACI,yBACI7C,GAAIwe,EAAY/a,QAChBV,UAAU,WAAWD,IAAKD,GAE1B,yBAAKE,UAAU,WACXzD,IAAKkG,EACLtC,IAAI,QAGG,IAAVL,GACG,kBAAC,IAAD,KAAM,+CACF,kBAAC,IAAD,CAAOgD,SAAUmZ,EAAcjZ,MAAOuY,EAASpR,UAAUsR,EAAY/a,SAASiL,OAE9E,2DACA,kBAAC,GAAD,CAAU7I,SAAUqZ,EAAqBnZ,MAAOuY,EAASpR,UAAUsR,EAAY/a,SAAS0D,eAM9FtE,IAAUyb,EAASpR,UAAUsR,EAAY/a,SAASyZ,YAAYvX,OAAS,GACrE,kBAAC,GAAD,CACIgI,OAAQA,EACRO,UAAU,EACVC,QAAS,SACTgQ,OAAO,gBAK3BS,EAAkBa,QAElBb,EAAkB,MAGvB,CAACC,EAAUP,IAEdrL,GAAS,aACT,SAAqBtP,GACjB,IAAK,IAAIuS,EAAI,EAAGA,EAAIvS,EAAM+b,KAAK/Z,OAAQuQ,IACnC,GAAIvS,EAAM+b,KAAKxJ,GAAGlW,GAEd,YADA+e,EAAStb,QAAUE,EAAM+b,KAAKxJ,GAAGlW,OAOzC,6BACI,yBAAK+C,UAAU,uBACS,IAAnB4b,GAAwB,6BAAMA,IAG/BL,EAASpR,WAAasR,EAAY/a,UAAY6a,EAASpR,UAAUvH,QACjE,yBAAK3F,IAAK,GACN,kBAAC,GAAD,CACI2N,OAAQA,EACRO,UAAU,EACVC,QAAS,SACTgQ,OAAO,aAKS,IAAxBK,EAAY/a,SAAiB,kBAACkc,GAAA,EAAD,CACzB/e,MAAO,CAAEqJ,SAAU,QACnB7G,QAAS,WACLob,EAAY/a,UACZqb,GAAY,SAAAG,GAAG,OAAIA,EAAM,MAE7BW,aAAa,YAGjBtB,EAASpR,WAAasR,EAAY/a,UAAY6a,EAASpR,UAAUvH,QACjE,kBAACka,GAAA,EAAD,CACIjf,MAAO,CAAEqJ,SAAU,QACnB7G,QAAS,WACLob,EAAY/a,UACZqb,GAAY,SAAAG,GAAG,OAAIA,EAAM,MAE7BW,aAAa,YAEpBtB,EAASpR,WAAa,iCAAOsR,EAAY/a,QAAnB,IAA6B6a,EAASpR,UAAUvH,U,QCnFpEma,OA7Df,YAA6F,IAApEhe,EAAmE,EAAnEA,KAAMie,EAA6D,EAA7DA,aAAcC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,gBAAiBC,EAAgB,EAAhBA,aAAgB,EAC1C/e,mBAAS,IADiC,mBACjFgf,EADiF,KAChEC,EADgE,OAEtDjf,mBAAS,IAF6C,mBAEjFkf,EAFiF,KAEtEC,EAFsE,KA4CxF,OA1BA7hB,qBAAU,WACFqD,EAAKqL,YACLiT,EAAmBte,EAAKqL,WAAWvK,KAAI,SAAC2d,EAAS1d,GAC7C,OAAO,yBAAKE,UAAU,YAAYD,IAAKD,GACnC,yBAAKE,UAAU,aAEXzD,IAAKihB,EAAQ/a,MACbtC,IAAI,eAIrB,CAACpB,IAEJrD,qBAAU,WACFyhB,GACAI,EAAaJ,EAAatd,KAAI,SAAC2d,EAAS1d,GACpC,OAAO,yBAAKE,UAAU,YAAYD,IAAKD,GACnC,yBAAKE,UAAU,aAEXzD,IAAKihB,EACLrd,IAAI,eAIrB,CAACgd,IAGA,6BACI,kBAAC,GAAD,CACIvS,OA3CG,SAACC,GACZ,IAAK,IAAIsI,EAAI,EAAGA,EAAItI,EAAMjI,OAAQuQ,IAAK,CACnC,IAAKtI,EAAMsI,GAEP,YADA5T,IAAQ6C,MAAM,6GAGlB4a,GAAa,SAAAT,GAAQ,6BAAQA,GAAR,CAAkB1R,EAAMsI,QAC7C8J,GAAa,SAAAV,GAAQ,6BAAQA,GAAR,CAAkB,OACvCW,GAAgB,SAAAX,GAAQ,6BAAQA,GAAR,CAAkBF,IAAIC,gBAAgBzR,EAAMsI,WAoChEhI,UAAU,EACVC,QAAS,SACTgQ,OAAO,YAGX,yBAAKpb,UAAU,wBACU,IAApBod,GAAyB,6BAAMA,GACjB,IAAdE,GAAmB,6BAAMA,M,OCiC3BG,OAxFf,YAAmH,IAAjG1e,EAAgG,EAAhGA,KAAMie,EAA0F,EAA1FA,aAAcC,EAA4E,EAA5EA,aAAcS,EAA8D,EAA9DA,eAAgBC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,gBAAiBC,EAAgB,EAAhBA,aAAgB,EAC9Ezf,mBAAS,IADqE,mBACvG0f,EADuG,KAC7FC,EAD6F,OAE5E3f,mBAAS,IAFmE,mBAEvGkf,EAFuG,KAE5FC,EAF4F,KAuE9G,OArDA7hB,qBAAU,WACFqD,EAAKsL,KACL0T,EAAYhf,EAAKsL,IAAIxK,KAAI,SAAC2d,EAAS1d,GAC/B,OAAO,yBAAKE,UAAU,aAAaD,IAAKD,IAClCA,EAAQ,GAAK,EACX,6BACI,yBAAKE,UAAU,aACXzD,IAAG,iBAAYhC,EAAZ,gCACH4F,IAAI,QAEPqd,EAAQ7R,MAGb,6BACI,yBAAK3L,UAAU,aACXzD,IAAG,iBAAYhC,EAAZ,gCACH4F,IAAI,QAEPqd,EAAQ7R,aAK9B,CAAC5M,IAGJrD,qBAAU,WACFiiB,GACAJ,EAAaI,EAAY9d,KAAI,SAAC2d,EAAS1d,GACnC,OAAO,yBAAKE,UAAU,aAAaD,IAAKD,IAClCA,EAAQ,GAAK,EACX,6BACI,yBAAKE,UAAU,aAEXzD,IAAG,iBAAYhC,EAAZ,gCACH4F,IAAI,QAEP0d,EAAa/d,GAAO6L,MAGzB,6BACI,yBAAK3L,UAAU,aAEXzD,IAAG,iBAAYhC,EAAZ,gCACH4F,IAAI,QAEP0d,EAAa/d,GAAO6L,aAK1C,CAACgS,IAGA,6BACI,kBAAC,GAAD,CACI/S,OAtEG,SAACC,GACZ,IAAK,IAAIsI,EAAI,EAAGA,EAAItI,EAAMjI,OAAQuQ,IAAK,CACnC,IAAKtI,EAAMsI,GAEP,YADA5T,IAAQ6C,MAAM,uGAGlB4a,GAAa,SAAAT,GAAQ,6BAAQA,GAAR,CAAkB1R,EAAMsI,QAC7C8J,GAAa,SAAAV,GAAQ,6BAAQA,GAAR,CAAkB,OACvCqB,GAAgB,SAAArB,GAAQ,6BAAQA,GAAR,CAAkB1R,EAAMsI,QAChDuK,GAAe,SAAAnB,GAAQ,6BAAQA,GAAR,CAAkBF,IAAIC,gBAAgBzR,EAAMsI,WA8D/DhI,UAAU,EACVC,QAAS,SACTgQ,OAAO,YAGX,yBAAKpb,UAAU,mBACG,IAAb8d,GAAkB,6BAAMA,GACV,IAAdR,GAAmB,6BAAMA,MCM3BU,OAvFf,YAA6H,IAAzGjf,EAAwG,EAAxGA,KAAMie,EAAkG,EAAlGA,aAAcC,EAAoF,EAApFA,aAAcgB,EAAsE,EAAtEA,iBAAkBC,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,kBAAmBC,EAAkB,EAAlBA,eAAkB,EACpFhgB,mBAAS,IAD2E,mBACjHigB,EADiH,KACrGC,EADqG,OAEtFlgB,mBAAS,IAF6E,mBAEjHkf,EAFiH,KAEtGC,EAFsG,KAsExH,OApDA7hB,qBAAU,WACFqD,EAAKuL,OACLgU,EAAcvf,EAAKuL,MAAMzK,KAAI,SAAC2d,EAAS1d,GACnC,OAAO,yBAAKE,UAAU,aAAaD,IAAKD,IAClCA,EAAQ,GAAK,EACX,6BACI,yBAAKE,UAAU,aACXzD,IAAG,iBAAYhC,EAAZ,gCACH4F,IAAI,QAEPqd,EAAQ7R,MAGb,6BACI,yBAAK3L,UAAU,aACXzD,IAAG,iBAAYhC,EAAZ,gCACH4F,IAAI,QAEPqd,EAAQ7R,aAK9B,CAAC5M,IAEJrD,qBAAU,WACFwiB,GACAX,EAAaW,EAAcre,KAAI,SAAC2d,EAAS1d,GACrC,OAAO,yBAAKE,UAAU,aAAaD,IAAKD,IAClCA,EAAQ,GAAK,EACX,6BACI,yBAAKE,UAAU,aAEXzD,IAAG,iBAAYhC,EAAZ,gCACH4F,IAAI,QAEPie,EAAete,GAAO6L,MAG3B,6BACI,yBAAK3L,UAAU,aAEXzD,IAAG,iBAAYhC,EAAZ,gCACH4F,IAAI,QAEPie,EAAete,GAAO6L,aAK5C,CAACuS,IAGA,6BACI,kBAAC,GAAD,CACItT,OArEG,SAACC,GACZ,IAAK,IAAIsI,EAAI,EAAGA,EAAItI,EAAMjI,OAAQuQ,IAAK,CACnC,IAAKtI,EAAMsI,GAEP,YADA5T,IAAQ6C,MAAM,uGAGlB4a,GAAa,SAAAT,GAAQ,6BAAQA,GAAR,CAAkB1R,EAAMsI,QAC7C8J,GAAa,SAAAV,GAAQ,6BAAQA,GAAR,CAAkB,OACvC4B,GAAkB,SAAA5B,GAAQ,6BAAQA,GAAR,CAAkB1R,EAAMsI,QAClD8K,GAAiB,SAAA1B,GAAQ,6BAAQA,GAAR,CAAkBF,IAAIC,gBAAgBzR,EAAMsI,WA6DjEhI,UAAU,EACVC,QAAS,SACTgQ,OAAO,YAGX,yBAAKpb,UAAU,mBACK,IAAfqe,GAAoB,6BAAMA,GACZ,IAAdf,GAAmB,6BAAMA,M,qBC5EpCiB,GAAS7a,EAAQ,KAqQR8a,GAnQQ,SAAC,GAAiD,IAA/C1f,EAA8C,EAA9CA,OAAQ2N,EAAsC,EAAtCA,QAASwO,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,IAAKuD,EAAgB,EAAhBA,UAAgB,EAC9CrgB,mBAAS,IADqC,mBAC/DW,EAD+D,KACzD2f,EADyD,OAEpCtgB,mBAAS,IAF2B,mBAE/DugB,EAF+D,KAEpD3B,EAFoD,OAGpC5e,mBAAS,IAH2B,mBAG/DwgB,EAH+D,KAGpD3B,EAHoD,OAK9B7e,mBAAS,IALqB,mBAK/D+e,EAL+D,KAKjDD,EALiD,OAMhC9e,mBAAS,IANuB,mBAM/Duf,EAN+D,KAMlDD,EANkD,OAO9Btf,mBAAS,IAPqB,mBAO/Dyf,EAP+D,KAOjDD,EAPiD,OAQ5Bxf,mBAAS,IARmB,mBAQ/D8f,EAR+D,KAQhDD,EARgD,OAS1B7f,mBAAS,IATiB,mBAS/DggB,EAT+D,KAS/CD,EAT+C,OAWtC/f,mBAAS,IAX6B,mBAW/Dmd,EAX+D,KAWrDC,EAXqD,KAYhEC,EAAchb,iBAAO,GAZ2C,EAa5BrC,mBAAS,IAbmB,mBAa/DygB,EAb+D,KAahDnD,EAbgD,OAc9Btd,mBAAS,IAdqB,mBAc/D0gB,GAd+D,KAcjDnD,GAdiD,KAiBhE3Z,GAAW,CAAElD,OAAQA,GAC3BpD,qBAAU,WACR6C,IAAMc,KAAK,0BAA2B2C,IACnCnH,MAAK,SAAAC,GACAA,EAASC,KAAKyD,SAChBkgB,EAAQ5jB,EAASC,KAAK+I,YACtB0X,EAAYuD,KAAEC,UAAUlkB,EAASC,KAAK+I,cAEtCrF,MAAM,6GAGX,IAEH,IAAMwgB,GAAiB,WACrBH,GAAaI,SAAQ,SAAUlc,GACzBA,GACFqZ,IAAI8C,gBAAgBnc,MAExBma,EAAa+B,SAAQ,SAAUlc,GACzBA,GACFqZ,IAAI8C,gBAAgBnc,MAExB2a,EAAYuB,SAAQ,SAAUlc,GACxBA,GACFqZ,IAAI8C,gBAAgBnc,MAExBkb,EAAcgB,SAAQ,SAAUlc,GAC1BA,GACFqZ,IAAI8C,gBAAgBnc,OAUtBoc,IAAa,EAYXC,GAAkB,WACK,IAGhBlM,EAEEmM,EALTT,EAAcjc,OAAQ,WACxB,IAAI2c,EAAU/P,MAAMgQ,KAAK,CAAE5c,OAAQ2Y,EAASpR,UAAUvH,SAAU,kBAAM,KAClEkI,EAAW,IAAIC,SACnB,IAASoI,EAAI,EAAGA,EAAIoI,EAASpR,UAAUvH,OAAQuQ,IAE7C,IAASmM,EAAI,EAAGA,EAAIT,EAAcjc,OAAQ0c,IACpCT,EAAcS,GAAGxf,QAAUqT,IAC7BoM,EAAQpM,IAAM0L,EAAcS,GAAG7C,MAAM7Z,OACrCic,EAAcS,GAAG7C,MAAMyC,SAAQ,SAAUlc,GACvC8H,EAASE,OAAO,QAAShI,OAUjCzE,IAAMc,KAAK,uBAAwByL,EALpB,CACbG,OAAQ,CAAE,QAAW,yBAI8BpQ,MACnD,SAACC,GACKA,EAASC,KAAKyD,QAChBihB,GAAaF,EAASzkB,EAASC,KAAK8P,OAEpCpM,MAAM,4DAxBY,GA6BxBghB,GAAa,KAAM,OAIjBA,GAAe,SAACF,EAAS1U,GAC7BvN,QAAQC,IAAImiB,cAEZ,IADA,IAAIjK,EAAM,EACDtC,EAAI,EAAGA,EAAIoI,EAASpR,UAAUvH,OAAQuQ,IAU7C,GATKpU,EAAKoL,UAAUgJ,IAClBpU,EAAKoL,UAAUpO,KAAK,CAClB4P,KAAM,GACNvH,YAAa,GACb+V,YAAa,KAEjBpb,EAAKoL,UAAUgJ,GAAGxH,KAAO4P,EAASpR,UAAUgJ,GAAGxH,KAC/C5M,EAAKoL,UAAUgJ,GAAG/O,YAAcmX,EAASpR,UAAUgJ,GAAG/O,YAElDmb,EAAS,CACX,IAAK,IAAID,EAAI7J,EAAK6J,EAAI7J,EAAM8J,EAAQpM,GAAImM,IACtChiB,QAAQC,IAAR,UAAeghB,GAAOoB,QAAtB,YAAiC9U,EAAMyU,GAAG3C,OAC1C5d,EAAKoL,UAAUgJ,GAAGgH,YAAYpe,KAAsF8O,EAAMyU,GAAGrjB,UAE/HwZ,GAAO8J,EAAQpM,GAGnB,IAAMyM,EAAS,CACb9gB,OAAQA,EACRqL,UAAWpL,EAAKoL,WAElB7M,QAAQC,IAAIwB,EAAKoL,WACjB5L,IAAMc,KACJ,sBACAugB,GACA/kB,MAAK,SAACC,GACFA,EAASC,KAAKyD,QAEXmgB,EAAU/b,SACb6b,GAAU,SAAAoB,GAAM,OAAIA,EAAS,KAC7B5E,EAAO,IAIT1b,IAAQ6C,MAAM,gDAMd0d,GAAc,WAElB,IAAIhV,EAAW,IAAIC,SACnB4T,EAAUO,SAAQ,SAAAlc,GAChB8H,EAASE,OAAO,QAAShI,MAM3BzE,IAAMc,KAAK,uBAAwByL,EAJpB,CACbG,OAAQ,CAAE,QAAW,yBAG8BpQ,MACnD,SAACC,GACKA,EAASC,KAAKyD,QAChBuhB,GAASjlB,EAASC,KAAK8P,OAEvBpM,MAAM,uCAORshB,GAAW,SAAClV,GAEhB,IADA,IAAM+U,EAAS,CAAE9gB,OAAQA,EAAQsL,WAAY,GAAIC,IAAK,GAAIC,MAAO,IACxD6I,EAAI,EAAGA,EAAItI,EAAMjI,OAAQuQ,IAChC,OAAQyL,EAAUzL,IAChB,KAAK,EACHyM,EAAOxV,WAAWrO,KAAK,CACrB4P,KAAMd,EAAMsI,GAAG6M,aACfvd,MAAyFoI,EAAMsI,GAAGlX,WAEpG,MACF,KAAK,EACH2jB,EAAOvV,IAAItO,KAAK,CACd4P,KAAMd,EAAMsI,GAAG6M,aACfpH,MAAyF/N,EAAMsI,GAAGlX,WAEpG,MACF,KAAK,EACH2jB,EAAOtV,MAAMvO,KAAK,CAChB4P,KAAMd,EAAMsI,GAAG6M,aACfpH,MAAyF/N,EAAMsI,GAAGlX,WAEpG,MACF,QACEsD,IAAQ6C,MAAM,4FAIpB7D,IAAMc,KACJ,kBACAugB,GACA/kB,MAAK,SAACC,GACFA,EAASC,KAAKyD,SAChBigB,GAAU,SAAAoB,GAAM,OAAIA,EAAS,KAC7B5E,EAAO,IAEP1b,IAAQ6C,MAAM,gDAIpB,OACE,kBAAC,KAAD,CAAOpC,UAAU,kBACfyM,QAASA,EACTM,OAAO,SACPL,SAhKiB,WACnBuS,KACAhE,EAAO,IA+JLjO,KA3JW,WACRoS,KACHA,IAAa,EACbH,KAEAI,KACIV,EAAU/b,QACZkd,OAqJFrjB,MAAO,IACPoB,MAAO,CAAEuO,IAAK,KAEd,kBAAC,GAAD,CAAmB6O,OAAQA,EAAQC,IAAKA,IAC/B,IAARA,GACC,kBAAC,GAAD,CACEK,SAAUA,EACVC,YAAaA,EACbC,YAAaA,EACbC,iBAAkBA,EAClBC,gBAAiBA,KAGZ,IAART,GACC,kBAAC,GAAD,CACEnc,KAAMA,EACNie,aAAcA,EACdC,aAAcA,EACdC,gBAAiBA,EACjBC,aAAcA,IAGT,IAARjC,GACC,kBAAC,GAAD,CACEnc,KAAMA,EACNie,aAAcA,EACdC,aAAcA,EACdS,eAAgBA,EAChBC,YAAaA,EACbC,gBAAiBA,EACjBC,aAAcA,IAGT,IAAR3C,GACC,kBAAC,GAAD,CACEnc,KAAMA,EACNie,aAAcA,EACdC,aAAcA,EACdgB,iBAAkBA,EAClBC,cAAeA,EACfC,kBAAmBA,EACnBC,eAAgBA,MCrQlBpV,GAAaC,IAAbD,SAEFE,GAAiB,CACnB,CAAElG,MAAO,EAAG0F,MAAO,WACnB,CAAE1F,MAAO,EAAG0F,MAAO,WAGjBS,GAAkB,CACpB,CAAEnG,MAAO,EAAG0F,MAAO,4BACnB,CAAE1F,MAAO,EAAG0F,MAAO,sBACnB,CAAE1F,MAAO,EAAG0F,MAAO,sBACnB,CAAE1F,MAAO,EAAG0F,MAAO,gBACnB,CAAE1F,MAAO,EAAG0F,MAAO,iBAoKRuX,GAjKK,SAAC,GAAkE,IAAhEnhB,EAA+D,EAA/DA,OAAQ2N,EAAuD,EAAvDA,QAASyT,EAA8C,EAA9CA,oBAAqBC,EAAyB,EAAzBA,mBACnD9kB,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QADwC,EAEhD+C,mBAAS,IAFuC,mBAE3EiL,EAF2E,KAEhEC,EAFgE,OAG5ClL,mBAAS,IAHmC,mBAG3EgG,EAH2E,KAG9DmF,EAH8D,OAIhDnL,mBAAS,GAJuC,mBAI3EoL,EAJ2E,KAIhEC,EAJgE,OAKlDrL,mBAAS+K,GAAgB,GAAGT,OALsB,mBAK3EtI,EAL2E,KAKjEsJ,EALiE,OAOpDtL,mBAAS,IAP2C,mBAO3EgiB,EAP2E,KAOlEC,EAPkE,OAQhDjiB,mBAAS,IARuC,mBAQ3EkiB,EAR2E,KAQhEC,EARgE,KA4C5EC,EAAS,SAAC5f,GACZA,EAAMsC,iBACY,KAAdmG,GAAoC,KAAhBjF,GAAkC,KAAZgc,GAK9CK,IACAP,GAAoB,GACpBC,KANI5gB,IAAQ6C,MAAM,0EAShBqe,EAAc,WAEhBpE,IAAI8C,gBAAgBiB,GAEpB,IAAItV,EAAW,IAAIC,SAKnBuV,EAAUpB,SAAQ,SAAAlc,GACd8H,EAASE,OAAO,QAAShI,MAG7BzE,IAAMc,KAAK,uBAAwByL,EARpB,CACXG,OAAQ,CAAE,QAAW,yBAO4BpQ,MACjD,SAACC,GACOA,EAASC,KAAKyD,QACdkiB,EAAmF5lB,EAASC,KAAK8P,MAAM,GAAG5O,UAE1GsD,IAAQ6C,MAAM,uCAMxBse,EAAa,SAAC7W,GAChB,IAAMI,EAAiB,CACnBnL,OAAQA,EACRqF,QAAS9I,EAAK+F,SAASpC,IACvBI,MAAOiK,EACPjF,YAAaA,EACblE,UAAW2J,EACXK,QAASV,EACTpJ,SAAUA,EACVoC,OAAQ,CAACnH,EAAK+F,SAASpC,MAG3BT,IAAMc,KAAK,2BAA4B4K,GAAgBpP,MAAK,SAACC,GACrDA,EAASC,KAAKyD,SAGde,IAAQ6C,MAAM,qCAK1B,OACI,kBAAC,KAAD,CAAOpC,UAAU,kBACbyM,QAASA,EACTM,OAAO,SACPL,SAnEO,WACP0T,GACA/D,IAAI8C,gBAAgBiB,GACxBF,GAAoB,IAiEhBlT,KAAMwT,EACN/jB,MAAO,IACPoB,MAAO,CAAEuO,IAAK,KAEd,6BACI,8CACA,kBAAC,IAAD,CAAMxG,SAAU4a,GACZ,yBAAK3iB,MAAO,CAAEI,QAAS,SACnB,kBAAC,GAAD,CACI2M,OAxFT,SAACC,GACPA,EAAM,IAIXwR,IAAI8C,gBAAgBiB,GAEpBC,EAAWhE,IAAIC,gBAAgBzR,EAAM,KACrC0V,EAAa1V,IANTtL,IAAQ6C,MAAM,8GAuFE+I,UAAU,EACVC,QAAS,SACTgQ,OAAO,YAIVgF,GACG,6BACI,yBACIpgB,UAAU,iBACVzD,IAAK6jB,EACLjgB,IAAI,gBAMpB,wCACA,kBAAC,IAAD,CAAO2C,SA5HD,SAAClC,GACnB0I,EAAa1I,EAAMmC,cAAcC,QA2HWA,MAAOqG,IAEvC,8CACA,kBAAC,GAAD,CAAUvG,SA3HE,SAAClC,GACzB2I,EAAe3I,EAAMmC,cAAcC,QA0HkBA,MAAOoB,IAEhD,4BAAQtB,SAzHA,SAAClC,GACrB6I,EAAa7I,EAAMmC,cAAcC,SAyHhBkG,GAAerJ,KAAI,SAAC2L,EAAM1L,GAAP,OAChB,4BAAQC,IAAKD,EAAOkD,MAAOwI,EAAKxI,OAC3BwI,EAAK9C,WAKlB,4BAAQ5F,SA7HE,SAAClC,GACvB,IAAI6K,EAAU7K,EAAMmC,cAAcC,MAClC0G,EAAY9I,EAAMmC,cAAc0I,GAASC,QA4HxBvC,GAAgBtJ,KAAI,SAAC2L,EAAM1L,GAAP,OACjB,4BAAQC,IAAKD,EAAOkD,MAAOwI,EAAKxI,OAC3BwI,EAAK9C,eC3KlCiY,I,QAAiB,IAERC,GAAW,SAAChS,EAAMhO,EAAOigB,EAASC,GACrClS,KAAQ+R,KAEVA,GAAe/R,GAAQ,IAErBhO,KAAS+f,GAAe/R,KAE1B+R,GAAe/R,GAAMhO,GAAS,IAGlC+f,GAAe/R,GAAMhO,GAAO7E,KAAK,CAAC8kB,EAASC,IAC3ClS,EAAK7N,iBAAiBH,EAAOigB,EAASC,IAG7BC,GAAkB,SAACnS,EAAMhO,GAClC,GAAIgO,KAAQ+R,GAAgB,CACxB,IAAIK,EAAWL,GAAe/R,GAC9B,GAAIhO,KAASogB,EAET,IADA,IAAIC,EAAgBD,EAASpgB,GACpBuS,EAAI8N,EAAcre,OAAQuQ,KAAM,CACrC,IAAI0N,EAAUI,EAAc9N,GAC5BvE,EAAK5N,oBAAoBJ,EAAOigB,EAAQ,GAAIA,EAAQ,OCmHrDK,uBApIf,SAAmB9lB,GACjB,IAAMI,EAAWC,cAETwQ,EAA2E7Q,EAA3E6Q,WAAYkV,EAA+D/lB,EAA/D+lB,kBAAmB9G,EAA4Cjf,EAA5Cif,iBAAmBva,EAAyB1E,EAAzB0E,MAEpDshB,GAF6EhmB,EAAlBimB,cAE/C5gB,oBACZ6gB,EAAY7gB,mBANM,EAQKrC,oBAAS,GARd,mBAQjBmjB,EARiB,aASInjB,oBAAS,IATb,mBASjBojB,EATiB,KASTC,EATS,OAUIrjB,oBAAS,GAVb,mBAUjBsjB,EAViB,KAUTC,EAVS,OAWQvjB,mBAAS,GAXjB,mBAWjBwjB,EAXiB,KAWPC,EAXO,KAalBC,EAAqBrkB,SAASC,eAAe,2BAE/C4W,EAAQ,CAAC,EAAE,GACXE,GAAO,EAEX,SAASS,EAAUJ,GACjB,IAAMkN,EAAO,CAAClN,EAAEC,MAAMD,EAAEE,OACxB,GAAIP,GAAQ+M,GAAWC,GACrB,GAAIlN,EAAM,GAAGO,EAAEC,MAAM,GAAKR,EAAM,GAAGO,EAAEE,MAAM,GAAKT,EAAM,GAAGO,EAAEC,OAAO,GAAKR,EAAM,GAAGO,EAAEE,OAAO,EAAG,CAC1F,IAAMiN,EAAmBF,EAAmBG,YACtCC,EAAoBJ,EAAmBK,aACvCC,EAAY5F,OAAO4E,EAAU1gB,QAAQ7C,MAAMqO,KAAKpQ,QAAS,KAAM,KAC/DumB,EAAY7F,OAAO8E,EAAU5gB,QAAQ7C,MAAMuO,IAAItQ,QAAS,KAAM,IAAKA,QAAS,MAAO,KACnFwmB,EAAYF,EAAY,KAAKvN,EAAEC,MAAMR,EAAM,IAAI0N,EAC/CO,EAAYF,EAAY,KAAKxN,EAAEE,MAAMT,EAAM,IAAI4N,EACrDd,EAAU1gB,QAAQ7C,MAAMqO,KAAOtO,OAAO0kB,GAAW,IACjDhB,EAAU5gB,QAAQ7C,MAAMuO,IAAMxO,OAAO2kB,GAAW,IAChDjO,EAAQyN,QAEL,GAAIvN,GAAQ+M,GAAWG,IACxBpN,EAAM,GAAKO,EAAEC,MAAM,GAAKR,EAAM,GAAKO,EAAEC,OAAO,GAAI,CAClD,IAAM0N,EAAc/kB,SAASC,eAAT,UAA2BoC,IAASmiB,YAClDQ,EAAYjG,OAAO8E,EAAU5gB,QAAQ7C,MAAMnB,OAAOZ,QAAS,KAAM,KACnE4mB,EAAY,GAEdA,GADCpO,EAAM,GACKmO,GAAWD,EAAY,GAAGlO,EAAM,GAAGyN,EAAK,KAAKS,IAI3C,KACdlB,EAAU5gB,QAAQ7C,MAAMnB,OAASkB,OAAO8kB,GAAW,KAErDpO,EAAQyN,EAGZF,EAAYpkB,SAASC,eAAT,UAA2BoC,IAASmiB,aAChDpN,EAAE8N,kBACF9N,EAAE3R,iBAGJxH,qBAAU,WAIR,OAHAklB,GAASkB,EAAoB,YAAa7M,GAAW,GACrD2L,GAASkB,EAAoB,UAAWc,GAAW,GACnDf,EAAYpkB,SAASC,eAAT,UAA2BoC,IAASmiB,aACzC,WACLlB,GAAgBe,EAAoB,aACpCf,GAAgBe,EAAoB,cAErC,IAEH,IAAMe,EAAc,SAAChO,GACnB+L,GAASkB,EAAoB,YAAa7M,GAAW,GACrD2L,GAASkB,EAAoB,UAAWc,GAAW,GACnDtO,EAAQ,CAACO,EAAEC,MAAMD,EAAEE,OACnBP,GAAO,GAGHoO,EAAY,SAAC/N,GACjBkM,GAAgBe,EAAoB,aACpCf,GAAgBe,EAAoB,WACpCzH,GAAiB,SAACkC,GAChB,MAAM,GAAN,oBACKA,EAASuG,MAAM,EAAEhjB,IADtB,iBAEMyc,EAASzc,GAFf,CAEuBqM,KAAMqQ,OAAO4E,EAAU1gB,QAAQ7C,MAAMqO,KAAKpQ,QAAS,KAAM,KAAOuQ,KAAMmQ,OAAO8E,EAAU5gB,QAAQ7C,MAAMuO,IAAItQ,QAAS,KAAM,IAAKA,QAAS,MAAO,QAFpK,aAGKygB,EAASuG,MAAMhjB,EAAM,EAAE,QAG9Bua,GAAiB,SAACkC,GAChB,MAAM,GAAN,oBAAWA,EAASuG,MAAM,EAAEhjB,IAA5B,iBAAwCyc,EAASzc,GAAjD,CAAyD8L,KAAM4Q,OAAO8E,EAAU5gB,QAAQ7C,MAAMnB,OAAOZ,QAAS,KAAM,QAApH,aAA+HygB,EAASuG,MAAMhjB,EAAM,EAAE,QAExJwU,EAAQ,CAACO,EAAEC,MAAMD,EAAEE,OACnBP,GAAO,EACPmN,GAAU,GACVF,GAAU,GACVjmB,EAASye,GAAgB,gBAAIkH,EAAkBlV,EAAWnM,OAAlC,CAA0CA,MAAOmM,EAAWnM,WAatF,OACE,yBACEsD,IAAKge,EACLrhB,IAAKD,EACLE,UAAU,iBACVnC,MAAO,CAAEqO,KAAK,GAAD,OAAKD,EAAWE,KAAhB,OAEb,yBACE/I,IAAKke,EACLthB,UAAU,uBACVnC,MAAO,CAACnB,OAAO,GAAD,OAAKuP,EAAWL,KAAhB,KACNQ,IAAI,GAAD,OAAKH,EAAWI,KAAhB,OAET,yBACEwW,YAAaA,EACb7iB,UAAS,UAAKuhB,EAAU,uBAAyB,gBACjDtkB,GAAE,UAAK6C,GACPvD,IAAK0P,EAAWxJ,MAChBtC,IAAI,QAEN,yBACEH,UAAS,UAAK0hB,EAAS,qBAAuB,cAC9CqB,YAhCU,SAAClO,GACnB4M,GAAU,GACVE,GAAU,IA+BFqB,WA5BS,SAACnO,GAClB4M,GAAU,GACVE,GAAU,IA2BFkB,YAAaA,EACbhlB,MAAO,CAACqO,KAAK,GAAD,OAAK0V,EAAS,EAAd,cCpGTV,I,QAAAA,gBA1BQ,SAAC9lB,GAAW,IACzB6nB,EAA2E7nB,EAA3E6nB,mBAAoB5B,EAAuDjmB,EAAvDimB,cAAeF,EAAwC/lB,EAAxC+lB,kBAAmB9G,EAAqBjf,EAArBif,iBAExDtO,EAAkBsV,EAAcxhB,KAAI,SAACoM,EAAYnM,GACrD,OACE,yBAAKC,IAAKD,GACR,kBAAC,GAAD,CACEua,iBAAkBA,EAClB8G,kBAAmBA,EACnB8B,mBAAoBA,EACpB5B,cAAeA,EACfvhB,MAAOA,EACPmM,WAAYA,QAMpB,OACEoV,EAAcze,OAAS,GACvB,yBAAK5C,UAAU,kBAAkB/C,GAAG,mBACjC8O,O,QC8CQmX,OAlEf,YAAyG,IAA1E5I,EAAyE,EAAzEA,QAASnQ,EAAgE,EAAhEA,UAAWkQ,EAAqD,EAArDA,iBAAkBgH,EAAmC,EAAnCA,cAAeF,EAAoB,EAApBA,kBAC5E3lB,EAAWC,cA8BX0nB,EAAsB9B,EAAcxhB,KAAI,SAACsK,EAAUrK,GACvD,OACA,yBAAKC,IAAKD,EACRE,UAAU,qBACVK,QAAS,YATmB,SAACP,GAC/Bwa,EAAQ6G,EAAkBrhB,GAAO6L,MACjCnQ,EAASye,GAAgB,gBAAIkH,EAAkBrhB,GAAvB,CAA+BA,MAAOA,MAO5CsjB,CAAwBjZ,EAAUrK,SAElD,yBAAKvD,IAAK4N,EAAU1H,MAAOtC,IAAI,GAAGH,UAAU,4BAQ1CqjB,EAAwBlZ,EAAUgQ,YAAYta,KAAI,SAACqL,EAAKpL,GAC5D,OACE,yBAAKC,IAAKD,EAAOO,QAAS,YA5CD,SAACP,EAAMoL,GAClC,IAAMoY,EAAkB,CACtBxjB,MAAOqK,EAAUrK,MACjB2C,MAAOyI,EACPiB,KAAM,EACNE,KAAM,EACNkX,QAAS,EACT3X,KAAM,IAERyO,GAAiB,SAACkC,GAChB,IAAK,IAAIpJ,EAAI,EAAGA,EAAIoJ,EAAS3Z,OAAQuQ,IACnC,GAAIoJ,EAASpJ,GAAGrT,QAAUqK,EAAUrK,MAClC,MAAM,GAAN,oBAAWyc,EAASuG,MAAM,EAAG3P,IAA7B,iBAAsCoJ,EAASpJ,GAA/C,CAAmD1Q,MAAOyI,KAA1D,aAAoEqR,EAASuG,MAAM3P,EAAI,EAAG,KAE9F,OAAIoJ,EAAS3Z,QAAU,GACrBrD,IAAQikB,KAAK,yGACNjH,GAEH,GAAN,oBAAWA,GAAX,CAAqB+G,OAEvBhJ,EAAQnQ,EAAUwB,MAwBiB8X,CAAqB3jB,EAAMoL,KAC1D,yBAAK3O,IAAK2O,EAAK/K,IAAI,YAKzB,OACE,yBAAKH,UAAU,4BACb,yBAAKA,UAAU,4BACZmjB,GAEH,+CAAWhZ,EAAUwB,MACrB,+CAAWxB,EAAU/F,aACrB,yBAAK7H,IAAK4N,EAAUgQ,YAAY,GAAIha,IAAI,GAAGH,UAAU,aACrD,yBAAKA,UAAU,0BAA0BqjB,K,QCLhCK,OAtDf,YAA0F,IAAhErJ,EAA+D,EAA/DA,iBAAkBgH,EAA6C,EAA7CA,cAAeF,EAA8B,EAA9BA,kBAAmB7G,EAAW,EAAXA,QACtE9e,EAAWC,cAMXkoB,EAAmBroB,aAAY,SAACC,GAAD,OAAWA,EAAM4O,aAPiC,EAqBzD/L,oBAAS,GArBgD,mBAqBhFwlB,EArBgF,KAqBvEC,EArBuE,KAuCvF,OAhBAnoB,qBAAU,WAER,IADA,IAAI4U,EAAO,EACF6C,EAAI,EAAGA,EAAIkO,EAAcze,OAAQuQ,IACxC,GAAIkO,EAAclO,GAAGrT,QAAU6jB,EAAiBG,kBAAkBhkB,MAAO,CACvEwQ,EAAO,EACP,MAIFuT,EADW,IAATvT,KAMH,CAACqT,EAAkBtC,IAGpB,yBAAKrhB,UAAU,mBACb,yBAAKK,QAtCuB,WAC9B7E,EnBAK,CACLf,KhCC4B,uBmDmC1B,gDACCmpB,GAAW,yBAAKvjB,QAjCW,WAC9Bga,GAAiB,SAACkC,GAChB,IAAK,IAAIpJ,EAAI,EAAGA,EAAIoJ,EAAS3Z,OAAQuQ,IACnC,GAAIoJ,EAASpJ,GAAGrT,QAAU6jB,EAAiBG,kBAAkBhkB,MAE3D,OADAP,IAAQikB,KAAK,+CACP,GAAN,oBAAWjH,EAASuG,MAAM,EAAG3P,IAA7B,aAAoCoJ,EAASuG,MAAM3P,EAAI,EAAG,QAIhEmH,EAAQ,MAwBM,gBACZ,kBAAC,GAAD,CACEA,QAASA,EACT6G,kBAAmBA,EACnBhX,UAAWwZ,EAAiBG,kBAC5BzJ,iBAAkBA,EAClBgH,cAAeA,M,mBCqBR0C,OAzEf,SAAkB3oB,GAAQ,IACf4oB,EACqC5oB,EADrC4oB,QAASC,EAC4B7oB,EAD5B6oB,UAAWC,EACiB9oB,EADjB8oB,WAAYC,EACK/oB,EADL+oB,aACrCC,EAA0ChpB,EAA1CgpB,MAAOC,EAAmCjpB,EAAnCipB,SAAUC,EAAyBlpB,EAAzBkpB,aAAcC,EAAWnpB,EAAXmpB,QAE3BC,EAAkB,SAAC1kB,GACvB,GAAImkB,EAAY,GAGZ,OAFAC,EAAWpkB,QACXqkB,EAAarkB,GAGbmkB,IAAcnkB,IACdykB,IACAL,EAAWpkB,GACXqkB,EAAarkB,KAIb2kB,EAAmBT,EAAQnkB,KAAI,SAAC6kB,EAAK5kB,GACvC,OAAImkB,IAAcnkB,EAET,yBAAKE,UAAU,6BAA6BD,IAAG,UAAKD,KAGrDskB,EAEI,yBACIpkB,UAAU,4BACVD,IAAG,UAAKD,GACRijB,YAAa,kBAAMyB,EAAgB1kB,MAKvC,yBACIE,UAAU,4BACVD,IAAG,UAAKD,GACRO,QAAS,kBAAMmkB,EAAgB1kB,SAO7C6kB,EAAmBL,EAAazkB,KAAI,SAAC+kB,EAAU9kB,GACjD,OAAImkB,EAAYD,EAAQphB,SAAW9C,EAE3B,yBAAKE,UAAU,6BAA6BD,IAAG,UAAKD,KAIpD,yBAAKE,UAAU,2BAA2BD,IAAG,UAAKD,QAI9D,OACE,yBAAKE,UAAU,iCACX,yBAAKA,UAAU,uBACVykB,EACAE,GAEL,6BACI,kBAAC,KAAD,CACIrd,QAAS8c,EACTS,gBAAiBZ,EACjBa,kBAAmBb,EACnBnhB,SAAU,WAAOuhB,GAAS,SAAC9oB,GAAD,OAAYA,MACtCqQ,KAAK,a,iCC3CnBmK,I,QAAY,IAAIC,OAChBE,GAAc,IAAIF,MA+qBP+O,GA9qBO,SAAC3pB,GACnB,IAAMI,EAAWC,cACXI,EAAUkS,cACV9R,EAAWC,cAHY,EAIDD,EAASV,MAA7BuD,EAJqB,EAIrBA,OAAQY,EAJa,EAIbA,aAGOvD,IAAnBF,EAASV,OACT2K,OAAOrK,QAAQmpB,OAInB,IAyCIvS,EAzCEpX,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAZb,EAkBS+C,mBAAS8H,OAAOsQ,YAlBzB,mBAkBtBC,EAlBsB,KAkBTC,EAlBS,OAmBWtY,mBAAS8H,OAAOyQ,aAnB3B,mBAmBtBC,EAnBsB,KAmBRC,EAnBQ,OAoBazY,mBAAS,IApBtB,mBAoBtB8a,EApBsB,KAoBP+L,EApBO,OAuBe7mB,mBAAS,GAvBxB,mBAuBtB8mB,EAvBsB,KAuBNnL,EAvBM,OAwBD3b,mBAAS,GAxBR,mBAwBtByhB,EAxBsB,KAwBdpB,EAxBc,OAyBmBrgB,oBAAS,GAzB5B,mBAyBtB+mB,EAzBsB,KAyBJjF,EAzBI,OA2Ba9hB,oBAAS,GA3BtB,mBA2BtBgnB,EA3BsB,KA2BPC,EA3BO,OA6BajnB,mBAAS,IA7BtB,mBA6BtBijB,EA7BsB,KA6BPhH,EA7BO,OA8Bajc,mBAAS,UAAD,OAAW7D,EAAX,wCA9BrB,oBA8BtBof,GA9BsB,MA8BPE,GA9BO,SA+BDzb,mBAAS,IA/BR,qBA+BtBknB,GA/BsB,MA+BdC,GA/Bc,SAgCLnnB,mBAAS,IAhCJ,qBAgCtBonB,GAhCsB,MAgChBlL,GAhCgB,SAiCClc,mBAAS,CACnCuN,KAAM,GACNiN,MAAO,KAnCkB,qBAiCtB4B,GAjCsB,MAiCbC,GAjCa,SAqCKrc,mBAAS,CACvCuN,KAAM,GACNiN,MAAO,KAvCkB,qBAqCtBgC,GArCsB,MAqCXC,GArCW,SA0CWzc,oBAAS,GA1CpB,qBA0CtBqnB,GA1CsB,MA0CRC,GA1CQ,SA4CKtnB,mBAAS,GA5Cd,qBA4CtB6lB,GA5CsB,MA4CXE,GA5CW,SA6CH/lB,oBAAS,GA7CN,qBA6CtBgmB,GA7CsB,MA6CfC,GA7Ce,SA+CCjmB,mBAAS,IA/CV,qBA+CtB4lB,GA/CsB,MA+Cb2B,GA/Ca,SAgDWvnB,mBACpCoR,MAAMgQ,KAAK,CAAE5c,OAAQ,KAAM,kBAAM,MAjDR,qBAgDtB0hB,GAhDsB,MAgDRsB,GAhDQ,MAsD7BlqB,qBAAU,WACNF,EAASoY,IAAc,MAExB,IAGHlY,qBAAU,WACFL,EAAK+F,WACL0N,GAAOC,KAAK,aAAc,CAAEgK,KAAM1d,EAAK+F,SAASpC,IAAIkD,aACpD4M,GAAOC,KAAK,OAAQ,CAAEgK,KAAM1d,EAAK+F,SAASpC,IAAIkD,cAElD4M,GAAOK,IAAI,kBACXL,GAAOM,GAAG,kBAAkB,SAAArU,GAExBK,EAAMS,QAAQC,QAAQ,UAG3B,CAACT,IAGJK,qBAAU,WACN,sBAAC,gCAAAiD,EAAA,sEACqBhE,IAAMC,IAAN,iCAAoC8E,IADzD,YACSqQ,EADT,QAGWhV,KAAKyD,QAHhB,gBAG2BiU,EAAQ1C,EAAIhV,KAAK0X,MAH5C,6BAMOrX,EAAMS,QAAQC,QAAQ,KAN7B,0BAUO2W,EAAMC,QAAQ9P,QAEV6P,EAAMtT,SACNumB,IAAgB,GAIpBC,GAAWlT,EAAMC,SACXmT,EAAcpT,EAAMC,QAAQ,GAClC2H,EAAiBwL,EAAY7Z,eAC7B6N,GAAiBgM,EAAYzb,YAC7BkQ,GAAQuL,EAAYla,MACpB4Z,GAAUM,EAAY1U,QACtBgT,GAAa1R,EAAMC,QAAQ9P,OAAS,GAEpCpH,EAAS6R,GAAgB,IACzB7R,EAAS6R,GAAgB,KAKpBoF,EAAMtT,QAkBPumB,IAAgB,IAjBV1jB,EAAW,CAAEtC,QAAS+S,EAAMxT,aAClCV,IAAMc,KAAK,yBAA0B2C,GAChCnH,MAAK,SAACC,GAEH,GAAIA,EAASC,KAAKyD,QAAS,CACvB,IAAMsnB,EAAUhrB,EAASC,KAAK+qB,QAC9BzL,EAAiByL,EAAQ9Z,eACzB6N,GAAiBiM,EAAQ1b,YACzBkQ,GAAQwL,EAAQna,MAChBnQ,EAAS6R,GAAgB,IACzB7R,EAAS6R,GAAgB,SAEzB9N,IAAQ6C,MAAM,wHA5CrC,2CAAD,KAqDD,IAEH,IAOM2jB,GAA0BtlB,mBAC1BulB,GAA2BvlB,mBAC3BwlB,GAAoBxlB,mBACpBylB,GAAsBzlB,mBAEtB0lB,GAAc,SAAC3I,GACjB4I,KACA5I,EAAQ9c,QAAQ7C,MAAMI,QAAU,SAG9BmoB,GAAgB,WAClBL,GAAwBrlB,QAAQ7C,MAAMI,QAAU,OAChD+nB,GAAyBtlB,QAAQ7C,MAAMI,QAAU,OACjDgoB,GAAkBvlB,QAAQ7C,MAAMI,QAAU,OAC1CioB,GAAoBxlB,QAAQ7C,MAAMI,QAAU,QA4DhDqC,EAAO,SAJP,SAAqBM,GACjBylB,GAAiBzlB,MAKrB,IAAM2jB,GAAU,WACZ,IAAMG,EAAM,CACR1Y,cAAeqV,EACfjX,WAAYuP,GACZxI,OAAQmU,GACR3Z,KAAM6Z,GACNnb,IAAKmQ,GACLlQ,MAAOsQ,IAEXH,GAAW,CACP9O,KAAM,GACNiN,MAAO,KAEXiC,GAAa,CACTlP,KAAM,GACNiN,MAAO,KAGX+M,IAAW,SAACpJ,GAAD,6BACJA,EAASuG,MAAM,EAAGmB,KADd,CAEPS,GAFO,aAGJnI,EAASuG,MAAMmB,GAAY,EAAG,SAEjCD,GAAQphB,SAAWqhB,IACnB2B,IAAgB,SAACrJ,GAAD,oBACTA,EAASuG,MAAM,EAAGwB,GAAa1hB,OAAS,QAKjDshB,GAAa,SAACpkB,GAChBua,EAAiB2J,GAAQlkB,GAAOkM,eAChC6N,GAAiBmK,GAAQlkB,GAAOsK,YAChCmb,GAAUvB,GAAQlkB,GAAOqR,QACzBmJ,GAAQ0J,GAAQlkB,GAAO6L,MACvB8O,GAAWuJ,GAAQlkB,GAAOuK,KAC1BwQ,GAAamJ,GAAQlkB,GAAOwK,OACxB0Z,GAAQlkB,GAAOuK,IAAIuO,OACnB7C,GAAUxZ,IAAMynB,GAAQlkB,GAAOuK,IAAIuO,MACnC7C,GAAU+C,QAEV/C,GAAU8C,QAEVmL,GAAQlkB,GAAOwK,MAAMsO,OACrB1C,GAAY3Z,IAAMynB,GAAQlkB,GAAOwK,MAAMsO,MACvC1C,GAAY4C,QAEZ5C,GAAY2C,SAWdwN,GAAmB,SAACzlB,GACtBA,EAAMsC,iBACF+gB,GAAY,GACZ1kB,IAAQ6C,MAAM,qFAEO,KAAd6hB,IACP1kB,IAAQ+mB,QAAQ,qFAGpB/B,KAEIN,GAAYD,GAAQphB,OAAS,EAC7BshB,GAAWD,GAAY,GAEvBsB,GAAU,IAEdpB,IAAa,SAACoC,GAAD,OAAeA,EAAY,OAuBtCpG,GAAkB,uCAAG,WAAOvf,GAAP,mCAAAjC,EAAA,yDAAc6nB,EAAd,+BAAsB,IACzCxC,GAAQphB,OAAS,GADE,uBAEnBrD,IAAQ6C,MAAM,iFAFK,6BAKjBqkB,EAAY,CACdza,cAAeqV,EACfjX,WAAYuP,GACZxI,OAAQmU,GACR3Z,KAAM6Z,GACNnb,IAAKmQ,GACLlQ,MAAOsQ,IAGL8L,EAdiB,uBAehB1C,GAAQlB,MAAM,EAAGmB,KAfD,CAgBnBwC,GAhBmB,aAiBhBzC,GAAQlB,MAAMmB,GAAY,EAAG,OAGhC/d,OAAOygB,QAAQ,qFApBI,wBAqBb3kB,EAAW,CACblD,OAAQA,EACRY,QAASA,EACTgT,QAASgU,EACTF,SAzBe,UA4BIjoB,IAAMc,KAAN,kBAA8B2C,GA5BlC,aA4BblH,EA5Ba,QA8BNC,KAAKyD,QA9BC,iBA+BfhD,ErBtWP,CACLf,KhCC4B,qBqDqWhB8E,IACKqnB,QAAQ,2CAAc,GACtB/rB,MAAK,WACG2rB,EAIDjnB,IAAQf,QAAQ,oCAHhBe,IAAQf,QAAQ,8EAAmB,MAMzC3D,MAAK,YACE2rB,GAASf,GACV5pB,EAAQC,QAAR,gBACagD,IAGL0nB,IACR1X,GAAOC,KAAK,eAAgB,CACxB9P,YAAanE,EAASC,KAAK0X,MAAMxT,YACjCS,QAAS5E,EAASC,KAAK0X,MAAMzT,IAC7BI,MAAOtE,EAASC,KAAK0X,MAAMrT,MAC3BgH,OAAQ/K,EAAK+F,SAASpC,IAAIkD,aAE9BrG,EAAQC,QAAQ,CACZ2D,SAAS,YACTlE,MAAO,CACHmE,QAAS5E,EAASC,KAAK0X,MAAMzT,IAC7BF,OAAQA,SA3Db,2BAgEc,YAAtBhE,EAASC,KAAK8rB,IAhEN,wBAiEftnB,IAAQ6C,MAAM,2FAAsB,GACpChH,EAAMS,QAAQC,QAAQ,CAClB2D,SAAS,YACTlE,MAAO,CACHmE,QAAS5E,EAASC,KAAKkE,YACvBH,OAAQA,KAtED,2BA4EfS,IAAQ6C,MAAM,yDA5EC,gCAgFnB7C,IAAQ6C,MAAM,mCAhFK,4CAAH,sDAtTK,GA8YOhE,mBAAS,IA9YhB,qBA8YtB0F,GA9YsB,MA8YVC,GA9YU,SA+YC3F,mBAAS,IA/YV,qBA+YtB0oB,GA/YsB,MA+YbC,GA/Ya,MAiZ7BrrB,qBAAU,WACN6C,IAAMc,KAAK,0BAA2B,CAAEP,OAAQA,IAC3CjE,MAAK,SAAAC,GACEA,EAASC,KAAKyD,QACduF,GAAcjJ,EAASC,KAAK+I,YAE5BrF,MAAM,6GAGnB,CAACohB,EAAQ/gB,IAGZpD,qBAAU,WACFoI,GAAWqG,WAkCX4c,GAjCwB,yBAAM/mB,UAAU,wBACpC,yBAAKoD,IAAK2iB,IACN,kBAAC,GAAD,CACIjiB,WAAYA,GACZiW,kBAAmBA,EACnBM,iBAAkBA,EAClBC,QAASA,MAGjB,yBAAKlX,IAAK4iB,GAA0BnoB,MAAO,CAAEI,QAAS,SAClD,kBAAC,GAAD,CACI6F,WAAYA,GACZ+V,iBAAkBA,GAClBE,kBAAmBA,KAG3B,yBAAK3W,IAAK6iB,GAAmBpoB,MAAO,CAAEI,QAAS,SAC3C,kBAAC,GAAD,CACI6F,WAAYA,GACZiS,UAAWA,GACX0E,WAAYA,GACZV,kBAAmBA,KAG3B,yBAAK3W,IAAK8iB,GAAqBroB,MAAO,CAAEI,QAAS,SAC7C,kBAAC,GAAD,CACI6F,WAAYA,GACZoS,YAAaA,GACb2E,aAAcA,GACdd,kBAAmBA,SAMpC,CAACjW,GAAYud,EAAexB,IAE/BnkB,qBAAU,WAKNwK,OAAOnF,iBAAiB,UAJxB,WACI2V,EAAexQ,OAAOsQ,YACtBK,EAAgB3Q,OAAOyQ,gBAIvBsO,EA3bM,MA0bNxO,EAAsBG,EACL,CACbna,MAAM,GAAD,OAAiB,GAAZma,EA5bR,MA4bG,MACLla,OAAO,GAAD,OAAiB,GAAZka,EAAL,MACNnP,SAAS,GAAD,OA/bJ,IACF,MA8bM,MACR0R,UAAU,GAAD,OAhcL,IAgcK,OAGI,CACb1c,MAAM,GAAD,OAAgB,GAAXga,EAAL,MACL/Z,OAAO,GAAD,OAAgB,GAAX+Z,EApcT,MAocI,MACNhP,SAAS,GAAD,OAtcJ,IAscI,MACR0R,UAAU,GAAD,OAAKC,OAAL,UAGlB,CAAClT,OAAOsQ,WAAYtQ,OAAOyQ,cAgC9B,OACI,yBAAK3W,UAAU,oBAEX,6BACI,yBACIA,UAAU,0BACV/C,GAAG,0BACHY,MAAOqb,GAEP,yBACIlZ,UAAU,gBACVzD,IAAG,UAAKod,IACRxZ,IAAI,QAER,kBAAC,GAAD,CACIghB,kBAAmBrd,GAAWqG,UAC9BkX,cAAeA,EACfhH,iBAAkBA,EAClB4I,mBAnQO,SAACnjB,GACxBua,GAAiB,SAACkC,GAAD,6BACVA,EAASuG,MAAM,EAAGhjB,IADR,aAEVyc,EAASuG,MAAMhjB,EAAQ,EAAG,WAkQpBslB,GACG,yBAAKplB,UAAU,6BACX,2BAAO8C,SAzYV,SAAClC,GAClB0Z,GAAQ1Z,EAAMmC,cAAcC,QAwYuBA,MAAOwiB,GAAMxlB,UAAU,0BACtD,wBAAIA,UAAU,yBACd,8BACI8C,SAhZL,SAAClC,GACpB2kB,GAAU3kB,EAAMmC,cAAcC,QAgZNA,MAAOsiB,GACPtlB,UAAU,wBACVoD,IAAK,SAAC+J,GAAD,OAAWA,GAASA,EAAMC,cAMnD,kBAAC,GAAD,CACIkN,QAASA,GACTD,iBAAkBA,EAClBgH,cAAeA,EACfF,kBAAmBrd,GAAWqG,YAElC,kBAAC,GAAD,CACI6Z,QAASA,GACTC,UAAWA,GACXC,WAAYA,GACZC,aAAcA,GACdC,MAAOA,GACPC,SAAUA,GACVC,aAAcA,GACdC,QAASA,KAEb,yBAAKvkB,UAAU,8BACVwa,GAAQ7O,KACL,yBACI3L,UAAU,4BACVK,QA5WO,WACnB0V,GAAUiR,OAAQjR,GAAU+C,OAC3B/C,GAAU8C,QACf4F,GAAU,SAAAoB,GAAM,OAAIA,EAAS,OA4WTrF,GAAQ7O,MAAQoK,GAAUiR,QAC1B,kBAACC,GAAA,EAAD,CACIppB,MAAO,CAAEqJ,SAAU,UAGvBsT,GAAQ7O,OAASoK,GAAUiR,QAC3B,kBAACE,GAAA,EAAD,CACIrpB,MAAO,CAAEqJ,SAAU,UAE1BsT,GAAQ7O,MAGb,6BACI,kBAACwb,GAAA,EAAD,CACItpB,MAAO,CAAEqJ,SAAU,UAF3B,OAOH0T,GAAUjP,KACP,yBACI3L,UAAU,4BACVK,QA/XS,WACrB6V,GAAY8Q,OAAQ9Q,GAAY4C,OAC/B5C,GAAY2C,QACjB4F,GAAU,SAAAoB,GAAM,OAAIA,EAAS,OA+XTrF,GAAQ7O,MAAQuK,GAAY8Q,QAC5B,kBAACC,GAAA,EAAD,CACIppB,MAAO,CAAEqJ,SAAU,UAGvBsT,GAAQ7O,OAASuK,GAAY8Q,QAC7B,kBAACE,GAAA,EAAD,CACIrpB,MAAO,CAAEqJ,SAAU,UAE1B0T,GAAUjP,MAGf,6BACI,kBAACwb,GAAA,EAAD,CACItpB,MAAO,CAAEqJ,SAAU,UAF3B,UAQR,yBAAKlH,UAAU,4BACX,kBAAC,IAAD,CAAQvF,KAAK,UACToD,MAAO,CAAEqJ,SAAU,QACnB7G,QAvIM,WAClB9B,IAAM6oB,OAAO,aAAc,CACvBrsB,KAAM,CACF+D,OAAQA,EACRY,QAASA,EACTP,QAASsmB,GACTrf,OAAQ/K,EAAK+F,SAASpC,OAGzBnE,MAAK,SAAAC,GACEA,EAASC,KAAKyD,UAEdlB,QAAQC,IAAIkoB,IACQ,GAAhBA,IACA3W,GAAOC,KAAK,qBACR,CACIpB,SAAU7S,EAASC,KAAKkE,YACxBoC,QAAShG,EAAK+F,SAASpC,MAG/B5D,EAAMS,QAAQE,KAAd,gBAA4B+C,KAI5B1D,EAAMS,QAAQE,KAAd,WA6GR,6BAKA,kBAAC,IAAD,CAAQtB,KAAK,UACToD,MAAO,CAAEqJ,SAAU,QACnB7G,QA7NE,SAACO,GACfuf,GAAmBvf,EAAO,KA0NlB,4BAKA,kBAAC,IAAD,CAAQnG,KAAK,UACToD,MAAO,CAAEqJ,SAAU,QACnB7G,QA1UK,WACb2jB,GAAQphB,OAAS,GAAKqhB,GACtB1kB,IAAQikB,KAAK,kDAGjBjkB,IAAQf,QAAR,UAAmBylB,GAAY,EAA/B,0EACA0B,IAAW,SAACpJ,GAAD,6BACJA,EAASuG,MAAM,EAAGmB,KADd,aAEJ1H,EAASuG,MAAMmB,GAAY,EAAG,SAErC2B,IAAgB,SAACrJ,GAAD,OACZ,GADY,oBACNA,OAEV2H,GAAWD,GAAY,MA2Tf,uBAKCA,GAAY,IACT,kBAAC,IAAD,CAAQxpB,KAAK,UACToD,MAAO,CAAEqJ,SAAU,QACnB7G,QAASgmB,IAFb,uBAMHZ,GACG,kBAAC,IAAD,CAAQhrB,KAAK,UACToD,MAAO,CAAEqJ,SAAU,QACnB7G,QAvUG,WACnB6f,GAAoB,KAoUR,sBAKE,kBAAC,IAAD,CAAQzlB,KAAK,UACXoD,MAAO,CAAEqJ,SAAU,QACnB7G,QAAS8f,IAFX,sBAMN,kBAAC,GAAD,CACIrhB,OAAQA,EACR2N,QAAS0Y,EACTjF,oBAAqBA,EACrBC,mBAAoBA,MAG5B,yBAAKngB,UAAU,gCACE,IAAZ8mB,IAAiBA,GAElB,yBAAK9mB,UAAU,qCACX,yBACIA,UAAU,yBACVK,QArfM,WACgC,SAAlD0lB,GAAwBrlB,QAAQ7C,MAAMI,QACtCkoB,GAAYJ,IAEZK,OA+eQ,QAIA,yBACIpmB,UAAU,yBACVK,QAjfO,WACgC,SAAnD2lB,GAAyBtlB,QAAQ7C,MAAMI,QACvCkoB,GAAYH,IAEZI,OA2eQ,QAIA,yBACIpmB,UAAU,yBACVK,QA5dG,WAEfglB,GADAD,KAydQ,UAIA,yBAAKplB,UAAU,yBAAyBK,QA9epC,WACgC,SAA5C4lB,GAAkBvlB,QAAQ7C,MAAMI,QAChCkoB,GAAYF,IAEZG,OA0eQ,OAGA,yBAAKpmB,UAAU,yBAAyBK,QAzelC,WACgC,SAA9C6lB,GAAoBxlB,QAAQ7C,MAAMI,QAClCkoB,GAAYD,IAEZE,OAqeQ,WAMe,IAAnBlB,GAAwB,kBAAC,GAAD,CACpBpmB,OAAQA,EACR2N,QAAS4a,QAAQnC,GACjBjK,OAAQlB,EACRmB,IAAKgK,EACLzG,UAAWA,M,WClsBf6I,KAAKC,QACCD,KAAKE,UC0FZ9iB,oBApFf,SAAmBtJ,GACf,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAYpCqD,EAAe,uCAAG,gCAAAC,EAAA,sEAIOJ,IAAM3D,IAAI,6BAJjB,WAIdgE,EAJc,QAMF7D,KAAKyD,QANH,uBAOhBC,MAAM,uCAPU,iCAWdI,EAAa,CACfC,OAAQF,EAAa7D,KAAKgE,KAAKC,IAC/BC,YAAa,KACbC,WAAY,EACZC,QAAS,EACTC,MAAO,IAhBS,SAoBQb,IAAMc,KAAK,oBAAqBR,GApBxC,WAoBdS,EApBc,QAqBDvE,KAAKyD,QArBJ,wBAsBhBC,MAAM,wCAtBU,2BA0BpBc,IAAQf,QACJ,8MAEJgB,YAAW,WACPpE,EAAMS,QAAQC,QAAQ,CAClB2D,SAAS,cACTlE,MAAO,CACHuD,OAAQF,EAAa7D,KAAKgE,KAAKC,IAC/BU,QAASJ,EAAcvE,KAAK2E,aAGrC,KArCiB,4CAAH,qDA0CrB,OAAIrE,EAAK+F,WAAa/F,EAAK+F,SAASzF,OAE5B,kBAAC,KAAD,CAAM8rB,KAAMrsB,EAAMqsB,MACd,kBAAC,KAAK1gB,KAAN,CAAWhH,IAAI,QACX,uBAAGE,KAAK,UAAR,WAEJ,kBAAC,KAAK8G,KAAN,CAAWhH,IAAI,OACX,uBAAGE,KAAK,aAAR,YAMR,kBAAC,KAAD,CAAMwnB,KAAMrsB,EAAMqsB,MACd,kBAAC,KAAK1gB,KAAN,CAAWhH,IAAI,UACX,uBAAGM,QAAS3B,GAAZ,gBAGJ,kBAAC,KAAKqI,KAAN,CAAWhH,IAAI,WACX,uBAAGE,KAAK,YAAR,YAEJ,kBAAC,KAAK8G,KAAN,CAAWhH,IAAI,UACX,uBAAGM,QA1EG,WAClB1F,IAAMC,IAAN,UzDZmB,ayDYnB,YAAmCC,MAAK,SAACC,GACb,MAApBA,EAAS4sB,OACTtsB,EAAMS,QAAQE,KAAK,UAEnB0C,MAAM,uBAqEF,e,mBCtBLkpB,OAzDf,WAAmB,IAAD,EACcvpB,oBAAS,GADvB,mBACTqO,EADS,KACAyB,EADA,KAGZrQ,EAAQ,GAsBZ,OAXEA,EAZevC,aAAY,SAACC,GAAD,OAAWA,EAAMqsB,YAAY/T,YAYhD,CAAEU,SAAU,QAASsT,OAAQ,EAAGprB,MAAO,QAEvC,CACN8X,SAAU,QACVsT,OAAQ,EACRprB,MAAO,OAEPqrB,QAAS,EACTrU,UAAW,2BAIb,yBAAKzT,UAAU,OAAOnC,MAAOA,GAC3B,yBAAKmC,UAAU,cACb,uBAAGC,KAAK,KAAR,YAEF,yBAAKD,UAAU,mBACb,yBAAKA,UAAU,cACb,kBAAC,GAAD,CAAWynB,KAAK,gBAElB,kBAAC,IAAD,CACEznB,UAAU,sBACVvF,KAAK,UACL4F,QAhCW,WACjB6N,GAAW,KAiCL,kBAAC,IAAD,CAAMzT,KAAK,iBAEb,kBAAC,KAAD,CACE2E,MAAM,UACN2oB,UAAU,QACV/nB,UAAU,cACVgoB,UAAU,EACVC,QArCQ,WACd/Z,GAAW,IAqCLzB,QAASA,GAGT,kBAAC,GAAD,CAAWgb,KAAK,e,QC3CXS,OAVf,WACE,OACE,yBAAKloB,UAAU,oBACb,wDACa,kBAAC,IAAD,CAAMvF,KAAK,a,qBCkBnBqU,I,QAFIpL,EAAQ,KAEHykB,KAAG,0BAA2B,CAACC,WAAa,CAAC,gBAGjEliB,OAAOmiB,WAAa,WAClBniB,OAAOjK,SAAS4jB,UAuBHyI,OArBf,WACE,OACE,kBAAC,WAAD,CAAUC,SAAW,4CACnB,kBAAC,GAAD,MACA,yBAAKvoB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwoB,OAAK,EAAC7L,KAAK,IAAI8L,UAAWC,EAAKvqB,EAAa,QACnD,kBAAC,IAAD,CAAOqqB,OAAK,EAAC7L,KAAK,SAAS8L,UAAWC,EAAKC,GAAW,KACtD,kBAAC,IAAD,CAAOH,OAAK,EAAC7L,KAAK,YAAY8L,UAAWC,EAAKvgB,GAAc,KAC5D,kBAAC,IAAD,CAAOqgB,OAAK,EAAC7L,KAAK,WAAW8L,UAAWC,EAAK7f,GAAS,KACtD,kBAAC,IAAD,CAAO2f,OAAK,EAAC7L,KAAK,eAAe8L,UAAWC,EAAKtf,IAAgB,KACjE,kBAAC,IAAD,CAAOuT,KAAK,gBAAgB8L,UAAWC,EAAK/kB,EAAgB,QAC5D,kBAAC,IAAD,CAAOgZ,KAAK,YAAY8L,UAAWG,EAAMF,EAAKG,GAAc,SAC5D,kBAAC,IAAD,CAAOL,OAAK,EAAC7L,KAAK,cAAc8L,UAAWG,EAAMF,EAAK3D,IAAe,QAGzE,kBAAC,GAAD,QCpCcsC,QACW,cAA7BnhB,OAAOjK,SAAS6sB,UAEe,UAA7B5iB,OAAOjK,SAAS6sB,UAEhB5iB,OAAOjK,SAAS6sB,SAASllB,MACvB,2D,cChBAmlB,GAAe,CAAElV,UAAW,GCA5BkV,GAAe,CAAEzb,YAAa,EAAGE,SAAS,GCE1Cub,GAAe,CAAC3kB,YAAa,GACb3B,MAAO,GACP0X,YAAa,GACbxO,KAAM,GACN3M,IAAK,GACLc,OAAQ,GCLxBipB,GAAe,CAACjpB,OAAQ,GCCxBipB,GAAe,CAAEC,cAAe,GCevBC,GAVKC,aAAgB,CAClC7tB,KCHa,WAA0B,IAAjBE,EAAgB,uDAAV,GAAG4tB,EAAO,uCACpC,OAAOA,EAAO1uB,MACV,IlETqB,gBkEUjB,OAAO,gBAAIc,EAAX,CAAkB6tB,SAAUD,EAAOzuB,UACvC,IlEZkB,akEad,OAAO,gBAAKa,EAAZ,CAAmB8tB,YAAaF,EAAOzuB,UAC3C,IlEZiB,YkEab,OAAO,gBAAIa,EAAX,CAAkB6F,SAAU+nB,EAAOzuB,UACvC,IlEbmB,ckEcf,OAAO,gBAAIa,GACf,QACI,OAAOA,IDPjBqsB,YLRa,WAAyC,IAA/BrsB,EAA8B,uDAAtBwtB,GAAcI,EAAQ,uCACrD,OAAQA,EAAO1uB,MACb,I5DK0B,iB4DJxB,OAAO,gBAAKc,EAAZ,CAAmBsY,SAAUsV,EAAOzuB,UACtC,QACE,OAAOa,IKIXiY,SJTa,WAAyC,IAA/BjY,EAA8B,uDAAtBwtB,GAAcI,EAAQ,uCACrD,OAAQA,EAAO1uB,MACb,I7DEgC,uB6DD9B,OAAO,gBAAKc,EAAZ,CAAmB+R,YAAa6b,EAAOzuB,UACzC,I7DC0B,iB6DAxB,OAAO,gBAAKa,EAAZ,CAAmBiS,QAAS2b,EAAOzuB,UACrC,QACE,OAAOa,IIGX0S,KERa,WAA+B,IAArB1S,EAAoB,uDAAZ,GAAI4tB,EAAQ,uCACzC,OAAQA,EAAO1uB,MACX,InEHsB,iBmEIlB,OAAO,gBAAKc,EAAZ,CAAmByS,SAAUmb,EAAOzuB,UACxC,InEJuB,kBmEKnB,OAAO,gBAAKa,EAAZ,CAAmB0D,YAAakqB,EAAOzuB,UAC3C,QACI,OAAOa,IFEjB4O,UHJa,WAA0D,IAAjD5O,EAAgD,uDAA1C,CAACuoB,kBAAoBiF,IAAcI,EAAO,uCAEtE,OAAOA,EAAO1uB,MACV,I9DD0B,mB8DEtB,OAAO,gBAAIc,EAAX,CAAkBuoB,kBAAmBqF,EAAOzuB,UAChD,I9DF0B,mB8DGtB,OAAO,gBAAIa,EAAX,CAAkBuoB,kBAAmBiF,KACzC,QACI,OAAOxtB,IGHf+tB,mBFVa,WAA2D,IAAlD/tB,EAAiD,uDAA3C,CAAC+tB,mBAAqBP,IAAcI,EAAO,uCAEvE,OAAOA,EAAO1uB,MACV,I/DS0B,mB+DRtB,OAAO,gBAAIc,EAAX,CAAkB+tB,mBAAoBH,EAAOzuB,UACjD,QACI,OAAOa,IEKfytB,aDVa,WAAyC,IAA/BztB,EAA8B,uDAAtBwtB,GAAcI,EAAQ,uCACrD,OAAQA,EAAO1uB,MACb,IhEO+B,sBgEL/B,IhEM+B,sBgEL7B,OAAO,gBAAKc,EAAZ,CAAmBytB,aAAcG,EAAOzuB,UAC1C,QACE,OAAOa,M,+BIGPguB,GAA4BC,aAAgBC,KAAmBC,KAAnCF,CAA+CG,MAEjFC,IAASC,OACL,kBAAC,IAAD,CACIC,MAAOP,GACHQ,GACA7jB,OAAO8jB,8BACP9jB,OAAO8jB,iCAGX,kBAAC,IAAD,KACI,kBAAC,GAAD,QAGNvsB,SAASC,eAAe,STkGxB,kBAAmBusB,WACrBA,UAAUC,cAAcC,MAAMtvB,MAAK,SAAAuvB,GACjCA,EAAaC,iB,0CUlIfC,EAAOC,QAAU7mB,EAAQ,M,6LCD7B4mB,EAAOC,QAAU,CACb5K,QAAS,+DACT6K,OAAQ,0BACRC,OAAQ,2BACRC,OAAQ,6B","file":"static/js/main.281c924c.chunk.js","sourcesContent":["//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n// ip address ( please be careful... )\r\nexport const LOCAL_HOST = \"15.164.48.192\";\r\n\r\n","import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\r\n        .then(response => response.data);\r\n    \r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\n\r\nexport const LOAD_EMPTY_NUM = 'load_empty_num';\r\nexport const SAVE_PREV_SCENE = 'SAVE_PREV_SCENE';\r\n\r\nexport const LOADINGPAGE_GAMEPLAY = \"gameLoading_gamePlay\"\r\nexport const PAUSE_GAMEPLAY = \"pause_gamePlay\"\r\n\r\nexport const NAVBAR_CONTROL = \"navbar_control\";\r\n\r\nexport const SELECT_CHARACTER = \"select_character\";\r\nexport const DETACH_CHARACTER = \"detach_character\";\r\n\r\nexport const SELECT_MOVINGTARGET = \"select_movingtarget\";\r\nexport const DETACH_MOVINGTARGET = \"detach_movingtarget\"; \r\nexport const SELECT_DISPLAYED = \"select_displayed\";\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.replace('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.replace('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nexport default function (SpecificComponent, adminRoute = null) {\r\n    function Validate(props) {\r\n        const location = useLocation();\r\n        useEffect(() => {\r\n            if (location.state === undefined) {\r\n                props.history.replace('/');\r\n            }\r\n        }, [])\r\n        if(location.state) {\r\n            return (\r\n                <SpecificComponent {...props}/>\r\n            )\r\n        }\r\n        else {\r\n            return <div>잘못된 접근입니다ㅋㅋ</div>\r\n        }\r\n    }\r\n    return Validate\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst svg = {\r\n  arrow_1:\r\n    \"M-1.73589e-06 5.2875L16.6883 22.5L-2.31124e-07 39.7125L5.13765 45L27 22.5L5.13765 -2.24574e-07L-1.73589e-06 5.2875Z\",\r\n};\r\n\r\nexport function SVG(props) {\r\n  const { src, color, width, height } = props;\r\n  return (\r\n    <svg\r\n      width={width ? width : \"auto\"}\r\n      height={height ? height : \"auto\"}\r\n      viewBox=\"0 0 27 45\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d={svg[src]} fill={color} />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function BAR(props) {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"3\"\r\n      viewBox=\"0 0 15 3\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <rect width=\"15\" height=\"3\" fill=\"white\" />\r\n    </svg>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { LOCAL_HOST } from \"../../Config\";\r\nimport \"./LandingPage.css\";\r\nimport { SVG, BAR } from \"../../svg/icon\";\r\n\r\nconst ListContainer = {\r\n  recent_games: {\r\n    id: \"recent_gameList\",\r\n    pos: 0,\r\n    limit: 3,\r\n  },\r\n  popular_games: {\r\n    id: \"popular_gameList\",\r\n    pos: 0,\r\n    limit: 2,\r\n  },\r\n};\r\n\r\nfunction ContainerToRight(target) {\r\n  if (target.pos < target.limit - 1) {\r\n    console.log(target.pos);\r\n\r\n    var bar = document.getElementById(\r\n      target.id.split(\"_\")[0] + \"_bar\" + String(target.pos)\r\n    );\r\n    bar.style.filter = \"brightness(50%)\";\r\n\r\n    target.pos += 1;\r\n    //* container\r\n    var container = document.getElementById(target.id);\r\n    container.style.transform = `translate(${-1267 * target.pos}px, 0px)`;\r\n    // container.style.left = -1267 * target.pos + \"px\";\r\n    //* bar\r\n    bar = document.getElementById(\r\n      target.id.split(\"_\")[0] + \"_bar\" + String(target.pos)\r\n    );\r\n    bar.style.filter = \"brightness(100%)\";\r\n    //* arrow\r\n    if (target.pos == target.limit - 1) {\r\n      var arrow = document.getElementById(\r\n        target.id.split(\"_\")[0] + \"_right_arrow\"\r\n      );\r\n      arrow.style.display = \"none\";\r\n    }\r\n    arrow = document.getElementById(target.id.split(\"_\")[0] + \"_left_arrow\");\r\n    arrow.style.display = \"\";\r\n  }\r\n}\r\n\r\nfunction ContainerToLeft(target) {\r\n  if (target.pos > 0) {\r\n    // console.log(target.pos);\r\n    var bar = document.getElementById(\r\n      target.id.split(\"_\")[0] + \"_bar\" + String(target.pos)\r\n    );\r\n    bar.style.filter = \"brightness(50%)\";\r\n\r\n    target.pos -= 1;\r\n    //* container\r\n    var container = document.getElementById(target.id);\r\n    container.style.transform = `translate(${-1267 * target.pos}px, 0px)`;\r\n\r\n    // container.style.left = -1267 * target.pos + \"px\";\r\n    //* bar\r\n    bar = document.getElementById(\r\n      target.id.split(\"_\")[0] + \"_bar\" + String(target.pos)\r\n    );\r\n    bar.style.filter = \"brightness(100%)\";\r\n    //* arrow\r\n    if (target.pos == 0) {\r\n      var arrow = document.getElementById(\r\n        target.id.split(\"_\")[0] + \"_left_arrow\"\r\n      );\r\n      arrow.style.display = \"none\";\r\n    }\r\n    arrow = document.getElementById(target.id.split(\"_\")[0] + \"_right_arrow\");\r\n    arrow.style.display = \"\";\r\n  }\r\n}\r\n\r\nfunction LandingPage(props) {\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"/api/game/getgames\").then((response) => {\r\n      if (response.data.success) {\r\n        setGames(response.data.games);\r\n      } else {\r\n        alert(\"game load에 실패했습니다.\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const uploadGameFrame = async () => {\r\n\r\n    // tmp scene create\r\n    const gameResponse = await Axios.get(\"/api/game/uploadgameframe\");\r\n  \r\n    if (!gameResponse.data.success) {\r\n      alert(\"game Frame제작 실패\");\r\n      return;\r\n    }\r\n  \r\n    const firstScene = {\r\n      gameId: gameResponse.data.game._id,\r\n      prevSceneId: null,\r\n      sceneDepth: 0,\r\n      isFirst: 1,\r\n      title: \"\",\r\n    };\r\n  \r\n    const sceneResponse = await Axios.post(\"/api/scene/create\", firstScene);\r\n    if (!sceneResponse.data.success) {\r\n      alert(\"scene Frame제작 실패\");\r\n      return;\r\n    }\r\n  \r\n    message.success(\r\n      \"첫 Scene을 생성해주세요. 오른쪽의 버튼을 활용해 이미지들을 추가할 수 있습니다.\"\r\n    );\r\n\r\n    // console.log(props)\r\n    setTimeout(() => {\r\n      props.history.replace({\r\n        pathname: `/scene/make`,\r\n        state: {\r\n          gameId: gameResponse.data.game._id,\r\n          sceneId: sceneResponse.data.sceneId,\r\n        },\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n\r\n  // console.log(games);\r\n  let game_length = 0;\r\n\r\n  const gameList = games.map((game, index) => {\r\n    if (game.title) {\r\n      // console.log(game.title);\r\n      game_length += 1;\r\n      return (\r\n        <div key={index} className=\"gamelist-game\">\r\n          <a href={`/game/${game._id}`}>\r\n            <img\r\n              className=\"game-image\"\r\n              src={ process.env.NODE_ENV === 'development' ? `http://${LOCAL_HOST}:5000/${game.thumbnail}` : game.thumbnail}\r\n              alt={game.title}\r\n            />\r\n            <div className=\"game-title\">{game.title}</div>\r\n          </a>\r\n          <div className=\"game-category\">{game.category}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n\r\n  return (\r\n    <div className=\"mainPage_container\">\r\n      <div className=\"box-container\">\r\n        <button className=\"button-newgame\" onClick={uploadGameFrame}>\r\n          NEW 게임 만들기\r\n        </button>\r\n      </div>\r\n      <div className=\"box-container game-box\">\r\n        <div className=\"box-title\">최근 플레이한 게임</div>\r\n        <div className=\"box-positionBar\">\r\n          <div id=\"recent_bar2\" className=\"bar\">\r\n            <BAR />\r\n          </div>\r\n          <div id=\"recent_bar1\" className=\"bar\">\r\n            <BAR />\r\n          </div>\r\n          <div\r\n            id=\"recent_bar0\"\r\n            className=\"bar\"\r\n            style={{ filter: \"brightness(100%)\" }}\r\n          >\r\n            <BAR />\r\n          </div>\r\n        </div>\r\n        <div className=\"box-gameList\">\r\n          <div\r\n            id=\"recent_gameList\"\r\n            className=\"gamelist-container\"\r\n            style={{ width: game_length * 335 + \"px\" }}\r\n          >\r\n            {gameList}\r\n          </div>\r\n          <div\r\n            id=\"recent_left_arrow\"\r\n            className=\"gamelist-left-arrow\"\r\n            style={{ display: \"none\" }}\r\n            onClick={() => {\r\n              ContainerToLeft(ListContainer.recent_games);\r\n            }}\r\n          >\r\n            <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\r\n          </div>\r\n          <div\r\n            id=\"recent_right_arrow\"\r\n            className=\"gamelist-right-arrow\"\r\n            onClick={() => {\r\n              ContainerToRight(ListContainer.recent_games);\r\n            }}\r\n          >\r\n            <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"box-container game-box\">\r\n        <div className=\"box-title\">인기 게임</div>\r\n        <div className=\"box-positionBar\">\r\n          <div id=\"popular_bar1\" className=\"bar\">\r\n            <BAR />\r\n          </div>\r\n          <div\r\n            id=\"popular_bar0\"\r\n            className=\"bar\"\r\n            style={{ filter: \"brightness(100%)\" }}\r\n          >\r\n            <BAR />\r\n          </div>\r\n        </div>\r\n        <div className=\"box-gameList\">\r\n          <div\r\n            id=\"popular_gameList\"\r\n            className=\"gamelist-container\"\r\n            style={{ width: game_length * 335 + \"px\" }}\r\n          >\r\n            {gameList}\r\n          </div>\r\n          <div\r\n            id=\"popular_left_arrow\"\r\n            className=\"gamelist-left-arrow\"\r\n            style={{ display: \"none\" }}\r\n            onClick={() => {\r\n              ContainerToLeft(ListContainer.popular_games);\r\n            }}\r\n          >\r\n            <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\r\n          </div>\r\n          <div\r\n            id=\"popular_right_arrow\"\r\n            className=\"gamelist-right-arrow\"\r\n            onClick={() => {\r\n              ContainerToRight(ListContainer.popular_games);\r\n            }}\r\n          >\r\n            <SVG src=\"arrow_1\" width=\"45\" height=\"27\" color=\"#F5F5F5\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nfunction useKey(key, cb) {\r\n    const callbackRef = useRef(cb);\r\n\r\n    useEffect(() => {\r\n        callbackRef.current = cb;\r\n    });\r\n\r\n    useEffect(() => {\r\n        function handle(event) {\r\n            if (event.code === key && !event.shiftKey) {\r\n                callbackRef.current(event);\r\n            }\r\n        }\r\n        document.addEventListener(\"keypress\", handle);\r\n        return () => document.removeEventListener(\"keypress\", handle);\r\n    }, [key]);\r\n}\r\n\r\nexport default useKey;","import { message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './SingleComment.css';\r\n\r\n//Todo : 삭제(자식이 있다면 모두 지우자 deleteMany())\r\n//Todo : 깊이 2개까지만 하자. \r\n//Todo : 아이콘 글자크기 차별화시키자 자식&부모에서\r\n//Todo : 댓글이 밀린다,,,!\r\n\r\nfunction SingleComment({gameId, comment, updateToggle_comment}) {\r\n  const user = useSelector((state) => state.user);\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  const user_id = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData._id;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const reference = useRef();\r\n\r\n  const [update, setUpdate] = useState(true);\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n  const [Replys, setReplys] = useState([]);\r\n  const [writeReply, setWriteReply] = useState(false);\r\n\r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  const variable = {\r\n    gameId: gameId,\r\n    responseTo: comment._id.toString()\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.post('/api/comment/getReply', variable).then(response => {\r\n      if (response.data.success) {\r\n        setReplys(response.data.result);\r\n      } else {\r\n        message.error('대댓글을 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onClick_writeReply = () => {\r\n    setWriteReply((state) => !state);\r\n  }\r\n\r\n  const onClick_displayReply = () => {\r\n    if (reference.current.style.display === 'block') {\r\n      reference.current.style.display = 'none'\r\n    } else {\r\n      reference.current.style.display = 'block'\r\n    }\r\n  }\r\n  \r\n  const onChange_comment = (event) => {\r\n    setCommentContent(event.currentTarget.value);\r\n  }\r\n\r\n  const onSubmit_response = (event) => {\r\n    event.preventDefault();\r\n    if(commentContent === \"\"){\r\n      return;\r\n    }\r\n    const variables = {\r\n      content: commentContent,\r\n      writer: user.userData._id,\r\n      gameId: gameId,\r\n      responseTo: comment._id.toString()\r\n    };\r\n\r\n    axios.post('/api/comment/saveComment', variables).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글 감사합니다!');\r\n        updateToggle();\r\n        setCommentContent(\"\");\r\n        if (reference.current.style.display !== 'block') {\r\n          reference.current.style.display = 'block'\r\n        } \r\n      } else {\r\n        message.error('댓글 저장에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClick_removeComment = () => {\r\n    axios.post('/api/comment/removeComment', {commentId: comment._id}).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글이 삭제되었습니다.');\r\n        updateToggle_comment();\r\n      } else {\r\n        message.error('댓글 삭제에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const mapReply = Replys.map((reply, index) => {\r\n    return (\r\n      <div key={index} style={{marginLeft:'10px'}}>\r\n        {reply &&\r\n          <SingleComment \r\n            updateToggle_comment={updateToggle}\r\n            gameId={gameId} \r\n            comment={reply}/>\r\n        }\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"container_box\">\r\n      <div className=\"comment_container\">\r\n        <img src={comment.writer.image} alt=\"img\" className=\"img\"/>\r\n        <div className=\"comment_contents\">\r\n          <div className=\"nickname\">{comment.writer.nickname}</div>\r\n          <div className=\"content\">{comment.content}</div>\r\n          <div className=\"comment_info\">\r\n            <div className=\"comment_like\">좋아요 : 0 {}</div>\r\n            <div className=\"comment_dislike\">싫어요 : 0 {}</div>\r\n            { Replys.length ? \r\n            <div onClick={onClick_displayReply} className=\"comment_displayReplyToggle\">댓글 {Replys.length}개 보기</div>\r\n            :\r\n            <div></div>\r\n            }\r\n            <div onClick={onClick_writeReply} className=\"comment_writeReplyToggle\">댓글 작성</div>\r\n            { comment.writer._id === user_id&&\r\n            <div onClick={onClick_removeComment} className=\"comment_delete\">댓글 삭제</div>\r\n            }\r\n          </div>\r\n          {(isAuth & writeReply) ?\r\n          <form className=\"form\">\r\n            <textarea\r\n              className=\"textarea\"\r\n              onChange={onChange_comment}\r\n              value={commentContent}\r\n              placeholder=\"코멘트를 작성해 주세요.\"\r\n              />\r\n            <button className=\"btn\" onClick={onSubmit_response}>댓글 작성</button>\r\n          </form> \r\n          :\r\n          <div></div>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div ref={reference} className=\"reply_container\">\r\n        {mapReply}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleComment\r\n","import { message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport useKey from '../../functions/useKey';\r\nimport './Comment.css';\r\nimport SingleComment from './SingleComment';\r\n\r\nfunction Comment({gameId}) {\r\n  const user = useSelector((state) => state.user);\r\n  const isAuth = useSelector((state) => {\r\n    if (state.user.userData){\r\n      return state.user.userData.isAuth;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  \r\n  const [update, setUpdate] = useState(true);\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n \r\n  const updateToggle = () => {\r\n    setUpdate((state) => !state);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.post('/api/comment/getComment', {gameId: gameId}).then(response => {\r\n      if (response.data.success) {\r\n        setComments(response.data.result);\r\n      } else {\r\n        message.error('댓글을 불러오는데 실패했습니다.')\r\n      }\r\n    })\r\n  }, [update])\r\n\r\n  const onChange_comment = (event) => {\r\n    setCommentContent(event.currentTarget.value);\r\n  }\r\n\r\n  const onSubmit_comment = (event) => {\r\n    event.preventDefault();\r\n    if(commentContent === \"\"){\r\n      return;\r\n    }\r\n\r\n    const variables = {\r\n      content: commentContent,\r\n      writer: user.userData._id,\r\n      gameId: gameId,\r\n      responseTo : \"\"\r\n    };\r\n\r\n    axios.post('/api/comment/saveComment', variables).then(response => {\r\n      if(response.data.success) {\r\n        message.success('댓글 감사합니다!');\r\n        updateToggle();\r\n        setCommentContent(\"\");\r\n      } else {\r\n        message.error('댓글 저장에 실패했습니다.');\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleEnter = (event) => {\r\n    onSubmit_comment(event);\r\n  }\r\n\r\n  // useKey('Enter',(event => handleEnter(event))); //Todo 문제가 많음 엔터칠때 대댓글 엔터도 같이 쳐진다,,,\r\n\r\n  const mapComment = comments.map((comment, index) => {\r\n    return (\r\n      <div key={index}>\r\n        {comment &&\r\n          <SingleComment \r\n            updateToggle_comment={updateToggle}\r\n            gameId={gameId} \r\n            comment={comment}/>\r\n        }\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      {isAuth &&\r\n      <form className=\"form\">\r\n        <textarea\r\n          className=\"textarea\"\r\n          onChange={onChange_comment}\r\n          value={commentContent}\r\n          placeholder=\"코멘트를 작성해 주세요.\"\r\n        />\r\n        <button className=\"btn\" onClick={onSubmit_comment}>댓글 작성</button>\r\n      </form>\r\n      }\r\n      <br />\r\n      <div>댓글 {comments.length}개</div>\r\n      <hr/>\r\n      {mapComment}\r\n      <br />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comment\r\n","import { message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./GameDetailPage.css\";\r\nimport { LOCAL_HOST } from \"../../Config\"\r\nimport Comment from '../Comment/Comment';\r\nimport { socket } from \"../../App\";\r\n\r\nconst config = require('../../../config/key')\r\n\r\nfunction GameDetailPage(props) {\r\n    const gameId = props.match.params.gameId;\r\n    const variable = { gameId: gameId };\r\n\r\n    const [gameDetail, setGameDetail] = useState([]);\r\n    const [sceneId, setSceneId] = useState([]);\r\n    const [isMaking, setIsMaking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        Axios.post(\"/api/game/getgamedetail\", variable).then((response) => {\r\n            if (response.data.success) {\r\n                setGameDetail(response.data.gameDetail);\r\n            } else {\r\n                message.error(\"게임 정보를 로딩하는데 실패했습니다.\");\r\n                //Todo : 게임 정보를 로딩하는데 실패했습니다 메세지 변경하기(자세히)\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        Axios.get(`/api/game/gamestart/${gameId}`).then((response) => {\r\n            if (response.data.success) {\r\n                setSceneId(response.data.sceneId);\r\n                setIsMaking(response.data.isMaking);\r\n            } else {\r\n                message.error(\"로그인 해주세요.\");\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"detailPage__container\">\r\n\r\n            {/* 이미지 불러오는게 늦음 디버깅 필요 */}\r\n            {gameDetail.thumbnail &&\r\n                <img\r\n                    style={{ width: \"30%\", height: \"30%\" }}\r\n                    src={\r\n                        process.env.NODE_ENV === 'production' ?\r\n                        gameDetail.thumbnail\r\n                        :\r\n                        `${config.STORAGE}/${gameDetail.thumbnail}`}\r\n                    alt=\"thumbnail\"\r\n                />}\r\n            <div>제목: {gameDetail.title}</div>\r\n            <div>카테고리 : {gameDetail.category}</div>\r\n            <div>크리에이터: {gameDetail.creator}</div>\r\n            <div>{gameDetail.description}</div>\r\n            <br />\r\n\r\n            {/* 게임 시작하기 or 이어 만들기 */}\r\n            <Link\r\n                style={{ color: \"#f05454\" }}\r\n                to={\r\n                    {\r\n                        pathname: isMaking ? `/scene/make` : `/gameplay`,\r\n                        state: {\r\n                            gameId: gameId,\r\n                            sceneId: sceneId\r\n                        },\r\n                    }\r\n                }>\r\n                게임 시작하기\r\n            </Link>\r\n            <Comment gameId={gameId} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameDetailPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Card, Icon, Avatar, Col, Typography } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport GameDetailPage from \"../GameDetailPage/GameDetailPage\";\r\n\r\nimport { socket } from \"../../App\"\r\n\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\n\r\nfunction LandingPage() {\r\n    const [messageCount, setMessageCount] = useState(0);\r\n    const [theme, setTheme] = useState('dark');\r\n    const [inRoom, setInRoom] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        if (inRoom) {\r\n            // console.log('joining room');\r\n            socket.emit('room', { room: 'test-room' });\r\n        }\r\n\r\n        return () => {\r\n            if (inRoom) {\r\n                // console.log('leaving room');\r\n                socket.emit('leave room', {\r\n                    room: 'test-room'\r\n                })\r\n            }\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n    socket.off(\"receive message\");\r\n    socket.on('receive message', payload => {\r\n            setMessageCount(messageCount + 1);\r\n            document.title = `${messageCount} new messages have been emitted`;\r\n        });\r\n    }, []); //only re-run the effect if new message comes in\r\n\r\n    const handleSetTheme = () => {\r\n        let newTheme;\r\n        (theme === 'light')\r\n            ? newTheme = 'dark'\r\n            : newTheme = 'light';\r\n        // console.log('new theme: ' + newTheme);\r\n        setTheme(newTheme);\r\n    }\r\n\r\n    const handleInRoom = () => {\r\n        inRoom\r\n            ? setInRoom(false)\r\n            : setInRoom(true);\r\n    }\r\n\r\n    const handleNewMessage = () => {\r\n        // console.log('emitting new message');\r\n        socket.emit('new message', {\r\n            room: 'test-room'\r\n        });\r\n        setMessageCount(messageCount + 1);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`App Theme-${theme}`}>\r\n            <header className=\"App-header\">\r\n\r\n                <h1>\r\n                    {inRoom && `You Have Entered The Room`}\r\n                    {!inRoom && `Outside Room`}\r\n                </h1>\r\n\r\n                <p>{messageCount} messages have been emitted</p>\r\n\r\n                {inRoom &&\r\n                    <button onClick={() => handleNewMessage()}>\r\n                        Emit new message\r\n            </button>\r\n                }\r\n\r\n                <button onClick={() => handleSetTheme()}>\r\n                    Toggle Theme\r\n            </button>\r\n\r\n                <button onClick={() => handleInRoom()}>\r\n                    {inRoom && `Leave Room`}\r\n                    {!inRoom && `Enter Room`}\r\n                </button>\r\n\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.replace(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                  forgot password\r\n                  </a>\r\n                <div>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                    Log in\r\n                </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        nickname: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        nickname: Yup.string()\r\n          .required('Name is required'),\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Confirm Password is required')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            nickname: values.nickname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then(response => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\r\n\r\n              <Form.Item required label=\"Name\">\r\n                <Input\r\n                  id=\"nickname\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.nickname}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.nickname && touched.nickname ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.nickname && touched.nickname && (\r\n                  <div className=\"input-feedback\">{errors.nickname}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Profile.css';\r\n\r\n\r\nfunction Profile() {\r\n  const userData = useSelector((state) => state.user.userData);\r\n  if (userData) {\r\n\r\n    const list = (userData) => {\r\n      const makingGameList = userData.makingGameList;\r\n      return makingGameList.map((game, index) => {\r\n        return (\r\n          <>\r\n            <div>\r\n              {game.gameId}\r\n            </div>\r\n            <Link to={\r\n              {\r\n                pathname: `/scene/make}`,\r\n                state: {\r\n                  gameId: game.gameId,\r\n                  sceneId: game.sceneId\r\n                }\r\n              }\r\n            } key = {index}>\r\n              게임 만들러가기..\r\n            </Link>\r\n          </>\r\n        )\r\n      })\r\n    }\r\n    return (\r\n      <div>\r\n        <img src={userData.image} alt=\"\" />\r\n        <div>{userData.email}</div>\r\n        <div>{userData.nickname}</div>\r\n        {list(userData)}\r\n        {/* <div>{userData.makingGameList[0]}</div> */}\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        loading...\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState } from \"react\";\r\nimport { Typography, Button, Form, message, Input, Icon } from \"antd\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./GameUploadPage.css\";\r\nimport {LOCAL_HOST} from\"../../Config\"\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst PrivateOptions = [\r\n    { value: 0, label: \"Private\" },\r\n    { value: 1, label: \"Public\" },\r\n];\r\n\r\nconst CategoryOptions = [\r\n    { value: 0, label: \"살아남기\" },\r\n    { value: 1, label: \"로맨스\" },\r\n    { value: 2, label: \"스토리\" },\r\n    { value: 3, label: \"추리\" },\r\n    { value: 4, label: \"병맛\" },\r\n];\r\n\r\nconst RatioOptions = [\r\n    { value: `${9/16}`, label: \"16:9\"}, \r\n    { value: `${16/9}`, label: \"9:16(스마트폰)\"}, \r\n]\r\n\r\nfunction GameUploadPage(props) {\r\n    const user = useSelector((state) => state.user);\r\n    const [GameTitle, setGameTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [isPrivate, setIsPrivate] = useState(0);\r\n    const [category, setCategory] = useState(\"살아남기\");\r\n    const [ratio, setRatio] = useState(true);\r\n\r\n    const [filePath, setFilePath] = useState(\"\");\r\n    // const [duration, setDuration] = useState(\"\")\r\n    // const [thumbnailPath, setThumbnailPath] = useState(\"\")\r\n\r\n    const onTitleChange = (event) => {\r\n        setGameTitle(event.currentTarget.value);\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescription(event.currentTarget.value);\r\n    };\r\n\r\n    const onPrivateChange = (event) => {\r\n        setIsPrivate(event.currentTarget.value);\r\n    };\r\n\r\n    const onCartegoryChange = (event) => {\r\n        let cat_idx = event.currentTarget.value;\r\n        setCategory(event.currentTarget[cat_idx].text);\r\n    };\r\n\r\n    const onRatioChange = (event) => {\r\n        setRatio(state => !state);\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        if (!files[0]) {\r\n            alert(\"손상된 파일입니다.\");\r\n            return;\r\n        }\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { \"content-type\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n        };\r\n        formData.append(\"file\", files[0]);\r\n\r\n        Axios.post(\"/api/game/uploadfiles\", formData, config).then(\r\n            (response) => {\r\n                if (response.data.success) {\r\n                    setFilePath(response.data.url);\r\n                } else {\r\n                    alert(\"업로드 실패\");\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (GameTitle === \"\" || description === \"\" || filePath === \"\") {\r\n            alert(\"모든 정보를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        let floatRatio;\r\n        if (ratio) {\r\n            floatRatio = 9/16;\r\n        } else {\r\n            floatRatio = 16/9;\r\n        }\r\n        const game_variables = {\r\n            creator: user.userData._id,\r\n            title: GameTitle,\r\n            description: description,\r\n            thumbnail: filePath,\r\n            privacy: isPrivate,\r\n            category: category,\r\n            ratio: floatRatio,\r\n            writer: [user.userData._id],\r\n            character: [],\r\n            background: [],\r\n            bgm: [],\r\n            sound: [],\r\n        };\r\n        \r\n        Axios.post(\"/api/game/uploadgame\", game_variables).then((response) => {\r\n            if (response.data.success) {\r\n                message.success(\r\n                    \"첫 Scene을 생성해주세요. 오른쪽의 +버튼을 활용해 이미지들을 추가할 수 있습니다.\"\r\n                );\r\n                setTimeout(() => {\r\n                    props.history.replace(\r\n                        `/game/upload/${response.data.game._id}`\r\n                    );\r\n                }, 1000);\r\n            } else {\r\n                alert(\"game제작 실패\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n            <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n                <Title level={2}>Upload Game</Title>\r\n            </div>\r\n            <Form onSubmit={onSubmit}>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"300px\",\r\n                                    height: \"240px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    {/* thunb nail */}\r\n                    {filePath && (\r\n                        <div>\r\n                            <img\r\n                                className=\"thumbnail__img\"\r\n                                src={`http://${LOCAL_HOST}:5000/${filePath}`}\r\n                                alt=\"thumbnail\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <label>Title</label>\r\n                <Input onChange={onTitleChange} value={GameTitle} />\r\n                <br />\r\n                <br />\r\n                <label>Description</label>\r\n                <TextArea onChange={onDescriptionChange} value={description} />\r\n                <br />\r\n                <br />\r\n                <select onChange={onPrivateChange}>\r\n                    {PrivateOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <select onChange={onCartegoryChange}>\r\n                    {CategoryOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <label><input type=\"radio\" name=\"ratio\" checked={ratio} onChange={onRatioChange}/>컴퓨터</label>\r\n                <br />\r\n                <label><input type=\"radio\" name=\"ratio\" checked={!ratio} onChange={onRatioChange}/>스마트폰</label>\r\n                    \r\n                {/* <select onChange={onRatioChange}>\r\n                    {RatioOptions.map((item, index) => (\r\n                        <option key={index} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select> */}\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Next Step\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameUploadPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row, Typography, Button, Form, Icon, message } from \"antd\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Axios from \"axios\";\r\nimport \"./GameBuildUpPage\";\r\nimport { LOCAL_HOST } from \"../../Config\"\r\n\r\nconst { Title } = Typography;\r\n\r\nconst config = require('../../../config/key')\r\n\r\nconst extension = {\r\n    image: [\".jpg\", \".png\", \".jpeg\", \".gif\"],\r\n    music: [\".mp3\", \".wav\", \".wmv\", \".wma\", \".flac\"],\r\n};\r\n\r\nfunction GameBuildUpPage(props) {\r\n    const [filePath, setFilePath] = useState(\"\");\r\n    const [fileState, setFileState] = useState(\"\");\r\n    const [cur_game, setGame] = useState([]);\r\n    const [characterCards, setCharacterCards] = useState([]);\r\n    const [backgroundCards, setBackgroundCards] = useState([]);\r\n    const [bgmCards, setBgmCards] = useState([]);\r\n    const [soundCards, setSoundCards] = useState([]);\r\n    const gameId = props.match.params.gameId;\r\n\r\n    const game_form = {\r\n        gameId: gameId,\r\n    };\r\n\r\n    useEffect(() => {\r\n        Axios.post(\"/api/game/getgamedetail\", game_form).then((response) => {\r\n            if (response.data.success) {\r\n                setGame(response.data.gameDetail);\r\n            } else {\r\n                message.error(\"game load에 실패했습니다.\");\r\n            }\r\n        });\r\n    }, [filePath]);\r\n\r\n    useEffect(() => {\r\n        //character\r\n        if (cur_game.character) {\r\n            const tempCharacterCards = cur_game.character.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"50px\", height: \"50px\" }}\r\n                                src={`${cur_game.character[index].image}`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setCharacterCards(tempCharacterCards);\r\n        }\r\n        //background\r\n        if (cur_game.background) {\r\n            const backgroundCards = cur_game.background.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"50px\", height: \"50px\" }}\r\n                                src={`${cur_game.background[index].image}`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setBackgroundCards(backgroundCards);\r\n        }\r\n        //bgm\r\n        if (cur_game.bgm) {\r\n            const bgmCards = cur_game.bgm.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"20px\", height: \"20px\" }}\r\n                                src={`${config.STORAGE}/music_icon.jpg`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                            {cur_game.bgm[index].name}\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setBgmCards(bgmCards);\r\n        }\r\n        //sound\r\n        if (cur_game.sound) {\r\n            const soundCards = cur_game.sound.map((_, index) => {\r\n                return (\r\n                    <Col key={index} lg={6} md={8} xs={24}>\r\n                        <div style={{ position: \"relative\" }}>\r\n                            <img\r\n                                style={{ width: \"20px\", height: \"20px\" }}\r\n                                src={`${config.STORAGE}/music_icon.jpg`}\r\n                                alt=\"img not found\"\r\n                            />\r\n                            {cur_game.sound[index].name}\r\n                        </div>\r\n                        <br />\r\n                    </Col>\r\n                );\r\n            });\r\n            setSoundCards(soundCards);\r\n        }\r\n    }, [cur_game]);\r\n\r\n    const onDrop = (files) => {\r\n        //check is_file ok\r\n        for (let i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n\r\n            let dotIdx = files[i].name.lastIndexOf(\".\");\r\n            if (dotIdx === -1) {\r\n                message.error(files[i].name + \"은 확장자가 없는 파일입니다.\");\r\n                return;\r\n            }\r\n\r\n            let cur_extension = files[i].name.substr(dotIdx, 10000);\r\n            if (\r\n                //image check\r\n                (fileState === 1 || fileState === 2) &&\r\n                extension.image.indexOf(cur_extension) == -1\r\n            ) {\r\n                message.error(\r\n                    files[i].name + \"은 지원하지 않는 이미지 확장자 파일입니다.\"\r\n                );\r\n                return;\r\n            }\r\n\r\n            if (\r\n                //sound check\r\n                (fileState === 3 || fileState === 4) &&\r\n                extension.music.indexOf(cur_extension) == -1\r\n            ) {\r\n                message.error(\r\n                    files[i].name + \"은 지원하지 않는 음원 확장자 파일입니다.\"\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            let formData = new FormData();\r\n            const header = {\r\n                header: { \"content-type\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n            };\r\n            formData.append(\"file\", files[i]);\r\n            let file_name = files[i].name;\r\n            console.log(\"asdfasdfasdfasfd\")\r\n            Axios.post(\"/api/game/uploadfile\", formData, header).then(\r\n                (response) => {\r\n                    if (response.data.success) {\r\n                        setFilePath(response.data.url);\r\n\r\n                        switch (fileState) {\r\n                            case 1:\r\n                                const characterForm = {\r\n                                    gameId: gameId,\r\n                                    character: {\r\n                                        name: file_name,\r\n                                        image: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putCharacterImg\",\r\n                                    characterForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"캐릭터 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            case 2: //background\r\n                                const backgroundForm = {\r\n                                    gameId: gameId,\r\n                                    background: {\r\n                                        name: file_name,\r\n                                        image: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putBackgroundImg\",\r\n                                    backgroundForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"배경 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            case 3:\r\n                                const bgmForm = {\r\n                                    gameId: gameId,\r\n                                    bgm: {\r\n                                        name: file_name,\r\n                                        music: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\"/api/game/putBgm\", bgmForm).then(\r\n                                    (response) => {\r\n                                        if (response.data.success) {\r\n                                            setFilePath(response.data.url);\r\n                                        } else {\r\n                                            message.error(\"배경음 업데이트 실패\");\r\n                                        }\r\n                                    }\r\n                                );\r\n                                return;\r\n\r\n                            case 4:\r\n                                const soundForm = {\r\n                                    gameId: gameId,\r\n                                    sound: {\r\n                                        name: file_name,\r\n                                        music: `${config.STORAGE}/${response.data.url}`,\r\n                                    },\r\n                                };\r\n                                Axios.post(\r\n                                    \"/api/game/putSound\",\r\n                                    soundForm\r\n                                ).then((response) => {\r\n                                    if (response.data.success) {\r\n                                        setFilePath(response.data.url);\r\n                                    } else {\r\n                                        message.error(\"효과음 업데이트 실패\");\r\n                                    }\r\n                                });\r\n                                return;\r\n                            default:\r\n                                message.error(\"정의되지 않은 업로드 버튼입니다.\");\r\n                                return;\r\n                        }\r\n                    } else {\r\n                        message.error(\"업로드 실패\");\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.history.push(`/scene/make/`);\r\n    };\r\n\r\n    const onCharacter = () => {\r\n        setFileState(1);\r\n    };\r\n    const onBackground = () => {\r\n        setFileState(2);\r\n    };\r\n    const onBgm = () => {\r\n        setFileState(3);\r\n    };\r\n    const onSound = () => {\r\n        setFileState(4);\r\n    };\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 캐릭터를 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"flex-start\" }}\r\n                    onClick={onCharacter}\r\n                >\r\n                    {/* Set click handler */}\r\n                    {/* <button onClick={onBackground}> </button> */}\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{characterCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 배경을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    // style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    style={{ display: \"flex\", justifyContent: \"flex-start\" }}\r\n                    onClick={onBackground}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{backgroundCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 음악을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    onClick={onBgm}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{bgmCards}</Row>\r\n                </div>\r\n            </Form>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <Title level={4}>게임에 필요한 효과음을 추가해주세요</Title>\r\n            </div>\r\n            <Form>\r\n                <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    onClick={onSound}\r\n                >\r\n                    {/* drop zone */}\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={1000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                                style={{\r\n                                    width: \"100px\",\r\n                                    height: \"100px\",\r\n                                    border: \"1px solid lightgray\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon\r\n                                    type=\"plus\"\r\n                                    style={{ fontSize: \"3rem\" }}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Row>{soundCards}</Row>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Go to Last Step!!\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameBuildUpPage;\r\n","import \"./GameCharacterBlock.css\";\r\nimport React from \"react\";\r\nconst GameCharacterBlock = (props) => {\r\n  const { characterList } = props;\r\n  \r\n  const characterblocks = characterList.map((charSchema, index) => {\r\n    return (\r\n      <div key={index}>\r\n        <div \r\n          className=\"CharacterBlock\"\r\n          style={{ left: `${charSchema.posX}%`}}\r\n        >\r\n          <div \r\n            className=\"character__container\"\r\n            style={{height: `${charSchema.size}%`,\r\n                    top: `${charSchema.posY}%`}}\r\n          >\r\n              <img\r\n                className=\"characterImg\"\r\n                src={charSchema.image}\r\n                alt=\"img\"\r\n              />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  return <div className=\"CharacterBlocks\" >{characterblocks}</div>;\r\n};\r\n\r\nexport default GameCharacterBlock;","import React from \"react\";\r\nimport { Modal, Form, Input } from \"antd\";\r\nimport useKey from \"../../functions/useKey\";\r\n\r\nconst ModalFormComponent = ({ visible, onCancel, onCreate, form, remainTime }) => {\r\n  const { getFieldDecorator } = form;\r\n\r\n  function handleEnter() {\r\n    onCreate();\r\n  }\r\n\r\n  useKey(\"Enter\", handleEnter);\r\n\r\n  if (visible) {\r\n    return (\r\n      <Modal\r\n        visible={true}\r\n        title={`선택지 내용을 입력하세요 (${remainTime})`}\r\n        okText=\"Submit\"\r\n        onCancel={onCancel}\r\n        onOk={onCreate}\r\n      >\r\n        <Form layout=\"vertical\">\r\n          <Form.Item label=\"Title\">\r\n            {getFieldDecorator(\"title\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"Please input the title of collection!\",\r\n                },\r\n              ],\r\n            })(<Input ref={(input) => input && input.focus()} />)}\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst ModalForm = Form.create({ name: \"modal_form\" })(ModalFormComponent);\r\n\r\nexport default ModalForm;\r\n","import { LOADINGPAGE_GAMEPLAY, PAUSE_GAMEPLAY } from \"./types\";\r\n\r\nexport function gameLoadingPage(loadingType) {\r\n  return {\r\n    type: LOADINGPAGE_GAMEPLAY,\r\n    payload: loadingType,\r\n  };\r\n}\r\n\r\nexport function gamePause(isPause) {\r\n  return {\r\n    type: PAUSE_GAMEPLAY,\r\n    payload: isPause,\r\n  };\r\n}\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Button } from \"antd\";\r\nimport ModalForm from \"./InputModalForm\";\r\nimport { useHistory } from \"react-router\";\r\nimport { socket } from \"../../App\";\r\nimport axios from \"axios\";\r\nimport { gamePause } from \"../../../_actions/gamePlay_actions\";\r\nimport { SecurityScanTwoTone } from \"@ant-design/icons\";\r\n\r\nconst InputModal = ({ scene_id, scene_depth, game_id, scene_next_list }) => {\r\n  const dispatch = useDispatch()\r\n  let history = useHistory();\r\n  const user = useSelector((state) => state.user);\r\n  const emptyNum = useSelector((state) => state.sync.emptyNum);\r\n  const user_id = user.userData._id.toString();\r\n  const [visible, setVisible] = useState(false);\r\n  const [formRef, setFormRef] = useState(null);\r\n  const [remainTime, setRemainTime] = useState(0);\r\n  const [decreaseTimer, setDecreaseTimer] = useState(null);\r\n  const [validated, setValidated] = useState(1)\r\n\r\n  const tick = 30;\r\n\r\n\r\n  const handleCreate = () => {\r\n    formRef.validateFields(async (err, values) => {\r\n      clearTimeout(decreaseTimer);\r\n      console.log(\"deleted -- \", decreaseTimer)\r\n      if (err || !visible) {\r\n        return;\r\n      }\r\n\r\n      const data = {\r\n        gameId: game_id,\r\n        prevSceneId: scene_id,\r\n        isFirst: 0,\r\n        sceneDepth: scene_depth + 1,\r\n        title: values.title,\r\n      };\r\n      const res = await axios.post(\"/api/scene/create\", data);\r\n      //! socket 보내서 서버에서 scene Cache x exp 업데이트\r\n\r\n      socket.emit(\"created_choice\", { sceneId: scene_id, userId: user_id, exp: res.data.exp })\r\n      // tmp scene create\r\n\r\n      formRef.resetFields();\r\n      setVisible(false);\r\n\r\n      //! 껍데기 넣을 때, 서버에서 exp 같이 넣기 (별개로 or 같이 해도됨 시간 동기화가 되는 좋은 방법이 있다면)\r\n      history.replace({\r\n        pathname: `/scene/make`,\r\n        state: {\r\n          gameId: game_id,\r\n          sceneId: res.data.sceneId\r\n        }\r\n      });\r\n\r\n    });\r\n  };\r\n\r\n  const saveFormRef = useCallback((node) => {\r\n    if (node !== null) {\r\n      setFormRef(node);\r\n    }\r\n  }, []);\r\n  let decTimer;\r\n\r\n  const onClickHandler = () => {\r\n    dispatch(gamePause(true));\r\n    clearTimeout(decreaseTimer);\r\n    console.log(\"deleted -- \", decreaseTimer)\r\n    let tick = 30;\r\n    setRemainTime(tick);\r\n    decTimer = setInterval(() => {\r\n      console.log(\"timer is not deleted~~~~~~~~~~~\");\r\n      tick--;\r\n      if (tick === 0) {\r\n        console.log(\"tick이 0이라서 실행합니다.\")\r\n        clearInterval(decTimer);\r\n        cancelHandler();\r\n        return;\r\n      }\r\n      setRemainTime(tick);\r\n    }, 970);\r\n    console.log(\"made -- \", decTimer)\r\n    setDecreaseTimer(decTimer);\r\n\r\n    socket.emit(\"empty_num_decrease\", { scene_id, user_id });\r\n    setVisible(true);\r\n  }\r\n\r\n  const cancelHandler = () => {\r\n    socket.emit(\"empty_num_increase\", { scene_id, user_id });\r\n    clearTimeout(decreaseTimer);\r\n    console.log(\"deleted -- \", decreaseTimer)\r\n    setVisible(false);\r\n    dispatch(gamePause(false));\r\n  }\r\n\r\n  const createHandler = () => {\r\n    return handleCreate();\r\n  }\r\n\r\n  const [dino, setDino] = useState(0);\r\n\r\n  useEffect(() => {\r\n    socket.off(\"validated\");\r\n    socket.on(\"validated\", (data) => {\r\n      setValidated(validated * -1)\r\n    })\r\n\r\n    socket.off(\"decrease_failed\");\r\n    socket.on(\"decrease_failed\", () => {\r\n      setVisible(false);\r\n      setDino(0);\r\n      setDino(1);\r\n    })\r\n\r\n    socket.emit(\"validate_empty_num\", { scene_id })\r\n  }, [scene_id])\r\n\r\n  useEffect(() => {\r\n    if (dino) {\r\n      clearTimeout(decreaseTimer);\r\n      console.log(\"failed.. deleted -- \", decreaseTimer)\r\n      console.log(\"visible false\");\r\n    }\r\n  }, [dino]);\r\n\r\n  const [working, setWorking] = useState();\r\n  useEffect(() => {\r\n    // console.log(\"en\", emptyNum);\r\n    const nextListLen = Array.isArray(scene_next_list) ? scene_next_list.length : 0;\r\n    const workingCnt = nextListLen + emptyNum\r\n    // console.log(\"nextListLen : \", nextListLen, \"emptyNum : \", emptyNum)\r\n    if (workingCnt >= 0 && workingCnt <= 4) {\r\n      console.log(\"working Cnt : \", workingCnt)\r\n      setWorking([...Array(4 - workingCnt)].map((n, index) => {\r\n        return <div key={index}>작업중..<br /></div>\r\n      }))\r\n    }\r\n  }, [emptyNum, scene_next_list])\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        working\r\n      }\r\n      {\r\n        emptyNum > 0 &&\r\n        <>\r\n          <div\r\n            id=\"choice\"\r\n            onClick={onClickHandler}\r\n            style={{ color: \"red\" }}\r\n          >\r\n            선택의 길...\r\n            </div>\r\n        </>\r\n      }\r\n      <ModalForm\r\n        ref={saveFormRef}\r\n        visible={visible}\r\n        onCancel={cancelHandler}\r\n        onCreate={createHandler}\r\n        remainTime={remainTime}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputModal;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nfunction useMouse(key, cb) {\r\n    const callbackRef = useRef(cb);\r\n\r\n    useEffect(() => {\r\n        callbackRef.current = cb;\r\n    });\r\n\r\n    useEffect(() => {\r\n        function handle(event) {\r\n            callbackRef.current(event);\r\n        }\r\n        document.addEventListener(key, handle);\r\n        return () => document.removeEventListener(key, handle);\r\n    }, []);\r\n}\r\nexport default useMouse;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useKey from \"../../functions/useKey\";\r\nimport { useWindupString } from \"windups\";\r\nimport useMouse from \"../../functions/useMouse\";\r\nimport { LOCAL_HOST } from \"../../Config\";\r\n\r\n// const voice = new Audio('http://localhost:5000/uploads/sfx-blipmale.wav')\r\n// const voice = new Audio(`http://${LOCAL_HOST}:5000/uploads/sfx-typwriter.wav`)\r\n// voice.volume = 0.8\r\nfunction TextAnimation({ cut_script, setIsTyping }) {\r\n    const [flag, setFlag] = useState(false);\r\n    let i = 0;\r\n    const [text, { skip }] = useWindupString(\r\n        cut_script,\r\n        {\r\n            pace: () => 150,\r\n            onFinished: () => {\r\n                setFlag(true)\r\n            },\r\n            // onChar: () => {\r\n            //     if (!(cut_script[i] === ' ' || cut_script[i] === '.')) {\r\n            //         voice.load()\r\n            //         voice.play()\r\n            //     }\r\n            //     i++;\r\n            // }\r\n        }\r\n    );\r\n\r\n    useKey(\"Enter\", handleEnter);\r\n    useKey(\"Space\", handleEnter);\r\n    useMouse(\"mouseup\", handleEnter);\r\n    function handleEnter(event) {\r\n        skip()\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setIsTyping(false)\r\n        }\r\n    }, [flag])\r\n\r\n    if (cut_script)\r\n        return <div>{text}</div>\r\n    else\r\n        return <div></div>\r\n}\r\n\r\n\r\nexport default TextAnimation;","import \"./TextBlock.css\";\r\nimport React, { useReducer } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\nimport InputModal from \"../Modal/InputModal\";\r\nimport TextAnimation from './TextAnimation'\r\n\r\n// 일단 4 나중에 어떻게 할지 다시 결정..\r\nconst CHOICE_NUM = 4;\r\n\r\nexport const TextBlock = (props) => {\r\n  const { cut_name, cut_script, setIsTyping, isTyping } = props;\r\n  return (\r\n    <div className=\"text_container\">\r\n      <div className=\"name_block\">{cut_name}</div>\r\n      <hr className=\"text_line\"></hr>\r\n      <br />\r\n      <div className=\"text_block\">\r\n        <div>\r\n          {\r\n            isTyping ? <TextAnimation\r\n              cut_script={cut_script}\r\n              setIsTyping={setIsTyping}\r\n            /> : cut_script\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 선택지 display\r\nexport const TextBlockChoice = (props) => {\r\n\r\n  // 뭔가 한다..\r\n  \r\n  const {\r\n    game_id,\r\n    cut_name,\r\n    cut_script,\r\n    scene_next_list,\r\n    scene_id,\r\n    scene_depth,\r\n    setIsTyping,\r\n    isTyping,\r\n  } = props;\r\n  \r\n  const choices = scene_next_list.map((choice, index) => {\r\n    return (\r\n      <Link to={\r\n        {\r\n            pathname: `/gameplay`,\r\n            key:index,\r\n            state: {\r\n                gameId: game_id,\r\n                sceneId: choice.sceneId\r\n            }\r\n        }\r\n        } key={index}>\r\n        {choice.script} <br />\r\n    </Link>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"text_container\">\r\n      <div className=\"name_block\">{cut_name}</div>\r\n      <hr className=\"text_line\"></hr>\r\n      <div className=\"text_block\">\r\n        {\r\n          isTyping ? <TextAnimation\r\n            cut_script={cut_script}\r\n            setIsTyping={setIsTyping}\r\n          /> : cut_script\r\n        }\r\n        <br />\r\n        {/* 선택의 길이 등장할 수 있는 경우 */}\r\n        <div>{choices}</div>\r\n        <br />\r\n        {scene_next_list.length < CHOICE_NUM ? (\r\n          <div>\r\n            <InputModal\r\n              scene_id={scene_id}\r\n              scene_depth={scene_depth}\r\n              game_id={game_id}\r\n              scene_next_list={scene_next_list}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {/* 항상 */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Dislike.css\";\r\n\r\nfunction DislikePopup(props) {\r\n  const { gameId, sceneId, trigger, setTrigger } = props;\r\n\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [Title,setTitle] = useState(\"\");\r\n  const [Description,setDescription] = useState(\"\");\r\n\r\n  const onTitleChange = (event) => {\r\n    setTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const onDescriptionChange = (event) => {\r\n    setDescription(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const variable = {\r\n      title : Title,\r\n      description : Description,\r\n      user : user.userData._id,\r\n      sceneId : sceneId,\r\n      gameId : gameId,\r\n    }\r\n    Axios.post(\"/api/complaint/save\", variable).then((response) => {\r\n      if(!response.data.success) {\r\n        message.error(\"신고하는데 문제가 발생했습니다.\")\r\n      } else {\r\n        message.success(\"감사합니다. 신고가 접수되었습니다.\")\r\n        setTrigger(state => !state)\r\n      }\r\n    })\r\n  }\r\n\r\n  return trigger ? (\r\n    <div className=\"dislike_popup\">\r\n      <div className=\"dislike_inner\">\r\n        <button className=\"close_btn\" onClick={() => setTrigger(state => !state)}>\r\n          close\r\n        </button>\r\n        <label>Title</label>\r\n        <input onChange={onTitleChange} value={Title} />\r\n        <label>Description</label>\r\n        <textarea onChange={onDescriptionChange} value={Description} />\r\n        <button className=\"btn\" onClick={onSubmit}>\r\n          신고하기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default DislikePopup;\r\n","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./HistoryMap.css\";\r\nimport { message } from \"antd\";\r\n\r\nfunction MapToLeft() {\r\n  var map = document.getElementsByClassName(\"HistoryMap_inner\")[0];\r\n  var computedStyle = window.getComputedStyle(map);\r\n  var transform = computedStyle.getPropertyValue(\"transform\");\r\n  var new_position =\r\n    transform !== \"none\" ? parseInt(transform.split(\",\")[4]) : 0;\r\n\r\n  map.style.transform = `translate(${new_position + 250}px, 0px)`;\r\n}\r\n\r\nfunction MapToRight() {\r\n  var map = document.getElementsByClassName(\"HistoryMap_inner\")[0];\r\n  var computedStyle = window.getComputedStyle(map);\r\n  var transform = computedStyle.getPropertyValue(\"transform\");\r\n  var new_position =\r\n    transform !== \"none\" ? parseInt(transform.split(\",\")[4]) : 0;\r\n\r\n  map.style.transform = `translate(${new_position - 250}px, 0px)`;\r\n}\r\n\r\nfunction GoToScene(props) {\r\n  const { userhistory, gameId, sceneId, GoScene } = props;\r\n  const data = { data: { sceneIndex: GoScene - 1 } };\r\n  Axios.post(\"/api/game/refreshHistory\", data).then((response) => {\r\n    if (!response.data.success) {\r\n      message.error(\"Scene 변경 요청 실패\");\r\n    } else {\r\n      userhistory.replace({\r\n        pathname: `/gameplay`,\r\n        state: {\r\n          sceneId: sceneId[GoScene - 1],\r\n          gameId: gameId,\r\n        }\r\n      })\r\n      const close = document.getElementsByClassName(\"close_btn\");\r\n      for (let i = close.length - 1; i >= 0; i--) {\r\n        close[i].click();\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction GetSceneInfo(props) {\r\n  const { index, scene, setSceneInfo } = props;\r\n  Axios.get(`/api/game/getSceneInfo/${scene}`).then((response) => {\r\n    if (!response.data.success) {\r\n      alert(\"Scene 정보 없음...\");\r\n    } else {\r\n      const cutList = response.data.scene.cutList;\r\n      const lastcut = cutList[cutList.length - 1];\r\n      setSceneInfo({\r\n        sceneindex: index,\r\n        background: lastcut?.background,\r\n        name: lastcut?.name,\r\n        script: lastcut?.script,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction HistoryMapPopup(props) {\r\n  const { userhistory, setTrigger } = props;\r\n  const { gameId, sceneId } = props.history;\r\n  const [GoScene, setGoScene] = useState(null);\r\n  const [DelayHandler, setDelayHandler] = useState(null);\r\n  const [SceneInfo, setSceneInfo] = useState(null);\r\n\r\n  function delay(index, scene, setSceneInfo) {\r\n    setDelayHandler(\r\n      setTimeout(() => {\r\n        GetSceneInfo({ index, scene, setSceneInfo });\r\n      }, 300)\r\n    );\r\n  }\r\n\r\n  function delay_reset() {\r\n    setSceneInfo(null);\r\n    clearTimeout(DelayHandler);\r\n  }\r\n\r\n  function close_button() {\r\n    setTrigger(false);\r\n  }\r\n\r\n  const HistoryMap_scenes = sceneId.map((scene, index) => {\r\n    return (\r\n      <div\r\n        className=\"HistoryMap_scene\"\r\n        key={index + 1}\r\n        onMouseEnter={() => delay(index, scene, setSceneInfo)}\r\n        onMouseLeave={() => delay_reset()}\r\n        onClick={() => setGoScene(index + 1)}\r\n      >\r\n        {SceneInfo && SceneInfo.sceneindex === index ? (\r\n          <div>\r\n            <div className=\"HistoryMap_scene_num\"> #{index + 1}</div>\r\n            <img className=\"HistoryMap_scene_img\" src={SceneInfo.background} />\r\n            <div className=\"HistoryMap_scene_name\">{SceneInfo.name}:</div>\r\n            <div className=\"HistoryMap_scene_text\">\"{SceneInfo.script}\"</div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"HistoryMap_scene_num\"> #{index + 1}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  //! 해당 녀석 클릭과 화면 클릭을 같게 인식한다.. 이부분을 고쳐야합니다!!\r\n  return props.trigger ? (\r\n    <div className=\"HistoryMap_popup\">\r\n      <button className=\"close_btn\" onClick={() => close_button()}>\r\n        close\r\n      </button>\r\n\r\n      <div className=\"toleft_btn\" onClick={MapToLeft}>\r\n        to left 나중에 이미지로 대체\r\n      </div>\r\n\r\n      <div className=\"toright_btn\" onClick={MapToRight}>\r\n        to right 나중에 이미지로 대체\r\n      </div>\r\n\r\n      <div className=\"HistoryMap_inner\">{HistoryMap_scenes}</div>\r\n\r\n      {GoScene ? (\r\n        <div className=\"warning_popup\">\r\n          <button\r\n            className=\"ok_btn\"\r\n            onClick={() => GoToScene({ userhistory, gameId, sceneId, GoScene })}\r\n          >\r\n            ok\r\n          </button>\r\n          <button className=\"close_btn\" onClick={() => setGoScene(null)}>\r\n            close\r\n          </button>\r\n          <div className=\"warning_text\">\r\n            are you sure? 다시는 돌아올 수 없다?\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default HistoryMapPopup;\r\n","import React, { useState } from \"react\";\r\nimport \"./LoadingPage.css\";\r\nimport { useSelector } from \"react-redux\";\r\nconst LOADING_TYPE = {\r\n  NONE: 0,\r\n  BASIC: 1,\r\n  SLIDELEFT: 2,\r\n  SLIDERIGHT: 3,\r\n  SLIDEUP: 4,\r\n  SLIDEDOWN: 5,\r\n  BLACKIN: 6,\r\n};\r\n\r\nconst LoadingPage = () => {\r\n  const loadingType = useSelector((state) => state.gameplay.loadingType);\r\n  switch (loadingType) {\r\n    case LOADING_TYPE.NONE:\r\n      return null;\r\n    case LOADING_TYPE.BASIC:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1.5s ease-out 0s 1 basic\" }}\r\n          className=\"loading_page\"\r\n        >\r\n          <div className=\"loading_icon\">loading.....</div>\r\n        </div>\r\n      );\r\n    case LOADING_TYPE.SLIDELEFT:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideLeft\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDERIGHT:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideRight\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDEUP:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideUp\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    case LOADING_TYPE.SLIDEDOWN:\r\n      return (\r\n        <div\r\n          style={{ animation: \"1s ease-out 0s 1 slideDown\" }}\r\n          className=\"loading_page\"\r\n        />\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default LoadingPage;\r\n","import axios from 'axios';\r\nimport {\r\n    LOAD_EMPTY_NUM,\r\n    SAVE_PREV_SCENE\r\n} from './types';\r\n\r\nexport function loadEmptyNum(dataToSubmit){\r\n    console.log(dataToSubmit)\r\n    const request = dataToSubmit.emptyNum !== undefined ? dataToSubmit.emptyNum : axios.get(`/api/game/getSceneInfo/${dataToSubmit.sceneId}`)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            const scene = response.data.scene;\r\n            return scene.sceneTmp.emptyNum;\r\n        });\r\n\r\n    return {\r\n        type: LOAD_EMPTY_NUM,\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function savePrevScene(dataToSubmit){\r\n    const request = dataToSubmit.prevSceneId;\r\n\r\n    return {\r\n        type: SAVE_PREV_SCENE,\r\n        payload: request\r\n    };\r\n}\r\n","import { NAVBAR_CONTROL } from \"./types\";\r\n\r\nexport function navbarControl(navbarOn) {\r\n  return {\r\n    type: NAVBAR_CONTROL,\r\n    payload: navbarOn,\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function useFullscreenStatus(elRef) {\r\n  const [isFullscreen, setIsFullscreen] = React.useState(\r\n    document[getBrowserFullscreenElementProp()] != null\r\n  );\r\n\r\n  const setFullscreen = () => {\r\n    if (elRef.current == null) return;\r\n\r\n    elRef.current\r\n      .requestFullscreen()\r\n      .then(() => {\r\n        setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n      })\r\n      .catch(() => {\r\n        setIsFullscreen(false);\r\n      });\r\n  };\r\n\r\n  React.useLayoutEffect(() => {\r\n    document.onfullscreenchange = () =>\r\n      setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n\r\n    return () => (document.onfullscreenchange = undefined);\r\n  });\r\n\r\n  return [isFullscreen, setFullscreen];\r\n}\r\n\r\nfunction getBrowserFullscreenElementProp() {\r\n  if (typeof document.fullscreenElement !== \"undefined\") {\r\n    return \"fullscreenElement\";\r\n  } else if (typeof document.mozFullScreenElement !== \"undefined\") {\r\n    return \"mozFullScreenElement\";\r\n  } else if (typeof document.msFullscreenElement !== \"undefined\") {\r\n    return \"msFullscreenElement\";\r\n  } else if (typeof document.webkitFullscreenElement !== \"undefined\") {\r\n    return \"webkitFullscreenElement\";\r\n  } else {\r\n    throw new Error(\"fullscreenElement is not supported by this browser\");\r\n  }\r\n}\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./TreeMap.css\";\r\nimport { message } from \"antd\";\r\n\r\nfunction GoToScene(props) {\r\n  const { userhistory, gameId, sceneId, GoScene } = props;\r\n  const data = { data: { sceneIndex: GoScene - 1 } };\r\n  Axios.post(\"/api/game/refreshHistory\", data).then((response) => {\r\n    if (!response.data.success) {\r\n      message.error(\"Scene 변경 요청 실패\");\r\n    } else {\r\n      userhistory.push(`/gameplay/${gameId}/${sceneId[GoScene - 1]}`);\r\n      const close = document.getElementsByClassName(\"close_btn\");\r\n      for (let i = close.length - 1; i >= 0; i--) {\r\n        close[i].click();\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction GetSceneInfo(props) {\r\n  const { index, scene, setSceneInfo } = props;\r\n  Axios.get(`/api/game/getSceneInfo/${scene}`).then((response) => {\r\n    if (!response.data.success) {\r\n      alert(\"Scene 정보 없음...\");\r\n    } else {\r\n      const cutList = response.data.scene.cutList;\r\n      const lastcut = cutList[cutList.length - 1];\r\n      setSceneInfo({\r\n        sceneindex: index,\r\n        background: lastcut.background,\r\n        name: lastcut.name,\r\n        script: lastcut.script,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction useConstructor(callBack = () => {}) {\r\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\r\n  if (hasBeenCalled) return;\r\n  callBack();\r\n  setHasBeenCalled(true);\r\n}\r\n\r\n//* 나중에 스키마로 만들어야함\r\nconst SceneDepth = 4;\r\nconst sceneMap = [\r\n  { sceneId: 1, link: null },\r\n  { sceneId: 2, link: null },\r\n  { sceneId: 3, link: null },\r\n  { sceneId: 4, link: null },\r\n  { sceneId: null, link: null },\r\n  { sceneId: null, link: null },\r\n  { sceneId: 7, link: null },\r\n  { sceneId: 8, link: null },\r\n  { sceneId: 9, link: null },\r\n  { sceneId: 10, link: null },\r\n  { sceneId: 11, link: null },\r\n  { sceneId: 12, link: null },\r\n  { sceneId: 13, link: null },\r\n  { sceneId: 14, link: null },\r\n  { sceneId: 15, link: null },\r\n  { sceneId: 16, link: null },\r\n  { sceneId: 17, link: null },\r\n  { sceneId: 18, link: null },\r\n  { sceneId: 19, link: null },\r\n  { sceneId: 20, link: null },\r\n  { sceneId: 21, link: null },\r\n  { sceneId: 22, link: null },\r\n];\r\n\r\nconst nodeWidth = 10;\r\nconst nodeHeight = 5;\r\n\r\nlet pivot = [0, 0];\r\nlet position = [50, 0];\r\nlet drag = false;\r\n\r\nfunction TreeMapPopup(props) {\r\n  const { trigger, userhistory, setTrigger} = props;\r\n  const { gameId, sceneId } = props.history;\r\n\r\n  const [Position, setPosition] = useState();\r\n  \r\n  useConstructor(() => {\r\n    setPosition(position);\r\n    // console.log(\"constructor\");\r\n    // console.log(userhistory);\r\n  });\r\n\r\n  useEffect(() => {\r\n    var container = document.getElementsByClassName(\"TreeMap_popup\");\r\n    if (trigger) {\r\n      container[0].addEventListener(\"mousedown\", mouseDown);\r\n      container[0].addEventListener(\"mouseup\", mouseUp);\r\n      container[0].addEventListener(\"mousemove\", mouseMove);\r\n    } else {\r\n      if (container[0]) {\r\n        container[0].removeEventListener(\"mousedown\", mouseDown);\r\n        container[0].removeEventListener(\"mouseup\", mouseUp);\r\n        container[0].removeEventListener(\"mousemove\", mouseMove);\r\n      }\r\n    }\r\n  }, [trigger]);\r\n\r\n  function close_button() {\r\n    setTrigger(false);\r\n  }\r\n\r\n  function mouseDown(e) {\r\n    pivot = [e.pageX, e.pageY];\r\n    drag = true;\r\n    e.preventDefault();\r\n  }\r\n\r\n  function mouseUp(e) {\r\n    drag = false;\r\n    e.preventDefault();\r\n  }\r\n\r\n  function mouseMove(e) {\r\n    if (drag) {\r\n      if (pivot[0] !== e.pageX || pivot[1] !== e.pageY) {\r\n        position = [\r\n          position[0] - (pivot[0] - e.pageX),\r\n          position[1] - (pivot[1] - e.pageY),\r\n        ];\r\n        setPosition(position);\r\n        pivot = [e.pageX, e.pageY];\r\n      }\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  let depth = 1;\r\n  let cnt_limit = 1;\r\n  let cnt = 0;\r\n  const TreeMap_nodes = sceneMap.map((scene, index) => {\r\n    if (cnt === cnt_limit) {\r\n      depth += 1;\r\n      cnt = 0;\r\n      cnt_limit = cnt_limit * 4;\r\n    }\r\n    cnt += 1;\r\n\r\n    // console.log(index, depth);\r\n\r\n    return (\r\n      <div\r\n        className=\"TreeMap_nodeContainer\"\r\n        style={{\r\n          width: (1 / SceneDepth) * 100 + \"%\",\r\n          height: (1 / cnt_limit) * 100 + \"%\",\r\n          left: ((depth - 1) / SceneDepth) * 100 + \"%\",\r\n          top: ((cnt - 1) / cnt_limit) * 100 + \"%\",\r\n        }}\r\n      >\r\n        {/* {index} */}\r\n        <div\r\n          className=\"TreeMap_node\"\r\n          style={{ width: 1 +\"rem\", height: 1+\"rem\" }}\r\n\r\n        />\r\n        {depth !== SceneDepth ? (\r\n          <Fragment>\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"12.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"37.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"62.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"70%\", top: \"87.5%\" }}\r\n            />\r\n            <hr\r\n              className=\"TreeMap_nodeLine\"\r\n              style={{ left: \"50%\", top: \"50%\" }}\r\n            />\r\n            <hr className=\"TreeMap_nodeLine_vertical\" />\r\n          </Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return trigger ? (\r\n    <div className=\"TreeMap_popup\">\r\n      <button className=\"close_btn\" onClick={() => close_button()}>\r\n        close\r\n      </button>\r\n      <div\r\n        className=\"TreeMap_inner\"\r\n        style={{\r\n          width: nodeWidth * SceneDepth + \"%\",\r\n          height: nodeHeight * Math.pow(4, SceneDepth - 1) + \"%\",\r\n          left: Position[0],\r\n          top: Position[1],\r\n        }}\r\n      >\r\n        {TreeMap_nodes}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default TreeMapPopup;\r\n","import \"./GamePlayPage.css\";\r\nimport 'react-rangeslider/lib/index.css'\r\nimport \"./GamePlaySlider.css\";\r\nimport GameCharacterBlock from \"./GameCharacterBlock\";\r\nimport { TextBlock, TextBlockChoice } from \"./TextBlock.js\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport DislikePopup from \"./Dislike\";\r\nimport HistoryMapPopup from \"./HistoryMap\";\r\nimport LoadingPage from \"./LoadingPage\";\r\nimport { message } from \"antd\";\r\nimport { socket } from \"../../App\"\r\nimport { loadEmptyNum, savePrevScene } from \"../../../_actions/sync_actions\"\r\nimport useKey from \"../../functions/useKey\";\r\nimport { gameLoadingPage } from \"../../../_actions/gamePlay_actions\";\r\nimport { navbarControl } from \"../../../_actions/controlPage_actions\";\r\nimport useFullscreenStatus from \"../../../utils/useFullscreenStatus\";\r\nimport { useLocation } from \"react-router\";\r\nimport TreeMapPopup from \"./TreeMap\";\r\nimport { gamePause } from \"../../../_actions/gamePlay_actions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport Slider from 'react-rangeslider'\r\n\r\nimport {\r\n  faCheckSquare,\r\n  faCompress,\r\n  faExpand,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst bgm_audio = new Audio();\r\nbgm_audio.volume = 0.5\r\nconst sound_audio = new Audio();\r\nsound_audio.volume = 0.5\r\n\r\nfunction useConstructor(callBack = () => { }) {\r\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\r\n  if (hasBeenCalled) return;\r\n  callBack();\r\n  setHasBeenCalled(true);\r\n}\r\n\r\n//! playscreen\r\nconst ProductScreen = (props) => {\r\n  const location = useLocation();\r\n  const { gameId, sceneId } = location.state;\r\n\r\n  const userHistory = props.history;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isPause = useSelector((state) => state.gameplay.isPause);\r\n\r\n  const ratio = 1080 / 1920;\r\n\r\n  const [windowWidth, setwindowWidth] = useState(window.innerWidth);\r\n  const [windowHeight, setwindowHeight] = useState(window.innerHeight);\r\n  const [i, setI] = useState(0);\r\n  const [Scene, setScene] = useState({});\r\n  const [Dislike, setDislike] = useState(false);\r\n  const [History, setHistory] = useState({});\r\n  const [HistoryMap, setHistoryMap] = useState(false);\r\n  const [TreeMap, setTreeMap] = useState(false);\r\n\r\n  const prevSceneId = useSelector(state => state.sync.prevSceneId);\r\n\r\n  const maximizableElement = useRef(null);\r\n\r\n  const handleExitFullscreen = () => document.exitFullscreen();\r\n\r\n  let isFullscreen, setIsFullscreen;\r\n  let errorMessage;\r\n\r\n  useConstructor(() => {\r\n    console.log(\"\")\r\n  });\r\n\r\n  try {\r\n    [isFullscreen, setIsFullscreen] = useFullscreenStatus(maximizableElement);\r\n  } catch (e) {\r\n    errorMessage = \"Fullscreen not supported\";\r\n    isFullscreen = false;\r\n    setIsFullscreen = undefined;\r\n  }\r\n\r\n  useKey(\"Enter\", handleEnter);\r\n  useKey(\"Space\", handleEnter);\r\n  useKey(\"Digit1\", handleChoice);\r\n  useKey(\"Digit2\", handleChoice);\r\n  useKey(\"Digit3\", handleChoice);\r\n  useKey(\"Digit4\", handleChoice);\r\n\r\n\r\n  useEffect(() => {\r\n    socket.off(\"accept_final_change\");\r\n    socket.on(\"accept_final_change\", data => {\r\n      const { sceneId, title } = data;\r\n\r\n      let newNextList = Scene.nextList ? [...Scene.nextList] : [];\r\n      newNextList.push({ sceneId, script: title });\r\n      const newScene = { ...Scene, nextList: newNextList };\r\n      setScene(newScene);\r\n    })\r\n  }, [Scene])\r\n\r\n  const [volume, setVolume] = useState(0.5)\r\n  const [muted, setMuted] = useState(false)\r\n  const tempVolume = useRef(0.5)\r\n\r\n  const mute = () => {\r\n    if (muted) {\r\n      setMuted(false)\r\n      volumeControl(tempVolume.current)\r\n    } else {\r\n      tempVolume.current = volume\r\n      setMuted(true)\r\n      volumeControl(0)\r\n    }\r\n  }\r\n\r\n  const volumeControl = (volume) => {\r\n    setVolume(volume)\r\n    volume === 0 ? setMuted(true) : setMuted(false)\r\n    bgm_audio.volume = volume\r\n    sound_audio.volume = volume\r\n  }\r\n\r\n  const [isFirstCut, setIsFirstCut] = useState(true);\r\n  function playMusic(i) {\r\n    if (isFirstCut) setIsFirstCut(false);\r\n    if (Scene.cutList[i]?.bgm.music) {\r\n      //이전 곡과 같은 bgm이 아니라면\r\n      if (\r\n        !(i > 0 && Scene.cutList[i - 1].bgm.music == Scene.cutList[i].bgm.music)\r\n      ) {\r\n        bgm_audio.pause();\r\n        bgm_audio.src = Scene.cutList[i].bgm.music;\r\n        bgm_audio.play();\r\n      }\r\n    }\r\n    if (Scene.cutList[i]?.sound.music) {\r\n      sound_audio.pause();\r\n\r\n      sound_audio.src = Scene.cutList[i].sound.music;\r\n      sound_audio.play();\r\n    }\r\n  }\r\n\r\n  const [isTyping, setIsTyping] = useState(true);\r\n  function handleEnter(event) {\r\n    if (!isTyping && i < Scene.cutList.length - 1 && !isPause) {\r\n      playMusic(i + 1);\r\n      setI(i + 1);\r\n      setIsTyping(true);\r\n    }\r\n  }\r\n\r\n\r\n  function handleChoice(event) {\r\n    if (i === Scene.cutList.length - 1 && !isPause) {\r\n      if (Scene.nextList[parseInt(event.key) - 1]) {\r\n        userHistory.replace({\r\n          pathname: `/gameplay`,\r\n          state: {\r\n            sceneId: Scene.nextList[parseInt(event.key) - 1].sceneId,\r\n            gameId: gameId,\r\n          }\r\n        })\r\n      } else {\r\n        if (parseInt(event.key) - 1 === Scene.nextList.length) {\r\n          dispatch(gamePause(true));\r\n          event.preventDefault();\r\n          let choice = document.getElementById(\"choice\");\r\n          if (choice) {\r\n            choice.click();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"leave room\", { room: prevSceneId });\r\n    socket.emit(\"room\", { room: sceneId });\r\n    // socket.emit(\"exp_val\", {room: sceneId});\r\n    dispatch(savePrevScene({ prevSceneId: sceneId }));\r\n    socket.off(\"empty_num_changed\") //! 매번 열린다.\r\n    socket.on(\"empty_num_changed\", data => {\r\n      dispatch(loadEmptyNum({\r\n        sceneId,\r\n        emptyNum: data.emptyNum\r\n      }));\r\n    })\r\n    socket.emit(\"validate_empty_num\", { scene_id: sceneId })\r\n\r\n  }, [sceneId])\r\n\r\n  //* navigation bar control\r\n  useEffect(() => {\r\n    dispatch(navbarControl(false));\r\n  }, []);\r\n\r\n  //* game pause control\r\n  useEffect(() => {\r\n    if (HistoryMap || Dislike || TreeMap) {\r\n      dispatch(gamePause(true));\r\n    } else {\r\n      dispatch(gamePause(false));\r\n    }\r\n  }, [HistoryMap, Dislike, TreeMap]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(`/api/game/getnextscene/${gameId}/${sceneId}`).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          const history = {\r\n            gameId: gameId,\r\n            sceneId: response.data.sceneIdList,\r\n          };\r\n          setHistory(history);\r\n          setI(0);\r\n          bgm_audio.pause();\r\n          sound_audio.pause();\r\n          setIsFirstCut(true);\r\n          setScene(response.data.scene);\r\n          dispatch(gamePause(false));\r\n          dispatch(gameLoadingPage(0));\r\n          dispatch(gameLoadingPage(6));\r\n        } else {\r\n          message.error(\"Scene 정보가 없습니다.\");\r\n          props.history.replace(`/game/${gameId}`);\r\n        }\r\n      }\r\n    );\r\n  }, [sceneId]);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setwindowWidth(window.innerWidth);\r\n      setwindowHeight(window.innerHeight);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n  }, [window.innerWidth, window.inner]);\r\n\r\n  const padding = isFullscreen ? 0.0 : 0.1;\r\n  const minSize = 300;\r\n\r\n  let newScreenSize;\r\n  if (windowWidth * ratio > windowHeight) {\r\n    newScreenSize = {\r\n      width: `${(windowHeight * (1 - 2 * padding)) / ratio}px`,\r\n      height: `${windowHeight * (1 - 2 * padding)}px`,\r\n      minWidth: `${minSize / ratio}px`,\r\n      minHeight: `${minSize}px`,\r\n    };\r\n  } else {\r\n    newScreenSize = {\r\n      width: `${windowWidth * (1 - 2 * padding)}px`,\r\n      height: `${windowWidth * (1 - 2 * padding) * ratio}px`,\r\n      minWidth: `${minSize}px`,\r\n      minHeight: `${minSize * ratio}px`,\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(loadEmptyNum({\r\n      sceneId,\r\n    }));\r\n\r\n    return () => {\r\n      bgm_audio.pause();\r\n      sound_audio.pause();\r\n    };\r\n  }, []);\r\n\r\n\r\n  if (Scene?.cutList) {\r\n    if (i == 0 && isFirstCut) playMusic(0);\r\n    return (\r\n      <div\r\n        className={`${isFullscreen\r\n          ? \"gamePlay__container_fullscreen\"\r\n          : \"gamePlay__container\"\r\n          }`}\r\n        ref={maximizableElement}\r\n      >\r\n        <div\r\n          className={`${isFullscreen\r\n            ? \"gamePlay__mainContainer_fullscreen\"\r\n            : \"gamePlay__mainContainer\"\r\n            }`}\r\n        >\r\n          <div\r\n            className={`${isFullscreen\r\n              ? \"backgroundImg_container_fullscreen\"\r\n              : \"backgroundImg_container\"\r\n              }`}\r\n            style={newScreenSize}\r\n            onClick={(event) => handleEnter(event)}\r\n          >\r\n            <LoadingPage />\r\n            {(Scene.cutList[i] && Scene.cutList[i].background) ?\r\n              <img\r\n                className=\"backgroundImg\"\r\n                src={Scene.cutList[i].background}\r\n                alt=\"Network Error\"\r\n              />\r\n              : (\r\n                <div></div>\r\n              )}\r\n            <GameCharacterBlock\r\n              characterList={Scene.cutList[i].characterList}\r\n            />\r\n\r\n            {i === Scene.cutList.length - 1 ? (\r\n              <TextBlockChoice\r\n                game_id={gameId}\r\n                cut_name={Scene.cutList[i].name}\r\n                cut_script={Scene.cutList[i].script}\r\n                scene_depth={Scene.depth}\r\n                scene_id={Scene._id}\r\n                scene_next_list={Scene.nextList}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n              />\r\n            ) : (\r\n              <TextBlock\r\n                cut_name={Scene.cutList[i].name}\r\n                cut_script={Scene.cutList[i].script}\r\n                setIsTyping={setIsTyping}\r\n                isTyping={isTyping}\r\n              />\r\n            )}\r\n            <HistoryMapPopup\r\n              userhistory={userHistory}\r\n              history={History}\r\n              trigger={HistoryMap}\r\n              setTrigger={setHistoryMap}\r\n            />\r\n            <TreeMapPopup\r\n              userhistory={userHistory}\r\n              history={History}\r\n              trigger={TreeMap}\r\n              setTrigger={setTreeMap}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"gamePlay__btn_container\">\r\n          <div\r\n            className=\"gamePlay__btn\"\r\n            onClick={mute}\r\n          >\r\n            {muted ? <VolumeOffIcon /> : <VolumeUpIcon />}\r\n          </div>\r\n          <div\r\n            style={{ width: \"80px\" }} //slider width\r\n          >\r\n            <Slider\r\n              min={0}\r\n              max={1}\r\n              step={0.02}\r\n              value={volume}\r\n              onChange={event => {\r\n                volumeControl(event)\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => setHistoryMap((state) => !state)}\r\n            >\r\n              미니맵\r\n            </button>\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => {\r\n                setTreeMap((state) => !state);\r\n              }}\r\n            >\r\n              트리맵\r\n            </button>\r\n            <button\r\n              className=\"gamePlay__btn\"\r\n              onClick={() => setDislike((state) => !state)}\r\n            >\r\n              신고\r\n            </button>\r\n          </div>\r\n          {errorMessage ? (\r\n            <button\r\n              onClick={() =>\r\n                alert(\r\n                  \"Fullscreen is unsupported by this browser, please try another browser.\"\r\n                )\r\n              }\r\n              className=\"gamePlay__btn\"\r\n            >\r\n              {errorMessage}\r\n            </button>\r\n          ) : isFullscreen ? (\r\n            <button onClick={handleExitFullscreen} className=\"gamePlay__btn\">\r\n              <FontAwesomeIcon icon={faCompress} />\r\n            </button>\r\n          ) : (\r\n            <button onClick={setIsFullscreen} className=\"gamePlay__btn\">\r\n              <FontAwesomeIcon icon={faExpand} />\r\n            </button>\r\n          )}\r\n        </div>\r\n        <DislikePopup\r\n          sceneId={sceneId}\r\n          gameId={gameId}\r\n          trigger={Dislike}\r\n          setTrigger={setDislike}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    // dispatch(gameLoadingPage(0));\r\n    // dispatch(gameLoadingPage(1));\r\n    return <LoadingPage />;\r\n  }\r\n};\r\n\r\nexport default ProductScreen;\r\n","import React from 'react'\r\n\r\nfunction BackgroundImg({imgUrl, setBackgroundImg}) {\r\n\r\n  const onClick_img = () => {\r\n    setBackgroundImg(imgUrl);\r\n  }\r\n\r\n  return (\r\n    <div onClick={onClick_img}>\r\n      <img src={`${imgUrl}`} alt=\"img\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BackgroundImg\r\n","import { Button } from 'antd';\r\nimport React from 'react'\r\nimport './BackgroundSideBar.css'\r\nimport BackgroundImg from './BackgroundImg'\r\n\r\nfunction BackgroundSideBar({ gameDetail, setBackgroundImg, setMakeModalState }) {\r\n\r\n  const renderBackground = gameDetail.background.map((background, index) => {\r\n    return <div className=\"background\" key={`${index}`}>\r\n      <BackgroundImg imgUrl={background.image} setBackgroundImg={setBackgroundImg} />\r\n    </div>\r\n  })\r\n\r\n  const setModal = () => {\r\n    setMakeModalState(2);\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar__container\">\r\n      <Button\r\n        type=\"primary\"\r\n        style={{ fontSize: \"15px\" }}\r\n        onClick={setModal}>\r\n        추가\r\n      </Button>\r\n      <div>{renderBackground}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BackgroundSideBar\r\n","import { \r\n  SELECT_CHARACTER, DETACH_CHARACTER \r\n} from \"./types\";\r\n\r\nexport function selectCharacter(character) {\r\n  return {\r\n    type: SELECT_CHARACTER,\r\n    payload: character,\r\n  };\r\n}\r\n\r\nexport function detachCharacter() {\r\n  return {\r\n    type: DETACH_CHARACTER,\r\n  };\r\n}","import React from 'react'\r\nimport { message } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { selectCharacter } from '../../../../../_actions/characterSelected_actions';\r\n\r\nfunction CharacterImg({ character, index }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick_selectCharacter = () => {\r\n    dispatch(selectCharacter({ ...character, index: index }));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div onClick={onClick_selectCharacter}>\r\n        <img src={`${character.image_array[0]}`} alt=\"img\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterImg\r\n","import { Button } from 'antd';\r\nimport React, { useEffect } from 'react'\r\nimport './CharacterSideBar'\r\n\r\nimport CharacterImg from './CharacterImg'\r\n\r\nfunction CharacterSideBar({ gameDetail, setCharacterList, setMakeModalState, setName }) {\r\n\r\n  const renderCharacter = gameDetail.character.map((character, index) => {\r\n    return <div className=\"character\" key={`${index}`}>\r\n      <CharacterImg\r\n        character={character}\r\n        index={index}\r\n        setCharacterList={setCharacterList}\r\n        setName={setName} />\r\n    </div>\r\n  })\r\n\r\n  const setModal = () => {\r\n    setMakeModalState(1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar__container\">\r\n      <Button\r\n        type=\"primary\"\r\n        style={{ fontSize: \"15px\" }}\r\n        onClick={setModal}>\r\n        추가\r\n      </Button>\r\n      <div>{renderCharacter}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterSideBar\r\n","import React from \"react\";\r\nimport { LOCAL_HOST } from \"../../../../Config\"\r\n\r\nfunction BgmFile({ bgm_audio, bgm, setBgmFile }) {\r\n    const onClick_music = () => {\r\n        setBgmFile(bgm);\r\n        bgm_audio.src = bgm.music;\r\n        bgm_audio.play();\r\n    };\r\n\r\n    return (\r\n        <div onClick={onClick_music}>\r\n            <img src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`} alt=\"img\" />\r\n            {bgm.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BgmFile;\r\n","import { Button } from 'antd';\r\nimport React from \"react\";\r\nimport \"./BgmSideBar.css\";\r\n\r\nimport BgmFile from \"./BgmFile\";\r\n\r\nfunction BgmSideBar({ gameDetail, bgm_audio, setBgmFile, setMakeModalState }) {\r\n\r\n    const renderBgm = gameDetail.bgm.map((bgm, index) => {\r\n        return (\r\n            <div className=\"bgm\" key={`${index}`}>\r\n                <BgmFile\r\n                    bgm_audio={bgm_audio}\r\n                    bgm={bgm}\r\n                    setBgmFile={setBgmFile}\r\n                />\r\n                {/* <img src={`${bgm.image}`} alt=\"img\"/> */}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const setModal = () => {\r\n        setMakeModalState(3);\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar__container\">\r\n            <Button\r\n                type=\"primary\"\r\n                style={{ fontSize: \"15px\" }}\r\n                onClick={setModal}>\r\n                추가\r\n            </Button>\r\n            <div>{renderBgm}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BgmSideBar;\r\n","import React from \"react\";\r\nimport { LOCAL_HOST } from \"../../../../Config\"\r\n\r\nfunction SoundFile({ sound_audio, sound, setSoundFile }) {\r\n    const onClick_music = () => {\r\n        setSoundFile(sound);\r\n        sound_audio.src = sound.music;\r\n        sound_audio.play();\r\n    };\r\n\r\n    return (\r\n        <div onClick={onClick_music}>\r\n            <img src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`} alt=\"img\" />\r\n            {sound.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundFile;\r\n","import { Button } from 'antd';\r\nimport React from \"react\";\r\nimport \"./SoundSideBar.css\";\r\n\r\nimport SoundFile from \"./SoundFile\";\r\n\r\nfunction SoundSideBar({ gameDetail, sound_audio, setSoundFile, setMakeModalState }) {\r\n\r\n    const renderSound = gameDetail.sound.map((sound, index) => {\r\n        return (\r\n            <div className=\"sound\" key={`${index}`}>\r\n                <SoundFile\r\n                    sound_audio={sound_audio}\r\n                    sound={sound}\r\n                    setSoundFile={setSoundFile}\r\n                />\r\n                {/* <img src={`${sound.image}`} alt=\"img\"/> */}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const setModal = () => {\r\n        setMakeModalState(4);\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar__container\">\r\n            <Button\r\n                type=\"primary\"\r\n                style={{ fontSize: \"15px\" }}\r\n                onClick={setModal}>\r\n                추가\r\n            </Button>\r\n            <div>{renderSound}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundSideBar;\r\n","import React from \"react\";\r\nimport \"../SceneMakeModal.css\";\r\n\r\nconst SceneMakeModalTab = ({ setTag, tag }) => {\r\n  return (\r\n    <div className=\"tabs\">\r\n      <div\r\n        className={`${tag === 1 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(1)}>\r\n        Character\r\n          </div>\r\n      <div\r\n        className={`${tag === 2 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(2)}>\r\n        Background\r\n          </div>\r\n      <div\r\n        className={`${tag === 3 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(3)}>\r\n        Bgm\r\n          </div>\r\n      <div\r\n        className={`${tag === 4 ? \"tab is-selected\" : \"tab\"}`}\r\n        onClick={() => setTag(4)}>\r\n        Sound\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\nexport default SceneMakeModalTab;\r\n","import React from \"react\";\r\nimport { FileAddOutlined } from '@ant-design/icons';\r\nimport Dropzone from \"react-dropzone\";\r\nimport \"./MyDropzone.css\";\r\n\r\n\r\nfunction MyDropzone({ onDrop, multiple, maxSize, accept }) {\r\n    return <Dropzone\r\n        onDrop={onDrop}\r\n        multiple={multiple}\r\n        maxSize={maxSize} // 10MB + 1\r\n\r\n        // accept=\"image/*,audio/*,video/*\"\r\n        accept={accept}\r\n    >\r\n        {({ getRootProps, getInputProps }) => (\r\n            <div className=\"dropzone\" {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                <FileAddOutlined className=\"dropzone-icon\" />\r\n            </div>\r\n        )}\r\n    </Dropzone>\r\n\r\n}\r\n\r\nexport default MyDropzone;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { message, Form, Input } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport { LeftCircleTwoTone, RightCircleTwoTone } from '@ant-design/icons';\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./CharacterTab.css\";\r\nimport useMouse from \"../../../../functions/useMouse\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction CharacterTab({ blobGame, setBlobGame, charPageNum, setCharFileQueue, setCharBlobList }) {\r\n    const [characterCards, setCharacterCards] = useState([]);\r\n    const [isUpdate, setIsUpdate] = useState(0);\r\n    const indexNum = useRef(0);\r\n\r\n    const onNameChange = (event) => {\r\n        setBlobGame(game => {\r\n            game.character[charPageNum.current].name = event.currentTarget.value\r\n            return game\r\n        })\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setBlobGame(game => {\r\n            game.character[charPageNum.current].description = event.currentTarget.value\r\n            return game\r\n        })\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            let curURL = URL.createObjectURL(files[i])\r\n            setCharBlobList(oldArray => [...oldArray, curURL])\r\n\r\n            //new Character\r\n            if (indexNum.current === \"-1\") {\r\n                setBlobGame(game => {\r\n                    game.character = [...game.character, {\r\n                        name: \"\",\r\n                        description: \"\",\r\n                        image_array: [curURL],\r\n                    }]\r\n                    return game\r\n                })\r\n                indexNum.current = blobGame.character.length - 1\r\n            }\r\n            else {\r\n                setBlobGame(game => {\r\n                    game.character[indexNum.current].image_array = [...game.character[indexNum.current].image_array, curURL]\r\n                    return game\r\n                })\r\n            }\r\n        }\r\n        setCharFileQueue(oldArray => [...oldArray, { index: Number(indexNum.current), array: files }])\r\n        setIsUpdate(num => num + 1)\r\n    };\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (blobGame.character && charPageNum.current < blobGame.character.length) {\r\n            const cards = blobGame.character[charPageNum.current].image_array.map((image, index) => {\r\n                return (\r\n                    <div\r\n                        id={charPageNum.current}\r\n                        className=\"largeBox\" key={index}\r\n                    >\r\n                        <img className=\"smallBox\"\r\n                            src={image}\r\n                            alt=\"img\"\r\n                        />\r\n\r\n                        {index === 0 &&\r\n                            <Form><label>이름</label>\r\n                                <Input onChange={onNameChange} value={blobGame.character[charPageNum.current].name} />\r\n\r\n                                <label>상세설정</label>\r\n                                <TextArea onChange={onDescriptionChange} value={blobGame.character[charPageNum.current].description} />\r\n\r\n                                {/* <label>(혈액형/좋아하는 것 등 이모지넣을 수 있는 공간?)</label> */}\r\n                            </Form>\r\n                        }\r\n\r\n                        {(index === blobGame.character[charPageNum.current].image_array.length - 1) &&\r\n                            <MyDropzone\r\n                                onDrop={onDrop}\r\n                                multiple={true}\r\n                                maxSize={10485761} // 10MB + 1\r\n                                accept=\"image/*\"\r\n                            />}\r\n                    </div>\r\n                )\r\n            })\r\n            setCharacterCards(cards)\r\n        } else {\r\n            setCharacterCards(\"\")\r\n        }\r\n\r\n    }, [isUpdate, blobGame]);\r\n\r\n    useMouse(\"mousedown\", handleMouse)\r\n    function handleMouse(event) {\r\n        for (var i = 0; i < event.path.length; i++) {\r\n            if (event.path[i].id) {\r\n                indexNum.current = event.path[i].id\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"character-container\">\r\n                {characterCards !== 0 && <div>{characterCards}</div>}\r\n            </div>\r\n            {\r\n                blobGame.character && charPageNum.current === blobGame.character.length &&\r\n                <div id={-1}>\r\n                    <MyDropzone\r\n                        onDrop={onDrop}\r\n                        multiple={true}\r\n                        maxSize={10485761} // 10MB + 1\r\n                        accept=\"image/*\"\r\n                    />\r\n                </div>\r\n            }\r\n            {\r\n                charPageNum.current !== 0 && <LeftCircleTwoTone\r\n                    style={{ fontSize: \"3rem\" }}\r\n                    onClick={() => {\r\n                        charPageNum.current--\r\n                        setIsUpdate(num => num + 1)\r\n                    }}\r\n                    twoToneColor=\"#52c41a\" />\r\n            }\r\n            {\r\n                blobGame.character && charPageNum.current !== blobGame.character.length &&\r\n                <RightCircleTwoTone\r\n                    style={{ fontSize: \"3rem\" }}\r\n                    onClick={() => {\r\n                        charPageNum.current++\r\n                        setIsUpdate(num => num + 1)\r\n                    }}\r\n                    twoToneColor=\"#52c41a\" />\r\n            }\r\n            {blobGame.character && <div> {charPageNum.current}/{blobGame.character.length}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CharacterTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./BackgroundTab.css\";\r\n\r\nfunction BackgroundTab({ game, setFileQueue, setTypeQueue, setBackBlobList, backBlobList }) {\r\n    const [backgroundCards, setBackgroundCards] = useState([]);\r\n    const [blobCards, setBlobCards] = useState([]);\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 1])\r\n            setBackBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (game.background)\r\n            setBackgroundCards(game.background.map((element, index) => {\r\n                return <div className=\"largeBox1\" key={index}>\r\n                    <img className=\"smallBox12\"\r\n                        // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\r\n                        src={element.image}\r\n                        alt=\"img\"\r\n                    />\r\n                </div>\r\n            }))\r\n    }, [game]);\r\n\r\n    useEffect(() => {\r\n        if (backBlobList)\r\n            setBlobCards(backBlobList.map((element, index) => {\r\n                return <div className=\"largeBox1\" key={index}>\r\n                    <img className=\"smallBox12\"\r\n                        // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\r\n                        src={element}\r\n                        alt=\"img\"\r\n                    />\r\n                </div>\r\n            }))\r\n    }, [backBlobList]);\r\n\r\n    return (\r\n        <div>\r\n            <MyDropzone\r\n                onDrop={onDrop}\r\n                multiple={true}\r\n                maxSize={10485761} // 10MB + 1\r\n                accept=\"image/*\"\r\n            >\r\n            </MyDropzone>\r\n            <div className=\"background-container\">\r\n                {backgroundCards !== 0 && <div>{backgroundCards}</div>}\r\n                {blobCards !== 0 && <div>{blobCards}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackgroundTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./MusicTab.css\";\r\nimport { LOCAL_HOST } from \"../../../../Config\";\r\nfunction BgmTab({ game, setFileQueue, setTypeQueue, setBgmBlobList, bgmBlobList, setBgmBlobNames, bgmBlobNames }) {\r\n    const [bgmCards, setBgmCards] = useState([]);\r\n    const [blobCards, setBlobCards] = useState([]);\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 음원 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 2])\r\n            setBgmBlobNames(oldArray => [...oldArray, files[i]])\r\n            setBgmBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (game.bgm)\r\n            setBgmCards(game.bgm.map((element, index) => {\r\n                return <div className=\"largeBox13\" key={index}>\r\n                    {(index + 1) % 2 ?\r\n                        <div>\r\n                            <img className=\"smallBox13\"\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {element.name}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <img className=\"smallBox23\"\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {element.name}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }))\r\n    }, [game]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (bgmBlobList)\r\n            setBlobCards(bgmBlobList.map((element, index) => {\r\n                return <div className=\"largeBox13\" key={index}>\r\n                    {(index + 1) % 2 ?\r\n                        <div>\r\n                            <img className=\"smallBox13\"\r\n                                // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {bgmBlobNames[index].name}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <img className=\"smallBox23\"\r\n                                // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {bgmBlobNames[index].name}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }))\r\n    }, [bgmBlobList]);\r\n\r\n    return (\r\n        <div>\r\n            <MyDropzone\r\n                onDrop={onDrop}\r\n                multiple={true}\r\n                maxSize={10485761} // 10MB + 1\r\n                accept=\"audio/*\"\r\n            >\r\n            </MyDropzone>\r\n            <div className=\"music-container\">\r\n                {bgmCards !== 0 && <div>{bgmCards}</div>}\r\n                {blobCards !== 0 && <div>{blobCards}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BgmTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, message } from \"antd\";\r\nimport MyDropzone from \"../../../Dropzone/MyDropzone\";\r\nimport \"../SceneMakeModal.css\";\r\nimport \"./MusicTab.css\";\r\nimport { LOCAL_HOST } from \"../../../../Config\";\r\n\r\nfunction SoundTab({ game, setFileQueue, setTypeQueue, setSoundBlobList, soundBlobList, setSoundBlobNames, soundBlobNames }) {\r\n    const [soundCards, setSoundCards] = useState([]);\r\n    const [blobCards, setBlobCards] = useState([]);\r\n\r\n    const onDrop = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i]) {\r\n                message.error(\"10MB 이하의 음원 파일을 업로드해주세요.\");\r\n                return;\r\n            }\r\n            setFileQueue(oldArray => [...oldArray, files[i]])\r\n            setTypeQueue(oldArray => [...oldArray, 3])\r\n            setSoundBlobNames(oldArray => [...oldArray, files[i]])\r\n            setSoundBlobList(oldArray => [...oldArray, URL.createObjectURL(files[i])])\r\n        }\r\n    };\r\n\r\n    // 왜 인자로 넘어온 game이 처음에 존재하지 않는지 모르겠음\r\n    useEffect(() => {\r\n        if (game.sound)\r\n            setSoundCards(game.sound.map((element, index) => {\r\n                return <div className=\"largeBox13\" key={index}>\r\n                    {(index + 1) % 2 ?\r\n                        <div>\r\n                            <img className=\"smallBox13\"\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {element.name}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <img className=\"smallBox23\"\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {element.name}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }))\r\n    }, [game]);\r\n\r\n    useEffect(() => {\r\n        if (soundBlobList)\r\n            setBlobCards(soundBlobList.map((element, index) => {\r\n                return <div className=\"largeBox13\" key={index}>\r\n                    {(index + 1) % 2 ?\r\n                        <div>\r\n                            <img className=\"smallBox13\"\r\n                                // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {soundBlobNames[index].name}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <img className=\"smallBox23\"\r\n                                // style={index == 0 ? { position: \"flex\" } : { position: \"flex\" }}\r\n                                src={`http://${LOCAL_HOST}:5000/uploads/music_icon.jpg`}\r\n                                alt=\"img\"\r\n                            />\r\n                            {soundBlobNames[index].name}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }))\r\n    }, [soundBlobList]);\r\n\r\n    return (\r\n        <div>\r\n            <MyDropzone\r\n                onDrop={onDrop}\r\n                multiple={true}\r\n                maxSize={10485761} // 10MB + 1\r\n                accept=\"audio/*\"\r\n            >\r\n            </MyDropzone>\r\n            <div className=\"music-container\">\r\n                {soundCards !== 0 && <div>{soundCards}</div>}\r\n                {blobCards !== 0 && <div>{blobCards}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundTab;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Modal, message } from \"antd\";\r\nimport Axios from \"axios\";\r\n\r\nimport SceneMakeModalTab from \"./Tab/SceneMakeModalTab\";\r\nimport CharacterTab from \"./Tab/CharacterTab\"\r\nimport BackgroundTab from \"./Tab/BackgroundTab\"\r\nimport BgmTab from \"./Tab/BgmTab\"\r\nimport SoundTab from \"./Tab/SoundTab\"\r\nimport { LOCAL_HOST } from \"../../../Config\";\r\nimport _ from \"lodash\";\r\n\r\nconst config = require('../../../../config/key');\r\n\r\nconst SceneMakeModal = ({ gameId, visible, setTag, tag, setReload }) => {\r\n  const [game, setGame] = useState([]);\r\n  const [fileQueue, setFileQueue] = useState([]);\r\n  const [typeQueue, setTypeQueue] = useState([]);\r\n\r\n  const [backBlobList, setBackBlobList] = useState([]);\r\n  const [bgmBlobList, setBgmBlobList] = useState([]);\r\n  const [bgmBlobNames, setBgmBlobNames] = useState([]);\r\n  const [soundBlobList, setSoundBlobList] = useState([]);\r\n  const [soundBlobNames, setSoundBlobNames] = useState([]);\r\n\r\n  const [blobGame, setBlobGame] = useState([]);\r\n  const charPageNum = useRef(0);\r\n  const [charFileQueue, setCharFileQueue] = useState([]);\r\n  const [charBlobList, setCharBlobList] = useState([]);\r\n\r\n\r\n  const variable = { gameId: gameId }\r\n  useEffect(() => {\r\n    Axios.post('/api/game/getgamedetail', variable)\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          setGame(response.data.gameDetail);\r\n          setBlobGame(_.cloneDeep(response.data.gameDetail));\r\n        } else {\r\n          alert('게임 정보를 로딩하는데 실패했습니다.')\r\n        }\r\n      })\r\n  }, [])\r\n\r\n  const revokeBlobList = () => {\r\n    charBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    backBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    bgmBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n    soundBlobList.forEach(function (value) {\r\n      if (value)\r\n        URL.revokeObjectURL(value)\r\n    });\r\n  }\r\n\r\n\r\n  const cancelUpload = () => {\r\n    revokeBlobList();\r\n    setTag(0)\r\n  }\r\n\r\n  let uploadFlag = false;\r\n  const upload = () => {\r\n    if (!uploadFlag) {\r\n      uploadFlag = true;\r\n      revokeBlobList();\r\n\r\n      uploadCharFiles()\r\n      if (fileQueue.length)\r\n        uploadFiles()\r\n    }\r\n  };\r\n\r\n  const uploadCharFiles = () => {\r\n    if (charFileQueue.length) {\r\n      let fileNum = Array.from({ length: blobGame.character.length }, () => 0);\r\n      let formData = new FormData();\r\n      for (var i = 0; i < blobGame.character.length; i++) {\r\n        //파일 합치기        \r\n        for (var j = 0; j < charFileQueue.length; j++) {\r\n          if (charFileQueue[j].index === i) {\r\n            fileNum[i] += charFileQueue[j].array.length\r\n            charFileQueue[j].array.forEach(function (value) {\r\n              formData.append('files', value);\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const config = {\r\n        header: { \"encrpyt\": \"multipart/form-data\" },\r\n      };\r\n\r\n\r\n      Axios.post(\"/api/game/uploadfile\", formData, config).then(\r\n        (response) => {\r\n          if (response.data.success) {\r\n            uploadCharDB(fileNum, response.data.files);\r\n          } else {\r\n            alert(\"캐릭터 DB 업로드 실패\");\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      uploadCharDB(null, null);\r\n    }\r\n  }\r\n\r\n  const uploadCharDB = (fileNum, files) => {\r\n    console.log(process.env.NODE_ENV);\r\n    let cnt = 0\r\n    for (var i = 0; i < blobGame.character.length; i++) {\r\n      if (!game.character[i])\r\n        game.character.push({\r\n          name: \"\",\r\n          description: \"\",\r\n          image_array: [],\r\n        })\r\n      game.character[i].name = blobGame.character[i].name;\r\n      game.character[i].description = blobGame.character[i].description;\r\n\r\n      if (fileNum) {\r\n        for (var j = cnt; j < cnt + fileNum[i]; j++) {\r\n          console.log(`${config.STORAGE}/${files[j].path}`);\r\n          game.character[i].image_array.push( process.env.NODE_ENV === 'development' ? `${config.STORAGE}/${files[j].path}` : files[j].location)\r\n        }\r\n        cnt += fileNum[i]\r\n      }\r\n    }\r\n    const DBForm = {\r\n      gameId: gameId,\r\n      character: game.character\r\n    };\r\n    console.log(game.character)\r\n    Axios.post(\r\n      \"/api/game/putCharDB\",\r\n      DBForm\r\n    ).then((response) => {\r\n      if (response.data.success) {\r\n        // character파일만 올리는 경우\r\n        if (!fileQueue.length) {\r\n          setReload(reload => reload + 1)\r\n          setTag(0)\r\n        }\r\n        // console.log(\"SceneMakeModal::CharDB 업데이트 성공\")\r\n      } else {\r\n        message.error(\"DB 업데이트 실패\");\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  const uploadFiles = () => {\r\n    //upload file queue\r\n    let formData = new FormData();\r\n    fileQueue.forEach(value => {\r\n      formData.append('files', value);\r\n    })\r\n    const header = {\r\n      header: { \"encrpyt\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n    };\r\n\r\n    Axios.post(\"/api/game/uploadfile\", formData, header).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          uploadDB(response.data.files);\r\n        } else {\r\n          alert(\"업로드 실패\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  const uploadDB = (files) => {\r\n    const DBForm = { gameId: gameId, background: [], bgm: [], sound: [] };\r\n    for (var i = 0; i < files.length; i++) {\r\n      switch (typeQueue[i]) {\r\n        case 1: //background\r\n          DBForm.background.push({\r\n            name: files[i].originalname,\r\n            image: ( process.env.NODE_ENV === 'development' ? `${config.STORAGE}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        case 2:\r\n          DBForm.bgm.push({\r\n            name: files[i].originalname,\r\n            music: ( process.env.NODE_ENV === 'development' ? `${config.STORAGE}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        case 3:\r\n          DBForm.sound.push({\r\n            name: files[i].originalname,\r\n            music: ( process.env.NODE_ENV === 'development' ? `${config.STORAGE}/${files[i].path}` : files[i].location),\r\n          })\r\n          break;\r\n        default:\r\n          message.error(\"정의되지 않은 업로드 버튼입니다.\");\r\n          break;\r\n      }\r\n    }\r\n    Axios.post(\r\n      \"/api/game/putDB\",\r\n      DBForm\r\n    ).then((response) => {\r\n      if (response.data.success) {\r\n        setReload(reload => reload + 1)\r\n        setTag(0)\r\n      } else {\r\n        message.error(\"DB 업데이트 실패\");\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <Modal className=\"scenemake_modal\"\r\n      visible={visible}\r\n      okText=\"Upload\"\r\n      onCancel={cancelUpload}\r\n      onOk={upload}\r\n      width={1000}\r\n      style={{ top: 20 }}\r\n    >\r\n      <SceneMakeModalTab setTag={setTag} tag={tag} />\r\n      {tag === 1 &&\r\n        <CharacterTab\r\n          blobGame={blobGame}\r\n          setBlobGame={setBlobGame}\r\n          charPageNum={charPageNum}\r\n          setCharFileQueue={setCharFileQueue}\r\n          setCharBlobList={setCharBlobList}\r\n        />\r\n      }\r\n      {tag === 2 &&\r\n        <BackgroundTab\r\n          game={game}\r\n          setFileQueue={setFileQueue}\r\n          setTypeQueue={setTypeQueue}\r\n          setBackBlobList={setBackBlobList}\r\n          backBlobList={backBlobList}\r\n        />\r\n      }\r\n      {tag === 3 &&\r\n        <BgmTab\r\n          game={game}\r\n          setFileQueue={setFileQueue}\r\n          setTypeQueue={setTypeQueue}\r\n          setBgmBlobList={setBgmBlobList}\r\n          bgmBlobList={bgmBlobList}\r\n          setBgmBlobNames={setBgmBlobNames}\r\n          bgmBlobNames={bgmBlobNames}\r\n        />\r\n      }\r\n      {tag === 4 &&\r\n        <SoundTab\r\n          game={game}\r\n          setFileQueue={setFileQueue}\r\n          setTypeQueue={setTypeQueue}\r\n          setSoundBlobList={setSoundBlobList}\r\n          soundBlobList={soundBlobList}\r\n          setSoundBlobNames={setSoundBlobNames}\r\n          soundBlobNames={soundBlobNames}\r\n        />\r\n      }\r\n    </Modal>\r\n  )\r\n}\r\nexport default SceneMakeModal\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Form, message, Input } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MyDropzone from \"../../Dropzone/MyDropzone\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst PrivateOptions = [\r\n    { value: 0, label: \"Private\" },\r\n    { value: 1, label: \"Public\" },\r\n];\r\n\r\nconst CategoryOptions = [\r\n    { value: 0, label: \"살아남기\" },\r\n    { value: 1, label: \"로맨스\" },\r\n    { value: 2, label: \"스토리\" },\r\n    { value: 3, label: \"추리\" },\r\n    { value: 4, label: \"병맛\" },\r\n];\r\n\r\nconst UploadModal = ({ gameId, visible, setUploadModalState, onSubmit_saveScene }) => {\r\n    const user = useSelector((state) => state.user);\r\n    const [GameTitle, setGameTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [isPrivate, setIsPrivate] = useState(0);\r\n    const [category, setCategory] = useState(CategoryOptions[0].label);\r\n\r\n    const [blobURL, setBlobURL] = useState(\"\");\r\n    const [thumbFile, setThumbFile] = useState([]);\r\n\r\n    const onTitleChange = (event) => {\r\n        setGameTitle(event.currentTarget.value);\r\n    };\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescription(event.currentTarget.value);\r\n    };\r\n\r\n    const onPrivateChange = (event) => {\r\n        setIsPrivate(event.currentTarget.value);\r\n    };\r\n\r\n    const onCartegoryChange = (event) => {\r\n        let cat_idx = event.currentTarget.value;\r\n        setCategory(event.currentTarget[cat_idx].text);\r\n    };\r\n\r\n    const onDrop = (files) => {\r\n        if (!files[0]) {\r\n            message.error(\"10MB 이하의 이미지 파일을 업로드해주세요.\");\r\n            return;\r\n        }\r\n        URL.revokeObjectURL(blobURL)\r\n\r\n        setBlobURL(URL.createObjectURL(files[0]))\r\n        setThumbFile(files)\r\n    };\r\n\r\n    const cancel = () => {\r\n        if (blobURL)\r\n            URL.revokeObjectURL(blobURL)\r\n        setUploadModalState(false)\r\n    }\r\n\r\n    const upload = (event) => {\r\n        event.preventDefault();\r\n        if (GameTitle === \"\" || description === \"\" || blobURL === \"\") {\r\n            message.error(\"모든 정보를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        uploadThumb();\r\n        setUploadModalState(false);\r\n        onSubmit_saveScene()\r\n    }\r\n\r\n    const uploadThumb = () => {\r\n        //revoke blobURL\r\n        URL.revokeObjectURL(blobURL)\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { \"encrpyt\": \"multipart/form-data\" }, //content type을 같이 보내줘야한다!\r\n        };\r\n\r\n        thumbFile.forEach(value => {\r\n            formData.append('files', value);\r\n        })\r\n\r\n        Axios.post(\"/api/game/uploadfile\", formData, config).then(\r\n            (response) => {\r\n                if (response.data.success) {\r\n                    uploadGame( process.env.NODE_ENV === 'development' ? response.data.files[0].path : response.data.files[0].location );\r\n                } else {\r\n                    message.error(\"업로드 실패\");\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const uploadGame = (filePath) => {\r\n        const game_variables = {\r\n            gameId: gameId,\r\n            creator: user.userData._id,\r\n            title: GameTitle,\r\n            description: description,\r\n            thumbnail: filePath,\r\n            privacy: isPrivate,\r\n            category: category,\r\n            writer: [user.userData._id],\r\n        };\r\n\r\n        Axios.post(\"/api/game/uploadgameInfo\", game_variables).then((response) => {\r\n            if (response.data.success) {\r\n\r\n            } else {\r\n                message.error(\"game제작 실패\");\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"scenemake_modal\"\r\n            visible={visible}\r\n            okText=\"Upload\"\r\n            onCancel={cancel}\r\n            onOk={upload}\r\n            width={1000}\r\n            style={{ top: 20 }}\r\n        >\r\n            <div>\r\n                <label>Upload Game</label>\r\n                <Form onSubmit={upload}>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <MyDropzone\r\n                            onDrop={onDrop}\r\n                            multiple={false}\r\n                            maxSize={10485761} // 10MB + 1\r\n                            accept=\"image/*\"\r\n                        >\r\n                        </MyDropzone>\r\n\r\n                        {blobURL && (\r\n                            <div>\r\n                                <img\r\n                                    className=\"thumbnail__img\"\r\n                                    src={blobURL}\r\n                                    alt=\"thumbnail\"\r\n                                />\r\n\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <label>Title</label>\r\n                    <Input onChange={onTitleChange} value={GameTitle} />\r\n\r\n                    <label>Description</label>\r\n                    <TextArea onChange={onDescriptionChange} value={description} />\r\n\r\n                    <select onChange={onPrivateChange}>\r\n                        {PrivateOptions.map((item, index) => (\r\n                            <option key={index} value={item.value}>\r\n                                {item.label}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <select onChange={onCartegoryChange}>\r\n                        {CategoryOptions.map((item, index) => (\r\n                            <option key={index} value={item.value}>\r\n                                {item.label}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                </Form>\r\n            </div>\r\n        </Modal>\r\n\r\n    )\r\n}\r\nexport default UploadModal;\r\n","var _eventHandlers = {}; // somewhere global\r\n\r\nexport const addEvent = (node, event, handler, capture) => {\r\n    if (!(node in _eventHandlers)) {\r\n        // _eventHandlers stores references to nodes\r\n        _eventHandlers[node] = {};\r\n    }\r\n    if (!(event in _eventHandlers[node])) {\r\n        // each entry contains another entry for each event type\r\n        _eventHandlers[node][event] = [];\r\n    }\r\n    // capture reference\r\n    _eventHandlers[node][event].push([handler, capture]);\r\n    node.addEventListener(event, handler, capture);\r\n}\r\n\r\nexport const removeAllEvents = (node, event) => {\r\n    if (node in _eventHandlers) {\r\n        var handlers = _eventHandlers[node];\r\n        if (event in handlers) {\r\n            var eventHandlers = handlers[event];\r\n            for (var i = eventHandlers.length; i--;) {\r\n                var handler = eventHandlers[i];\r\n                node.removeEventListener(event, handler[0], handler[1]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React, { useRef, memo, useState, useEffect } from 'react';\r\nimport './Character.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCharacter } from '../../../_actions/characterSelected_actions';\r\nimport {addEvent, removeAllEvents} from '../handleEventListener';\r\n\r\nfunction Character(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const { charSchema, GameCharacterList, setCharacterList , index, CharacterList } = props;\r\n\r\n  const element_X = useRef();\r\n  const element_Y = useRef();\r\n\r\n  const [clicked,setClicked] = useState(true);\r\n  const [moving, setMoving] = useState(true);\r\n  const [sizing, setSizing] = useState(false);\r\n  const [imgWidth, setImgWidth] = useState(0);\r\n\r\n  const background_element = document.getElementById(\"backgroundImg_container\");\r\n\r\n  let pivot = [0,0];\r\n  let drag = false;\r\n\r\n  function mouseMove(e) {\r\n    const page = [e.pageX,e.pageY];\r\n    if (drag && clicked && moving) {\r\n      if (pivot[0]-e.pageX>3 || pivot[1]-e.pageY>3 || pivot[0]-e.pageX<-3 || pivot[1]-e.pageY<-3) {\r\n        const background_width = background_element.offsetWidth;\r\n        const background_height = background_element.offsetHeight;\r\n        const prev_posX = Number(element_X.current.style.left.replace( /%/g, '' ));\r\n        const prev_posY = Number(element_Y.current.style.top.replace( /%/g, '' ).replace( /px/g, '' ));\r\n        const next_posX = prev_posX + 100*(e.pageX-pivot[0])/background_width;\r\n        const next_posY = prev_posY + 100*(e.pageY-pivot[1])/background_height;\r\n        element_X.current.style.left = String(next_posX)+'%';\r\n        element_Y.current.style.top = String(next_posY)+'%';\r\n        pivot = page;\r\n      }\r\n    } else if (drag && clicked && sizing) {\r\n      if (pivot[0] - e.pageX>7 || pivot[0] - e.pageX<-7 ) {\r\n        const image_width = document.getElementById(`${index}`).offsetWidth;\r\n        const prev_size = Number(element_Y.current.style.height.replace( /%/g, '' ));\r\n        let next_size = 0;\r\n        if(pivot[0]-page[0] < 0){\r\n          next_size = prev_size*(image_width-1*(pivot[0]-page[0]))/image_width;\r\n        } else {\r\n          next_size = prev_size*(image_width-1*(pivot[0]-page[0]))/image_width;\r\n        }\r\n        if (next_size > 20){\r\n          element_Y.current.style.height = String(next_size)+'%';\r\n        }\r\n        pivot = page;\r\n      }\r\n    }\r\n    setImgWidth(document.getElementById(`${index}`).offsetWidth);\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n  }\r\n\r\n  useEffect(() => {\r\n    addEvent(background_element, \"mousemove\", mouseMove, false);\r\n    addEvent(background_element, \"mouseup\", onMouseUp, false);\r\n    setImgWidth(document.getElementById(`${index}`).offsetWidth);\r\n    return () => {\r\n      removeAllEvents(background_element, \"mousemove\");\r\n      removeAllEvents(background_element, \"mouseup\");\r\n    }\r\n  }, [])\r\n\r\n  const onMouseDown = (e) => {\r\n    addEvent(background_element, \"mousemove\", mouseMove, false);\r\n    addEvent(background_element, \"mouseup\", onMouseUp, false);\r\n    pivot = [e.pageX,e.pageY];\r\n    drag = true;\r\n  }\r\n\r\n  const onMouseUp = (e) => {\r\n    removeAllEvents(background_element, \"mousemove\");\r\n    removeAllEvents(background_element, \"mouseup\");\r\n    setCharacterList((oldArray)=> {\r\n      return [\r\n        ...oldArray.slice(0,index), \r\n        {...oldArray[index], posX: Number(element_X.current.style.left.replace( /%/g, '' )), posY: Number(element_Y.current.style.top.replace( /%/g, '' ).replace( /px/g, '' ))},\r\n        ...oldArray.slice(index+1,4)\r\n      ]\r\n    })\r\n    setCharacterList((oldArray)=> {\r\n      return [...oldArray.slice(0,index), {...oldArray[index], size: Number(element_Y.current.style.height.replace( /%/g, '' ))} ,...oldArray.slice(index+1,4)]\r\n    })\r\n    pivot = [e.pageX,e.pageY];\r\n    drag = false;\r\n    setSizing(false);\r\n    setMoving(true);\r\n    dispatch(selectCharacter({...GameCharacterList[charSchema.index], index: charSchema.index}));\r\n  }\r\n\r\n  const onMouseOver = (e) => {\r\n    setMoving(false);\r\n    setSizing(true);\r\n  }\r\n\r\n  const onMouseOut = (e) => {\r\n    setMoving(true);\r\n    setSizing(false);\r\n  }\r\n\r\n  return (\r\n    <div \r\n      ref={element_X}\r\n      key={index} \r\n      className=\"CharacterBlock\"\r\n      style={{ left: `${charSchema.posX}%`}}\r\n    >\r\n      <div \r\n        ref={element_Y}\r\n        className=\"character__container\"\r\n        style={{height: `${charSchema.size}%`,\r\n                top: `${charSchema.posY}%`}}\r\n      >\r\n          <img\r\n            onMouseDown={onMouseDown}\r\n            className={`${clicked ? \"characterImg_clicked\" : \"characterImg\"}`}\r\n            id={`${index}`}\r\n            src={charSchema.image}\r\n            alt=\"img\"\r\n          />\r\n          <div \r\n            className={`${sizing ? \"btn_sizing_clicked\" : \"btn_sizing\"}`} \r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n            onMouseDown={onMouseDown}\r\n            style={{left: `${imgWidth-3}px`}}\r\n          ></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Character)\r\n","import React, { memo, useEffect } from 'react'\r\nimport Character from \"../../functions/CharacterModal/Character\";\r\n\r\nimport \"./CharacterBlock.css\";\r\n\r\nconst CharacterBlock = (props) => {\r\n  const { onRemove_character, CharacterList, GameCharacterList, setCharacterList } = props;\r\n\r\n  const characterblocks = CharacterList.map((charSchema, index) => {\r\n    return (\r\n      <div key={index}>\r\n        <Character\r\n          setCharacterList={setCharacterList}\r\n          GameCharacterList={GameCharacterList}\r\n          onRemove_character={onRemove_character}\r\n          CharacterList={CharacterList}\r\n          index={index}\r\n          charSchema={charSchema}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    CharacterList.length > 0 &&\r\n    <div className=\"CharacterBlocks\" id=\"CharacterBlocks\">\r\n      {characterblocks}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default memo(CharacterBlock);\r\n","import { message } from 'antd';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { selectCharacter } from '../../../../_actions/characterSelected_actions';\r\nimport './CharacterInfoDisplay.css';\r\n\r\nfunction CharacterInfoDisplay({setName, character, setCharacterList, CharacterList, GameCharacterList}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick_putCharacter = (index,url) => {\r\n    const CharacterSchema = {\r\n      index: character.index,\r\n      image: url,\r\n      posX: 0,\r\n      posY: 0,\r\n      reverse: 0,\r\n      size: 50,\r\n    }\r\n    setCharacterList((oldArray) => {\r\n      for (let i = 0; i < oldArray.length; i++) {\r\n        if (oldArray[i].index === character.index)\r\n          return [...oldArray.slice(0, i), { ...oldArray[i], image: url }, ...oldArray.slice(i + 1, 4)]\r\n      }\r\n      if (oldArray.length >= 3) {\r\n        message.info(\"인물은 최대 세명까지 추가 가능합니다.\");\r\n        return oldArray;\r\n      }\r\n      return [...oldArray, CharacterSchema]\r\n    })\r\n    setName(character.name)\r\n  }\r\n\r\n  const onClick_selectCharacter = (index) => {\r\n    setName(GameCharacterList[index].name)\r\n    dispatch(selectCharacter({...GameCharacterList[index], index: index}));\r\n  }\r\n\r\n  const CharacterListImages = CharacterList.map((character,index) => {\r\n    return (\r\n    <div key={index} \r\n      className=\"characterList_Info\" \r\n      onClick={() => {onClick_selectCharacter(character.index)}}\r\n    >\r\n      <img src={character.image} alt=\"\" className=\"characterList_Image\"/>\r\n      {/* <div className=\"characterList_Text\">\r\n        x: {character.posX} y: {character.posY} size: {character.size}\r\n      </div> */}\r\n    </div>\r\n    )\r\n  })\r\n\r\n  const characterDetailImages = character.image_array.map((url, index) => {\r\n    return( \r\n      <div key={index} onClick={() => {onClick_putCharacter(index,url)}}>\r\n        <img src={url} alt=\"img\"/>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"characterInfo__container\">\r\n      <div className=\"characterList__container\">\r\n        {CharacterListImages}\r\n      </div>\r\n      <div>이름 : {character.name}</div>\r\n      <div>정보 : {character.description}</div>\r\n      <img src={character.image_array[0]} alt=\"\" className=\"main_img\"/>\r\n      <div className=\"image_array__container\">{characterDetailImages}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterInfoDisplay\r\n","import { message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detachCharacter, selectCharacter } from '../../../_actions/characterSelected_actions';\r\nimport Character from './Character';\r\nimport CharacterInfoDisplay from './CharacterInfoDisplay/CharacterInfoDisplay';\r\nimport './CharacterModal.css';\r\n\r\nfunction CharacterModal({ setCharacterList, CharacterList, GameCharacterList, setName }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick_detachCharacter = () => {\r\n    dispatch(detachCharacter());\r\n  }\r\n\r\n  const currentCharacter = useSelector((state) => state.character);\r\n\r\n  const onClick_removeCharacter = () => {\r\n    setCharacterList((oldArray) => {\r\n      for (let i = 0; i < oldArray.length; i++) {\r\n        if (oldArray[i].index === currentCharacter.characterSelected.index) {\r\n          message.info(\"삭제되었습니다.\");\r\n          return [...oldArray.slice(0, i), ...oldArray.slice(i + 1, 4)]\r\n        }\r\n      }\r\n    })\r\n    setName(\"\")\r\n  }\r\n\r\n  const [isAdded, setIsAdded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let flag = 0;\r\n    for (let i = 0; i < CharacterList.length; i++) {\r\n      if (CharacterList[i].index === currentCharacter.characterSelected.index) {\r\n        flag = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (flag === 1) {\r\n      setIsAdded(true);\r\n    } else {\r\n      setIsAdded(false);\r\n    }\r\n\r\n  }, [currentCharacter, CharacterList])\r\n\r\n  return (\r\n    <div className=\"modal_Character\">\r\n      <div onClick={onClick_detachCharacter}>캐릭터 선택 해제</div>\r\n      {isAdded && <div onClick={onClick_removeCharacter}>삭제</div>}\r\n      <CharacterInfoDisplay\r\n        setName={setName}\r\n        GameCharacterList={GameCharacterList}\r\n        character={currentCharacter.characterSelected}\r\n        setCharacterList={setCharacterList}\r\n        CharacterList={CharacterList}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterModal\r\n","import { Switch } from 'antd';\r\nimport React from 'react';\r\nimport './SceneBox.css';\r\n\r\nfunction SceneBox(props) {\r\n    const {CutList, CutNumber, displayCut, setCutNumber, \r\n      Hover, setHover, EmptyCutList, saveCut} = props;\r\n\r\n    const onClick_GotoCut = (index) => {\r\n      if (CutNumber > 29) {\r\n          displayCut(index);\r\n          setCutNumber(index);\r\n          return;\r\n      }\r\n      if (CutNumber !== index) {\r\n          saveCut();\r\n          displayCut(index);\r\n          setCutNumber(index);\r\n      }\r\n    };\r\n\r\n    const display_SceneBox = CutList.map((Cut, index) => {\r\n        if (CutNumber === index) {\r\n            return (\r\n                (<div className=\"sceneMake__CurrentSceneBox\" key={`${index}`}></div>)\r\n            );\r\n        } else {\r\n            if (Hover){ \r\n                return (\r\n                    <div\r\n                        className=\"sceneMake__SceneBox_color\"\r\n                        key={`${index}`}\r\n                        onMouseOver={() => onClick_GotoCut(index)}\r\n                    ></div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div\r\n                        className=\"sceneMake__SceneBox_color\"\r\n                        key={`${index}`}\r\n                        onClick={() => onClick_GotoCut(index)}\r\n                    ></div>\r\n                )\r\n            }\r\n        }\r\n    });\r\n\r\n    const display_EmptyBox = EmptyCutList.map((EmptyCut, index) => {\r\n        if (CutNumber - CutList.length === index) {\r\n            return (\r\n                <div className=\"sceneMake__CurrentSceneBox\" key={`${index}`}></div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"sceneMake__EmptySceneBox\" key={`${index}`}></div>\r\n            );\r\n        }\r\n    });\r\n    return (\r\n      <div className=\"sceneMake__sceneBox_container\">\r\n          <div className=\"sceneMake__sceneBox\">\r\n              {display_SceneBox}\r\n              {display_EmptyBox}\r\n          </div>\r\n          <div>\r\n              <Switch\r\n                  checked={Hover}\r\n                  checkedChildren={CutNumber}\r\n                  unCheckedChildren={CutNumber}\r\n                  onChange={() => {setHover((state) => !state)}}\r\n                  size=\"small\"\r\n              />\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default SceneBox\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BackgroundSideBar from \"./SideBar/BackgroundSideBar\";\r\nimport CharacterSideBar from \"./SideBar/CharacterSideBar\";\r\nimport BgmSideBar from \"./SideBar/BgmSideBar\";\r\nimport SoundSideBar from \"./SideBar/SoundSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { message, Button } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useLocation } from \"react-router\";\r\nimport SceneMakeModal from './SceneMakeModal';\r\nimport UploadModal from './UploadModal';\r\nimport useKey from \"../../../functions/useKey\";\r\nimport CharacterBlock from \"../../GamePlayPage/CharacterBlock\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LoadingPage from \"../../GamePlayPage/LoadingPage\";\r\nimport { gameLoadingPage } from \"../../../../_actions/gamePlay_actions\";\r\nimport { navbarControl } from \"../../../../_actions/controlPage_actions\";\r\nimport CharacterModal from \"../../../functions/CharacterModal/CharacterModal\";\r\nimport SceneBox from \"./SceneBox/SceneBox\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { socket } from \"../../../App\";\r\nimport { PlayCircleOutlined, PauseCircleOutlined, StopOutlined } from '@ant-design/icons';\r\nimport \"./SceneMakePage.css\";\r\nimport { detachCharacter } from \"../../../../_actions/characterSelected_actions\";\r\nimport { LOCAL_HOST } from \"../../../Config\";\r\n\r\nlet bgm_audio = new Audio();\r\nlet sound_audio = new Audio();\r\nconst SceneMakePage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { gameId, sceneId } = location.state\r\n\r\n    // const {gameId,sceneId} = location.state ;\r\n    if (location.state === undefined) {\r\n        window.history.back();\r\n        // return <div></div>;\r\n    }\r\n\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const padding = 0.1;\r\n    const minSize = 300;\r\n    const ratio = 1080 / 1920;\r\n\r\n    const [windowWidth, setwindowWidth] = useState(window.innerWidth);\r\n    const [windowHeight, setwindowHeight] = useState(window.innerHeight);\r\n    const [newScreenSize, setNewScreenSize] = useState({});\r\n\r\n    //modal\r\n    const [makeModalState, setMakeModalState] = useState(0);\r\n    const [reload, setReload] = useState(1);\r\n    const [uploadModalState, setUploadModalState] = useState(false);\r\n\r\n    const [SidBar_script, setSidBar_script] = useState(true);\r\n\r\n    const [CharacterList, setCharacterList] = useState([]);\r\n    const [BackgroundImg, setBackgroundImg] = useState(`http://${LOCAL_HOST}:5000/uploads/defaultBackground.png`);\r\n    const [Script, setScript] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [BgmFile, setBgmFile] = useState({\r\n        name: \"\",\r\n        music: \"\",\r\n    });\r\n    const [SoundFile, setSoundFile] = useState({\r\n        name: \"\",\r\n        music: \"\",\r\n    });\r\n\r\n    const [isFirstScene, setIsFirstScene] = useState(false)\r\n\r\n    const [CutNumber, setCutNumber] = useState(0);\r\n    const [Hover, setHover] = useState(false);\r\n\r\n    const [CutList, setCutList] = useState([]);\r\n    const [EmptyCutList, setEmptyCutList] = useState(\r\n        Array.from({ length: 30 }, () => 0)\r\n    );\r\n\r\n\r\n    let scene;\r\n    useEffect(() => {\r\n        dispatch(navbarControl(false));\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (user.userData) {\r\n            socket.emit(\"leave room\", { room: user.userData._id.toString() });\r\n            socket.emit(\"room\", { room: user.userData._id.toString() });\r\n        }\r\n        socket.off(\"timeout_making\")\r\n        socket.on(\"timeout_making\", data => {\r\n            // console.log(\"GO HOME\")\r\n            props.history.replace(\"/\")\r\n        })\r\n\r\n    }, [user])\r\n\r\n    //! scene save할 때 필요한 정보 갖고오기\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await axios.get(`/api/game/getSceneInfo/${sceneId}`)\r\n            // console.log(res.data)\r\n            if (res.data.success) { scene = res.data.scene; }\r\n            else {\r\n                // console.log(\"get scene ERROR\");\r\n                props.history.replace(\"/\");\r\n                return;\r\n            }\r\n            // 임시저장한 녀석\r\n            if (scene.cutList.length) {\r\n\r\n                if (scene.isFirst) {\r\n                    setIsFirstScene(true)\r\n                }\r\n\r\n                // 임시저장된 녀석 불러오기\r\n                setCutList(scene.cutList);\r\n                const tmpFirstCut = scene.cutList[0]\r\n                setCharacterList(tmpFirstCut.characterList)\r\n                setBackgroundImg(tmpFirstCut.background)\r\n                setName(tmpFirstCut.name);\r\n                setScript(tmpFirstCut.script);\r\n                setCutNumber(scene.cutList.length - 1);\r\n\r\n                dispatch(gameLoadingPage(0));\r\n                dispatch(gameLoadingPage(1));\r\n\r\n            }\r\n            // 껍데기\r\n            else {\r\n                if (!scene.isFirst) {\r\n                    const variable = { sceneId: scene.prevSceneId };\r\n                    Axios.post(\"/api/scene/scenedetail\", variable)\r\n                        .then((response) => {\r\n                            //! 이전 씬의 마지막 컷 설정 유지\r\n                            if (response.data.success) {\r\n                                const lastCut = response.data.lastCut;\r\n                                setCharacterList(lastCut.characterList);\r\n                                setBackgroundImg(lastCut.background);\r\n                                setName(lastCut.name);\r\n                                dispatch(gameLoadingPage(0));\r\n                                dispatch(gameLoadingPage(1));\r\n                            } else {\r\n                                message.error(\"이전 Scene의 정보를 불러오는데 실패했습니다.\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    setIsFirstScene(true)\r\n                }\r\n            }\r\n        })();\r\n    }, [])\r\n\r\n    const onScriptChange = (event) => {\r\n        setScript(event.currentTarget.value);\r\n    };\r\n\r\n    const onNameChange = (event) => {\r\n        setName(event.currentTarget.value);\r\n    };\r\n    const characterSidebarElement = useRef();\r\n    const backgroundSidebarElement = useRef();\r\n    const bgmSidebarElement = useRef();\r\n    const soundSidebarElement = useRef();\r\n\r\n    const makeVisible = (element) => {\r\n        makeInvisible()\r\n        element.current.style.display = 'block'\r\n    }\r\n\r\n    const makeInvisible = () => {\r\n        characterSidebarElement.current.style.display = 'none'\r\n        backgroundSidebarElement.current.style.display = 'none'\r\n        bgmSidebarElement.current.style.display = 'none'\r\n        soundSidebarElement.current.style.display = 'none'\r\n    }\r\n\r\n    const onClick_character = () => {\r\n        if (characterSidebarElement.current.style.display === 'none') {\r\n            makeVisible(characterSidebarElement);\r\n        } else {\r\n            makeInvisible();\r\n        }\r\n    };\r\n\r\n    const onClick_background = () => {\r\n        if (backgroundSidebarElement.current.style.display === 'none') {\r\n            makeVisible(backgroundSidebarElement);\r\n        } else {\r\n            makeInvisible();\r\n        }\r\n    };\r\n\r\n\r\n    const onClick_bgm = () => {\r\n        if (bgmSidebarElement.current.style.display === 'none') {\r\n            makeVisible(bgmSidebarElement);\r\n        } else {\r\n            makeInvisible();\r\n        }\r\n    };\r\n\r\n    const onClick_sound = () => {\r\n        if (soundSidebarElement.current.style.display === 'none') {\r\n            makeVisible(soundSidebarElement);\r\n        } else {\r\n            makeInvisible();\r\n        }\r\n    };\r\n\r\n    const onClick_script = () => {\r\n        if (SidBar_script) {\r\n            setSidBar_script(false);\r\n        } else {\r\n            setSidBar_script(true);\r\n        }\r\n    };\r\n\r\n    const onClick_bgm_player = () => {\r\n        if (bgm_audio.paused) bgm_audio.play();\r\n        else bgm_audio.pause();\r\n        setReload(reload => reload + 1)\r\n    };\r\n\r\n    const onClick_sound_player = () => {\r\n        if (sound_audio.paused) sound_audio.play();\r\n        else sound_audio.pause();\r\n        setReload(reload => reload + 1)\r\n    };\r\n\r\n    function handleEnter(event) {\r\n        onSubmit_nextCut(event);\r\n    }\r\n\r\n    useKey(\"Enter\", handleEnter);\r\n\r\n    const saveCut = () => {\r\n        const Cut = {\r\n            characterList: CharacterList,\r\n            background: BackgroundImg,\r\n            script: Script,\r\n            name: Name,\r\n            bgm: BgmFile,\r\n            sound: SoundFile,\r\n        };\r\n        setBgmFile({\r\n            name: \"\",\r\n            music: \"\",\r\n        });\r\n        setSoundFile({\r\n            name: \"\",\r\n            music: \"\",\r\n        });\r\n\r\n        setCutList((oldArray) => [\r\n            ...oldArray.slice(0, CutNumber),\r\n            Cut,\r\n            ...oldArray.slice(CutNumber + 1, 31),\r\n        ]);\r\n        if (CutList.length === CutNumber) {\r\n            setEmptyCutList((oldArray) => [\r\n                ...oldArray.slice(0, EmptyCutList.length - 1),\r\n            ]);\r\n        }\r\n    };\r\n\r\n    const displayCut = (index) => {\r\n        setCharacterList(CutList[index].characterList);\r\n        setBackgroundImg(CutList[index].background);\r\n        setScript(CutList[index].script);\r\n        setName(CutList[index].name);\r\n        setBgmFile(CutList[index].bgm);\r\n        setSoundFile(CutList[index].sound);\r\n        if (CutList[index].bgm.music) {\r\n            bgm_audio.src = CutList[index].bgm.music;\r\n            bgm_audio.play();\r\n        } else {\r\n            bgm_audio.pause();\r\n        }\r\n        if (CutList[index].sound.music) {\r\n            sound_audio.src = CutList[index].sound.music;\r\n            sound_audio.play();\r\n        } else {\r\n            sound_audio.pause();\r\n        }\r\n    };\r\n\r\n    const onRemove_character = (index) => {\r\n        setCharacterList((oldArray) => [\r\n            ...oldArray.slice(0, index),\r\n            ...oldArray.slice(index + 1, 4),\r\n        ]);\r\n    };\r\n\r\n    const onSubmit_nextCut = (event) => {\r\n        event.preventDefault();\r\n        if (CutNumber > 29) {\r\n            message.error(\"더이상 Cut을 생성할 수 없습니다.\");\r\n            return;\r\n        } else if (CutNumber === 24) {\r\n            message.warning(\"생성 가능한 Cut이 5개 남았습니다.\");\r\n        }\r\n\r\n        saveCut();\r\n\r\n        if (CutNumber < CutList.length - 1) {\r\n            displayCut(CutNumber + 1);\r\n        } else {\r\n            setScript(\"\");\r\n        }\r\n        setCutNumber((oldNumber) => oldNumber + 1);\r\n    };\r\n\r\n    const onRemove_cut = () => {\r\n        if (CutList.length - 1 <= CutNumber) {\r\n            message.info('마지막 컷 입니다.');\r\n            return;\r\n        }\r\n        message.success(`${CutNumber + 1}번째 컷이 삭제되었습니다.`);\r\n        setCutList((oldArray) => [\r\n            ...oldArray.slice(0, CutNumber),\r\n            ...oldArray.slice(CutNumber + 1, 31),\r\n        ]);\r\n        setEmptyCutList((oldArray) => [\r\n            0, ...oldArray\r\n        ]);\r\n        displayCut(CutNumber + 1);\r\n    }\r\n\r\n    const onSubmit_first = () => {\r\n        setUploadModalState(true)\r\n    }\r\n\r\n    const onSubmit_saveScene = async (event, isTmp = 0) => {\r\n        if (CutList.length < 1) {\r\n            message.error(\"최소 2개의 컷을 생성해주세요.\");\r\n            return;\r\n        }\r\n        const submitCut = {\r\n            characterList: CharacterList,\r\n            background: BackgroundImg,\r\n            script: Script,\r\n            name: Name,\r\n            bgm: BgmFile,\r\n            sound: SoundFile,\r\n        };\r\n\r\n        const submitCutList = [\r\n            ...CutList.slice(0, CutNumber),\r\n            submitCut,\r\n            ...CutList.slice(CutNumber + 1, 31),\r\n        ];\r\n\r\n        if (window.confirm(\"게임 제작을 완료하시겠습니까?\")) {\r\n            const variable = {\r\n                gameId: gameId,\r\n                sceneId: sceneId,\r\n                cutList: submitCutList,\r\n                isTmp,\r\n            };\r\n\r\n            const response = await Axios.post(`/api/scene/save`, variable)\r\n\r\n            if (response.data.success) {\r\n                dispatch(detachCharacter());\r\n                message\r\n                    .loading(\"게임 업로드 중..\", 1.0)\r\n                    .then(() => {\r\n                        if (!isTmp) {\r\n                            message.success(\"게임 제작이 완료되었습니다.\", 1.0)\r\n                        }\r\n                        else {\r\n                            message.success(\"업로드 성공.\")\r\n                        }\r\n                    }\r\n                    ).then(() => {\r\n                        if (!isTmp && isFirstScene) {\r\n                            history.replace(\r\n                                `/game/${gameId}`\r\n                            );\r\n\r\n                        } else if (!isTmp) {\r\n                            socket.emit(\"final_submit\", {\r\n                                prevSceneId: response.data.scene.prevSceneId,\r\n                                sceneId: response.data.scene._id,\r\n                                title: response.data.scene.title,\r\n                                userId: user.userData._id.toString(),\r\n                            })\r\n                            history.replace({\r\n                                pathname: `/gameplay`,\r\n                                state: {\r\n                                    sceneId: response.data.scene._id,\r\n                                    gameId: gameId,\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n            } else if (response.data.msg === 'expired') {\r\n                message.error(\"제작 유효기간이 만료되었습니다..\", 1.0);\r\n                props.history.replace({\r\n                    pathname: `/gameplay`,\r\n                    state: {\r\n                        sceneId: response.data.prevSceneId,\r\n                        gameId: gameId,\r\n                    }\r\n                })\r\n                return;\r\n            }\r\n            else {\r\n                message.error(\"DB에 문제가 있습니다.\");\r\n            }\r\n\r\n        } else {\r\n            message.error(\"제출 취소요\");\r\n        }\r\n    };\r\n\r\n    const onTmpSave = (event) => {\r\n        onSubmit_saveScene(event, 1);\r\n    }\r\n\r\n    const [gameDetail, setGameDetail] = useState([]);\r\n    const [sideBar, setSideBar] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/game/getgamedetail', { gameId: gameId })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setGameDetail(response.data.gameDetail)\r\n                } else {\r\n                    alert('게임 정보를 로딩하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }, [reload, gameId])\r\n\r\n\r\n    useEffect(() => {\r\n        if (gameDetail.character) {\r\n            const reload_Sidebar = (< div className=\"scenemake__toggleBar\">\r\n                <div ref={characterSidebarElement}>\r\n                    <CharacterSideBar\r\n                        gameDetail={gameDetail}\r\n                        setMakeModalState={setMakeModalState}\r\n                        setCharacterList={setCharacterList}\r\n                        setName={setName}\r\n                    />\r\n                </div>\r\n                <div ref={backgroundSidebarElement} style={{ display: 'none' }}>\r\n                    <BackgroundSideBar\r\n                        gameDetail={gameDetail}\r\n                        setBackgroundImg={setBackgroundImg}\r\n                        setMakeModalState={setMakeModalState}\r\n                    />\r\n                </div>\r\n                <div ref={bgmSidebarElement} style={{ display: 'none' }}>\r\n                    <BgmSideBar\r\n                        gameDetail={gameDetail}\r\n                        bgm_audio={bgm_audio}\r\n                        setBgmFile={setBgmFile}\r\n                        setMakeModalState={setMakeModalState}\r\n                    />\r\n                </div>\r\n                <div ref={soundSidebarElement} style={{ display: 'none' }}>\r\n                    <SoundSideBar\r\n                        gameDetail={gameDetail}\r\n                        sound_audio={sound_audio}\r\n                        setSoundFile={setSoundFile}\r\n                        setMakeModalState={setMakeModalState}\r\n                    />\r\n                </div>\r\n            </div>)\r\n            setSideBar(reload_Sidebar)\r\n        }\r\n    }, [gameDetail, CharacterList, reload])\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setwindowWidth(window.innerWidth);\r\n            setwindowHeight(window.innerHeight);\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n        if (windowWidth * ratio > windowHeight) {\r\n            setNewScreenSize({\r\n                width: `${windowHeight * (1 - 2 * padding) / ratio}px`,\r\n                height: `${windowHeight * (1 - 2 * padding)}px`,\r\n                minWidth: `${minSize / ratio}px`,\r\n                minHeight: `${minSize}px`\r\n            })\r\n        } else {\r\n            setNewScreenSize({\r\n                width: `${windowWidth * (1 - 2 * padding)}px`,\r\n                height: `${windowWidth * (1 - 2 * padding) * ratio}px`,\r\n                minWidth: `${minSize}px`,\r\n                minHeight: `${minSize * ratio}px`\r\n            })\r\n        }\r\n    }, [window.innerWidth, window.innerHeight]);\r\n\r\n    const onDeleteScene = () => {\r\n        Axios.delete('/api/scene', {\r\n            data: {\r\n                gameId: gameId,\r\n                sceneId: sceneId,\r\n                isFirst: isFirstScene,\r\n                userId: user.userData._id\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    //! 다 삭제되면 emptyNum 올려주기\r\n                    console.log(isFirstScene)\r\n                    if (isFirstScene == false) {\r\n                        socket.emit(\"empty_num_increase\",\r\n                            {\r\n                                scene_id: response.data.prevSceneId,\r\n                                user_id: user.userData._id\r\n                            })\r\n                        //! 돌아가야할 곳 : game detail 로 가자\r\n                        props.history.push(`/game/${gameId}`)\r\n                    }\r\n                    else {\r\n                        //! 들어가야할 곳 : 홈화면\r\n                        props.history.push(`/`)\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"scene__container\">\r\n            {/* <LoadingPage />   */}\r\n            <div>\r\n                <div\r\n                    className=\"backgroundImg_container\"\r\n                    id=\"backgroundImg_container\"\r\n                    style={newScreenSize}\r\n                >\r\n                    <img\r\n                        className=\"backgroundImg\"\r\n                        src={`${BackgroundImg}`}\r\n                        alt=\"img\"\r\n                    />\r\n                    <CharacterBlock\r\n                        GameCharacterList={gameDetail.character}\r\n                        CharacterList={CharacterList}\r\n                        setCharacterList={setCharacterList}\r\n                        onRemove_character={onRemove_character}\r\n                    />\r\n                    {SidBar_script && (\r\n                        <div className=\"sceneMake__text_container\">\r\n                            <input onChange={onNameChange} value={Name} className=\"sceneMake__name_block\" />\r\n                            <hr className=\"sceneMake__text_line\"></hr>\r\n                            <textarea\r\n                                onChange={onScriptChange}\r\n                                value={Script}\r\n                                className=\"sceneMake__text_block\"\r\n                                ref={(input) => input && input.focus()}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <CharacterModal\r\n                setName={setName}\r\n                setCharacterList={setCharacterList}\r\n                CharacterList={CharacterList}\r\n                GameCharacterList={gameDetail.character}\r\n            />\r\n            <SceneBox\r\n                CutList={CutList}\r\n                CutNumber={CutNumber}\r\n                displayCut={displayCut}\r\n                setCutNumber={setCutNumber}\r\n                Hover={Hover}\r\n                setHover={setHover}\r\n                EmptyCutList={EmptyCutList}\r\n                saveCut={saveCut}\r\n            />\r\n            <div className=\"sceneMake__sound_container\">\r\n                {BgmFile.name ? (\r\n                    <div\r\n                        className=\"scene__SoundBox_container\"\r\n                        onClick={onClick_bgm_player}\r\n                    >\r\n                        {\r\n                            BgmFile.name && bgm_audio.paused &&\r\n                            <PlayCircleOutlined\r\n                                style={{ fontSize: \"20px\" }} />\r\n                        }\r\n                        {\r\n                            BgmFile.name && !bgm_audio.paused &&\r\n                            <PauseCircleOutlined\r\n                                style={{ fontSize: \"20px\" }} />\r\n                        }\r\n                        {BgmFile.name}\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <StopOutlined\r\n                            style={{ fontSize: \"20px\" }}\r\n                        />\r\n                    BGM\r\n                    </div>\r\n                )}\r\n                {SoundFile.name ? (\r\n                    <div\r\n                        className=\"scene__SoundBox_container\"\r\n                        onClick={onClick_sound_player}\r\n                    >\r\n                        {\r\n                            BgmFile.name && sound_audio.paused &&\r\n                            <PlayCircleOutlined\r\n                                style={{ fontSize: \"20px\" }} />\r\n                        }\r\n                        {\r\n                            BgmFile.name && !sound_audio.paused &&\r\n                            <PauseCircleOutlined\r\n                                style={{ fontSize: \"20px\" }} />\r\n                        }\r\n                        {SoundFile.name}\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <StopOutlined\r\n                            style={{ fontSize: \"20px\" }}\r\n                        />\r\n                    Sound\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"sceneMake__btn_container\">\r\n                <Button type=\"primary\"\r\n                    style={{ fontSize: \"15px\" }}\r\n                    onClick={onDeleteScene}>\r\n                    작성 취소\r\n                </Button>\r\n                <Button type=\"primary\"\r\n                    style={{ fontSize: \"15px\" }}\r\n                    onClick={onTmpSave}>\r\n                    임시저장\r\n                </Button>\r\n                <Button type=\"primary\"\r\n                    style={{ fontSize: \"15px\" }}\r\n                    onClick={onRemove_cut}>\r\n                    컷 삭제\r\n                </Button>\r\n                {CutNumber < 29 && (\r\n                    <Button type=\"primary\"\r\n                        style={{ fontSize: \"15px\" }}\r\n                        onClick={onSubmit_nextCut}>\r\n                        다음 컷\r\n                    </Button>\r\n                )}\r\n                {isFirstScene ?\r\n                    <Button type=\"primary\"\r\n                        style={{ fontSize: \"15px\" }}\r\n                        onClick={onSubmit_first}>\r\n                        업로드\r\n                        </Button>\r\n                    : <Button type=\"primary\"\r\n                        style={{ fontSize: \"15px\" }}\r\n                        onClick={onSubmit_saveScene}>\r\n                        업로드\r\n                        </Button>\r\n                }\r\n                <UploadModal\r\n                    gameId={gameId}\r\n                    visible={uploadModalState}\r\n                    setUploadModalState={setUploadModalState}\r\n                    onSubmit_saveScene={onSubmit_saveScene}\r\n                />\r\n            </div>\r\n            <div className=\"scenemake__sideBar_container\">\r\n                {sideBar !== 0 && sideBar}\r\n\r\n                <div className=\"scenemake__toggleButton_container\">\r\n                    <div\r\n                        className=\"scenemake__btn_sidebar\"\r\n                        onClick={onClick_character}\r\n                    >char</div>\r\n                    <div\r\n                        className=\"scenemake__btn_sidebar\"\r\n                        onClick={onClick_background}\r\n                    >back</div>\r\n                    <div\r\n                        className=\"scenemake__btn_sidebar\"\r\n                        onClick={onClick_script}\r\n                    >script</div>\r\n                    <div className=\"scenemake__btn_sidebar\" onClick={onClick_bgm}>\r\n                        bgm\r\n                    </div>\r\n                    <div className=\"scenemake__btn_sidebar\" onClick={onClick_sound}>\r\n                        sound\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                makeModalState !== 0 && <SceneMakeModal\r\n                    gameId={gameId}\r\n                    visible={Boolean(makeModalState)}\r\n                    setTag={setMakeModalState}\r\n                    tag={makeModalState}\r\n                    setReload={setReload}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SceneMakePage;\r\n","import React from 'react';\r\nimport { Menu } from 'antd';\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <Menu mode={props.mode}>\r\n    <Menu.Item key=\"mail\">\r\n      <a href=\"/\">Home</a>\r\n    </Menu.Item>\r\n    <SubMenu title={<span>Blogs</span>}>\r\n      <MenuItemGroup title=\"Item 1\">\r\n        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n      </MenuItemGroup>\r\n      <MenuItemGroup title=\"Item 2\">\r\n        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n      </MenuItemGroup>\r\n    </SubMenu>\r\n  </Menu>\r\n  )\r\n}\r\n\r\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Menu, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { USER_SERVER } from \"../../../Config\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\n\r\nfunction RightMenu(props) {\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const logoutHandler = () => {\r\n        axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n            if (response.status === 200) {\r\n                props.history.push(\"/login\");\r\n            } else {\r\n                alert(\"Log Out Failed\");\r\n            }\r\n        });\r\n    };\r\n\r\n    const uploadGameFrame = async () => {\r\n        // console.log(props)\r\n\r\n        // tmp scene create\r\n        const gameResponse = await Axios.get(\"/api/game/uploadgameframe\")\r\n\r\n        if (!gameResponse.data.success) {\r\n            alert(\"game Frame제작 실패\");\r\n            return;\r\n        }\r\n\r\n        const firstScene = {\r\n            gameId: gameResponse.data.game._id,\r\n            prevSceneId: null,\r\n            sceneDepth: 0,\r\n            isFirst: 1,\r\n            title: \"\"\r\n        };\r\n\r\n\r\n        const sceneResponse = await Axios.post(\"/api/scene/create\", firstScene)\r\n        if (!sceneResponse.data.success) {\r\n            alert(\"scene Frame제작 실패\");\r\n            return;\r\n        }\r\n\r\n        message.success(\r\n            \"첫 Scene을 생성해주세요. 오른쪽의 버튼을 활용해 이미지들을 추가할 수 있습니다.\"\r\n        );\r\n        setTimeout(() => {\r\n            props.history.replace({\r\n                pathname: `/scene/make`,\r\n                state: {\r\n                    gameId: gameResponse.data.game._id,\r\n                    sceneId: sceneResponse.data.sceneId\r\n                }\r\n            });\r\n        }, 1000);\r\n\r\n\r\n    }\r\n\r\n    if (user.userData && !user.userData.isAuth) {\r\n        return (\r\n            <Menu mode={props.mode}>\r\n                <Menu.Item key=\"mail\">\r\n                    <a href=\"/login\">Signin</a>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"app\">\r\n                    <a href=\"/register\">Signup</a>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    } else {\r\n        return (\r\n            <Menu mode={props.mode}>\r\n                <Menu.Item key=\"upload\">\r\n                    <a onClick={uploadGameFrame}>Game Upload</a>\r\n                    {/* <a href=\"/game/upload\">Game Upload</a> */}\r\n                </Menu.Item>\r\n                <Menu.Item key=\"profile\">\r\n                    <a href=\"/profile\">Profile</a>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"logout\">\r\n                    <a onClick={logoutHandler}>Logout</a>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","import React, { useState } from \"react\";\r\nimport LeftMenu from \"./Sections/LeftMenu\";\r\nimport RightMenu from \"./Sections/RightMenu\";\r\nimport { Drawer, Button, Icon } from \"antd\";\r\nimport \"./Sections/Navbar.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false);\r\n  const navbarOn = useSelector((state) => state.controlpage.navbarOn);\r\n  let style = {};\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  if (navbarOn) {\r\n    style = { position: \"fixed\", zIndex: 5, width: \"100%\" };\r\n  } else {\r\n    style = {\r\n      position: \"fixed\",\r\n      zIndex: 5,\r\n      width: \"100%\",\r\n      // transform: \"translate(0,-69px)\",\r\n      opacity: 0,\r\n      animation: \"0.8s ease-out 0s 1 hide\",\r\n    };\r\n  }\r\n  return (\r\n    <nav className=\"menu\" style={style}>\r\n      <div className=\"menu__logo\">\r\n        <a href=\"/\">REGANOP</a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"REGANOP\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          {/* <LeftMenu mode=\"inline\" /> */}\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer_container\">\r\n      <p>\r\n        Mutsad 화이팅 <Icon type=\"smile\" />\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\nimport Valid from \"../hoc/valid\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\nimport TestPage from \"./views/LandingPage/TestPage.js\";\r\n\r\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\r\nimport Profile from './views/Profile/Profile';\r\n\r\nimport GameDetailPage from './views/GameDetailPage/GameDetailPage.js';\r\nimport GameUploadPage from \"./views/GameUploadPage/GameUploadPage.js\";\r\nimport GameBuildUpPage from \"./views/GameUploadPage/GameBuildUpPage.js\";\r\nimport GamePlayPage from \"./views/GamePlayPage/GamePlayPage.js\";\r\nimport SceneMakePage from \"./views/Scene/SceneMakePage/SceneMakePage\";\r\n\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport Footer from \"./views/Footer/Footer\"\r\nimport { LOCAL_HOST } from './Config';\r\nimport io from 'socket.io-client';\r\nimport './App.css';\r\n\r\nconst config = require('../config/key');\r\n// export let socket = io(`http://${LOCAL_HOST}:5000`, {transports : ['websocket']});\r\nexport let socket = io(`https://www.iovar.co.kr`, {transports : ['websocket']});\r\n\r\n\r\nwindow.onpopstate = () => {\r\n  window.location.reload();\r\n};\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={(<div>Loading...</div>)}>\r\n      <NavBar />\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n          <Route exact path=\"/profile\" component={Auth(Profile, true)} />\r\n          <Route exact path=\"/game/upload\" component={Auth(GameUploadPage, true)} />\r\n          <Route path=\"/game/:gameId\" component={Auth(GameDetailPage, null)} />\r\n          <Route path=\"/gameplay\" component={Valid(Auth(GamePlayPage, null))} />\r\n          <Route exact path=\"/scene/make\" component={Valid(Auth(SceneMakePage, true))} />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { NAVBAR_CONTROL } from \"../_actions/types\";\r\n\r\nconst initialState = { navbarOn : true };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case NAVBAR_CONTROL:\r\n      return { ...state, navbarOn: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { LOADINGPAGE_GAMEPLAY, PAUSE_GAMEPLAY } from \"../_actions/types\";\r\n\r\nconst initialState = { loadingType: 0, isPause: false };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADINGPAGE_GAMEPLAY:\r\n      return { ...state, loadingType: action.payload };\r\n    case PAUSE_GAMEPLAY:\r\n      return { ...state, isPause: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SELECT_CHARACTER, DETACH_CHARACTER\r\n} from '../_actions/types';\r\n\r\nconst initialState = {description: \"\",\r\n                      image: \"\",\r\n                      image_array: [],\r\n                      name: \"\",\r\n                      _id: \"\",\r\n                      index: -1}\r\n                      \r\nexport default function(state={characterSelected : initialState},action){\r\n\r\n  switch(action.type){\r\n      case SELECT_CHARACTER:\r\n          return {...state, characterSelected: action.payload }\r\n      case DETACH_CHARACTER:\r\n          return {...state, characterSelected: initialState }\r\n      default:\r\n          return state;\r\n  }\r\n}","import {\r\n  SELECT_DISPLAYED\r\n} from '../_actions/types';\r\n\r\nconst initialState = {index: -1}\r\n                      \r\nexport default function(state={characterDisplayed : initialState},action){\r\n\r\n  switch(action.type){\r\n      case SELECT_DISPLAYED:\r\n          return {...state, characterDisplayed: action.payload }\r\n      default:\r\n          return state;\r\n  }\r\n}","import { \r\n  SELECT_MOVINGTARGET, DETACH_MOVINGTARGET \r\n} from \"../_actions/types\";\r\n\r\n\r\nconst initialState = { movingTarget: -1 };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SELECT_MOVINGTARGET:\r\n      return { ...state, movingTarget: action.payload };\r\n    case DETACH_MOVINGTARGET:\r\n      return { ...state, movingTarget: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user_reducer\";\r\nimport controlpage from \"./controlPage_reducer\";\r\nimport gameplay from \"./gamePlay_reducer\";\r\nimport sync from './sync_reducer';\r\nimport character from \"./characterSelected_reducer\";\r\nimport characterDisplayed from \"./characterDisplayed_reducer\";\r\nimport movingTarget from \"./movingTarget_reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  controlpage,\r\n  gameplay,\r\n  sync,\r\n  character,\r\n  characterDisplayed,\r\n  movingTarget,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    LOAD_EMPTY_NUM,\r\n    SAVE_PREV_SCENE\r\n} from '../_actions/types';\r\n\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case LOAD_EMPTY_NUM:\r\n            return { ...state, emptyNum: action.payload }\r\n        case SAVE_PREV_SCENE:\r\n            return { ...state, prevSceneId: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","if (process.env.NODE_ENV === 'production') {\r\n    module.exports = require('./prod');\r\n} else {\r\n    module.exports = require('./dev');\r\n}","module.exports = {\r\n    STORAGE: 'https://neverending.s3.ap-northeast-2.amazonaws.com/original',\r\n    SERVER: 'http://15.164.48.192:80',\r\n    CLIENT: 'https://13.209.68.246:80',\r\n    SOCKET: 'https://www.woosup.shop'\r\n}"],"sourceRoot":""}